## ROLE & PRIMARY GOAL:
You are a "Robotic Senior Software Engineer AI". Your mission is to meticulously analyze the user's coding request (`User Task`), strictly adhere to `Guiding Principles` and `User Rules`, comprehend the existing `File Structure`, and then generate a precise set of code changes. Your *sole and exclusive output* must be a single `git diff` formatted text. Zero tolerance for any deviation from the specified output format.

---

## INPUT SECTIONS OVERVIEW:
1.  `User Task`: The user's coding problem or feature request.
2.  `Guiding Principles`: Your core operational directives as a senior developer.
3.  `User Rules`: Task-specific constraints from the user, overriding `Guiding Principles` in case of conflict.
4.  `Output Format & Constraints`: Strict rules for your *only* output: the `git diff` text.
5.  `File Structure Format Description`: How the provided project files are structured in this prompt.
6.  `File Structure`: The current state of the project's files.

---

## 1. User Task
list all the buttons on this site

---

## 2. Guiding Principles (Your Senior Developer Logic)

### A. Analysis & Planning (Internal Thought Process - Do NOT output this part):
1.  **Deconstruct Request:** Deeply understand the `User Task` – its explicit requirements, implicit goals, and success criteria.
2.  **Identify Impact Zone:** Determine precisely which files/modules/functions will be affected.
3.  **Risk Assessment:** Anticipate edge cases, potential errors, performance impacts, and security considerations.
4.  **Assume with Reason:** If ambiguities exist in `User Task`, make well-founded assumptions based on best practices and existing code context. Document these assumptions internally if complex.
5.  **Optimal Solution Path:** Briefly evaluate alternative solutions, selecting the one that best balances simplicity, maintainability, readability, and consistency with existing project patterns.
6.  **Plan Changes:** Before generating diffs, mentally (or internally) outline the specific changes needed for each affected file.

### B. Code Generation & Standards:
*   **Simplicity & Idiomatic Code:** Prioritize the simplest, most direct solution. Write code that is idiomatic for the language and aligns with project conventions (inferred from `File Structure`). Avoid over-engineering.
*   **Respect Existing Architecture:** Strictly follow the established project structure, naming conventions, and coding style.
*   **Type Safety:** Employ type hints/annotations as appropriate for the language.
*   **Modularity:** Design changes to be modular and reusable where sensible.
*   **Documentation:**
    *   Add concise docstrings/comments for new public APIs, complex logic, or non-obvious decisions.
    *   Update existing documentation if changes render it inaccurate.
*   **Logging:** Introduce logging for critical operations or error states if consistent with the project's logging strategy.
*   **No New Dependencies:** Do NOT introduce external libraries/dependencies unless explicitly stated in `User Task` or `User Rules`.
*   **Atomicity of Changes (Hunks):** Each distinct change block (hunk in the diff output) should represent a small, logically coherent modification.
*   **Testability:** Design changes to be testable. If a testing framework is evident in `File Structure` or mentioned in `User Rules`, ensure new code is compatible.

---

## 3. User Rules
no additional rules
*(These are user-provided, project-specific rules or task constraints. They take precedence over `Guiding Principles`.)*

---

## 4. Output Format & Constraints (MANDATORY & STRICT)

Your **ONLY** output will be a single, valid `git diff` formatted text, specifically in the **unified diff format**. No other text, explanations, or apologies are permitted.

### Git Diff Format Structure:
*   If no changes are required, output an empty string.
*   For each modified, newly created, or deleted file, include a diff block. Multiple file diffs are concatenated directly.

### File Diff Block Structure:
A typical diff block for a modified file looks like this:
```diff
diff --git a/relative/path/to/file.ext b/relative/path/to/file.ext
index <hash_old>..<hash_new> <mode>
--- a/relative/path/to/file.ext
+++ b/relative/path/to/file.ext
@@ -START_OLD,LINES_OLD +START_NEW,LINES_NEW @@
 context line (unchanged)
-old line to be removed
+new line to be added
 another context line (unchanged)
```

*   **`diff --git a/path b/path` line:**
    *   Indicates the start of a diff for a specific file.
    *   `a/path/to/file.ext` is the path in the "original" version.
    *   `b/path/to/file.ext` is the path in the "new" version. Paths are project-root-relative, using forward slashes (`/`).
*   **`index <hash_old>..<hash_new> <mode>` line (Optional Detail):**
    *   This line provides metadata about the change. While standard in `git diff`, if generating precise hashes and modes is overly complex for your internal model, you may omit this line or use placeholder values (e.g., `index 0000000..0000000 100644`). The `---`, `+++`, and `@@` lines are the most critical for applying the patch.
*   **`--- a/path/to/file.ext` line:**
    *   Specifies the original file. For **newly created files**, this should be `--- /dev/null`.
*   **`+++ b/path/to/file.ext` line:**
    *   Specifies the new file. For **deleted files**, this should be `+++ /dev/null`. For **newly created files**, this is `+++ b/path/to/new_file.ext`.
*   **Hunk Header (`@@ -START_OLD,LINES_OLD +START_NEW,LINES_NEW @@`):**
    *   `START_OLD,LINES_OLD`: 1-based start line and number of lines from the original file affected by this hunk.
        *   For **newly created files**, this is `0,0`.
        *   For hunks that **only add lines** (no deletions from original), `LINES_OLD` is `0`. (e.g., `@@ -50,0 +51,5 @@` means 5 lines added after original line 50).
    *   `START_NEW,LINES_NEW`: 1-based start line and number of lines in the new file version affected by this hunk.
        *   For **deleted files** (where the entire file is deleted), this is `0,0` for the `+++ /dev/null` part.
        *   For hunks that **only delete lines** (no additions), `LINES_NEW` is `0`. (e.g., `@@ -25,3 +25,0 @@` means 3 lines deleted starting from original line 25).
*   **Hunk Content:**
    *   Lines prefixed with a space (` `) are context lines (unchanged).
    *   Lines prefixed with a minus (`-`) are lines removed from the original file.
    *   Lines prefixed with a plus (`+`) are lines added to the new file.
    *   Include at least 3 lines of unchanged context around changes, where available. If changes are at the very beginning or end of a file, or if hunks are very close, fewer context lines are acceptable as per standard unified diff practice.

### Specific Cases:
*   **Newly Created Files:**
    ```diff
    diff --git a/relative/path/to/new_file.ext b/relative/path/to/new_file.ext
    new file mode 100644
    index 0000000..<hash_new_placeholder>
    --- /dev/null
    +++ b/relative/path/to/new_file.ext
    @@ -0,0 +1,LINES_IN_NEW_FILE @@
    +line 1 of new file
    +line 2 of new file
    ...
    ```
    *(The `new file mode` and `index` lines should be included. Use `100644` for regular files. For the hash in the `index` line, a placeholder like `abcdef0` is acceptable if the actual hash cannot be computed.)*

*   **Deleted Files:**
    ```diff
    diff --git a/relative/path/to/deleted_file.ext b/relative/path/to/deleted_file.ext
    deleted file mode <mode_old_placeholder>
    index <hash_old_placeholder>..0000000
    --- a/relative/path/to/deleted_file.ext
    +++ /dev/null
    @@ -1,LINES_IN_OLD_FILE +0,0 @@
    -line 1 of old file
    -line 2 of old file
    ...
    ```
    *(The `deleted file mode` and `index` lines should be included. Use a placeholder like `100644` for mode and `abcdef0` for hash if actual values are unknown.)*

*   **Untouched Files:** Do NOT include any diff output for files that have no changes.

### General Constraints on Generated Code:
*   **Minimal & Precise Changes:** Generate the smallest, most targeted diff that correctly implements the `User Task` per all rules.
*   **Preserve Integrity:** Do not break existing functionality unless the `User Task` explicitly requires it. The codebase should remain buildable/runnable.
*   **Leverage Existing Code:** Prefer modifying existing files over creating new ones, unless a new file is architecturally justified or required by `User Task` or `User Rules`.

---

## 5. File Structure Format Description
The `File Structure` (provided in the next section) is formatted as follows:
1.  An initial project directory tree structure (e.g., generated by `tree` or similar).
2.  Followed by the content of each file, using an XML-like structure:
    <file path="RELATIVE/PATH/TO/FILE">
    (File content here)
    </file>
    The `path` attribute contains the project-root-relative path, using forward slashes (`/`).
    File content is the raw text of the file. Each file block is separated by a newline.

---

## 6. File Structure
ai-tools-workflow-integration\
├── .claude
│   └── settings.local.json
├── BrowserTools-1.2.0-extension
│   ├── __MACOSX
│   │   ├── ._chrome-extension
│   │   └── ._chrome-extensionZone.Identifier
│   └── chrome-extension
│       ├── background.js
│       ├── background.jsZone.Identifier
│       ├── devtools.html
│       ├── devtools.htmlZone.Identifier
│       ├── devtools.js
│       ├── devtools.jsZone.Identifier
│       ├── manifest.json
│       ├── manifest.jsonZone.Identifier
│       ├── panel.html
│       ├── panel.htmlZone.Identifier
│       ├── panel.js
│       └── panel.jsZone.Identifier
├── docs
│   ├── implementation-guides
│   ├── tool-research
│   ├── workflow-design
│   │   └── ai-tools-integration-blueprint.md
│   ├── api-keys-guide.md
│   ├── installation-summary.md
│   ├── mcp-setup-summary.md
│   └── replit-deployment-guide.md
├── examples
├── FitForge
│   ├── attached_assets
│   │   └── Pasted-Design-a-comprehensive-fitness-ecosystem-called-FitForge-the-ultimate-AI-powered-fit-1748327532648.txt
│   ├── client
│   │   ├── src
│   │   │   ├── components
│   │   │   │   ├── ui
│   │   │   │   │   ├── accordion.tsx
│   │   │   │   │   ├── alert-dialog.tsx
│   │   │   │   │   ├── alert.tsx
│   │   │   │   │   ├── aspect-ratio.tsx
│   │   │   │   │   ├── avatar.tsx
│   │   │   │   │   ├── badge.tsx
│   │   │   │   │   ├── breadcrumb.tsx
│   │   │   │   │   ├── button.tsx
│   │   │   │   │   ├── calendar.tsx
│   │   │   │   │   ├── card.tsx
│   │   │   │   │   ├── carousel.tsx
│   │   │   │   │   ├── chart.tsx
│   │   │   │   │   ├── checkbox.tsx
│   │   │   │   │   ├── collapsible.tsx
│   │   │   │   │   ├── command.tsx
│   │   │   │   │   ├── context-menu.tsx
│   │   │   │   │   ├── dialog.tsx
│   │   │   │   │   ├── drawer.tsx
│   │   │   │   │   ├── dropdown-menu.tsx
│   │   │   │   │   ├── form.tsx
│   │   │   │   │   ├── hover-card.tsx
│   │   │   │   │   ├── input-otp.tsx
│   │   │   │   │   ├── input.tsx
│   │   │   │   │   ├── label.tsx
│   │   │   │   │   ├── menubar.tsx
│   │   │   │   │   ├── navigation-menu.tsx
│   │   │   │   │   ├── pagination.tsx
│   │   │   │   │   ├── popover.tsx
│   │   │   │   │   ├── progress.tsx
│   │   │   │   │   ├── radio-group.tsx
│   │   │   │   │   ├── resizable.tsx
│   │   │   │   │   ├── scroll-area.tsx
│   │   │   │   │   ├── select.tsx
│   │   │   │   │   ├── separator.tsx
│   │   │   │   │   ├── sheet.tsx
│   │   │   │   │   ├── sidebar.tsx
│   │   │   │   │   ├── skeleton.tsx
│   │   │   │   │   ├── slider.tsx
│   │   │   │   │   ├── switch.tsx
│   │   │   │   │   ├── table.tsx
│   │   │   │   │   ├── tabs.tsx
│   │   │   │   │   ├── textarea.tsx
│   │   │   │   │   ├── toast.tsx
│   │   │   │   │   ├── toaster.tsx
│   │   │   │   │   ├── toggle-group.tsx
│   │   │   │   │   ├── toggle.tsx
│   │   │   │   │   └── tooltip.tsx
│   │   │   │   ├── community-features.tsx
│   │   │   │   ├── dashboard-overview.tsx
│   │   │   │   ├── footer.tsx
│   │   │   │   ├── freeform-workout-logger.tsx
│   │   │   │   ├── hero-section.tsx
│   │   │   │   ├── live-tracking.tsx
│   │   │   │   ├── live-workout-session.tsx
│   │   │   │   ├── navigation.tsx
│   │   │   │   ├── progress-analytics.tsx
│   │   │   │   ├── theme-provider.tsx
│   │   │   │   ├── workout-library.tsx
│   │   │   │   └── workout-starter.tsx
│   │   │   ├── hooks
│   │   │   │   ├── use-auth.tsx
│   │   │   │   ├── use-mobile.tsx
│   │   │   │   ├── use-toast.ts
│   │   │   │   └── use-workout-session.tsx
│   │   │   ├── lib
│   │   │   │   ├── auth.ts
│   │   │   │   ├── queryClient.ts
│   │   │   │   └── utils.ts
│   │   │   ├── pages
│   │   │   │   ├── auth.tsx
│   │   │   │   ├── community.tsx
│   │   │   │   ├── dashboard.tsx
│   │   │   │   ├── home.tsx
│   │   │   │   ├── not-found.tsx
│   │   │   │   ├── nutrition.tsx
│   │   │   │   ├── profile.tsx
│   │   │   │   ├── progress.tsx
│   │   │   │   └── workouts.tsx
│   │   │   ├── App.tsx
│   │   │   ├── index.css
│   │   │   └── main.tsx
│   │   └── index.html
│   ├── dist
│   │   ├── public
│   │   │   ├── assets
│   │   │   │   ├── index-BJvHg-M7.js
│   │   │   │   └── index-Hli7ESkA.css
│   │   │   └── index.html
│   │   └── index.js
│   ├── docs
│   │   └── INTEGRATION.md
│   ├── scripts
│   │   ├── add-sample-workouts.ts
│   │   ├── create-ender-profile.ts
│   │   ├── ender-real-exercises.ts
│   │   ├── generate-realistic-workout-history.ts
│   │   ├── import-exercise-database.ts
│   │   ├── insert-ender-profile.ts
│   │   ├── parse-real-exercise-data.ts
│   │   ├── seed-global-exercises.ts
│   │   ├── seed-real-exercises.ts
│   │   └── setup-database.ts
│   ├── server
│   │   ├── index.ts
│   │   ├── routes.ts
│   │   ├── storage.ts
│   │   └── vite.ts
│   ├── shared
│   │   ├── enhanced-schema.ts
│   │   └── schema.ts
│   ├── .gitignore
│   ├── .replit
│   ├── BRANCH_README.md
│   ├── components.json
│   ├── CRITICAL_BUG_REPORT.md
│   ├── drizzle.config.ts
│   ├── package-lock.json
│   ├── package.json
│   ├── postcss.config.js
│   ├── server.log
│   ├── tailwind.config.ts
│   ├── tsconfig.json
│   └── vite.config.ts
├── memory-bank
│   ├── ai_integration_module.md
│   ├── cloud_development_module.md
│   ├── code_to_figma_bridge_module.md
│   ├── data_pipeline_module.md
│   ├── figma_integration_module.md
│   ├── fitforge_application_module.md
│   ├── implementation_plan_figma_stress_test.md
│   ├── implementation_plan_workout_button_fix.md
│   ├── mcp_infrastructure_module.md
│   ├── project_roadmap.md
│   ├── system_manifest.md
│   ├── task_test_basic_click_events.md
│   ├── task_test_figma_basic_api.md
│   └── workflow_orchestration_module.md
├── scripts
├── stress_test
│   ├── figma_connectivity_test.md
│   ├── phase2_workflow_test_report.md
│   ├── phase3_code_to_design_workflow.md
│   └── workouttrackr_replit_deployment_log.md
├── templates
├── .claude-project.json
├── .mcp.json
├── active_context.md
├── BRANCH_README.md
├── BrowserTools-1.2.0-extension.zipZone.Identifier
├── changelog.md
├── CLAUDE.md
├── FitnessForge.zipZone.Identifier
└── README.md

<file path=".claude/settings.local.json">
{
  "permissions": {
    "allow": [
      "Bash(claude mcp:*)"
    ],
    "deny": []
  }
}
</file>
<file path="BrowserTools-1.2.0-extension/__MACOSX/._chrome-extension">
 Mac OS X        	2  ATTR  H Hcom.apple.macl )%G$M pJFc 
</file>
<file path="BrowserTools-1.2.0-extension/__MACOSX/._chrome-extensionZone.Identifier">

</file>
<file path="BrowserTools-1.2.0-extension/chrome-extension/background.js">
// Listen for messages from the devtools panel
chrome.runtime.onMessage.addListener((message, sender, sendResponse) => {
  if (message.type === "GET_CURRENT_URL" && message.tabId) {
    getCurrentTabUrl(message.tabId)
      .then((url) => {
        sendResponse({ success: true, url: url });
      })
      .catch((error) => {
        sendResponse({ success: false, error: error.message });
      });
    return true; // Required to use sendResponse asynchronously
  }

  // Handle explicit request to update the server with the URL
  if (message.type === "UPDATE_SERVER_URL" && message.tabId && message.url) {
    console.log(
      `Background: Received request to update server with URL for tab ${message.tabId}: ${message.url}`
    );
    updateServerWithUrl(
      message.tabId,
      message.url,
      message.source || "explicit_update"
    )
      .then(() => {
        if (sendResponse) sendResponse({ success: true });
      })
      .catch((error) => {
        console.error("Background: Error updating server with URL:", error);
        if (sendResponse)
          sendResponse({ success: false, error: error.message });
      });
    return true; // Required to use sendResponse asynchronously
  }

  if (message.type === "CAPTURE_SCREENSHOT" && message.tabId) {
    // First get the server settings
    chrome.storage.local.get(["browserConnectorSettings"], (result) => {
      const settings = result.browserConnectorSettings || {
        serverHost: "localhost",
        serverPort: 3025,
      };

      // Validate server identity first
      validateServerIdentity(settings.serverHost, settings.serverPort)
        .then((isValid) => {
          if (!isValid) {
            console.error(
              "Cannot capture screenshot: Not connected to a valid browser tools server"
            );
            sendResponse({
              success: false,
              error:
                "Not connected to a valid browser tools server. Please check your connection settings.",
            });
            return;
          }

          // Continue with screenshot capture
          captureAndSendScreenshot(message, settings, sendResponse);
        })
        .catch((error) => {
          console.error("Error validating server:", error);
          sendResponse({
            success: false,
            error: "Failed to validate server identity: " + error.message,
          });
        });
    });
    return true; // Required to use sendResponse asynchronously
  }
});

// Validate server identity
async function validateServerIdentity(host, port) {
  try {
    const response = await fetch(`http://${host}:${port}/.identity`, {
      signal: AbortSignal.timeout(3000), // 3 second timeout
    });

    if (!response.ok) {
      console.error(`Invalid server response: ${response.status}`);
      return false;
    }

    const identity = await response.json();

    // Validate the server signature
    if (identity.signature !== "mcp-browser-connector-24x7") {
      console.error("Invalid server signature - not the browser tools server");
      return false;
    }

    return true;
  } catch (error) {
    console.error("Error validating server identity:", error);
    return false;
  }
}

// Helper function to process the tab and run the audit
function processTabForAudit(tab, tabId) {
  const url = tab.url;

  if (!url) {
    console.error(`No URL available for tab ${tabId}`);
    return;
  }

  // Update our cache and the server with this URL
  tabUrls.set(tabId, url);
  updateServerWithUrl(tabId, url);
}

// Track URLs for each tab
const tabUrls = new Map();

// Function to get the current URL for a tab
async function getCurrentTabUrl(tabId) {
  try {
    console.log("Background: Getting URL for tab", tabId);

    // First check if we have it cached
    if (tabUrls.has(tabId)) {
      const cachedUrl = tabUrls.get(tabId);
      console.log("Background: Found cached URL:", cachedUrl);
      return cachedUrl;
    }

    // Otherwise get it from the tab
    try {
      const tab = await chrome.tabs.get(tabId);
      if (tab && tab.url) {
        // Cache the URL
        tabUrls.set(tabId, tab.url);
        console.log("Background: Got URL from tab:", tab.url);
        return tab.url;
      } else {
        console.log("Background: Tab exists but no URL found");
      }
    } catch (tabError) {
      console.error("Background: Error getting tab:", tabError);
    }

    // If we can't get the tab directly, try querying for active tabs
    try {
      const tabs = await chrome.tabs.query({
        active: true,
        currentWindow: true,
      });
      if (tabs && tabs.length > 0 && tabs[0].url) {
        const activeUrl = tabs[0].url;
        console.log("Background: Got URL from active tab:", activeUrl);
        // Cache this URL as well
        tabUrls.set(tabId, activeUrl);
        return activeUrl;
      }
    } catch (queryError) {
      console.error("Background: Error querying tabs:", queryError);
    }

    console.log("Background: Could not find URL for tab", tabId);
    return null;
  } catch (error) {
    console.error("Background: Error getting tab URL:", error);
    return null;
  }
}

// Listen for tab updates to detect page refreshes and URL changes
chrome.tabs.onUpdated.addListener((tabId, changeInfo, tab) => {
  // Track URL changes
  if (changeInfo.url) {
    console.log(`URL changed in tab ${tabId} to ${changeInfo.url}`);
    tabUrls.set(tabId, changeInfo.url);

    // Send URL update to server if possible
    updateServerWithUrl(tabId, changeInfo.url, "tab_url_change");
  }

  // Check if this is a page refresh (status becoming "complete")
  if (changeInfo.status === "complete") {
    // Update URL in our cache
    if (tab.url) {
      tabUrls.set(tabId, tab.url);
      // Send URL update to server if possible
      updateServerWithUrl(tabId, tab.url, "page_complete");
    }

    retestConnectionOnRefresh(tabId);
  }
});

// Listen for tab activation (switching between tabs)
chrome.tabs.onActivated.addListener((activeInfo) => {
  const tabId = activeInfo.tabId;
  console.log(`Tab activated: ${tabId}`);

  // Get the URL of the newly activated tab
  chrome.tabs.get(tabId, (tab) => {
    if (chrome.runtime.lastError) {
      console.error("Error getting tab info:", chrome.runtime.lastError);
      return;
    }

    if (tab && tab.url) {
      console.log(`Active tab changed to ${tab.url}`);

      // Update our cache
      tabUrls.set(tabId, tab.url);

      // Send URL update to server
      updateServerWithUrl(tabId, tab.url, "tab_activated");
    }
  });
});

// Function to update the server with the current URL
async function updateServerWithUrl(tabId, url, source = "background_update") {
  if (!url) {
    console.error("Cannot update server with empty URL");
    return;
  }

  console.log(`Updating server with URL for tab ${tabId}: ${url}`);

  // Get the saved settings
  chrome.storage.local.get(["browserConnectorSettings"], async (result) => {
    const settings = result.browserConnectorSettings || {
      serverHost: "localhost",
      serverPort: 3025,
    };

    // Maximum number of retry attempts
    const maxRetries = 3;
    let retryCount = 0;
    let success = false;

    while (retryCount < maxRetries && !success) {
      try {
        // Send the URL to the server
        const serverUrl = `http://${settings.serverHost}:${settings.serverPort}/current-url`;
        console.log(
          `Attempt ${
            retryCount + 1
          }/${maxRetries} to update server with URL: ${url}`
        );

        const response = await fetch(serverUrl, {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            url: url,
            tabId: tabId,
            timestamp: Date.now(),
            source: source,
          }),
          // Add a timeout to prevent hanging requests
          signal: AbortSignal.timeout(5000),
        });

        if (response.ok) {
          const responseData = await response.json();
          console.log(
            `Successfully updated server with URL: ${url}`,
            responseData
          );
          success = true;
        } else {
          console.error(
            `Server returned error: ${response.status} ${response.statusText}`
          );
          retryCount++;
          // Wait before retrying
          await new Promise((resolve) => setTimeout(resolve, 500));
        }
      } catch (error) {
        console.error(`Error updating server with URL: ${error.message}`);
        retryCount++;
        // Wait before retrying
        await new Promise((resolve) => setTimeout(resolve, 500));
      }
    }

    if (!success) {
      console.error(
        `Failed to update server with URL after ${maxRetries} attempts`
      );
    }
  });
}

// Clean up when tabs are closed
chrome.tabs.onRemoved.addListener((tabId) => {
  tabUrls.delete(tabId);
});

// Function to retest connection when a page is refreshed
async function retestConnectionOnRefresh(tabId) {
  console.log(`Page refreshed in tab ${tabId}, retesting connection...`);

  // Get the saved settings
  chrome.storage.local.get(["browserConnectorSettings"], async (result) => {
    const settings = result.browserConnectorSettings || {
      serverHost: "localhost",
      serverPort: 3025,
    };

    // Test the connection with the last known host and port
    const isConnected = await validateServerIdentity(
      settings.serverHost,
      settings.serverPort
    );

    // Notify all devtools instances about the connection status
    chrome.runtime.sendMessage({
      type: "CONNECTION_STATUS_UPDATE",
      isConnected: isConnected,
      tabId: tabId,
    });

    // Always notify for page refresh, whether connected or not
    // This ensures any ongoing discovery is cancelled and restarted
    chrome.runtime.sendMessage({
      type: "INITIATE_AUTO_DISCOVERY",
      reason: "page_refresh",
      tabId: tabId,
      forceRestart: true, // Add a flag to indicate this should force restart any ongoing processes
    });

    if (!isConnected) {
      console.log(
        "Connection test failed after page refresh, initiating auto-discovery..."
      );
    } else {
      console.log("Connection test successful after page refresh");
    }
  });
}

// Function to capture and send screenshot
function captureAndSendScreenshot(message, settings, sendResponse) {
  // Get the inspected window's tab
  chrome.tabs.get(message.tabId, (tab) => {
    if (chrome.runtime.lastError) {
      console.error("Error getting tab:", chrome.runtime.lastError);
      sendResponse({
        success: false,
        error: chrome.runtime.lastError.message,
      });
      return;
    }

    // Get all windows to find the one containing our tab
    chrome.windows.getAll({ populate: true }, (windows) => {
      const targetWindow = windows.find((w) =>
        w.tabs.some((t) => t.id === message.tabId)
      );

      if (!targetWindow) {
        console.error("Could not find window containing the inspected tab");
        sendResponse({
          success: false,
          error: "Could not find window containing the inspected tab",
        });
        return;
      }

      // Capture screenshot of the window containing our tab
      chrome.tabs.captureVisibleTab(
        targetWindow.id,
        { format: "png" },
        (dataUrl) => {
          // Ignore DevTools panel capture error if it occurs
          if (
            chrome.runtime.lastError &&
            !chrome.runtime.lastError.message.includes("devtools://")
          ) {
            console.error(
              "Error capturing screenshot:",
              chrome.runtime.lastError
            );
            sendResponse({
              success: false,
              error: chrome.runtime.lastError.message,
            });
            return;
          }

          // Send screenshot data to browser connector using configured settings
          const serverUrl = `http://${settings.serverHost}:${settings.serverPort}/screenshot`;
          console.log(`Sending screenshot to ${serverUrl}`);

          fetch(serverUrl, {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({
              data: dataUrl,
              path: message.screenshotPath,
            }),
          })
            .then((response) => response.json())
            .then((result) => {
              if (result.error) {
                console.error("Error from server:", result.error);
                sendResponse({ success: false, error: result.error });
              } else {
                console.log("Screenshot saved successfully:", result.path);
                // Send success response even if DevTools capture failed
                sendResponse({
                  success: true,
                  path: result.path,
                  title: tab.title || "Current Tab",
                });
              }
            })
            .catch((error) => {
              console.error("Error sending screenshot data:", error);
              sendResponse({
                success: false,
                error: error.message || "Failed to save screenshot",
              });
            });
        }
      );
    });
  });
}

</file>
<file path="BrowserTools-1.2.0-extension/chrome-extension/background.jsZone.Identifier">

</file>
<file path="BrowserTools-1.2.0-extension/chrome-extension/devtools.html">
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8" />
    <title>BrowserTools MCP</title>
  </head>
  <body>
    <!-- DevTools extension script -->
    <script src="devtools.js"></script>
  </body>
</html>

</file>
<file path="BrowserTools-1.2.0-extension/chrome-extension/devtools.htmlZone.Identifier">

</file>
<file path="BrowserTools-1.2.0-extension/chrome-extension/devtools.js">
// devtools.js

// Store settings with defaults
let settings = {
  logLimit: 50,
  queryLimit: 30000,
  stringSizeLimit: 500,
  maxLogSize: 20000,
  showRequestHeaders: false,
  showResponseHeaders: false,
  screenshotPath: "", // Add new setting for screenshot path
  serverHost: "localhost", // Default server host
  serverPort: 3025, // Default server port
  allowAutoPaste: false, // Default auto-paste setting
};

// Keep track of debugger state
let isDebuggerAttached = false;
let attachDebuggerRetries = 0;
const currentTabId = chrome.devtools.inspectedWindow.tabId;
const MAX_ATTACH_RETRIES = 3;
const ATTACH_RETRY_DELAY = 1000; // 1 second

// Load saved settings on startup
chrome.storage.local.get(["browserConnectorSettings"], (result) => {
  if (result.browserConnectorSettings) {
    settings = { ...settings, ...result.browserConnectorSettings };
  }
});

// Listen for settings updates
chrome.runtime.onMessage.addListener((message, sender, sendResponse) => {
  if (message.type === "SETTINGS_UPDATED") {
    settings = message.settings;

    // If server settings changed and we have a WebSocket, reconnect
    if (
      ws &&
      (message.settings.serverHost !== settings.serverHost ||
        message.settings.serverPort !== settings.serverPort)
    ) {
      console.log("Server settings changed, reconnecting WebSocket...");
      setupWebSocket();
    }
  }

  // Handle connection status updates from page refreshes
  if (message.type === "CONNECTION_STATUS_UPDATE") {
    console.log(
      `DevTools received connection status update: ${
        message.isConnected ? "Connected" : "Disconnected"
      }`
    );

    // If connection is lost, try to reestablish WebSocket only if we had a previous connection
    if (!message.isConnected && ws) {
      console.log(
        "Connection lost after page refresh, will attempt to reconnect WebSocket"
      );

      // Only reconnect if we actually have a WebSocket that might be stale
      if (
        ws &&
        (ws.readyState === WebSocket.CLOSED ||
          ws.readyState === WebSocket.CLOSING)
      ) {
        console.log("WebSocket is already closed or closing, will reconnect");
        setupWebSocket();
      }
    }
  }

  // Handle auto-discovery requests after page refreshes
  if (message.type === "INITIATE_AUTO_DISCOVERY") {
    console.log(
      `DevTools initiating WebSocket reconnect after page refresh (reason: ${message.reason})`
    );

    // For page refreshes with forceRestart, we should always reconnect if our current connection is not working
    if (
      (message.reason === "page_refresh" || message.forceRestart === true) &&
      (!ws || ws.readyState !== WebSocket.OPEN)
    ) {
      console.log(
        "Page refreshed and WebSocket not open - forcing reconnection"
      );

      // Close existing WebSocket if any
      if (ws) {
        console.log("Closing existing WebSocket due to page refresh");
        intentionalClosure = true; // Mark as intentional to prevent auto-reconnect
        try {
          ws.close();
        } catch (e) {
          console.error("Error closing WebSocket:", e);
        }
        ws = null;
        intentionalClosure = false; // Reset flag
      }

      // Clear any pending reconnect timeouts
      if (wsReconnectTimeout) {
        clearTimeout(wsReconnectTimeout);
        wsReconnectTimeout = null;
      }

      // Try to reestablish the WebSocket connection
      setupWebSocket();
    }
  }
});

// Utility to recursively truncate strings in any data structure
function truncateStringsInData(data, maxLength, depth = 0, path = "") {
  // Add depth limit to prevent circular references
  if (depth > 100) {
    console.warn("Max depth exceeded at path:", path);
    return "[MAX_DEPTH_EXCEEDED]";
  }

  console.log(`Processing at path: ${path}, type:`, typeof data);

  if (typeof data === "string") {
    if (data.length > maxLength) {
      console.log(
        `Truncating string at path ${path} from ${data.length} to ${maxLength}`
      );
      return data.substring(0, maxLength) + "... (truncated)";
    }
    return data;
  }

  if (Array.isArray(data)) {
    console.log(`Processing array at path ${path} with length:`, data.length);
    return data.map((item, index) =>
      truncateStringsInData(item, maxLength, depth + 1, `${path}[${index}]`)
    );
  }

  if (typeof data === "object" && data !== null) {
    console.log(
      `Processing object at path ${path} with keys:`,
      Object.keys(data)
    );
    const result = {};
    for (const [key, value] of Object.entries(data)) {
      try {
        result[key] = truncateStringsInData(
          value,
          maxLength,
          depth + 1,
          path ? `${path}.${key}` : key
        );
      } catch (e) {
        console.error(`Error processing key ${key} at path ${path}:`, e);
        result[key] = "[ERROR_PROCESSING]";
      }
    }
    return result;
  }

  return data;
}

// Helper to calculate the size of an object
function calculateObjectSize(obj) {
  return JSON.stringify(obj).length;
}

// Helper to process array of objects with size limit
function processArrayWithSizeLimit(array, maxTotalSize, processFunc) {
  let currentSize = 0;
  const result = [];

  for (const item of array) {
    // Process the item first
    const processedItem = processFunc(item);
    const itemSize = calculateObjectSize(processedItem);

    // Check if adding this item would exceed the limit
    if (currentSize + itemSize > maxTotalSize) {
      console.log(
        `Reached size limit (${currentSize}/${maxTotalSize}), truncating array`
      );
      break;
    }

    // Add item and update size
    result.push(processedItem);
    currentSize += itemSize;
    console.log(
      `Added item of size ${itemSize}, total size now: ${currentSize}`
    );
  }

  return result;
}

// Modified processJsonString to handle arrays with size limit
function processJsonString(jsonString, maxLength) {
  console.log("Processing string of length:", jsonString?.length);
  try {
    let parsed;
    try {
      parsed = JSON.parse(jsonString);
      console.log(
        "Successfully parsed as JSON, structure:",
        JSON.stringify(Object.keys(parsed))
      );
    } catch (e) {
      console.log("Not valid JSON, treating as string");
      return truncateStringsInData(jsonString, maxLength, 0, "root");
    }

    // If it's an array, process with size limit
    if (Array.isArray(parsed)) {
      console.log("Processing array of objects with size limit");
      const processed = processArrayWithSizeLimit(
        parsed,
        settings.maxLogSize,
        (item) => truncateStringsInData(item, maxLength, 0, "root")
      );
      const result = JSON.stringify(processed);
      console.log(
        `Processed array: ${parsed.length} -> ${processed.length} items`
      );
      return result;
    }

    // Otherwise process as before
    const processed = truncateStringsInData(parsed, maxLength, 0, "root");
    const result = JSON.stringify(processed);
    console.log("Processed JSON string length:", result.length);
    return result;
  } catch (e) {
    console.error("Error in processJsonString:", e);
    return jsonString.substring(0, maxLength) + "... (truncated)";
  }
}

// Helper to send logs to browser-connector
async function sendToBrowserConnector(logData) {
  if (!logData) {
    console.error("No log data provided to sendToBrowserConnector");
    return;
  }

  // First, ensure we're connecting to the right server
  if (!(await validateServerIdentity())) {
    console.error(
      "Cannot send logs: Not connected to a valid browser tools server"
    );
    return;
  }

  console.log("Sending log data to browser connector:", {
    type: logData.type,
    timestamp: logData.timestamp,
  });

  // Process any string fields that might contain JSON
  const processedData = { ...logData };

  if (logData.type === "network-request") {
    console.log("Processing network request");
    if (processedData.requestBody) {
      console.log(
        "Request body size before:",
        processedData.requestBody.length
      );
      processedData.requestBody = processJsonString(
        processedData.requestBody,
        settings.stringSizeLimit
      );
      console.log("Request body size after:", processedData.requestBody.length);
    }
    if (processedData.responseBody) {
      console.log(
        "Response body size before:",
        processedData.responseBody.length
      );
      processedData.responseBody = processJsonString(
        processedData.responseBody,
        settings.stringSizeLimit
      );
      console.log(
        "Response body size after:",
        processedData.responseBody.length
      );
    }
  } else if (
    logData.type === "console-log" ||
    logData.type === "console-error"
  ) {
    console.log("Processing console message");
    if (processedData.message) {
      console.log("Message size before:", processedData.message.length);
      processedData.message = processJsonString(
        processedData.message,
        settings.stringSizeLimit
      );
      console.log("Message size after:", processedData.message.length);
    }
  }

  // Add settings to the request
  const payload = {
    data: {
      ...processedData,
      timestamp: Date.now(),
    },
    settings: {
      logLimit: settings.logLimit,
      queryLimit: settings.queryLimit,
      showRequestHeaders: settings.showRequestHeaders,
      showResponseHeaders: settings.showResponseHeaders,
    },
  };

  const finalPayloadSize = JSON.stringify(payload).length;
  console.log("Final payload size:", finalPayloadSize);

  if (finalPayloadSize > 1000000) {
    console.warn("Warning: Large payload detected:", finalPayloadSize);
    console.warn(
      "Payload preview:",
      JSON.stringify(payload).substring(0, 1000) + "..."
    );
  }

  const serverUrl = `http://${settings.serverHost}:${settings.serverPort}/extension-log`;
  console.log(`Sending log to ${serverUrl}`);

  fetch(serverUrl, {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify(payload),
  })
    .then((response) => {
      if (!response.ok) {
        throw new Error(`HTTP error ${response.status}`);
      }
      return response.json();
    })
    .then((data) => {
      console.log("Log sent successfully:", data);
    })
    .catch((error) => {
      console.error("Error sending log:", error);
    });
}

// Validate server identity
async function validateServerIdentity() {
  try {
    console.log(
      `Validating server identity at ${settings.serverHost}:${settings.serverPort}...`
    );

    // Use fetch with a timeout to prevent long-hanging requests
    const response = await fetch(
      `http://${settings.serverHost}:${settings.serverPort}/.identity`,
      {
        signal: AbortSignal.timeout(3000), // 3 second timeout
      }
    );

    if (!response.ok) {
      console.error(
        `Server identity validation failed: HTTP ${response.status}`
      );

      // Notify about the connection failure
      chrome.runtime.sendMessage({
        type: "SERVER_VALIDATION_FAILED",
        reason: "http_error",
        status: response.status,
        serverHost: settings.serverHost,
        serverPort: settings.serverPort,
      });

      return false;
    }

    const identity = await response.json();

    // Validate signature
    if (identity.signature !== "mcp-browser-connector-24x7") {
      console.error("Server identity validation failed: Invalid signature");

      // Notify about the invalid signature
      chrome.runtime.sendMessage({
        type: "SERVER_VALIDATION_FAILED",
        reason: "invalid_signature",
        serverHost: settings.serverHost,
        serverPort: settings.serverPort,
      });

      return false;
    }

    console.log(
      `Server identity confirmed: ${identity.name} v${identity.version}`
    );

    // Notify about successful validation
    chrome.runtime.sendMessage({
      type: "SERVER_VALIDATION_SUCCESS",
      serverInfo: identity,
      serverHost: settings.serverHost,
      serverPort: settings.serverPort,
    });

    return true;
  } catch (error) {
    console.error("Server identity validation failed:", error);

    // Notify about the connection error
    chrome.runtime.sendMessage({
      type: "SERVER_VALIDATION_FAILED",
      reason: "connection_error",
      error: error.message,
      serverHost: settings.serverHost,
      serverPort: settings.serverPort,
    });

    return false;
  }
}

// Function to clear logs on the server
function wipeLogs() {
  console.log("Wiping all logs...");

  const serverUrl = `http://${settings.serverHost}:${settings.serverPort}/wipelogs`;
  console.log(`Sending wipe request to ${serverUrl}`);

  fetch(serverUrl, {
    method: "POST",
    headers: { "Content-Type": "application/json" },
  })
    .then((response) => {
      if (!response.ok) {
        throw new Error(`HTTP error ${response.status}`);
      }
      return response.json();
    })
    .then((data) => {
      console.log("Logs wiped successfully:", data);
    })
    .catch((error) => {
      console.error("Error wiping logs:", error);
    });
}

// Listen for page refreshes
chrome.devtools.network.onNavigated.addListener((url) => {
  console.log("Page navigated/refreshed - wiping logs");
  wipeLogs();

  // Send the new URL to the server
  if (ws && ws.readyState === WebSocket.OPEN && url) {
    console.log(
      "Chrome Extension: Sending page-navigated event with URL:",
      url
    );
    ws.send(
      JSON.stringify({
        type: "page-navigated",
        url: url,
        tabId: chrome.devtools.inspectedWindow.tabId,
        timestamp: Date.now(),
      })
    );
  }
});

// 1) Listen for network requests
chrome.devtools.network.onRequestFinished.addListener((request) => {
  if (request._resourceType === "xhr" || request._resourceType === "fetch") {
    request.getContent((responseBody) => {
      const entry = {
        type: "network-request",
        url: request.request.url,
        method: request.request.method,
        status: request.response.status,
        requestHeaders: request.request.headers,
        responseHeaders: request.response.headers,
        requestBody: request.request.postData?.text ?? "",
        responseBody: responseBody ?? "",
      };
      sendToBrowserConnector(entry);
    });
  }
});

// Helper function to attach debugger
async function attachDebugger() {
  // First check if we're already attached to this tab
  chrome.debugger.getTargets((targets) => {
    const isAlreadyAttached = targets.some(
      (target) => target.tabId === currentTabId && target.attached
    );

    if (isAlreadyAttached) {
      console.log("Found existing debugger attachment, detaching first...");
      // Force detach first to ensure clean state
      chrome.debugger.detach({ tabId: currentTabId }, () => {
        // Ignore any errors during detach
        if (chrome.runtime.lastError) {
          console.log("Error during forced detach:", chrome.runtime.lastError);
        }
        // Now proceed with fresh attachment
        performAttach();
      });
    } else {
      // No existing attachment, proceed directly
      performAttach();
    }
  });
}

function performAttach() {
  console.log("Performing debugger attachment to tab:", currentTabId);
  chrome.debugger.attach({ tabId: currentTabId }, "1.3", () => {
    if (chrome.runtime.lastError) {
      console.error("Failed to attach debugger:", chrome.runtime.lastError);
      isDebuggerAttached = false;
      return;
    }

    isDebuggerAttached = true;
    console.log("Debugger successfully attached");

    // Add the event listener when attaching
    chrome.debugger.onEvent.addListener(consoleMessageListener);

    chrome.debugger.sendCommand(
      { tabId: currentTabId },
      "Runtime.enable",
      {},
      () => {
        if (chrome.runtime.lastError) {
          console.error("Failed to enable runtime:", chrome.runtime.lastError);
          return;
        }
        console.log("Runtime API successfully enabled");
      }
    );
  });
}

// Helper function to detach debugger
function detachDebugger() {
  // Remove the event listener first
  chrome.debugger.onEvent.removeListener(consoleMessageListener);

  // Check if debugger is actually attached before trying to detach
  chrome.debugger.getTargets((targets) => {
    const isStillAttached = targets.some(
      (target) => target.tabId === currentTabId && target.attached
    );

    if (!isStillAttached) {
      console.log("Debugger already detached");
      isDebuggerAttached = false;
      return;
    }

    chrome.debugger.detach({ tabId: currentTabId }, () => {
      if (chrome.runtime.lastError) {
        console.warn(
          "Warning during debugger detach:",
          chrome.runtime.lastError
        );
      }
      isDebuggerAttached = false;
      console.log("Debugger detached");
    });
  });
}

// Move the console message listener outside the panel creation
const consoleMessageListener = (source, method, params) => {
  // Only process events for our tab
  if (source.tabId !== currentTabId) {
    return;
  }

  if (method === "Runtime.exceptionThrown") {
    const entry = {
      type: "console-error",
      message:
        params.exceptionDetails.exception?.description ||
        JSON.stringify(params.exceptionDetails),
      level: "error",
      timestamp: Date.now(),
    };
    console.log("Sending runtime exception:", entry);
    sendToBrowserConnector(entry);
  }

  if (method === "Runtime.consoleAPICalled") {
    // Process all arguments from the console call
    let formattedMessage = "";
    const args = params.args || [];

    // Extract all arguments and combine them
    if (args.length > 0) {
      // Try to build a meaningful representation of all arguments
      try {
        formattedMessage = args
          .map((arg) => {
            // Handle different types of arguments
            if (arg.type === "string") {
              return arg.value;
            } else if (arg.type === "object" && arg.preview) {
              // For objects, include their preview or description
              return JSON.stringify(arg.preview);
            } else if (arg.description) {
              // Some objects have descriptions
              return arg.description;
            } else {
              // Fallback for other types
              return arg.value || arg.description || JSON.stringify(arg);
            }
          })
          .join(" ");
      } catch (e) {
        // Fallback if processing fails
        console.error("Failed to process console arguments:", e);
        formattedMessage =
          args[0]?.value || "Unable to process console arguments";
      }
    }

    const entry = {
      type: params.type === "error" ? "console-error" : "console-log",
      level: params.type,
      message: formattedMessage,
      timestamp: Date.now(),
    };
    console.log("Sending console entry:", entry);
    sendToBrowserConnector(entry);
  }
};

// 2) Use DevTools Protocol to capture console logs
chrome.devtools.panels.create("BrowserToolsMCP", "", "panel.html", (panel) => {
  // Initial attach - we'll keep the debugger attached as long as DevTools is open
  attachDebugger();

  // Handle panel showing
  panel.onShown.addListener((panelWindow) => {
    if (!isDebuggerAttached) {
      attachDebugger();
    }
  });
});

// Clean up when DevTools closes
window.addEventListener("unload", () => {
  // Detach debugger
  detachDebugger();

  // Set intentional closure flag before closing
  intentionalClosure = true;

  if (ws) {
    try {
      ws.close();
    } catch (e) {
      console.error("Error closing WebSocket during unload:", e);
    }
    ws = null;
  }

  if (wsReconnectTimeout) {
    clearTimeout(wsReconnectTimeout);
    wsReconnectTimeout = null;
  }

  if (heartbeatInterval) {
    clearInterval(heartbeatInterval);
    heartbeatInterval = null;
  }
});

// Function to capture and send element data
function captureAndSendElement() {
  chrome.devtools.inspectedWindow.eval(
    `(function() {
      const el = $0;  // $0 is the currently selected element in DevTools
      if (!el) return null;

      const rect = el.getBoundingClientRect();

      return {
        tagName: el.tagName,
        id: el.id,
        className: el.className,
        textContent: el.textContent?.substring(0, 100),
        attributes: Array.from(el.attributes).map(attr => ({
          name: attr.name,
          value: attr.value
        })),
        dimensions: {
          width: rect.width,
          height: rect.height,
          top: rect.top,
          left: rect.left
        },
        innerHTML: el.innerHTML.substring(0, 500)
      };
    })()`,
    (result, isException) => {
      if (isException || !result) return;

      console.log("Element selected:", result);

      // Send to browser connector
      sendToBrowserConnector({
        type: "selected-element",
        timestamp: Date.now(),
        element: result,
      });
    }
  );
}

// Listen for element selection in the Elements panel
chrome.devtools.panels.elements.onSelectionChanged.addListener(() => {
  captureAndSendElement();
});

// WebSocket connection management
let ws = null;
let wsReconnectTimeout = null;
let heartbeatInterval = null;
const WS_RECONNECT_DELAY = 5000; // 5 seconds
const HEARTBEAT_INTERVAL = 30000; // 30 seconds
// Add a flag to track if we need to reconnect after identity validation
let reconnectAfterValidation = false;
// Track if we're intentionally closing the connection
let intentionalClosure = false;

// Function to send a heartbeat to keep the WebSocket connection alive
function sendHeartbeat() {
  if (ws && ws.readyState === WebSocket.OPEN) {
    console.log("Chrome Extension: Sending WebSocket heartbeat");
    ws.send(JSON.stringify({ type: "heartbeat" }));
  }
}

async function setupWebSocket() {
  // Clear any pending timeouts
  if (wsReconnectTimeout) {
    clearTimeout(wsReconnectTimeout);
    wsReconnectTimeout = null;
  }

  if (heartbeatInterval) {
    clearInterval(heartbeatInterval);
    heartbeatInterval = null;
  }

  // Close existing WebSocket if any
  if (ws) {
    // Set flag to indicate this is an intentional closure
    intentionalClosure = true;
    try {
      ws.close();
    } catch (e) {
      console.error("Error closing existing WebSocket:", e);
    }
    ws = null;
    intentionalClosure = false; // Reset flag
  }

  // Validate server identity before connecting
  console.log("Validating server identity before WebSocket connection...");
  const isValid = await validateServerIdentity();

  if (!isValid) {
    console.error(
      "Cannot establish WebSocket: Not connected to a valid browser tools server"
    );
    // Set flag to indicate we need to reconnect after a page refresh check
    reconnectAfterValidation = true;

    // Try again after delay
    wsReconnectTimeout = setTimeout(() => {
      console.log("Attempting to reconnect WebSocket after validation failure");
      setupWebSocket();
    }, WS_RECONNECT_DELAY);
    return;
  }

  // Reset reconnect flag since validation succeeded
  reconnectAfterValidation = false;

  const wsUrl = `ws://${settings.serverHost}:${settings.serverPort}/extension-ws`;
  console.log(`Connecting to WebSocket at ${wsUrl}`);

  try {
    ws = new WebSocket(wsUrl);

    ws.onopen = () => {
      console.log(`Chrome Extension: WebSocket connected to ${wsUrl}`);

      // Start heartbeat to keep connection alive
      heartbeatInterval = setInterval(sendHeartbeat, HEARTBEAT_INTERVAL);

      // Notify that connection is successful
      chrome.runtime.sendMessage({
        type: "WEBSOCKET_CONNECTED",
        serverHost: settings.serverHost,
        serverPort: settings.serverPort,
      });

      // Send the current URL to the server right after connection
      // This ensures the server has the URL even if no navigation occurs
      chrome.runtime.sendMessage(
        {
          type: "GET_CURRENT_URL",
          tabId: chrome.devtools.inspectedWindow.tabId,
        },
        (response) => {
          if (chrome.runtime.lastError) {
            console.error(
              "Chrome Extension: Error getting URL from background on connection:",
              chrome.runtime.lastError
            );

            // If normal method fails, try fallback to chrome.tabs API directly
            tryFallbackGetUrl();
            return;
          }

          if (response && response.url) {
            console.log(
              "Chrome Extension: Sending initial URL to server:",
              response.url
            );

            // Send the URL to the server via the background script
            chrome.runtime.sendMessage({
              type: "UPDATE_SERVER_URL",
              tabId: chrome.devtools.inspectedWindow.tabId,
              url: response.url,
              source: "initial_connection",
            });
          } else {
            // If response exists but no URL, try fallback
            tryFallbackGetUrl();
          }
        }
      );

      // Fallback method to get URL directly
      function tryFallbackGetUrl() {
        console.log("Chrome Extension: Trying fallback method to get URL");

        // Try to get the URL directly using the tabs API
        chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {
          if (chrome.runtime.lastError) {
            console.error(
              "Chrome Extension: Fallback URL retrieval failed:",
              chrome.runtime.lastError
            );
            return;
          }

          if (tabs && tabs.length > 0 && tabs[0].url) {
            console.log(
              "Chrome Extension: Got URL via fallback method:",
              tabs[0].url
            );

            // Send the URL to the server
            chrome.runtime.sendMessage({
              type: "UPDATE_SERVER_URL",
              tabId: chrome.devtools.inspectedWindow.tabId,
              url: tabs[0].url,
              source: "fallback_method",
            });
          } else {
            console.warn(
              "Chrome Extension: Could not retrieve URL through fallback method"
            );
          }
        });
      }
    };

    ws.onerror = (error) => {
      console.error(`Chrome Extension: WebSocket error for ${wsUrl}:`, error);
    };

    ws.onclose = (event) => {
      console.log(`Chrome Extension: WebSocket closed for ${wsUrl}:`, event);

      // Stop heartbeat
      if (heartbeatInterval) {
        clearInterval(heartbeatInterval);
        heartbeatInterval = null;
      }

      // Don't reconnect if this was an intentional closure
      if (intentionalClosure) {
        console.log(
          "Chrome Extension: Intentional WebSocket closure, not reconnecting"
        );
        return;
      }

      // Only attempt to reconnect if the closure wasn't intentional
      // Code 1000 (Normal Closure) and 1001 (Going Away) are normal closures
      // Code 1005 often happens with clean closures in Chrome
      const isAbnormalClosure = !(event.code === 1000 || event.code === 1001);

      // Check if this was an abnormal closure or if we need to reconnect after validation
      if (isAbnormalClosure || reconnectAfterValidation) {
        console.log(
          `Chrome Extension: Will attempt to reconnect WebSocket (closure code: ${event.code})`
        );

        // Try to reconnect after delay
        wsReconnectTimeout = setTimeout(() => {
          console.log(
            `Chrome Extension: Attempting to reconnect WebSocket to ${wsUrl}`
          );
          setupWebSocket();
        }, WS_RECONNECT_DELAY);
      } else {
        console.log(
          `Chrome Extension: Normal WebSocket closure, not reconnecting automatically`
        );
      }
    };

    ws.onmessage = async (event) => {
      try {
        const message = JSON.parse(event.data);

        // Don't log heartbeat responses to reduce noise
        if (message.type !== "heartbeat-response") {
          console.log("Chrome Extension: Received WebSocket message:", message);

          if (message.type === "server-shutdown") {
            console.log("Chrome Extension: Received server shutdown signal");
            // Clear any reconnection attempts
            if (wsReconnectTimeout) {
              clearTimeout(wsReconnectTimeout);
              wsReconnectTimeout = null;
            }
            // Close the connection gracefully
            ws.close(1000, "Server shutting down");
            return;
          }
        }

        if (message.type === "heartbeat-response") {
          // Just a heartbeat response, no action needed
          // Uncomment the next line for debug purposes only
          // console.log("Chrome Extension: Received heartbeat response");
        } else if (message.type === "take-screenshot") {
          console.log("Chrome Extension: Taking screenshot...");
          // Capture screenshot of the current tab
          chrome.tabs.captureVisibleTab(null, { format: "png" }, (dataUrl) => {
            if (chrome.runtime.lastError) {
              console.error(
                "Chrome Extension: Screenshot capture failed:",
                chrome.runtime.lastError
              );
              ws.send(
                JSON.stringify({
                  type: "screenshot-error",
                  error: chrome.runtime.lastError.message,
                  requestId: message.requestId,
                })
              );
              return;
            }

            console.log("Chrome Extension: Screenshot captured successfully");
            // Just send the screenshot data, let the server handle paths
            const response = {
              type: "screenshot-data",
              data: dataUrl,
              requestId: message.requestId,
              // Only include path if it's configured in settings
              ...(settings.screenshotPath && { path: settings.screenshotPath }),
              // Include auto-paste setting
              autoPaste: settings.allowAutoPaste,
            };

            console.log("Chrome Extension: Sending screenshot data response", {
              ...response,
              data: "[base64 data]",
            });

            ws.send(JSON.stringify(response));
          });
        } else if (message.type === "get-current-url") {
          console.log("Chrome Extension: Received request for current URL");

          // Get the current URL from the background script instead of inspectedWindow.eval
          let retryCount = 0;
          const maxRetries = 2;

          const requestCurrentUrl = () => {
            chrome.runtime.sendMessage(
              {
                type: "GET_CURRENT_URL",
                tabId: chrome.devtools.inspectedWindow.tabId,
              },
              (response) => {
                if (chrome.runtime.lastError) {
                  console.error(
                    "Chrome Extension: Error getting URL from background:",
                    chrome.runtime.lastError
                  );

                  // Retry logic
                  if (retryCount < maxRetries) {
                    retryCount++;
                    console.log(
                      `Retrying URL request (${retryCount}/${maxRetries})...`
                    );
                    setTimeout(requestCurrentUrl, 500); // Wait 500ms before retrying
                    return;
                  }

                  ws.send(
                    JSON.stringify({
                      type: "current-url-response",
                      url: null,
                      tabId: chrome.devtools.inspectedWindow.tabId,
                      error:
                        "Failed to get URL from background: " +
                        chrome.runtime.lastError.message,
                      requestId: message.requestId,
                    })
                  );
                  return;
                }

                if (response && response.success && response.url) {
                  console.log(
                    "Chrome Extension: Got URL from background:",
                    response.url
                  );
                  ws.send(
                    JSON.stringify({
                      type: "current-url-response",
                      url: response.url,
                      tabId: chrome.devtools.inspectedWindow.tabId,
                      requestId: message.requestId,
                    })
                  );
                } else {
                  console.error(
                    "Chrome Extension: Invalid URL response from background:",
                    response
                  );

                  // Last resort - try to get URL directly from the tab
                  chrome.tabs.query(
                    { active: true, currentWindow: true },
                    (tabs) => {
                      const url = tabs && tabs[0] && tabs[0].url;
                      console.log(
                        "Chrome Extension: Got URL directly from tab:",
                        url
                      );

                      ws.send(
                        JSON.stringify({
                          type: "current-url-response",
                          url: url || null,
                          tabId: chrome.devtools.inspectedWindow.tabId,
                          error:
                            response?.error ||
                            "Failed to get URL from background",
                          requestId: message.requestId,
                        })
                      );
                    }
                  );
                }
              }
            );
          };

          requestCurrentUrl();
        }
      } catch (error) {
        console.error(
          "Chrome Extension: Error processing WebSocket message:",
          error
        );
      }
    };
  } catch (error) {
    console.error("Error creating WebSocket:", error);
    // Try again after delay
    wsReconnectTimeout = setTimeout(setupWebSocket, WS_RECONNECT_DELAY);
  }
}

// Initialize WebSocket connection when DevTools opens
setupWebSocket();

// Clean up WebSocket when DevTools closes
window.addEventListener("unload", () => {
  if (ws) {
    ws.close();
  }
  if (wsReconnectTimeout) {
    clearTimeout(wsReconnectTimeout);
  }
});

</file>
<file path="BrowserTools-1.2.0-extension/chrome-extension/devtools.jsZone.Identifier">

</file>
<file path="BrowserTools-1.2.0-extension/chrome-extension/manifest.json">
{
    "name": "BrowserTools MCP",
    "version": "1.2.0",
    "description": "MCP tool for AI code editors to capture data from a browser such as console logs, network requests, screenshots and more",
    "manifest_version": 3,
    "devtools_page": "devtools.html",
    "permissions": [
      "activeTab",
      "debugger",
      "storage",
      "tabs",
      "tabCapture",
      "windows"
    ],
    "host_permissions": [
      "<all_urls>"
    ],
    "background": {
      "service_worker": "background.js"
    }
}

</file>
<file path="BrowserTools-1.2.0-extension/chrome-extension/manifest.jsonZone.Identifier">

</file>
<file path="BrowserTools-1.2.0-extension/chrome-extension/panel.html">
<!DOCTYPE html>
<html>
<head>
    <style>
        body {
            padding: 16px;
            font-family: system-ui, -apple-system, sans-serif;
            background-color: #282828;
            color: #fff;
        }
        .endpoint-list {
            margin: 16px 0;
        }
        .endpoint-item {
            display: flex;
            gap: 8px;
            margin-bottom: 8px;
            align-items: center;
        }
        .endpoint-form {
            display: flex;
            gap: 8px;
            margin-bottom: 16px;
            align-items: center;
        }
        button {
            padding: 4px 8px;
        }
        input {
            padding: 4px;
        }
        .status-indicator {
            width: 8px;
            height: 8px;
            border-radius: 50%;
            display: inline-block;
        }
        .status-connected {
            background: #4caf50;
        }
        .status-disconnected {
            background: #f44336;
        }
        .form-group {
            margin-bottom: 16px;
        }
        .form-group label {
            display: block;
            margin-bottom: 4px;
        }
        .checkbox-group {
            margin-bottom: 8px;
        }
        .checkbox-group-2 {
            margin-bottom: 6px;
        }
        input[type="number"],
        input[type="text"] {
            padding: 4px;
            width: 200px;
        }
        .settings-section {
            border: 1px solid #ccc;
            padding: 16px;
            margin-bottom: 16px;
            border-radius: 4px;
        }
        .settings-header {
            display: flex;
            align-items: center;
            justify-content: space-between;
            cursor: pointer;
            user-select: none;
        }
        .settings-header h3 {
            margin: 0;
        }
        .settings-content {
            display: none;
            margin-top: 16px;
        }
        .settings-content.visible {
            display: block;
        }
        .chevron {
            width: 20px;
            height: 20px;
            transition: transform 0.3s ease;
        }
        .chevron.open {
            transform: rotate(180deg);
        }
        .quick-actions {
            display: flex;
            gap: 8px;
            margin-bottom: 16px;
        }
        .action-button {
            background-color: #4a4a4a;
            color: white;
            border: none;
            padding: 8px 16px;
            border-radius: 4px;
            cursor: pointer;
            transition: background-color 0.2s;
        }
        .action-button:hover {
            background-color: #5a5a5a;
        }
        .action-button.danger {
            background-color: #f44336;
        }
        .action-button.danger:hover {
            background-color: #d32f2f;
        }
    </style>
</head>
<body>
    <div class="settings-section">
        <h3>Quick Actions</h3>
        <div class="quick-actions">
            <button id="capture-screenshot" class="action-button">
                Capture Screenshot
            </button>
            <button id="wipe-logs" class="action-button danger">
                Wipe All Logs
            </button>
        </div>
        <div class="checkbox-group-2" style="margin-top: 10px; display: flex; align-items: center;">
            <label>
                <input type="checkbox" id="allow-auto-paste">
                Allow Auto-paste to Cursor
            </label>
        </div>
    </div>

    <div class="settings-section">
        <h3>Screenshot Settings</h3>
        <div class="form-group">
            <label for="screenshot-path">Provide a directory to save screenshots to (by default screenshots will be saved to your downloads folder if no path is provided)</label>
            <input type="text" id="screenshot-path" placeholder="/path/to/screenshots">
        </div>
    </div>

    <div class="settings-section">
        <h3>Server Connection Settings</h3>
        <div class="form-group">
            <label for="server-host">Server Host</label>
            <input type="text" id="server-host" placeholder="localhost or IP address">
        </div>
        <div class="form-group">
            <label for="server-port">Server Port</label>
            <input type="number" id="server-port" min="1" max="65535" value="3025">
        </div>
        <div class="quick-actions">
            <button id="discover-server" class="action-button">
                Auto-Discover Server
            </button>
            <button id="test-connection" class="action-button">
                Test Connection
            </button>
        </div>
        <div id="connection-status" style="margin-top: 8px; display: none;">
            <span id="status-icon" class="status-indicator"></span>
            <span id="status-text"></span>
        </div>
    </div>

    <div class="settings-section">
        <div class="settings-header" id="advanced-settings-header">
            <h3>Advanced Settings</h3>
            <svg class="chevron" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <polyline points="6 9 12 15 18 9"></polyline>
            </svg>
        </div>
        
        <div class="settings-content" id="advanced-settings-content">
            <div class="form-group">
                <label for="log-limit">Log Limit (number of logs)</label>
                <input type="number" id="log-limit" min="1" value="50">
            </div>

            <div class="form-group">
                <label for="query-limit">Query Limit (characters)</label>
                <input type="number" id="query-limit" min="1" value="30000">
            </div>

            <div class="form-group">
                <label for="string-size-limit">String Size Limit (characters)</label>
                <input type="number" id="string-size-limit" min="1" value="500">
            </div>

            <div class="form-group">
                <label for="max-log-size">Max Log Size (characters)</label>
                <input type="number" id="max-log-size" min="1000" value="20000">
            </div>

            <div class="checkbox-group">
                <label>
                    <input type="checkbox" id="show-request-headers">
                    Include Request Headers
                </label>
            </div>

            <div class="checkbox-group">
                <label>
                    <input type="checkbox" id="show-response-headers">
                    Include Response Headers
                </label>
            </div>
        </div>
    </div>

    <script src="panel.js"></script>
</body>
</html> 
</file>
<file path="BrowserTools-1.2.0-extension/chrome-extension/panel.htmlZone.Identifier">

</file>
<file path="BrowserTools-1.2.0-extension/chrome-extension/panel.js">
// Store settings
let settings = {
  logLimit: 50,
  queryLimit: 30000,
  stringSizeLimit: 500,
  showRequestHeaders: false,
  showResponseHeaders: false,
  maxLogSize: 20000,
  screenshotPath: "",
  // Add server connection settings
  serverHost: "localhost",
  serverPort: 3025,
  allowAutoPaste: false, // Default auto-paste setting
};

// Track connection status
let serverConnected = false;
let reconnectAttemptTimeout = null;
// Add a flag to track ongoing discovery operations
let isDiscoveryInProgress = false;
// Add an AbortController to cancel fetch operations
let discoveryController = null;

// Load saved settings on startup
chrome.storage.local.get(["browserConnectorSettings"], (result) => {
  if (result.browserConnectorSettings) {
    settings = { ...settings, ...result.browserConnectorSettings };
    updateUIFromSettings();
  }

  // Create connection status banner at the top
  createConnectionBanner();

  // Automatically discover server on panel load with quiet mode enabled
  discoverServer(true);
});

// Add listener for connection status updates from background script (page refresh events)
chrome.runtime.onMessage.addListener((message, sender, sendResponse) => {
  if (message.type === "CONNECTION_STATUS_UPDATE") {
    console.log(
      `Received connection status update: ${
        message.isConnected ? "Connected" : "Disconnected"
      }`
    );

    // Update UI based on connection status
    if (message.isConnected) {
      // If already connected, just maintain the current state
      if (!serverConnected) {
        // Connection was re-established, update UI
        serverConnected = true;
        updateConnectionBanner(true, {
          name: "Browser Tools Server",
          version: "reconnected",
          host: settings.serverHost,
          port: settings.serverPort,
        });
      }
    } else {
      // Connection lost, update UI to show disconnected
      serverConnected = false;
      updateConnectionBanner(false, null);
    }
  }

  if (message.type === "INITIATE_AUTO_DISCOVERY") {
    console.log(
      `Initiating auto-discovery after page refresh (reason: ${message.reason})`
    );

    // For page refreshes or if forceRestart is set to true, always cancel any ongoing discovery and restart
    if (message.reason === "page_refresh" || message.forceRestart === true) {
      // Cancel any ongoing discovery operation
      cancelOngoingDiscovery();

      // Update UI to indicate we're starting a fresh scan
      if (connectionStatusDiv) {
        connectionStatusDiv.style.display = "block";
        if (statusIcon) statusIcon.className = "status-indicator";
        if (statusText)
          statusText.textContent =
            "Page refreshed. Restarting server discovery...";
      }

      // Always update the connection banner when a page refresh occurs
      updateConnectionBanner(false, null);

      // Start a new discovery process with quiet mode
      console.log("Starting fresh discovery after page refresh");
      discoverServer(true);
    }
    // For other types of auto-discovery requests, only start if not already in progress
    else if (!isDiscoveryInProgress) {
      // Use quiet mode for auto-discovery to minimize UI changes
      discoverServer(true);
    }
  }

  // Handle successful server validation
  if (message.type === "SERVER_VALIDATION_SUCCESS") {
    console.log(
      `Server validation successful: ${message.serverHost}:${message.serverPort}`
    );

    // Update the connection status banner
    serverConnected = true;
    updateConnectionBanner(true, message.serverInfo);

    // If we were showing the connection status dialog, we can hide it now
    if (connectionStatusDiv && connectionStatusDiv.style.display === "block") {
      connectionStatusDiv.style.display = "none";
    }
  }

  // Handle failed server validation
  if (message.type === "SERVER_VALIDATION_FAILED") {
    console.log(
      `Server validation failed: ${message.reason} - ${message.serverHost}:${message.serverPort}`
    );

    // Update the connection status
    serverConnected = false;
    updateConnectionBanner(false, null);

    // Start auto-discovery if this was a page refresh validation
    if (
      message.reason === "connection_error" ||
      message.reason === "http_error"
    ) {
      // If we're not already trying to discover the server, start the process
      if (!isDiscoveryInProgress) {
        console.log("Starting auto-discovery after validation failure");
        discoverServer(true);
      }
    }
  }

  // Handle successful WebSocket connection
  if (message.type === "WEBSOCKET_CONNECTED") {
    console.log(
      `WebSocket connected to ${message.serverHost}:${message.serverPort}`
    );

    // Update connection status if it wasn't already connected
    if (!serverConnected) {
      serverConnected = true;
      updateConnectionBanner(true, {
        name: "Browser Tools Server",
        version: "connected via WebSocket",
        host: message.serverHost,
        port: message.serverPort,
      });
    }
  }
});

// Create connection status banner
function createConnectionBanner() {
  // Check if banner already exists
  if (document.getElementById("connection-banner")) {
    return;
  }

  // Create the banner
  const banner = document.createElement("div");
  banner.id = "connection-banner";
  banner.style.cssText = `
    padding: 6px 0px; 
    margin-bottom: 4px;
    width: 40%; 
    display: flex; 
    flex-direction: column;
    align-items: flex-start; 
    background-color:rgba(0,0,0,0);
    border-radius: 11px;
    font-size: 11px;
    font-weight: 500;
    color: #ffffff;
  `;

  // Create reconnect button (now placed at the top)
  const reconnectButton = document.createElement("button");
  reconnectButton.id = "banner-reconnect-btn";
  reconnectButton.textContent = "Reconnect";
  reconnectButton.style.cssText = `
    background-color: #333333;
    color: #ffffff;
    border: 1px solid #444444;
    border-radius: 3px;
    padding: 2px 8px;
    font-size: 10px;
    cursor: pointer;
    margin-bottom: 6px;
    align-self: flex-start;
    display: none;
    transition: background-color 0.2s;
  `;
  reconnectButton.addEventListener("mouseover", () => {
    reconnectButton.style.backgroundColor = "#444444";
  });
  reconnectButton.addEventListener("mouseout", () => {
    reconnectButton.style.backgroundColor = "#333333";
  });
  reconnectButton.addEventListener("click", () => {
    // Hide the button while reconnecting
    reconnectButton.style.display = "none";
    reconnectButton.textContent = "Reconnecting...";

    // Update UI to show searching state
    updateConnectionBanner(false, null);

    // Try to discover server
    discoverServer(false);
  });

  // Create a container for the status indicator and text
  const statusContainer = document.createElement("div");
  statusContainer.style.cssText = `
    display: flex;
    align-items: center;
    width: 100%;
  `;

  // Create status indicator
  const indicator = document.createElement("div");
  indicator.id = "banner-status-indicator";
  indicator.style.cssText = `
    width: 6px; 
    height: 6px; 
    position: relative;
    top: 1px;
    border-radius: 50%; 
    background-color: #ccc; 
    margin-right: 8px; 
    flex-shrink: 0;
    transition: background-color 0.3s ease;
  `;

  // Create status text
  const statusText = document.createElement("div");
  statusText.id = "banner-status-text";
  statusText.textContent = "Searching for server...";
  statusText.style.cssText =
    "flex-grow: 1; font-weight: 400; letter-spacing: 0.1px; font-size: 11px;";

  // Add elements to statusContainer
  statusContainer.appendChild(indicator);
  statusContainer.appendChild(statusText);

  // Add elements to banner - reconnect button first, then status container
  banner.appendChild(reconnectButton);
  banner.appendChild(statusContainer);

  // Add banner to the beginning of the document body
  // This ensures it's the very first element
  document.body.prepend(banner);

  // Set initial state
  updateConnectionBanner(false, null);
}

// Update the connection banner with current status
function updateConnectionBanner(connected, serverInfo) {
  const indicator = document.getElementById("banner-status-indicator");
  const statusText = document.getElementById("banner-status-text");
  const banner = document.getElementById("connection-banner");
  const reconnectButton = document.getElementById("banner-reconnect-btn");

  if (!indicator || !statusText || !banner || !reconnectButton) return;

  if (connected && serverInfo) {
    // Connected state with server info
    indicator.style.backgroundColor = "#4CAF50"; // Green indicator
    statusText.style.color = "#ffffff"; // White text for contrast on black
    statusText.textContent = `Connected to ${serverInfo.name} v${serverInfo.version} at ${settings.serverHost}:${settings.serverPort}`;

    // Hide reconnect button when connected
    reconnectButton.style.display = "none";
  } else if (connected) {
    // Connected without server info
    indicator.style.backgroundColor = "#4CAF50"; // Green indicator
    statusText.style.color = "#ffffff"; // White text for contrast on black
    statusText.textContent = `Connected to server at ${settings.serverHost}:${settings.serverPort}`;

    // Hide reconnect button when connected
    reconnectButton.style.display = "none";
  } else {
    // Disconnected state
    indicator.style.backgroundColor = "#F44336"; // Red indicator
    statusText.style.color = "#ffffff"; // White text for contrast on black

    // Only show "searching" message if discovery is in progress
    if (isDiscoveryInProgress) {
      statusText.textContent = "Not connected to server. Searching...";
      // Hide reconnect button while actively searching
      reconnectButton.style.display = "none";
    } else {
      statusText.textContent = "Not connected to server.";
      // Show reconnect button above status message when disconnected and not searching
      reconnectButton.style.display = "block";
      reconnectButton.textContent = "Reconnect";
    }
  }
}

// Initialize UI elements
const logLimitInput = document.getElementById("log-limit");
const queryLimitInput = document.getElementById("query-limit");
const stringSizeLimitInput = document.getElementById("string-size-limit");
const showRequestHeadersCheckbox = document.getElementById(
  "show-request-headers"
);
const showResponseHeadersCheckbox = document.getElementById(
  "show-response-headers"
);
const maxLogSizeInput = document.getElementById("max-log-size");
const screenshotPathInput = document.getElementById("screenshot-path");
const captureScreenshotButton = document.getElementById("capture-screenshot");

// Server connection UI elements
const serverHostInput = document.getElementById("server-host");
const serverPortInput = document.getElementById("server-port");
const discoverServerButton = document.getElementById("discover-server");
const testConnectionButton = document.getElementById("test-connection");
const connectionStatusDiv = document.getElementById("connection-status");
const statusIcon = document.getElementById("status-icon");
const statusText = document.getElementById("status-text");

// Initialize collapsible advanced settings
const advancedSettingsHeader = document.getElementById(
  "advanced-settings-header"
);
const advancedSettingsContent = document.getElementById(
  "advanced-settings-content"
);
const chevronIcon = advancedSettingsHeader.querySelector(".chevron");

advancedSettingsHeader.addEventListener("click", () => {
  advancedSettingsContent.classList.toggle("visible");
  chevronIcon.classList.toggle("open");
});

// Get all inputs by ID
const allowAutoPasteCheckbox = document.getElementById("allow-auto-paste");

// Update UI from settings
function updateUIFromSettings() {
  logLimitInput.value = settings.logLimit;
  queryLimitInput.value = settings.queryLimit;
  stringSizeLimitInput.value = settings.stringSizeLimit;
  showRequestHeadersCheckbox.checked = settings.showRequestHeaders;
  showResponseHeadersCheckbox.checked = settings.showResponseHeaders;
  maxLogSizeInput.value = settings.maxLogSize;
  screenshotPathInput.value = settings.screenshotPath;
  serverHostInput.value = settings.serverHost;
  serverPortInput.value = settings.serverPort;
  allowAutoPasteCheckbox.checked = settings.allowAutoPaste;
}

// Save settings
function saveSettings() {
  chrome.storage.local.set({ browserConnectorSettings: settings });
  // Notify devtools.js about settings change
  chrome.runtime.sendMessage({
    type: "SETTINGS_UPDATED",
    settings,
  });
}

// Add event listeners for all inputs
logLimitInput.addEventListener("change", (e) => {
  settings.logLimit = parseInt(e.target.value, 10);
  saveSettings();
});

queryLimitInput.addEventListener("change", (e) => {
  settings.queryLimit = parseInt(e.target.value, 10);
  saveSettings();
});

stringSizeLimitInput.addEventListener("change", (e) => {
  settings.stringSizeLimit = parseInt(e.target.value, 10);
  saveSettings();
});

showRequestHeadersCheckbox.addEventListener("change", (e) => {
  settings.showRequestHeaders = e.target.checked;
  saveSettings();
});

showResponseHeadersCheckbox.addEventListener("change", (e) => {
  settings.showResponseHeaders = e.target.checked;
  saveSettings();
});

maxLogSizeInput.addEventListener("change", (e) => {
  settings.maxLogSize = parseInt(e.target.value, 10);
  saveSettings();
});

screenshotPathInput.addEventListener("change", (e) => {
  settings.screenshotPath = e.target.value;
  saveSettings();
});

// Add event listeners for server settings
serverHostInput.addEventListener("change", (e) => {
  settings.serverHost = e.target.value;
  saveSettings();
  // Automatically test connection when host is changed
  testConnection(settings.serverHost, settings.serverPort);
});

serverPortInput.addEventListener("change", (e) => {
  settings.serverPort = parseInt(e.target.value, 10);
  saveSettings();
  // Automatically test connection when port is changed
  testConnection(settings.serverHost, settings.serverPort);
});

// Add event listener for auto-paste checkbox
allowAutoPasteCheckbox.addEventListener("change", (e) => {
  settings.allowAutoPaste = e.target.checked;
  saveSettings();
});

// Function to cancel any ongoing discovery operations
function cancelOngoingDiscovery() {
  if (isDiscoveryInProgress) {
    console.log("Cancelling ongoing discovery operation");

    // Abort any fetch requests in progress
    if (discoveryController) {
      try {
        discoveryController.abort();
      } catch (error) {
        console.error("Error aborting discovery controller:", error);
      }
      discoveryController = null;
    }

    // Reset the discovery status
    isDiscoveryInProgress = false;

    // Update UI to indicate the operation was cancelled
    if (
      statusText &&
      connectionStatusDiv &&
      connectionStatusDiv.style.display === "block"
    ) {
      statusText.textContent = "Server discovery operation cancelled";
    }

    // Clear any pending network timeouts that might be part of the discovery process
    clearTimeout(reconnectAttemptTimeout);
    reconnectAttemptTimeout = null;

    console.log("Discovery operation cancelled successfully");
  }
}

// Test server connection
testConnectionButton.addEventListener("click", async () => {
  // Cancel any ongoing discovery operations before testing
  cancelOngoingDiscovery();
  await testConnection(settings.serverHost, settings.serverPort);
});

// Function to test server connection
async function testConnection(host, port) {
  // Cancel any ongoing discovery operations
  cancelOngoingDiscovery();

  connectionStatusDiv.style.display = "block";
  statusIcon.className = "status-indicator";
  statusText.textContent = "Testing connection...";

  try {
    // Use the identity endpoint instead of .port for more reliable validation
    const response = await fetch(`http://${host}:${port}/.identity`, {
      signal: AbortSignal.timeout(5000), // 5 second timeout
    });

    if (response.ok) {
      const identity = await response.json();

      // Verify this is actually our server by checking the signature
      if (identity.signature !== "mcp-browser-connector-24x7") {
        statusIcon.className = "status-indicator status-disconnected";
        statusText.textContent = `Connection failed: Found a server at ${host}:${port} but it's not the Browser Tools server`;
        serverConnected = false;
        updateConnectionBanner(false, null);
        scheduleReconnectAttempt();
        return false;
      }

      statusIcon.className = "status-indicator status-connected";
      statusText.textContent = `Connected successfully to ${identity.name} v${identity.version} at ${host}:${port}`;
      serverConnected = true;
      updateConnectionBanner(true, identity);

      // Clear any scheduled reconnect attempts
      if (reconnectAttemptTimeout) {
        clearTimeout(reconnectAttemptTimeout);
        reconnectAttemptTimeout = null;
      }

      // Update settings if different port was discovered
      if (parseInt(identity.port, 10) !== port) {
        console.log(`Detected different port: ${identity.port}`);
        settings.serverPort = parseInt(identity.port, 10);
        serverPortInput.value = settings.serverPort;
        saveSettings();
      }

      return true;
    } else {
      statusIcon.className = "status-indicator status-disconnected";
      statusText.textContent = `Connection failed: Server returned ${response.status}`;
      serverConnected = false;

      // Make sure isDiscoveryInProgress is false so the reconnect button will show
      isDiscoveryInProgress = false;

      // Now update the connection banner to show the reconnect button
      updateConnectionBanner(false, null);
      scheduleReconnectAttempt();
      return false;
    }
  } catch (error) {
    statusIcon.className = "status-indicator status-disconnected";
    statusText.textContent = `Connection failed: ${error.message}`;
    serverConnected = false;

    // Make sure isDiscoveryInProgress is false so the reconnect button will show
    isDiscoveryInProgress = false;

    // Now update the connection banner to show the reconnect button
    updateConnectionBanner(false, null);
    scheduleReconnectAttempt();
    return false;
  }
}

// Schedule a reconnect attempt if server isn't found
function scheduleReconnectAttempt() {
  // Clear any existing reconnect timeout
  if (reconnectAttemptTimeout) {
    clearTimeout(reconnectAttemptTimeout);
  }

  // Schedule a reconnect attempt in 30 seconds
  reconnectAttemptTimeout = setTimeout(() => {
    console.log("Attempting to reconnect to server...");
    // Only show minimal UI during auto-reconnect
    discoverServer(true);
  }, 30000); // 30 seconds
}

// Helper function to try connecting to a server
async function tryServerConnection(host, port) {
  try {
    // Check if the discovery process was cancelled
    if (!isDiscoveryInProgress) {
      return false;
    }

    // Create a local timeout that won't abort the entire discovery process
    const controller = new AbortController();
    const timeoutId = setTimeout(() => {
      controller.abort();
    }, 500); // 500ms timeout for each connection attempt

    try {
      // Use identity endpoint for validation
      const response = await fetch(`http://${host}:${port}/.identity`, {
        // Use a local controller for this specific request timeout
        // but also respect the global discovery cancellation
        signal: discoveryController
          ? AbortSignal.any([controller.signal, discoveryController.signal])
          : controller.signal,
      });

      clearTimeout(timeoutId);

      // Check again if discovery was cancelled during the fetch
      if (!isDiscoveryInProgress) {
        return false;
      }

      if (response.ok) {
        const identity = await response.json();

        // Verify this is actually our server by checking the signature
        if (identity.signature !== "mcp-browser-connector-24x7") {
          console.log(
            `Found a server at ${host}:${port} but it's not the Browser Tools server`
          );
          return false;
        }

        console.log(`Successfully found server at ${host}:${port}`);

        // Update settings with discovered server
        settings.serverHost = host;
        settings.serverPort = parseInt(identity.port, 10);
        serverHostInput.value = settings.serverHost;
        serverPortInput.value = settings.serverPort;
        saveSettings();

        statusIcon.className = "status-indicator status-connected";
        statusText.textContent = `Discovered ${identity.name} v${identity.version} at ${host}:${identity.port}`;

        // Update connection banner with server info
        updateConnectionBanner(true, identity);

        // Update connection status
        serverConnected = true;

        // Clear any scheduled reconnect attempts
        if (reconnectAttemptTimeout) {
          clearTimeout(reconnectAttemptTimeout);
          reconnectAttemptTimeout = null;
        }

        // End the discovery process
        isDiscoveryInProgress = false;

        // Successfully found server
        return true;
      }

      return false;
    } finally {
      clearTimeout(timeoutId);
    }
  } catch (error) {
    // Ignore connection errors during discovery
    // But check if it was an abort (cancellation)
    if (error.name === "AbortError") {
      // Check if this was due to the global discovery cancellation
      if (discoveryController && discoveryController.signal.aborted) {
        console.log("Connection attempt aborted by global cancellation");
        return "aborted";
      }
      // Otherwise it was just a timeout for this specific connection attempt
      return false;
    }
    console.log(`Connection error for ${host}:${port}: ${error.message}`);
    return false;
  }
}

// Server discovery function (extracted to be reusable)
async function discoverServer(quietMode = false) {
  // Cancel any ongoing discovery operations before starting a new one
  cancelOngoingDiscovery();

  // Create a new AbortController for this discovery process
  discoveryController = new AbortController();
  isDiscoveryInProgress = true;

  // In quiet mode, we don't show the connection status until we either succeed or fail completely
  if (!quietMode) {
    connectionStatusDiv.style.display = "block";
    statusIcon.className = "status-indicator";
    statusText.textContent = "Discovering server...";
  }

  // Always update the connection banner
  updateConnectionBanner(false, null);

  try {
    console.log("Starting server discovery process");

    // Add an early cancellation listener that will respond to page navigation/refresh
    discoveryController.signal.addEventListener("abort", () => {
      console.log("Discovery aborted via AbortController signal");
      isDiscoveryInProgress = false;
    });

    // Common IPs to try (in order of likelihood)
    const hosts = ["localhost", "127.0.0.1"];

    // Add the current configured host if it's not already in the list
    if (
      !hosts.includes(settings.serverHost) &&
      settings.serverHost !== "0.0.0.0"
    ) {
      hosts.unshift(settings.serverHost); // Put at the beginning for priority
    }

    // Add common local network IPs
    const commonLocalIps = ["192.168.0.", "192.168.1.", "10.0.0.", "10.0.1."];
    for (const prefix of commonLocalIps) {
      for (let i = 1; i <= 5; i++) {
        // Reduced from 10 to 5 for efficiency
        hosts.push(`${prefix}${i}`);
      }
    }

    // Build port list in a smart order:
    // 1. Start with current configured port
    // 2. Add default port (3025)
    // 3. Add sequential ports around the default (for fallback detection)
    const ports = [];

    // Current configured port gets highest priority
    const configuredPort = parseInt(settings.serverPort, 10);
    ports.push(configuredPort);

    // Add default port if it's not the same as configured
    if (configuredPort !== 3025) {
      ports.push(3025);
    }

    // Add sequential fallback ports (from default up to default+10)
    for (let p = 3026; p <= 3035; p++) {
      if (p !== configuredPort) {
        // Avoid duplicates
        ports.push(p);
      }
    }

    // Remove duplicates
    const uniquePorts = [...new Set(ports)];
    console.log("Will check ports:", uniquePorts);

    // Create a progress indicator
    let progress = 0;
    let totalChecked = 0;

    // Phase 1: Try the most likely combinations first (current host:port and localhost variants)
    console.log("Starting Phase 1: Quick check of high-priority hosts/ports");
    const priorityHosts = hosts.slice(0, 2); // First two hosts are highest priority
    for (const host of priorityHosts) {
      // Check if discovery was cancelled
      if (!isDiscoveryInProgress) {
        console.log("Discovery process was cancelled during Phase 1");
        return false;
      }

      // Try configured port first
      totalChecked++;
      if (!quietMode) {
        statusText.textContent = `Checking ${host}:${uniquePorts[0]}...`;
      }
      console.log(`Checking ${host}:${uniquePorts[0]}...`);
      const result = await tryServerConnection(host, uniquePorts[0]);

      // Check for cancellation or success
      if (result === "aborted" || !isDiscoveryInProgress) {
        console.log("Discovery process was cancelled");
        return false;
      } else if (result === true) {
        console.log("Server found in priority check");
        if (quietMode) {
          // In quiet mode, only show the connection banner but hide the status box
          connectionStatusDiv.style.display = "none";
        }
        return true; // Successfully found server
      }

      // Then try default port if different
      if (uniquePorts.length > 1) {
        // Check if discovery was cancelled
        if (!isDiscoveryInProgress) {
          console.log("Discovery process was cancelled");
          return false;
        }

        totalChecked++;
        if (!quietMode) {
          statusText.textContent = `Checking ${host}:${uniquePorts[1]}...`;
        }
        console.log(`Checking ${host}:${uniquePorts[1]}...`);
        const result = await tryServerConnection(host, uniquePorts[1]);

        // Check for cancellation or success
        if (result === "aborted" || !isDiscoveryInProgress) {
          console.log("Discovery process was cancelled");
          return false;
        } else if (result === true) {
          console.log("Server found in priority check");
          if (quietMode) {
            // In quiet mode, only show the connection banner but hide the status box
            connectionStatusDiv.style.display = "none";
          }
          return true; // Successfully found server
        }
      }
    }

    // If we're in quiet mode and the quick checks failed, show the status now
    // as we move into more intensive scanning
    if (quietMode) {
      connectionStatusDiv.style.display = "block";
      statusIcon.className = "status-indicator";
      statusText.textContent = "Searching for server...";
    }

    // Phase 2: Systematic scan of all combinations
    const totalAttempts = hosts.length * uniquePorts.length;
    console.log(
      `Starting Phase 2: Full scan (${totalAttempts} total combinations)`
    );
    statusText.textContent = `Quick check failed. Starting full scan (${totalChecked}/${totalAttempts})...`;

    // First, scan through all ports on localhost/127.0.0.1 to find fallback ports quickly
    const localHosts = ["localhost", "127.0.0.1"];
    for (const host of localHosts) {
      // Skip the first two ports on localhost if we already checked them in Phase 1
      const portsToCheck = uniquePorts.slice(
        localHosts.includes(host) && priorityHosts.includes(host) ? 2 : 0
      );

      for (const port of portsToCheck) {
        // Check if discovery was cancelled
        if (!isDiscoveryInProgress) {
          console.log("Discovery process was cancelled during local port scan");
          return false;
        }

        // Update progress
        progress++;
        totalChecked++;
        statusText.textContent = `Scanning local ports... (${totalChecked}/${totalAttempts}) - Trying ${host}:${port}`;
        console.log(`Checking ${host}:${port}...`);

        const result = await tryServerConnection(host, port);

        // Check for cancellation or success
        if (result === "aborted" || !isDiscoveryInProgress) {
          console.log("Discovery process was cancelled");
          return false;
        } else if (result === true) {
          console.log(`Server found at ${host}:${port}`);
          return true; // Successfully found server
        }
      }
    }

    // Then scan all the remaining host/port combinations
    for (const host of hosts) {
      // Skip hosts we already checked
      if (localHosts.includes(host)) {
        continue;
      }

      for (const port of uniquePorts) {
        // Check if discovery was cancelled
        if (!isDiscoveryInProgress) {
          console.log("Discovery process was cancelled during remote scan");
          return false;
        }

        // Update progress
        progress++;
        totalChecked++;
        statusText.textContent = `Scanning remote hosts... (${totalChecked}/${totalAttempts}) - Trying ${host}:${port}`;
        console.log(`Checking ${host}:${port}...`);

        const result = await tryServerConnection(host, port);

        // Check for cancellation or success
        if (result === "aborted" || !isDiscoveryInProgress) {
          console.log("Discovery process was cancelled");
          return false;
        } else if (result === true) {
          console.log(`Server found at ${host}:${port}`);
          return true; // Successfully found server
        }
      }
    }

    console.log(
      `Discovery process completed, checked ${totalChecked} combinations, no server found`
    );
    // If we get here, no server was found
    statusIcon.className = "status-indicator status-disconnected";
    statusText.textContent =
      "No server found. Please check server is running and try again.";

    serverConnected = false;

    // End the discovery process first before updating the banner
    isDiscoveryInProgress = false;

    // Update the connection banner to show the reconnect button
    updateConnectionBanner(false, null);

    // Schedule a reconnect attempt
    scheduleReconnectAttempt();

    return false;
  } catch (error) {
    console.error("Error during server discovery:", error);
    statusIcon.className = "status-indicator status-disconnected";
    statusText.textContent = `Error discovering server: ${error.message}`;

    serverConnected = false;

    // End the discovery process first before updating the banner
    isDiscoveryInProgress = false;

    // Update the connection banner to show the reconnect button
    updateConnectionBanner(false, null);

    // Schedule a reconnect attempt
    scheduleReconnectAttempt();

    return false;
  } finally {
    console.log("Discovery process finished");
    // Always clean up, even if there was an error
    if (discoveryController) {
      discoveryController = null;
    }
  }
}

// Bind discover server button to the extracted function
discoverServerButton.addEventListener("click", () => discoverServer(false));

// Screenshot capture functionality
captureScreenshotButton.addEventListener("click", () => {
  captureScreenshotButton.textContent = "Capturing...";

  // Send message to background script to capture screenshot
  chrome.runtime.sendMessage(
    {
      type: "CAPTURE_SCREENSHOT",
      tabId: chrome.devtools.inspectedWindow.tabId,
      screenshotPath: settings.screenshotPath,
    },
    (response) => {
      console.log("Screenshot capture response:", response);
      if (!response) {
        captureScreenshotButton.textContent = "Failed to capture!";
        console.error("Screenshot capture failed: No response received");
      } else if (!response.success) {
        captureScreenshotButton.textContent = "Failed to capture!";
        console.error("Screenshot capture failed:", response.error);
      } else {
        captureScreenshotButton.textContent = `Captured: ${response.title}`;
        console.log("Screenshot captured successfully:", response.path);
      }
      setTimeout(() => {
        captureScreenshotButton.textContent = "Capture Screenshot";
      }, 2000);
    }
  );
});

// Add wipe logs functionality
const wipeLogsButton = document.getElementById("wipe-logs");
wipeLogsButton.addEventListener("click", () => {
  const serverUrl = `http://${settings.serverHost}:${settings.serverPort}/wipelogs`;
  console.log(`Sending wipe request to ${serverUrl}`);

  fetch(serverUrl, {
    method: "POST",
    headers: { "Content-Type": "application/json" },
  })
    .then((response) => response.json())
    .then((result) => {
      console.log("Logs wiped successfully:", result.message);
      wipeLogsButton.textContent = "Logs Wiped!";
      setTimeout(() => {
        wipeLogsButton.textContent = "Wipe All Logs";
      }, 2000);
    })
    .catch((error) => {
      console.error("Failed to wipe logs:", error);
      wipeLogsButton.textContent = "Failed to Wipe Logs";
      setTimeout(() => {
        wipeLogsButton.textContent = "Wipe All Logs";
      }, 2000);
    });
});

</file>
<file path="BrowserTools-1.2.0-extension/chrome-extension/panel.jsZone.Identifier">

</file>
<file path="docs/workflow-design/ai-tools-integration-blueprint.md">
# AI Tools Workflow Integration Blueprint

## Overview
A comprehensive workflow integrating Figma (design), Stitch (data), Replit (cloud development), and Google AI Studio (AI models) for seamless design-to-deployment pipelines.

## Tool Capabilities Summary

### 🎨 Figma
**Design-to-Development Bridge**
- REST API for design asset extraction
- Code Connect for design-to-code generation
- OAuth authentication and webhooks
- Dev Mode for developer handoff
- Plugin ecosystem for workflow automation

**Key Integration Points:**
- Design tokens → CSS variables
- Component specifications → React components
- Asset exports → optimized web assets
- Design system sync with development

### 📊 Stitch Data Integration
**ETL and Data Pipeline Automation**
- REST Import API for custom data ingestion
- Singer framework for 100+ source connectors
- Real-time data replication and transformation
- Automated error handling and monitoring

**Key Integration Points:**
- API data → data warehouse
- User analytics → insights dashboard
- Design metrics → performance tracking
- Cross-platform data synchronization

### ☁️ Replit (Cloud Development)
**Collaborative Development Environment**
- Cloud-based IDE with real-time collaboration
- Instant deployment and hosting
- Git integration and version control
- Template and boilerplate sharing

**Key Integration Points:**
- Figma designs → Replit projects
- AI-generated code → cloud deployment
- Collaborative development workflows
- Rapid prototyping and testing

### 🤖 Google AI Studio
**AI Model Integration and Development**
- Gemini API access for text and multimodal AI
- Code assistance and generation
- Fine-tuning capabilities through Colab
- Multi-framework support (web, mobile, cloud)

**Key Integration Points:**
- Design analysis → code generation
- Natural language → UI components
- Content generation → design assets
- Automated testing and optimization

## Proposed Workflow Patterns

### Pattern 1: Design-to-Code Pipeline
```
Figma Design → AI Analysis → Code Generation → Replit Deployment
     ↓             ↓              ↓              ↓
  Design API   Google AI     Generated Code   Live App
  Webhooks     Studio API    React/HTML       with URL
```

### Pattern 2: Data-Driven Design System
```
User Data → Stitch ETL → Analytics → AI Insights → Design Updates
    ↓          ↓          ↓           ↓              ↓
App Usage   Data Warehouse  Metrics  Recommendations  Figma API
Tracking    (BigQuery)     Dashboard   (Gemini)      Updates
```

### Pattern 3: AI-Powered Development
```
Natural Language → Google AI Studio → Code Generation → Replit → Figma Sync
       ↓                ↓                  ↓             ↓          ↓
   User Request     Gemini API        Component Code   Deployment  Design Update
   "Build login"    Code Analysis     React/CSS        Live URL    Asset Sync
```

## Implementation Roadmap

### Phase 1: Foundation Setup
- [ ] Configure all tool APIs and authentication
- [ ] Set up MCP servers for each platform
- [ ] Create basic data flow examples
- [ ] Document integration patterns

### Phase 2: Core Workflows
- [ ] Build Figma → Replit design handoff
- [ ] Implement Stitch data pipeline
- [ ] Create AI-powered code generation
- [ ] Establish feedback loops

### Phase 3: Advanced Automation
- [ ] Automated design-to-deployment pipeline
- [ ] AI-driven design system evolution
- [ ] Real-time collaboration workflows
- [ ] Performance optimization loops

### Phase 4: Production Integration
- [ ] Error handling and monitoring
- [ ] Security and access controls
- [ ] Documentation and training
- [ ] Community templates and examples

## Technical Architecture

### API Integration Layer
```
┌─────────────┐  ┌─────────────┐  ┌─────────────┐  ┌─────────────┐
│   Figma     │  │   Stitch    │  │   Replit    │  │ Google AI   │
│     API     │  │     API     │  │     API     │  │   Studio    │
└─────────────┘  └─────────────┘  └─────────────┘  └─────────────┘
       │                │                │                │
       └────────────────┼────────────────┼────────────────┘
                        │                │
              ┌─────────────────────────────────┐
              │     Workflow Orchestrator       │
              │       (Claude MCP)              │
              └─────────────────────────────────┘
                        │
              ┌─────────────────────────────────┐
              │    Shared Data Store            │
              │  (Configs, Assets, Metadata)    │
              └─────────────────────────────────┘
```

### Data Flow Architecture
```
Design Assets ──→ Asset Optimization ──→ Code Generation ──→ Deployment
      ↑                    ↑                    ↑               ↓
User Analytics ←── Data Pipeline ←─── Performance Metrics ←── Live App
      ↓                    ↓                    
AI Insights ──→ Design Recommendations ──→ Automated Updates
```

## Success Metrics

### Development Velocity
- Design-to-code time reduction
- Deployment frequency increase
- Bug reduction through automation
- Developer satisfaction scores

### Design System Evolution
- Component reuse rates
- Design consistency metrics
- Update propagation speed
- Cross-platform synchronization

### Data-Driven Decisions
- User behavior insights integration
- Performance optimization automation
- A/B testing workflow efficiency
- Real-time feedback implementation

## Next Steps

1. **Prototype Core Integrations** - Build minimal viable workflows
2. **Document API Patterns** - Create reusable integration templates
3. **Build Example Projects** - Demonstrate end-to-end workflows
4. **Community Validation** - Test with real development teams
5. **Scale and Optimize** - Enhance performance and reliability

---
*This blueprint serves as the foundation for creating a seamless AI-powered design and development workflow that bridges the gap between design, data, development, and deployment.*
</file>
<file path="docs/api-keys-guide.md">
# Complete API Keys Setup Guide

## 🔑 Required API Keys (9 Total)

Based on your `.mcp.json` configuration, here are all the API keys you need and exactly how to get them:

---

## 1. 🎨 **FIGMA_TOKEN** (High Priority)
**Service**: Figma Design Tool Integration  
**Used for**: Design-to-code workflows, accessing Figma files and components

### How to Get:
1. **Go to**: [https://www.figma.com/developers/api](https://www.figma.com/developers/api)
2. **Sign in** to your Figma account
3. **Scroll down** to "Personal Access Tokens" section
4. **Click "Create new token"**
5. **Give it a name** like "Claude MCP Integration"
6. **Set scope** to "File content" (read access to your designs)
7. **Copy the token** immediately (won't be shown again)

### Configuration:
```json
"FIGMA_TOKEN": "figd_your_actual_token_here"
```

---

## 2. 💻 **REPLIT_TOKEN** (High Priority)
**Service**: Replit Cloud Development Environment  
**Used for**: Cloud coding, deployment, collaboration

### How to Get:
1. **Go to**: [https://replit.com](https://replit.com)
2. **Sign in** to your account
3. **Click your profile** (top right) → **Account**
4. **Go to** "API" section in the sidebar
5. **Click "Generate API Token"**
6. **Copy the token**

### Configuration:
```json
"REPLIT_TOKEN": "your_replit_api_token_here"
```

---

## 3. 🔍 **BRAVE_API_KEY** (High Priority)
**Service**: Brave Search API  
**Used for**: Web search capabilities, research automation

### How to Get:
1. **Go to**: [https://api.search.brave.com](https://api.search.brave.com)
2. **Click "Get Started"** or "Sign Up"
3. **Create account** with email
4. **Verify email** address
5. **Go to Dashboard** → **API Keys**
6. **Click "Create New Key"**
7. **Name it** "Claude MCP Integration"
8. **Copy the API key**

### Pricing:
- **Free tier**: 2,000 queries/month
- **Paid plans**: Starting at $3/month for 20K queries

### Configuration:
```json
"BRAVE_API_KEY": "BSA_your_brave_api_key_here"
```

---

## 4. 📊 **AIRTABLE_API_KEY** (Medium Priority)
**Service**: Airtable Database Platform  
**Used for**: Spreadsheet database operations, data management

### How to Get:
1. **Go to**: [https://airtable.com/developers/web/api/introduction](https://airtable.com/developers/web/api/introduction)
2. **Sign in** to your Airtable account
3. **Go to**: [https://airtable.com/create/tokens](https://airtable.com/create/tokens)
4. **Click "Create token"**
5. **Give it a name** like "Claude MCP"
6. **Set scopes**: `data.records:read`, `data.records:write`, `schema.bases:read`
7. **Select workspaces** you want to access
8. **Create and copy token**

### Configuration:
```json
"AIRTABLE_API_KEY": "pat_your_airtable_token_here"
```

---

## 5. 🎯 **NOTION_API_KEY** (High Priority)
**Service**: Notion Workspace Integration  
**Used for**: Knowledge management, documentation, project planning

### How to Get:
1. **Go to**: [https://www.notion.so/my-integrations](https://www.notion.so/my-integrations)
2. **Sign in** to your Notion account
3. **Click "New integration"**
4. **Name**: "Claude MCP Integration"
5. **Select workspace** to integrate with
6. **Submit** the form
7. **Copy the "Internal Integration Token"**
8. **Share relevant pages** with your integration:
   - Go to any Notion page you want to access
   - Click "Share" → "Invite" 
   - Search for your integration name and add it

### Configuration:
```json
"NOTION_API_KEY": "secret_your_notion_integration_token_here"
```

---

## 6. 🔎 **TAVILY_API_KEY** (Medium Priority)
**Service**: Advanced Web Search & Crawling  
**Used for**: Research automation, web data extraction

### How to Get:
1. **Go to**: [https://tavily.com](https://tavily.com)
2. **Sign up** for an account
3. **Verify email** address
4. **Go to Dashboard** → **API Keys**
5. **Click "Generate API Key"**
6. **Copy the key**

### Pricing:
- **Free tier**: 1,000 requests/month
- **Pro plans**: Starting at $50/month

### Configuration:
```json
"TAVILY_API_KEY": "tvly-your_tavily_api_key_here"
```

---

## 7. 📧 **GMAIL_API_KEY** (Medium Priority)
**Service**: Gmail Email Integration  
**Used for**: Email automation, notifications, outreach

### How to Get (OAuth2 - More Complex):
1. **Go to**: [https://console.cloud.google.com](https://console.cloud.google.com)
2. **Create new project** or select existing
3. **Enable Gmail API**:
   - Go to "APIs & Services" → "Library"
   - Search "Gmail API" → Enable
4. **Create credentials**:
   - Go to "APIs & Services" → "Credentials"
   - Click "Create Credentials" → "OAuth client ID"
   - Application type: "Desktop application"
   - Name: "Claude MCP Gmail"
5. **Download JSON** credentials file
6. **Set up OAuth consent screen** (if required)

### Alternative (App Password - Simpler):
1. **Enable 2FA** on your Google account
2. **Go to**: [https://myaccount.google.com/apppasswords](https://myaccount.google.com/apppasswords)
3. **Generate app password** for "Mail"
4. **Use email + app password** for basic auth

### Configuration:
```json
"GMAIL_API_KEY": "your_gmail_oauth_token_or_app_password"
```

---

## 8. 🧪 **POSTMAN_API_KEY** (Low Priority)
**Service**: Postman API Testing Platform  
**Used for**: API testing, documentation, workflow automation

### How to Get:
1. **Go to**: [https://postman.com](https://postman.com)
2. **Sign in** to your account
3. **Click your avatar** (top right) → **Settings**
4. **Go to "API keys" tab**
5. **Click "Generate API Key"**
6. **Name**: "Claude MCP Integration"
7. **Copy the key**

### Configuration:
```json
"POSTMAN_API_KEY": "PMAK-your_postman_api_key_here"
```

---

## 9. 🎨 **EVERART_API_KEY** (Low Priority)
**Service**: AI Art Generation Platform  
**Used for**: AI image generation, creative workflows

### How to Get:
1. **Go to**: [https://everart.ai](https://everart.ai)
2. **Sign up** for an account
3. **Go to Dashboard** → **API**
4. **Generate API key**
5. **Copy the key**

### Note**: This service may have limited availability or pricing

### Configuration:
```json
"EVERART_API_KEY": "your_everart_api_key_here"
```

---

## 🔧 Implementation Priority

### **Immediate Setup (Start Here)**:
1. **Figma Token** - Essential for design-to-code workflow
2. **Replit Token** - Core cloud development environment
3. **Brave Search** - Web research capabilities
4. **Notion API** - Knowledge management

### **Secondary Setup**:
5. **Airtable** - Database operations
6. **Tavily** - Advanced search (if Brave isn't sufficient)

### **Optional Setup**:
7. **Gmail API** - Email automation (complex setup)
8. **Postman** - API testing (if not using other tools)
9. **EverArt** - AI art generation (specialty use)

---

## ✅ **Already Configured**

### **EXA_API_KEY** ✅
Already configured in your setup:
```json
"EXA_API_KEY": "1f8994cc-0dcf-4899-9588-1665b18c0b91"
```

---

## 🔐 Security Best Practices

1. **Never commit API keys** to version control
2. **Use environment variables** for production
3. **Rotate keys regularly** (quarterly)
4. **Set up usage alerts** where available
5. **Use minimum required permissions** for each key
6. **Store keys securely** (password manager)

---

## 🚀 Quick Start Commands

After obtaining keys, update your configuration:

```bash
# Navigate to project
cd /home/ender/.claude/projects/ai-tools-workflow-integration

# Edit the .mcp.json file
nano .mcp.json

# Replace all "your_*_here" placeholders with actual keys
# Test the configuration
claude mcp list
```

---

## 💡 Free Tier Limitations

Most services offer generous free tiers:
- **Brave Search**: 2,000 queries/month
- **Tavily**: 1,000 requests/month  
- **Figma**: Free for personal use
- **Notion**: Free for personal use
- **Airtable**: 1,200 records per base
- **Replit**: Free tier available

Start with free tiers and upgrade as needed based on usage patterns.
</file>
<file path="docs/installation-summary.md">
# MCP Servers Installation Summary

## ✅ Successfully Installed Locally

### Confirmed Working MCP Servers (10 total)
These packages are now installed globally via npm and ready to use:

1. **@browsermcp/mcp@0.1.3** - Browser automation and web scraping
2. **@kimtaeyoon83/mcp-server-youtube-transcript@0.1.1** - YouTube transcript extraction
3. **@langchain/mcp-adapters@0.4.5** - LangChain integration for AI workflows
4. **@notionhq/notion-mcp-server@1.8.1** - Official Notion API integration
5. **@playwright/mcp@0.0.26** - Playwright browser automation tools
6. **dart-mcp-server@0.1.13** - Dart language support (previously installed)
7. **exa-mcp-server@0.3.10** - Web search capabilities with API key
8. **figma-mcp@0.1.4** - Figma design tool integration
9. **mcp-framework@0.2.13** - Framework for building MCP servers
10. **tavily-mcp@0.2.0** - Advanced web search and crawling

### Official ModelContextProtocol Servers (4 total)
These are the core servers from the official Anthropic team:

1. **@modelcontextprotocol/server-postgres** - PostgreSQL database integration
2. **@modelcontextprotocol/server-brave-search** - Brave search API integration
3. **@modelcontextprotocol/server-sequential-thinking** - Enhanced reasoning
4. **@modelcontextprotocol/server-github** - GitHub repository management

### Enhanced Utility Servers (2 total)
1. **@wonderwhy-er/desktop-commander@latest** - Advanced system operations
2. **puppeteer-mcp-server** - Alternative browser automation (conflict resolved)

## 📋 Updated .mcp.json Configuration

The local `.mcp.json` file now contains **39 MCP servers** total, including:

### ✅ **Working Servers** (confirmed installed)
- All the servers listed above
- Updated references to use correct package names
- Added new servers: playwright, notion, tavily, langchain

### ⚠️ **Placeholder Servers** (package names may not exist)
These are included for when the actual packages become available:
- stitch, replit, mysql, fastapi, email, openapi, selenium, wordpress, react, nodejs, postman, typescript, tailwind, vite, drizzle

## 🔍 Package Availability Issues Found

During installation, several expected packages were not found in npm registry:
- `@modelcontextprotocol/server-fetch` - Does not exist
- `@modelcontextprotocol/server-sqlite` - Does not exist  
- `@prtm/obsidian-mcp` - Does not exist
- `@redis/mcp-redis` - Does not exist
- Many framework-specific servers (React, TypeScript, etc.) - May not exist yet

## 🚀 Ready to Use

### Immediate Capabilities
With the installed servers, you now have access to:

1. **Design Workflow**: Figma integration for design-to-code
2. **Browser Automation**: Multiple options (BrowserMCP, Playwright, Puppeteer)
3. **Database Operations**: PostgreSQL integration
4. **Knowledge Management**: Notion integration
5. **Web Research**: Exa, Tavily, and Brave Search
6. **AI Workflows**: LangChain adapters for advanced AI integration
7. **Version Control**: GitHub operations
8. **Content Creation**: YouTube transcript extraction
9. **System Operations**: Desktop Commander for file/system tasks

### API Keys Needed
To fully activate these servers, obtain API keys for:
- **Figma** - Design tool access
- **Notion** - Workspace integration  
- **Tavily** - Advanced web search
- **Brave Search** - Search API access
- **Exa** - Already configured with your key
- **GitHub** - Repository operations (may use existing tokens)

## 🔧 Next Steps

1. **Test Installation**: Run `claude mcp list` to verify connections
2. **Configure API Keys**: Update placeholder values in `.mcp.json`
3. **Start Development**: Begin using the integrated workflow with Figma, Stitch, Replit, and Google AI Studio
4. **Monitor for New Packages**: Many framework-specific servers may become available over time

## 💡 Development Workflow Enhanced

This installation provides comprehensive tooling for your AI tools workflow integration project, covering:
- **Design → Code**: Figma to React components
- **Database Operations**: Full PostgreSQL support
- **Web Automation**: Multiple browser automation options
- **Knowledge Management**: Notion for documentation
- **Research & Search**: Multiple search engines and crawling tools
- **AI Integration**: LangChain for advanced AI workflows
- **System Integration**: Desktop operations and file management

The setup is now ready for seamless integration between Figma, Stitch, Replit, and Google AI Studio!
</file>
<file path="docs/mcp-setup-summary.md">
# MCP Server Setup Summary

## Completed Setup

### Global MCP Servers (Available in All Projects)
✅ Successfully configured **9 global MCP servers** in `~/.claude.json`:

1. **desktop-commander** - File operations and system commands
2. **sequential-thinking** - Enhanced reasoning capabilities  
3. **browsermcp** - Browser automation and web scraping
4. **exa** - Web search with API key configured
5. **youtube-transcript** - Extract transcripts from YouTube videos
6. **puppeteer** - Advanced browser automation
7. **figma** - Design tool integration (token placeholder)
8. **stitch** - Data integration workflows (placeholder)
9. **replit** - Cloud development environment (token placeholder)

### Project-Level MCP Servers (.mcp.json)
✅ Created comprehensive `.mcp.json` with **24 MCP servers** for this project:

#### Core Development Stack
- **github** - Git repository management
- **filesystem** - File system operations
- **git** - Version control operations
- **memory** - Persistent context storage

#### Database & Data
- **sqlite** - Local database operations
- **postgres** - PostgreSQL database management
- **mysql** - MySQL database operations (for WordPress)
- **redis** - Caching and task queue operations
- **airtable** - Spreadsheet database integration

#### Web Development
- **react** - React framework support
- **nodejs** - Node.js development
- **typescript** - TypeScript language support
- **vite** - Build tool integration
- **tailwind** - CSS framework support
- **drizzle** - Modern ORM integration

#### API & Integration
- **fetch** - HTTP requests and API calls
- **openapi** - API documentation and testing
- **postman** - API testing and development

#### Automation & Testing
- **selenium** - Web scraping and automation
- **docker** - Container management
- **wordpress** - WordPress development (configured for localhost:8090)

#### Communication & Search
- **email** - Gmail integration (placeholder for API key)
- **brave-search** - Web search capabilities (placeholder for API key)
- **obsidian** - Note-taking and knowledge management

#### AI & Creative Tools
- **everart** - AI art generation (placeholder for API key)

## Analysis of Your Development Patterns

Based on your existing projects, I identified these key development areas:

### 🎯 **Primary Tech Stack**
- **Frontend**: React + TypeScript + TailwindCSS + Radix UI
- **Backend**: FastAPI (Python) + Express.js (Node.js) 
- **Databases**: PostgreSQL (Neon), MySQL, SQLite, Redis
- **Tools**: Drizzle ORM, Vite, Docker, Selenium, BeautifulSoup

### 🔧 **Project Types**
1. **Full-stack Web Apps** (WorkoutTrackr)
2. **Web Scraping & Automation** (JobBot)
3. **WordPress Development** (Docker WordPress)
4. **API Development** (FastAPI-based systems)
5. **Cloud Development** (Replit integration)

### 🛠️ **Development Workflow Needs**
- Database management (multiple types)
- Web automation and scraping
- API testing and documentation
- Email automation
- File system operations
- Version control integration

## Recommendations for Missing Tools

### High Priority Additions
1. **FastAPI MCP Server** - For Python API development
2. **Celery/Task Queue MCP** - For background job management
3. **Email/SMTP MCP** - For automated email workflows
4. **JSON/API Testing MCP** - For API development workflow
5. **Environment Management MCP** - For .env file management

### API Keys Needed
To fully utilize the configured servers, obtain these API keys:

- **Figma Token** - For design-to-code workflows
- **Replit Token** - For cloud development integration
- **Brave Search API** - For web research capabilities
- **Gmail API Key** - For email automation
- **Airtable API Key** - For database operations
- **Postman API Key** - For API testing
- **EverArt API Key** - For AI image generation

## Usage Instructions

1. **Global Access**: The 9 global servers are available in any Claude Code session
2. **Project Access**: When working in this directory, all 24 servers from `.mcp.json` will be available
3. **Token Configuration**: Update placeholder tokens in both global and project configs
4. **Testing**: Use `claude mcp list` to verify server connections

## Benefits for AI Tools Workflow Integration

This MCP setup provides comprehensive tooling for:
- **Design-to-Code**: Figma → React components
- **Database Operations**: Full CRUD across multiple database types  
- **Web Automation**: Browser control and scraping
- **API Development**: Testing, documentation, and integration
- **File Management**: Local and cloud file operations
- **Communication**: Email automation and notifications
- **Search & Research**: Web search and knowledge management

The configuration supports seamless integration between Figma, Stitch, Replit, and Google AI Studio within a unified development environment.
</file>
<file path="docs/replit-deployment-guide.md">
# WorkoutTrackr Replit Deployment Guide

## Project Overview
- **Source**: WorkoutTrackr fitness tracking application
- **Tech Stack**: React + TypeScript + Express + Neon PostgreSQL + Drizzle ORM
- **Deployment Target**: Replit Cloud Platform

## Deployment Steps

### 1. Project Import to Replit
- Upload/import project from local directory
- Verify all files and dependencies are present
- Check for Replit-specific configurations already present

### 2. Environment Configuration
**Required Environment Variables:**
- `DATABASE_URL`: Neon PostgreSQL connection string
- `NODE_ENV`: production

### 3. Dependency Installation
```bash
npm install
```

### 4. Database Setup
```bash
npm run db:push
```

### 5. Build Process
```bash
npm run build
```

### 6. Deployment Verification
```bash
npm start
```

## Expected Challenges
1. Database connection configuration
2. Environment variable setup
3. Build process optimization for Replit
4. Port configuration (already set to 5000)

## Success Criteria
- [ ] Project imports successfully
- [ ] Dependencies install without errors
- [ ] Database connects and migrations run
- [ ] Application builds successfully
- [ ] Application serves on Replit URL
- [ ] All core features functional

## Deployment Status
- **Started**: 2025-05-26
- **Status**: Ready for User Action
- **Analysis**: Complete - project is well-configured for Replit deployment
- **Next Step**: User must import project to Replit and configure DATABASE_URL

## Critical User Actions Required
1. **Import WorkoutTrackr to Replit**: Upload project from `/home/ender/.claude/projects/-mnt-c-Users-ender-Documents-Projects-Obsidian-Obsidian-Projects-Folder-WorkoutChronicle/WorkoutTrackr`
2. **Set DATABASE_URL**: Configure Neon PostgreSQL connection string in Replit secrets
3. **Execute deployment**: Follow deployment steps above
4. **Test functionality**: Verify all WorkoutTrackr features work correctly

## Assessment Results
- ✅ Project ready for deployment (well-configured .replit file)
- ✅ Build pipeline established  
- ⚠️ Requires user to configure DATABASE_URL environment variable
- 📋 Detailed deployment log available at `stress_test/workouttrackr_replit_deployment_log.md`
</file>
<file path="FitForge/attached_assets/Pasted-Design-a-comprehensive-fitness-ecosystem-called-FitForge-the-ultimate-AI-powered-fit-1748327532648.txt">
Design a comprehensive 
  fitness ecosystem called 
  "FitForge" - the ultimate 
  AI-powered fitness platform 
  that revolutionizes how 
  people train, compete, and 
  achieve their goals.

  CORE PLATFORM ARCHITECTURE:
  Design interfaces for
  multiple user types:
  athletes, personal trainers,
  coaches, gym owners,
  nutritionists, and fitness
  influencers. Create a unified
   but role-specific experience
   across mobile, tablet,
  desktop, and smartwatch
  interfaces.

  ADVANCED WORKOUT FEATURES:
  - Real-time AI form analysis
  with camera overlay and
  correction suggestions
  - Interactive 3D exercise
  demonstrations with
  anatomical highlighting
  - Adaptive workout generation
   based on equipment, time,
  goals, and biometric data
  - Live virtual training
  sessions with
  multi-participant video chat
  and shared workout spaces
  - Augmented reality gym
  navigation and equipment
  tutorials
  - Voice-activated workout
  logging with natural language
   processing
  - Gesture-controlled
  interfaces for hands-free
  operation during workouts

  SOPHISTICATED DATA 
  VISUALIZATION:
  - Advanced progress analytics
   with machine learning trend
  predictions
  - Interactive body
  composition heat maps and 3D
  body scans
  - Complex performance metrics
   dashboards with customizable
   widgets
  - Comparative analysis charts
   across multiple timeframes
  and metrics
  - Real-time biometric
  monitoring displays with
  threshold alerts
  - Social leaderboards with
  multi-dimensional ranking
  systems
  - Nutrition tracking with
  macro/micronutrient
  breakdowns and meal
  optimization

  AI-POWERED INTELLIGENCE:
  - Personalized workout
  recommendations using genetic
   data, performance history,
  and goals
  - Injury prevention
  algorithms with early warning
   systems
  - Sleep optimization
  suggestions based on training
   load and recovery metrics
  - Nutrition optimization with
   meal planning and supplement
   recommendations
  - Mental health integration
  with stress tracking and
  mindfulness suggestions
  - Plateau-breaking algorithms
   that automatically adjust
  training variables

  SOCIAL & COMPETITIVE 
  FEATURES:
  - Global challenges with
  real-time leaderboards and
  bracket tournaments
  - Virtual training groups
  with synchronized workouts
  across locations
  - Mentor-mentee matching
  system with integrated
  communication tools
  - Fitness streaming platform
  with live classes and
  on-demand content
  - Achievement system with
  NFT-based digital badges and
  rewards
  - Social media integration
  with automated progress
  sharing and celebration

  BUSINESS & PROFESSIONAL 
  TOOLS:
  - Trainer client management
  with session scheduling and
  progress tracking
  - Gym equipment maintenance
  tracking with IoT sensor
  integration
  - Revenue analytics for
  fitness professionals with
  automated billing
  - Custom program creation
  tools with drag-and-drop
  workout builders
  - Client communication suite
  with video calls, messaging,
  and file sharing
  - Marketplace for selling
  custom programs, meal plans,
  and consultations

  ADVANCED TECHNICAL FEATURES:
  - Offline-first architecture
  with seamless sync when
  connected
  - Multi-language support with
   cultural fitness adaptations
  - Accessibility features
  including voice navigation
  and visual indicators
  - Integration APIs for
  popular fitness devices,
  health platforms, and
  third-party apps
  - Advanced security with
  biometric authentication and
  encrypted health data
  - Real-time collaboration
  tools for team sports and
  group training

  DESIGN REQUIREMENTS:
  - Elegant, minimalist
  interface that doesn't
  compromise functionality
  - Motivational color
  psychology with energizing
  gradients and dynamic themes
  - Sophisticated
  micro-interactions and smooth
   animations
  - Responsive design that
  adapts beautifully across all
   screen sizes
  - Dark and light themes with
  automatic switching based on
  environment
  - Consistent design system
  with reusable components and
  clear hierarchy
  - Performance-optimized with
  lazy loading and progressive
  enhancement

  CUTTING-EDGE FEATURES:
  - Integration with smart gym
  equipment for automatic
  workout logging
  - Environmental fitness
  tracking (air quality,
  altitude, weather
  optimization)
  - Habit formation psychology
  with behavioral nudges and
  streak tracking
  - Advanced recovery
  optimization with sleep,
  stress, and HRV integration
  - Supplement timing
  optimization based on workout
   schedule and goals
  - Injury rehabilitation
  programs with medical
  professional oversight

  Create interfaces that are
  not just functional but
  absolutely gorgeous - make
  users feel empowered,
  motivated, and excited every
  time they open the app. This
  should be the Tesla of
  fitness apps: sophisticated,
  intuitive, and breathtakingly
   beautiful.
</file>
<file path="FitForge/client/src/components/ui/accordion.tsx">
import * as React from "react"
import * as AccordionPrimitive from "@radix-ui/react-accordion"
import { ChevronDown } from "lucide-react"

import { cn } from "@/lib/utils"

const Accordion = AccordionPrimitive.Root

const AccordionItem = React.forwardRef<
  React.ElementRef<typeof AccordionPrimitive.Item>,
  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>
>(({ className, ...props }, ref) => (
  <AccordionPrimitive.Item
    ref={ref}
    className={cn("border-b", className)}
    {...props}
  />
))
AccordionItem.displayName = "AccordionItem"

const AccordionTrigger = React.forwardRef<
  React.ElementRef<typeof AccordionPrimitive.Trigger>,
  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>
>(({ className, children, ...props }, ref) => (
  <AccordionPrimitive.Header className="flex">
    <AccordionPrimitive.Trigger
      ref={ref}
      className={cn(
        "flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180",
        className
      )}
      {...props}
    >
      {children}
      <ChevronDown className="h-4 w-4 shrink-0 transition-transform duration-200" />
    </AccordionPrimitive.Trigger>
  </AccordionPrimitive.Header>
))
AccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName

const AccordionContent = React.forwardRef<
  React.ElementRef<typeof AccordionPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>
>(({ className, children, ...props }, ref) => (
  <AccordionPrimitive.Content
    ref={ref}
    className="overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down"
    {...props}
  >
    <div className={cn("pb-4 pt-0", className)}>{children}</div>
  </AccordionPrimitive.Content>
))

AccordionContent.displayName = AccordionPrimitive.Content.displayName

export { Accordion, AccordionItem, AccordionTrigger, AccordionContent }

</file>
<file path="FitForge/client/src/components/ui/alert-dialog.tsx">
import * as React from "react"
import * as AlertDialogPrimitive from "@radix-ui/react-alert-dialog"

import { cn } from "@/lib/utils"
import { buttonVariants } from "@/components/ui/button"

const AlertDialog = AlertDialogPrimitive.Root

const AlertDialogTrigger = AlertDialogPrimitive.Trigger

const AlertDialogPortal = AlertDialogPrimitive.Portal

const AlertDialogOverlay = React.forwardRef<
  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,
  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>
>(({ className, ...props }, ref) => (
  <AlertDialogPrimitive.Overlay
    className={cn(
      "fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",
      className
    )}
    {...props}
    ref={ref}
  />
))
AlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName

const AlertDialogContent = React.forwardRef<
  React.ElementRef<typeof AlertDialogPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>
>(({ className, ...props }, ref) => (
  <AlertDialogPortal>
    <AlertDialogOverlay />
    <AlertDialogPrimitive.Content
      ref={ref}
      className={cn(
        "fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg",
        className
      )}
      {...props}
    />
  </AlertDialogPortal>
))
AlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName

const AlertDialogHeader = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) => (
  <div
    className={cn(
      "flex flex-col space-y-2 text-center sm:text-left",
      className
    )}
    {...props}
  />
)
AlertDialogHeader.displayName = "AlertDialogHeader"

const AlertDialogFooter = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) => (
  <div
    className={cn(
      "flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2",
      className
    )}
    {...props}
  />
)
AlertDialogFooter.displayName = "AlertDialogFooter"

const AlertDialogTitle = React.forwardRef<
  React.ElementRef<typeof AlertDialogPrimitive.Title>,
  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>
>(({ className, ...props }, ref) => (
  <AlertDialogPrimitive.Title
    ref={ref}
    className={cn("text-lg font-semibold", className)}
    {...props}
  />
))
AlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName

const AlertDialogDescription = React.forwardRef<
  React.ElementRef<typeof AlertDialogPrimitive.Description>,
  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>
>(({ className, ...props }, ref) => (
  <AlertDialogPrimitive.Description
    ref={ref}
    className={cn("text-sm text-muted-foreground", className)}
    {...props}
  />
))
AlertDialogDescription.displayName =
  AlertDialogPrimitive.Description.displayName

const AlertDialogAction = React.forwardRef<
  React.ElementRef<typeof AlertDialogPrimitive.Action>,
  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>
>(({ className, ...props }, ref) => (
  <AlertDialogPrimitive.Action
    ref={ref}
    className={cn(buttonVariants(), className)}
    {...props}
  />
))
AlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName

const AlertDialogCancel = React.forwardRef<
  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,
  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>
>(({ className, ...props }, ref) => (
  <AlertDialogPrimitive.Cancel
    ref={ref}
    className={cn(
      buttonVariants({ variant: "outline" }),
      "mt-2 sm:mt-0",
      className
    )}
    {...props}
  />
))
AlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName

export {
  AlertDialog,
  AlertDialogPortal,
  AlertDialogOverlay,
  AlertDialogTrigger,
  AlertDialogContent,
  AlertDialogHeader,
  AlertDialogFooter,
  AlertDialogTitle,
  AlertDialogDescription,
  AlertDialogAction,
  AlertDialogCancel,
}

</file>
<file path="FitForge/client/src/components/ui/alert.tsx">
import * as React from "react"
import { cva, type VariantProps } from "class-variance-authority"

import { cn } from "@/lib/utils"

const alertVariants = cva(
  "relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground",
  {
    variants: {
      variant: {
        default: "bg-background text-foreground",
        destructive:
          "border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive",
      },
    },
    defaultVariants: {
      variant: "default",
    },
  }
)

const Alert = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>
>(({ className, variant, ...props }, ref) => (
  <div
    ref={ref}
    role="alert"
    className={cn(alertVariants({ variant }), className)}
    {...props}
  />
))
Alert.displayName = "Alert"

const AlertTitle = React.forwardRef<
  HTMLParagraphElement,
  React.HTMLAttributes<HTMLHeadingElement>
>(({ className, ...props }, ref) => (
  <h5
    ref={ref}
    className={cn("mb-1 font-medium leading-none tracking-tight", className)}
    {...props}
  />
))
AlertTitle.displayName = "AlertTitle"

const AlertDescription = React.forwardRef<
  HTMLParagraphElement,
  React.HTMLAttributes<HTMLParagraphElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn("text-sm [&_p]:leading-relaxed", className)}
    {...props}
  />
))
AlertDescription.displayName = "AlertDescription"

export { Alert, AlertTitle, AlertDescription }

</file>
<file path="FitForge/client/src/components/ui/aspect-ratio.tsx">
import * as AspectRatioPrimitive from "@radix-ui/react-aspect-ratio"

const AspectRatio = AspectRatioPrimitive.Root

export { AspectRatio }

</file>
<file path="FitForge/client/src/components/ui/avatar.tsx">
"use client"

import * as React from "react"
import * as AvatarPrimitive from "@radix-ui/react-avatar"

import { cn } from "@/lib/utils"

const Avatar = React.forwardRef<
  React.ElementRef<typeof AvatarPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>
>(({ className, ...props }, ref) => (
  <AvatarPrimitive.Root
    ref={ref}
    className={cn(
      "relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full",
      className
    )}
    {...props}
  />
))
Avatar.displayName = AvatarPrimitive.Root.displayName

const AvatarImage = React.forwardRef<
  React.ElementRef<typeof AvatarPrimitive.Image>,
  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>
>(({ className, ...props }, ref) => (
  <AvatarPrimitive.Image
    ref={ref}
    className={cn("aspect-square h-full w-full", className)}
    {...props}
  />
))
AvatarImage.displayName = AvatarPrimitive.Image.displayName

const AvatarFallback = React.forwardRef<
  React.ElementRef<typeof AvatarPrimitive.Fallback>,
  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>
>(({ className, ...props }, ref) => (
  <AvatarPrimitive.Fallback
    ref={ref}
    className={cn(
      "flex h-full w-full items-center justify-center rounded-full bg-muted",
      className
    )}
    {...props}
  />
))
AvatarFallback.displayName = AvatarPrimitive.Fallback.displayName

export { Avatar, AvatarImage, AvatarFallback }

</file>
<file path="FitForge/client/src/components/ui/badge.tsx">
import * as React from "react"
import { cva, type VariantProps } from "class-variance-authority"

import { cn } from "@/lib/utils"

const badgeVariants = cva(
  "inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2",
  {
    variants: {
      variant: {
        default:
          "border-transparent bg-primary text-primary-foreground hover:bg-primary/80",
        secondary:
          "border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80",
        destructive:
          "border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80",
        outline: "text-foreground",
      },
    },
    defaultVariants: {
      variant: "default",
    },
  }
)

export interface BadgeProps
  extends React.HTMLAttributes<HTMLDivElement>,
    VariantProps<typeof badgeVariants> {}

function Badge({ className, variant, ...props }: BadgeProps) {
  return (
    <div className={cn(badgeVariants({ variant }), className)} {...props} />
  )
}

export { Badge, badgeVariants }

</file>
<file path="FitForge/client/src/components/ui/breadcrumb.tsx">
import * as React from "react"
import { Slot } from "@radix-ui/react-slot"
import { ChevronRight, MoreHorizontal } from "lucide-react"

import { cn } from "@/lib/utils"

const Breadcrumb = React.forwardRef<
  HTMLElement,
  React.ComponentPropsWithoutRef<"nav"> & {
    separator?: React.ReactNode
  }
>(({ ...props }, ref) => <nav ref={ref} aria-label="breadcrumb" {...props} />)
Breadcrumb.displayName = "Breadcrumb"

const BreadcrumbList = React.forwardRef<
  HTMLOListElement,
  React.ComponentPropsWithoutRef<"ol">
>(({ className, ...props }, ref) => (
  <ol
    ref={ref}
    className={cn(
      "flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5",
      className
    )}
    {...props}
  />
))
BreadcrumbList.displayName = "BreadcrumbList"

const BreadcrumbItem = React.forwardRef<
  HTMLLIElement,
  React.ComponentPropsWithoutRef<"li">
>(({ className, ...props }, ref) => (
  <li
    ref={ref}
    className={cn("inline-flex items-center gap-1.5", className)}
    {...props}
  />
))
BreadcrumbItem.displayName = "BreadcrumbItem"

const BreadcrumbLink = React.forwardRef<
  HTMLAnchorElement,
  React.ComponentPropsWithoutRef<"a"> & {
    asChild?: boolean
  }
>(({ asChild, className, ...props }, ref) => {
  const Comp = asChild ? Slot : "a"

  return (
    <Comp
      ref={ref}
      className={cn("transition-colors hover:text-foreground", className)}
      {...props}
    />
  )
})
BreadcrumbLink.displayName = "BreadcrumbLink"

const BreadcrumbPage = React.forwardRef<
  HTMLSpanElement,
  React.ComponentPropsWithoutRef<"span">
>(({ className, ...props }, ref) => (
  <span
    ref={ref}
    role="link"
    aria-disabled="true"
    aria-current="page"
    className={cn("font-normal text-foreground", className)}
    {...props}
  />
))
BreadcrumbPage.displayName = "BreadcrumbPage"

const BreadcrumbSeparator = ({
  children,
  className,
  ...props
}: React.ComponentProps<"li">) => (
  <li
    role="presentation"
    aria-hidden="true"
    className={cn("[&>svg]:w-3.5 [&>svg]:h-3.5", className)}
    {...props}
  >
    {children ?? <ChevronRight />}
  </li>
)
BreadcrumbSeparator.displayName = "BreadcrumbSeparator"

const BreadcrumbEllipsis = ({
  className,
  ...props
}: React.ComponentProps<"span">) => (
  <span
    role="presentation"
    aria-hidden="true"
    className={cn("flex h-9 w-9 items-center justify-center", className)}
    {...props}
  >
    <MoreHorizontal className="h-4 w-4" />
    <span className="sr-only">More</span>
  </span>
)
BreadcrumbEllipsis.displayName = "BreadcrumbElipssis"

export {
  Breadcrumb,
  BreadcrumbList,
  BreadcrumbItem,
  BreadcrumbLink,
  BreadcrumbPage,
  BreadcrumbSeparator,
  BreadcrumbEllipsis,
}

</file>
<file path="FitForge/client/src/components/ui/button.tsx">
import * as React from "react"
import { Slot } from "@radix-ui/react-slot"
import { cva, type VariantProps } from "class-variance-authority"

import { cn } from "@/lib/utils"

const buttonVariants = cva(
  "inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0",
  {
    variants: {
      variant: {
        default: "bg-primary text-primary-foreground hover:bg-primary/90",
        destructive:
          "bg-destructive text-destructive-foreground hover:bg-destructive/90",
        outline:
          "border border-input bg-background hover:bg-accent hover:text-accent-foreground",
        secondary:
          "bg-secondary text-secondary-foreground hover:bg-secondary/80",
        ghost: "hover:bg-accent hover:text-accent-foreground",
        link: "text-primary underline-offset-4 hover:underline",
      },
      size: {
        default: "h-10 px-4 py-2",
        sm: "h-9 rounded-md px-3",
        lg: "h-11 rounded-md px-8",
        icon: "h-10 w-10",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  }
)

export interface ButtonProps
  extends React.ButtonHTMLAttributes<HTMLButtonElement>,
    VariantProps<typeof buttonVariants> {
  asChild?: boolean
}

const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(
  ({ className, variant, size, asChild = false, ...props }, ref) => {
    const Comp = asChild ? Slot : "button"
    return (
      <Comp
        className={cn(buttonVariants({ variant, size, className }))}
        ref={ref}
        {...props}
      />
    )
  }
)
Button.displayName = "Button"

export { Button, buttonVariants }

</file>
<file path="FitForge/client/src/components/ui/calendar.tsx">
import * as React from "react"
import { ChevronLeft, ChevronRight } from "lucide-react"
import { DayPicker } from "react-day-picker"

import { cn } from "@/lib/utils"
import { buttonVariants } from "@/components/ui/button"

export type CalendarProps = React.ComponentProps<typeof DayPicker>

function Calendar({
  className,
  classNames,
  showOutsideDays = true,
  ...props
}: CalendarProps) {
  return (
    <DayPicker
      showOutsideDays={showOutsideDays}
      className={cn("p-3", className)}
      classNames={{
        months: "flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0",
        month: "space-y-4",
        caption: "flex justify-center pt-1 relative items-center",
        caption_label: "text-sm font-medium",
        nav: "space-x-1 flex items-center",
        nav_button: cn(
          buttonVariants({ variant: "outline" }),
          "h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100"
        ),
        nav_button_previous: "absolute left-1",
        nav_button_next: "absolute right-1",
        table: "w-full border-collapse space-y-1",
        head_row: "flex",
        head_cell:
          "text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]",
        row: "flex w-full mt-2",
        cell: "h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20",
        day: cn(
          buttonVariants({ variant: "ghost" }),
          "h-9 w-9 p-0 font-normal aria-selected:opacity-100"
        ),
        day_range_end: "day-range-end",
        day_selected:
          "bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground",
        day_today: "bg-accent text-accent-foreground",
        day_outside:
          "day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground",
        day_disabled: "text-muted-foreground opacity-50",
        day_range_middle:
          "aria-selected:bg-accent aria-selected:text-accent-foreground",
        day_hidden: "invisible",
        ...classNames,
      }}
      components={{
        IconLeft: ({ className, ...props }) => (
          <ChevronLeft className={cn("h-4 w-4", className)} {...props} />
        ),
        IconRight: ({ className, ...props }) => (
          <ChevronRight className={cn("h-4 w-4", className)} {...props} />
        ),
      }}
      {...props}
    />
  )
}
Calendar.displayName = "Calendar"

export { Calendar }

</file>
<file path="FitForge/client/src/components/ui/card.tsx">
import * as React from "react"

import { cn } from "@/lib/utils"

const Card = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn(
      "rounded-lg border bg-card text-card-foreground shadow-sm",
      className
    )}
    {...props}
  />
))
Card.displayName = "Card"

const CardHeader = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn("flex flex-col space-y-1.5 p-6", className)}
    {...props}
  />
))
CardHeader.displayName = "CardHeader"

const CardTitle = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn(
      "text-2xl font-semibold leading-none tracking-tight",
      className
    )}
    {...props}
  />
))
CardTitle.displayName = "CardTitle"

const CardDescription = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn("text-sm text-muted-foreground", className)}
    {...props}
  />
))
CardDescription.displayName = "CardDescription"

const CardContent = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div ref={ref} className={cn("p-6 pt-0", className)} {...props} />
))
CardContent.displayName = "CardContent"

const CardFooter = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn("flex items-center p-6 pt-0", className)}
    {...props}
  />
))
CardFooter.displayName = "CardFooter"

export { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }

</file>
<file path="FitForge/client/src/components/ui/carousel.tsx">
import * as React from "react"
import useEmblaCarousel, {
  type UseEmblaCarouselType,
} from "embla-carousel-react"
import { ArrowLeft, ArrowRight } from "lucide-react"

import { cn } from "@/lib/utils"
import { Button } from "@/components/ui/button"

type CarouselApi = UseEmblaCarouselType[1]
type UseCarouselParameters = Parameters<typeof useEmblaCarousel>
type CarouselOptions = UseCarouselParameters[0]
type CarouselPlugin = UseCarouselParameters[1]

type CarouselProps = {
  opts?: CarouselOptions
  plugins?: CarouselPlugin
  orientation?: "horizontal" | "vertical"
  setApi?: (api: CarouselApi) => void
}

type CarouselContextProps = {
  carouselRef: ReturnType<typeof useEmblaCarousel>[0]
  api: ReturnType<typeof useEmblaCarousel>[1]
  scrollPrev: () => void
  scrollNext: () => void
  canScrollPrev: boolean
  canScrollNext: boolean
} & CarouselProps

const CarouselContext = React.createContext<CarouselContextProps | null>(null)

function useCarousel() {
  const context = React.useContext(CarouselContext)

  if (!context) {
    throw new Error("useCarousel must be used within a <Carousel />")
  }

  return context
}

const Carousel = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement> & CarouselProps
>(
  (
    {
      orientation = "horizontal",
      opts,
      setApi,
      plugins,
      className,
      children,
      ...props
    },
    ref
  ) => {
    const [carouselRef, api] = useEmblaCarousel(
      {
        ...opts,
        axis: orientation === "horizontal" ? "x" : "y",
      },
      plugins
    )
    const [canScrollPrev, setCanScrollPrev] = React.useState(false)
    const [canScrollNext, setCanScrollNext] = React.useState(false)

    const onSelect = React.useCallback((api: CarouselApi) => {
      if (!api) {
        return
      }

      setCanScrollPrev(api.canScrollPrev())
      setCanScrollNext(api.canScrollNext())
    }, [])

    const scrollPrev = React.useCallback(() => {
      api?.scrollPrev()
    }, [api])

    const scrollNext = React.useCallback(() => {
      api?.scrollNext()
    }, [api])

    const handleKeyDown = React.useCallback(
      (event: React.KeyboardEvent<HTMLDivElement>) => {
        if (event.key === "ArrowLeft") {
          event.preventDefault()
          scrollPrev()
        } else if (event.key === "ArrowRight") {
          event.preventDefault()
          scrollNext()
        }
      },
      [scrollPrev, scrollNext]
    )

    React.useEffect(() => {
      if (!api || !setApi) {
        return
      }

      setApi(api)
    }, [api, setApi])

    React.useEffect(() => {
      if (!api) {
        return
      }

      onSelect(api)
      api.on("reInit", onSelect)
      api.on("select", onSelect)

      return () => {
        api?.off("select", onSelect)
      }
    }, [api, onSelect])

    return (
      <CarouselContext.Provider
        value={{
          carouselRef,
          api: api,
          opts,
          orientation:
            orientation || (opts?.axis === "y" ? "vertical" : "horizontal"),
          scrollPrev,
          scrollNext,
          canScrollPrev,
          canScrollNext,
        }}
      >
        <div
          ref={ref}
          onKeyDownCapture={handleKeyDown}
          className={cn("relative", className)}
          role="region"
          aria-roledescription="carousel"
          {...props}
        >
          {children}
        </div>
      </CarouselContext.Provider>
    )
  }
)
Carousel.displayName = "Carousel"

const CarouselContent = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => {
  const { carouselRef, orientation } = useCarousel()

  return (
    <div ref={carouselRef} className="overflow-hidden">
      <div
        ref={ref}
        className={cn(
          "flex",
          orientation === "horizontal" ? "-ml-4" : "-mt-4 flex-col",
          className
        )}
        {...props}
      />
    </div>
  )
})
CarouselContent.displayName = "CarouselContent"

const CarouselItem = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => {
  const { orientation } = useCarousel()

  return (
    <div
      ref={ref}
      role="group"
      aria-roledescription="slide"
      className={cn(
        "min-w-0 shrink-0 grow-0 basis-full",
        orientation === "horizontal" ? "pl-4" : "pt-4",
        className
      )}
      {...props}
    />
  )
})
CarouselItem.displayName = "CarouselItem"

const CarouselPrevious = React.forwardRef<
  HTMLButtonElement,
  React.ComponentProps<typeof Button>
>(({ className, variant = "outline", size = "icon", ...props }, ref) => {
  const { orientation, scrollPrev, canScrollPrev } = useCarousel()

  return (
    <Button
      ref={ref}
      variant={variant}
      size={size}
      className={cn(
        "absolute  h-8 w-8 rounded-full",
        orientation === "horizontal"
          ? "-left-12 top-1/2 -translate-y-1/2"
          : "-top-12 left-1/2 -translate-x-1/2 rotate-90",
        className
      )}
      disabled={!canScrollPrev}
      onClick={scrollPrev}
      {...props}
    >
      <ArrowLeft className="h-4 w-4" />
      <span className="sr-only">Previous slide</span>
    </Button>
  )
})
CarouselPrevious.displayName = "CarouselPrevious"

const CarouselNext = React.forwardRef<
  HTMLButtonElement,
  React.ComponentProps<typeof Button>
>(({ className, variant = "outline", size = "icon", ...props }, ref) => {
  const { orientation, scrollNext, canScrollNext } = useCarousel()

  return (
    <Button
      ref={ref}
      variant={variant}
      size={size}
      className={cn(
        "absolute h-8 w-8 rounded-full",
        orientation === "horizontal"
          ? "-right-12 top-1/2 -translate-y-1/2"
          : "-bottom-12 left-1/2 -translate-x-1/2 rotate-90",
        className
      )}
      disabled={!canScrollNext}
      onClick={scrollNext}
      {...props}
    >
      <ArrowRight className="h-4 w-4" />
      <span className="sr-only">Next slide</span>
    </Button>
  )
})
CarouselNext.displayName = "CarouselNext"

export {
  type CarouselApi,
  Carousel,
  CarouselContent,
  CarouselItem,
  CarouselPrevious,
  CarouselNext,
}

</file>
<file path="FitForge/client/src/components/ui/chart.tsx">
"use client"

import * as React from "react"
import * as RechartsPrimitive from "recharts"

import { cn } from "@/lib/utils"

// Format: { THEME_NAME: CSS_SELECTOR }
const THEMES = { light: "", dark: ".dark" } as const

export type ChartConfig = {
  [k in string]: {
    label?: React.ReactNode
    icon?: React.ComponentType
  } & (
    | { color?: string; theme?: never }
    | { color?: never; theme: Record<keyof typeof THEMES, string> }
  )
}

type ChartContextProps = {
  config: ChartConfig
}

const ChartContext = React.createContext<ChartContextProps | null>(null)

function useChart() {
  const context = React.useContext(ChartContext)

  if (!context) {
    throw new Error("useChart must be used within a <ChartContainer />")
  }

  return context
}

const ChartContainer = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<"div"> & {
    config: ChartConfig
    children: React.ComponentProps<
      typeof RechartsPrimitive.ResponsiveContainer
    >["children"]
  }
>(({ id, className, children, config, ...props }, ref) => {
  const uniqueId = React.useId()
  const chartId = `chart-${id || uniqueId.replace(/:/g, "")}`

  return (
    <ChartContext.Provider value={{ config }}>
      <div
        data-chart={chartId}
        ref={ref}
        className={cn(
          "flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none",
          className
        )}
        {...props}
      >
        <ChartStyle id={chartId} config={config} />
        <RechartsPrimitive.ResponsiveContainer>
          {children}
        </RechartsPrimitive.ResponsiveContainer>
      </div>
    </ChartContext.Provider>
  )
})
ChartContainer.displayName = "Chart"

const ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {
  const colorConfig = Object.entries(config).filter(
    ([, config]) => config.theme || config.color
  )

  if (!colorConfig.length) {
    return null
  }

  return (
    <style
      dangerouslySetInnerHTML={{
        __html: Object.entries(THEMES)
          .map(
            ([theme, prefix]) => `
${prefix} [data-chart=${id}] {
${colorConfig
  .map(([key, itemConfig]) => {
    const color =
      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||
      itemConfig.color
    return color ? `  --color-${key}: ${color};` : null
  })
  .join("\n")}
}
`
          )
          .join("\n"),
      }}
    />
  )
}

const ChartTooltip = RechartsPrimitive.Tooltip

const ChartTooltipContent = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &
    React.ComponentProps<"div"> & {
      hideLabel?: boolean
      hideIndicator?: boolean
      indicator?: "line" | "dot" | "dashed"
      nameKey?: string
      labelKey?: string
    }
>(
  (
    {
      active,
      payload,
      className,
      indicator = "dot",
      hideLabel = false,
      hideIndicator = false,
      label,
      labelFormatter,
      labelClassName,
      formatter,
      color,
      nameKey,
      labelKey,
    },
    ref
  ) => {
    const { config } = useChart()

    const tooltipLabel = React.useMemo(() => {
      if (hideLabel || !payload?.length) {
        return null
      }

      const [item] = payload
      const key = `${labelKey || item?.dataKey || item?.name || "value"}`
      const itemConfig = getPayloadConfigFromPayload(config, item, key)
      const value =
        !labelKey && typeof label === "string"
          ? config[label as keyof typeof config]?.label || label
          : itemConfig?.label

      if (labelFormatter) {
        return (
          <div className={cn("font-medium", labelClassName)}>
            {labelFormatter(value, payload)}
          </div>
        )
      }

      if (!value) {
        return null
      }

      return <div className={cn("font-medium", labelClassName)}>{value}</div>
    }, [
      label,
      labelFormatter,
      payload,
      hideLabel,
      labelClassName,
      config,
      labelKey,
    ])

    if (!active || !payload?.length) {
      return null
    }

    const nestLabel = payload.length === 1 && indicator !== "dot"

    return (
      <div
        ref={ref}
        className={cn(
          "grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl",
          className
        )}
      >
        {!nestLabel ? tooltipLabel : null}
        <div className="grid gap-1.5">
          {payload.map((item, index) => {
            const key = `${nameKey || item.name || item.dataKey || "value"}`
            const itemConfig = getPayloadConfigFromPayload(config, item, key)
            const indicatorColor = color || item.payload.fill || item.color

            return (
              <div
                key={item.dataKey}
                className={cn(
                  "flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground",
                  indicator === "dot" && "items-center"
                )}
              >
                {formatter && item?.value !== undefined && item.name ? (
                  formatter(item.value, item.name, item, index, item.payload)
                ) : (
                  <>
                    {itemConfig?.icon ? (
                      <itemConfig.icon />
                    ) : (
                      !hideIndicator && (
                        <div
                          className={cn(
                            "shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]",
                            {
                              "h-2.5 w-2.5": indicator === "dot",
                              "w-1": indicator === "line",
                              "w-0 border-[1.5px] border-dashed bg-transparent":
                                indicator === "dashed",
                              "my-0.5": nestLabel && indicator === "dashed",
                            }
                          )}
                          style={
                            {
                              "--color-bg": indicatorColor,
                              "--color-border": indicatorColor,
                            } as React.CSSProperties
                          }
                        />
                      )
                    )}
                    <div
                      className={cn(
                        "flex flex-1 justify-between leading-none",
                        nestLabel ? "items-end" : "items-center"
                      )}
                    >
                      <div className="grid gap-1.5">
                        {nestLabel ? tooltipLabel : null}
                        <span className="text-muted-foreground">
                          {itemConfig?.label || item.name}
                        </span>
                      </div>
                      {typeof item.value === "number" && (
                        <span className="font-mono font-medium tabular-nums text-foreground">
                          {item.value.toLocaleString()}
                        </span>
                      )}
                    </div>
                  </>
                )}
              </div>
            )
          })}
        </div>
      </div>
    )
  }
)
ChartTooltipContent.displayName = "ChartTooltip"

const ChartLegend = RechartsPrimitive.Legend

const ChartLegendContent = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<"div"> &
    Pick<RechartsPrimitive.LegendProps, "payload" | "verticalAlign"> & {
      hideIcon?: boolean
      nameKey?: string
    }
>(
  (
    { className, hideIcon = false, payload, verticalAlign = "bottom", nameKey },
    ref
  ) => {
    const { config } = useChart()

    if (!payload?.length) {
      return null
    }

    return (
      <div
        ref={ref}
        className={cn(
          "flex items-center justify-center gap-4",
          verticalAlign === "top" ? "pb-3" : "pt-3",
          className
        )}
      >
        {payload.map((item) => {
          const key = `${nameKey || item.dataKey || "value"}`
          const itemConfig = getPayloadConfigFromPayload(config, item, key)

          return (
            <div
              key={item.value}
              className={cn(
                "flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground"
              )}
            >
              {itemConfig?.icon && !hideIcon ? (
                <itemConfig.icon />
              ) : (
                <div
                  className="h-2 w-2 shrink-0 rounded-[2px]"
                  style={{
                    backgroundColor: item.color,
                  }}
                />
              )}
              {itemConfig?.label}
            </div>
          )
        })}
      </div>
    )
  }
)
ChartLegendContent.displayName = "ChartLegend"

// Helper to extract item config from a payload.
function getPayloadConfigFromPayload(
  config: ChartConfig,
  payload: unknown,
  key: string
) {
  if (typeof payload !== "object" || payload === null) {
    return undefined
  }

  const payloadPayload =
    "payload" in payload &&
    typeof payload.payload === "object" &&
    payload.payload !== null
      ? payload.payload
      : undefined

  let configLabelKey: string = key

  if (
    key in payload &&
    typeof payload[key as keyof typeof payload] === "string"
  ) {
    configLabelKey = payload[key as keyof typeof payload] as string
  } else if (
    payloadPayload &&
    key in payloadPayload &&
    typeof payloadPayload[key as keyof typeof payloadPayload] === "string"
  ) {
    configLabelKey = payloadPayload[
      key as keyof typeof payloadPayload
    ] as string
  }

  return configLabelKey in config
    ? config[configLabelKey]
    : config[key as keyof typeof config]
}

export {
  ChartContainer,
  ChartTooltip,
  ChartTooltipContent,
  ChartLegend,
  ChartLegendContent,
  ChartStyle,
}

</file>
<file path="FitForge/client/src/components/ui/checkbox.tsx">
import * as React from "react"
import * as CheckboxPrimitive from "@radix-ui/react-checkbox"
import { Check } from "lucide-react"

import { cn } from "@/lib/utils"

const Checkbox = React.forwardRef<
  React.ElementRef<typeof CheckboxPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>
>(({ className, ...props }, ref) => (
  <CheckboxPrimitive.Root
    ref={ref}
    className={cn(
      "peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground",
      className
    )}
    {...props}
  >
    <CheckboxPrimitive.Indicator
      className={cn("flex items-center justify-center text-current")}
    >
      <Check className="h-4 w-4" />
    </CheckboxPrimitive.Indicator>
  </CheckboxPrimitive.Root>
))
Checkbox.displayName = CheckboxPrimitive.Root.displayName

export { Checkbox }

</file>
<file path="FitForge/client/src/components/ui/collapsible.tsx">
"use client"

import * as CollapsiblePrimitive from "@radix-ui/react-collapsible"

const Collapsible = CollapsiblePrimitive.Root

const CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger

const CollapsibleContent = CollapsiblePrimitive.CollapsibleContent

export { Collapsible, CollapsibleTrigger, CollapsibleContent }

</file>
<file path="FitForge/client/src/components/ui/command.tsx">
import * as React from "react"
import { type DialogProps } from "@radix-ui/react-dialog"
import { Command as CommandPrimitive } from "cmdk"
import { Search } from "lucide-react"

import { cn } from "@/lib/utils"
import { Dialog, DialogContent } from "@/components/ui/dialog"

const Command = React.forwardRef<
  React.ElementRef<typeof CommandPrimitive>,
  React.ComponentPropsWithoutRef<typeof CommandPrimitive>
>(({ className, ...props }, ref) => (
  <CommandPrimitive
    ref={ref}
    className={cn(
      "flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground",
      className
    )}
    {...props}
  />
))
Command.displayName = CommandPrimitive.displayName

const CommandDialog = ({ children, ...props }: DialogProps) => {
  return (
    <Dialog {...props}>
      <DialogContent className="overflow-hidden p-0 shadow-lg">
        <Command className="[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5">
          {children}
        </Command>
      </DialogContent>
    </Dialog>
  )
}

const CommandInput = React.forwardRef<
  React.ElementRef<typeof CommandPrimitive.Input>,
  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>
>(({ className, ...props }, ref) => (
  <div className="flex items-center border-b px-3" cmdk-input-wrapper="">
    <Search className="mr-2 h-4 w-4 shrink-0 opacity-50" />
    <CommandPrimitive.Input
      ref={ref}
      className={cn(
        "flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50",
        className
      )}
      {...props}
    />
  </div>
))

CommandInput.displayName = CommandPrimitive.Input.displayName

const CommandList = React.forwardRef<
  React.ElementRef<typeof CommandPrimitive.List>,
  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>
>(({ className, ...props }, ref) => (
  <CommandPrimitive.List
    ref={ref}
    className={cn("max-h-[300px] overflow-y-auto overflow-x-hidden", className)}
    {...props}
  />
))

CommandList.displayName = CommandPrimitive.List.displayName

const CommandEmpty = React.forwardRef<
  React.ElementRef<typeof CommandPrimitive.Empty>,
  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>
>((props, ref) => (
  <CommandPrimitive.Empty
    ref={ref}
    className="py-6 text-center text-sm"
    {...props}
  />
))

CommandEmpty.displayName = CommandPrimitive.Empty.displayName

const CommandGroup = React.forwardRef<
  React.ElementRef<typeof CommandPrimitive.Group>,
  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>
>(({ className, ...props }, ref) => (
  <CommandPrimitive.Group
    ref={ref}
    className={cn(
      "overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground",
      className
    )}
    {...props}
  />
))

CommandGroup.displayName = CommandPrimitive.Group.displayName

const CommandSeparator = React.forwardRef<
  React.ElementRef<typeof CommandPrimitive.Separator>,
  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>
>(({ className, ...props }, ref) => (
  <CommandPrimitive.Separator
    ref={ref}
    className={cn("-mx-1 h-px bg-border", className)}
    {...props}
  />
))
CommandSeparator.displayName = CommandPrimitive.Separator.displayName

const CommandItem = React.forwardRef<
  React.ElementRef<typeof CommandPrimitive.Item>,
  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>
>(({ className, ...props }, ref) => (
  <CommandPrimitive.Item
    ref={ref}
    className={cn(
      "relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0",
      className
    )}
    {...props}
  />
))

CommandItem.displayName = CommandPrimitive.Item.displayName

const CommandShortcut = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLSpanElement>) => {
  return (
    <span
      className={cn(
        "ml-auto text-xs tracking-widest text-muted-foreground",
        className
      )}
      {...props}
    />
  )
}
CommandShortcut.displayName = "CommandShortcut"

export {
  Command,
  CommandDialog,
  CommandInput,
  CommandList,
  CommandEmpty,
  CommandGroup,
  CommandItem,
  CommandShortcut,
  CommandSeparator,
}

</file>
<file path="FitForge/client/src/components/ui/context-menu.tsx">
import * as React from "react"
import * as ContextMenuPrimitive from "@radix-ui/react-context-menu"
import { Check, ChevronRight, Circle } from "lucide-react"

import { cn } from "@/lib/utils"

const ContextMenu = ContextMenuPrimitive.Root

const ContextMenuTrigger = ContextMenuPrimitive.Trigger

const ContextMenuGroup = ContextMenuPrimitive.Group

const ContextMenuPortal = ContextMenuPrimitive.Portal

const ContextMenuSub = ContextMenuPrimitive.Sub

const ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup

const ContextMenuSubTrigger = React.forwardRef<
  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,
  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {
    inset?: boolean
  }
>(({ className, inset, children, ...props }, ref) => (
  <ContextMenuPrimitive.SubTrigger
    ref={ref}
    className={cn(
      "flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground",
      inset && "pl-8",
      className
    )}
    {...props}
  >
    {children}
    <ChevronRight className="ml-auto h-4 w-4" />
  </ContextMenuPrimitive.SubTrigger>
))
ContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName

const ContextMenuSubContent = React.forwardRef<
  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,
  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>
>(({ className, ...props }, ref) => (
  <ContextMenuPrimitive.SubContent
    ref={ref}
    className={cn(
      "z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]",
      className
    )}
    {...props}
  />
))
ContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName

const ContextMenuContent = React.forwardRef<
  React.ElementRef<typeof ContextMenuPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>
>(({ className, ...props }, ref) => (
  <ContextMenuPrimitive.Portal>
    <ContextMenuPrimitive.Content
      ref={ref}
      className={cn(
        "z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]",
        className
      )}
      {...props}
    />
  </ContextMenuPrimitive.Portal>
))
ContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName

const ContextMenuItem = React.forwardRef<
  React.ElementRef<typeof ContextMenuPrimitive.Item>,
  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {
    inset?: boolean
  }
>(({ className, inset, ...props }, ref) => (
  <ContextMenuPrimitive.Item
    ref={ref}
    className={cn(
      "relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      inset && "pl-8",
      className
    )}
    {...props}
  />
))
ContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName

const ContextMenuCheckboxItem = React.forwardRef<
  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,
  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>
>(({ className, children, checked, ...props }, ref) => (
  <ContextMenuPrimitive.CheckboxItem
    ref={ref}
    className={cn(
      "relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      className
    )}
    checked={checked}
    {...props}
  >
    <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
      <ContextMenuPrimitive.ItemIndicator>
        <Check className="h-4 w-4" />
      </ContextMenuPrimitive.ItemIndicator>
    </span>
    {children}
  </ContextMenuPrimitive.CheckboxItem>
))
ContextMenuCheckboxItem.displayName =
  ContextMenuPrimitive.CheckboxItem.displayName

const ContextMenuRadioItem = React.forwardRef<
  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,
  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>
>(({ className, children, ...props }, ref) => (
  <ContextMenuPrimitive.RadioItem
    ref={ref}
    className={cn(
      "relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      className
    )}
    {...props}
  >
    <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
      <ContextMenuPrimitive.ItemIndicator>
        <Circle className="h-2 w-2 fill-current" />
      </ContextMenuPrimitive.ItemIndicator>
    </span>
    {children}
  </ContextMenuPrimitive.RadioItem>
))
ContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName

const ContextMenuLabel = React.forwardRef<
  React.ElementRef<typeof ContextMenuPrimitive.Label>,
  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {
    inset?: boolean
  }
>(({ className, inset, ...props }, ref) => (
  <ContextMenuPrimitive.Label
    ref={ref}
    className={cn(
      "px-2 py-1.5 text-sm font-semibold text-foreground",
      inset && "pl-8",
      className
    )}
    {...props}
  />
))
ContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName

const ContextMenuSeparator = React.forwardRef<
  React.ElementRef<typeof ContextMenuPrimitive.Separator>,
  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>
>(({ className, ...props }, ref) => (
  <ContextMenuPrimitive.Separator
    ref={ref}
    className={cn("-mx-1 my-1 h-px bg-border", className)}
    {...props}
  />
))
ContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName

const ContextMenuShortcut = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLSpanElement>) => {
  return (
    <span
      className={cn(
        "ml-auto text-xs tracking-widest text-muted-foreground",
        className
      )}
      {...props}
    />
  )
}
ContextMenuShortcut.displayName = "ContextMenuShortcut"

export {
  ContextMenu,
  ContextMenuTrigger,
  ContextMenuContent,
  ContextMenuItem,
  ContextMenuCheckboxItem,
  ContextMenuRadioItem,
  ContextMenuLabel,
  ContextMenuSeparator,
  ContextMenuShortcut,
  ContextMenuGroup,
  ContextMenuPortal,
  ContextMenuSub,
  ContextMenuSubContent,
  ContextMenuSubTrigger,
  ContextMenuRadioGroup,
}

</file>
<file path="FitForge/client/src/components/ui/dialog.tsx">
"use client"

import * as React from "react"
import * as DialogPrimitive from "@radix-ui/react-dialog"
import { X } from "lucide-react"

import { cn } from "@/lib/utils"

const Dialog = DialogPrimitive.Root

const DialogTrigger = DialogPrimitive.Trigger

const DialogPortal = DialogPrimitive.Portal

const DialogClose = DialogPrimitive.Close

const DialogOverlay = React.forwardRef<
  React.ElementRef<typeof DialogPrimitive.Overlay>,
  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>
>(({ className, ...props }, ref) => (
  <DialogPrimitive.Overlay
    ref={ref}
    className={cn(
      "fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",
      className
    )}
    {...props}
  />
))
DialogOverlay.displayName = DialogPrimitive.Overlay.displayName

const DialogContent = React.forwardRef<
  React.ElementRef<typeof DialogPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>
>(({ className, children, ...props }, ref) => (
  <DialogPortal>
    <DialogOverlay />
    <DialogPrimitive.Content
      ref={ref}
      className={cn(
        "fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg",
        className
      )}
      {...props}
    >
      {children}
      <DialogPrimitive.Close className="absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground">
        <X className="h-4 w-4" />
        <span className="sr-only">Close</span>
      </DialogPrimitive.Close>
    </DialogPrimitive.Content>
  </DialogPortal>
))
DialogContent.displayName = DialogPrimitive.Content.displayName

const DialogHeader = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) => (
  <div
    className={cn(
      "flex flex-col space-y-1.5 text-center sm:text-left",
      className
    )}
    {...props}
  />
)
DialogHeader.displayName = "DialogHeader"

const DialogFooter = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) => (
  <div
    className={cn(
      "flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2",
      className
    )}
    {...props}
  />
)
DialogFooter.displayName = "DialogFooter"

const DialogTitle = React.forwardRef<
  React.ElementRef<typeof DialogPrimitive.Title>,
  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>
>(({ className, ...props }, ref) => (
  <DialogPrimitive.Title
    ref={ref}
    className={cn(
      "text-lg font-semibold leading-none tracking-tight",
      className
    )}
    {...props}
  />
))
DialogTitle.displayName = DialogPrimitive.Title.displayName

const DialogDescription = React.forwardRef<
  React.ElementRef<typeof DialogPrimitive.Description>,
  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>
>(({ className, ...props }, ref) => (
  <DialogPrimitive.Description
    ref={ref}
    className={cn("text-sm text-muted-foreground", className)}
    {...props}
  />
))
DialogDescription.displayName = DialogPrimitive.Description.displayName

export {
  Dialog,
  DialogPortal,
  DialogOverlay,
  DialogClose,
  DialogTrigger,
  DialogContent,
  DialogHeader,
  DialogFooter,
  DialogTitle,
  DialogDescription,
}

</file>
<file path="FitForge/client/src/components/ui/drawer.tsx">
"use client"

import * as React from "react"
import { Drawer as DrawerPrimitive } from "vaul"

import { cn } from "@/lib/utils"

const Drawer = ({
  shouldScaleBackground = true,
  ...props
}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (
  <DrawerPrimitive.Root
    shouldScaleBackground={shouldScaleBackground}
    {...props}
  />
)
Drawer.displayName = "Drawer"

const DrawerTrigger = DrawerPrimitive.Trigger

const DrawerPortal = DrawerPrimitive.Portal

const DrawerClose = DrawerPrimitive.Close

const DrawerOverlay = React.forwardRef<
  React.ElementRef<typeof DrawerPrimitive.Overlay>,
  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>
>(({ className, ...props }, ref) => (
  <DrawerPrimitive.Overlay
    ref={ref}
    className={cn("fixed inset-0 z-50 bg-black/80", className)}
    {...props}
  />
))
DrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName

const DrawerContent = React.forwardRef<
  React.ElementRef<typeof DrawerPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>
>(({ className, children, ...props }, ref) => (
  <DrawerPortal>
    <DrawerOverlay />
    <DrawerPrimitive.Content
      role="dialog"
      aria-modal="true"
      ref={ref}
      className={cn(
        "fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background",
        className
      )}
      {...props}
    >
      <div className="mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted" aria-hidden="true" />
      {children}
    </DrawerPrimitive.Content>
  </DrawerPortal>
))
DrawerContent.displayName = "DrawerContent"

const DrawerHeader = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) => (
  <div
    className={cn("grid gap-1.5 p-4 text-center sm:text-left", className)}
    {...props}
  />
)
DrawerHeader.displayName = "DrawerHeader"

const DrawerFooter = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) => (
  <div
    className={cn("mt-auto flex flex-col gap-2 p-4", className)}
    {...props}
  />
)
DrawerFooter.displayName = "DrawerFooter"

const DrawerTitle = React.forwardRef<
  React.ElementRef<typeof DrawerPrimitive.Title>,
  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>
>(({ className, ...props }, ref) => (
  <DrawerPrimitive.Title
    ref={ref}
    className={cn(
      "text-lg font-semibold leading-none tracking-tight",
      className
    )}
    {...props}
  />
))
DrawerTitle.displayName = DrawerPrimitive.Title.displayName

const DrawerDescription = React.forwardRef<
  React.ElementRef<typeof DrawerPrimitive.Description>,
  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>
>(({ className, ...props }, ref) => (
  <DrawerPrimitive.Description
    ref={ref}
    className={cn("text-sm text-muted-foreground", className)}
    {...props}
  />
))
DrawerDescription.displayName = DrawerPrimitive.Description.displayName

export {
  Drawer,
  DrawerPortal,
  DrawerOverlay,
  DrawerTrigger,
  DrawerClose,
  DrawerContent,
  DrawerHeader,
  DrawerFooter,
  DrawerTitle,
  DrawerDescription,
}

</file>
<file path="FitForge/client/src/components/ui/dropdown-menu.tsx">
import * as React from "react"
import * as DropdownMenuPrimitive from "@radix-ui/react-dropdown-menu"
import { Check, ChevronRight, Circle } from "lucide-react"

import { cn } from "@/lib/utils"

const DropdownMenu = DropdownMenuPrimitive.Root

const DropdownMenuTrigger = DropdownMenuPrimitive.Trigger

const DropdownMenuGroup = DropdownMenuPrimitive.Group

const DropdownMenuPortal = DropdownMenuPrimitive.Portal

const DropdownMenuSub = DropdownMenuPrimitive.Sub

const DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup

const DropdownMenuSubTrigger = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {
    inset?: boolean
  }
>(({ className, inset, children, ...props }, ref) => (
  <DropdownMenuPrimitive.SubTrigger
    ref={ref}
    className={cn(
      "flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0",
      inset && "pl-8",
      className
    )}
    {...props}
  >
    {children}
    <ChevronRight className="ml-auto" />
  </DropdownMenuPrimitive.SubTrigger>
))
DropdownMenuSubTrigger.displayName =
  DropdownMenuPrimitive.SubTrigger.displayName

const DropdownMenuSubContent = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>
>(({ className, ...props }, ref) => (
  <DropdownMenuPrimitive.SubContent
    ref={ref}
    className={cn(
      "z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]",
      className
    )}
    {...props}
  />
))
DropdownMenuSubContent.displayName =
  DropdownMenuPrimitive.SubContent.displayName

const DropdownMenuContent = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>
>(({ className, sideOffset = 4, ...props }, ref) => (
  <DropdownMenuPrimitive.Portal>
    <DropdownMenuPrimitive.Content
      ref={ref}
      sideOffset={sideOffset}
      className={cn(
        "z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]",
        className
      )}
      {...props}
    />
  </DropdownMenuPrimitive.Portal>
))
DropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName

const DropdownMenuItem = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.Item>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {
    inset?: boolean
  }
>(({ className, inset, ...props }, ref) => (
  <DropdownMenuPrimitive.Item
    ref={ref}
    className={cn(
      "relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0",
      inset && "pl-8",
      className
    )}
    {...props}
  />
))
DropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName

const DropdownMenuCheckboxItem = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>
>(({ className, children, checked, ...props }, ref) => (
  <DropdownMenuPrimitive.CheckboxItem
    ref={ref}
    className={cn(
      "relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      className
    )}
    checked={checked}
    {...props}
  >
    <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
      <DropdownMenuPrimitive.ItemIndicator>
        <Check className="h-4 w-4" />
      </DropdownMenuPrimitive.ItemIndicator>
    </span>
    {children}
  </DropdownMenuPrimitive.CheckboxItem>
))
DropdownMenuCheckboxItem.displayName =
  DropdownMenuPrimitive.CheckboxItem.displayName

const DropdownMenuRadioItem = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>
>(({ className, children, ...props }, ref) => (
  <DropdownMenuPrimitive.RadioItem
    ref={ref}
    className={cn(
      "relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      className
    )}
    {...props}
  >
    <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
      <DropdownMenuPrimitive.ItemIndicator>
        <Circle className="h-2 w-2 fill-current" />
      </DropdownMenuPrimitive.ItemIndicator>
    </span>
    {children}
  </DropdownMenuPrimitive.RadioItem>
))
DropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName

const DropdownMenuLabel = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.Label>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {
    inset?: boolean
  }
>(({ className, inset, ...props }, ref) => (
  <DropdownMenuPrimitive.Label
    ref={ref}
    className={cn(
      "px-2 py-1.5 text-sm font-semibold",
      inset && "pl-8",
      className
    )}
    {...props}
  />
))
DropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName

const DropdownMenuSeparator = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>
>(({ className, ...props }, ref) => (
  <DropdownMenuPrimitive.Separator
    ref={ref}
    className={cn("-mx-1 my-1 h-px bg-muted", className)}
    {...props}
  />
))
DropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName

const DropdownMenuShortcut = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLSpanElement>) => {
  return (
    <span
      className={cn("ml-auto text-xs tracking-widest opacity-60", className)}
      {...props}
    />
  )
}
DropdownMenuShortcut.displayName = "DropdownMenuShortcut"

export {
  DropdownMenu,
  DropdownMenuTrigger,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuCheckboxItem,
  DropdownMenuRadioItem,
  DropdownMenuLabel,
  DropdownMenuSeparator,
  DropdownMenuShortcut,
  DropdownMenuGroup,
  DropdownMenuPortal,
  DropdownMenuSub,
  DropdownMenuSubContent,
  DropdownMenuSubTrigger,
  DropdownMenuRadioGroup,
}

</file>
<file path="FitForge/client/src/components/ui/form.tsx">
"use client"

import * as React from "react"
import * as LabelPrimitive from "@radix-ui/react-label"
import { Slot } from "@radix-ui/react-slot"
import {
  Controller,
  FormProvider,
  useFormContext,
  type ControllerProps,
  type FieldPath,
  type FieldValues,
} from "react-hook-form"

import { cn } from "@/lib/utils"
import { Label } from "@/components/ui/label"

const Form = FormProvider

type FormFieldContextValue<
  TFieldValues extends FieldValues = FieldValues,
  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>
> = {
  name: TName
}

const FormFieldContext = React.createContext<FormFieldContextValue>(
  {} as FormFieldContextValue
)

const FormField = <
  TFieldValues extends FieldValues = FieldValues,
  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>
>({
  ...props
}: ControllerProps<TFieldValues, TName>) => {
  return (
    <FormFieldContext.Provider value={{ name: props.name }}>
      <Controller {...props} />
    </FormFieldContext.Provider>
  )
}

const useFormField = () => {
  const fieldContext = React.useContext(FormFieldContext)
  const itemContext = React.useContext(FormItemContext)
  const { getFieldState, formState } = useFormContext()

  const fieldState = getFieldState(fieldContext.name, formState)

  if (!fieldContext) {
    throw new Error("useFormField should be used within <FormField>")
  }

  const { id } = itemContext

  return {
    id,
    name: fieldContext.name,
    formItemId: `${id}-form-item`,
    formDescriptionId: `${id}-form-item-description`,
    formMessageId: `${id}-form-item-message`,
    ...fieldState,
  }
}

type FormItemContextValue = {
  id: string
}

const FormItemContext = React.createContext<FormItemContextValue>(
  {} as FormItemContextValue
)

const FormItem = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => {
  const id = React.useId()

  return (
    <FormItemContext.Provider value={{ id }}>
      <div ref={ref} className={cn("space-y-2", className)} {...props} />
    </FormItemContext.Provider>
  )
})
FormItem.displayName = "FormItem"

const FormLabel = React.forwardRef<
  React.ElementRef<typeof LabelPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>
>(({ className, ...props }, ref) => {
  const { error, formItemId } = useFormField()

  return (
    <Label
      ref={ref}
      className={cn(error && "text-destructive", className)}
      htmlFor={formItemId}
      {...props}
    />
  )
})
FormLabel.displayName = "FormLabel"

const FormControl = React.forwardRef<
  React.ElementRef<typeof Slot>,
  React.ComponentPropsWithoutRef<typeof Slot>
>(({ ...props }, ref) => {
  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()

  return (
    <Slot
      ref={ref}
      id={formItemId}
      aria-describedby={
        !error
          ? `${formDescriptionId}`
          : `${formDescriptionId} ${formMessageId}`
      }
      aria-invalid={!!error}
      {...props}
    />
  )
})
FormControl.displayName = "FormControl"

const FormDescription = React.forwardRef<
  HTMLParagraphElement,
  React.HTMLAttributes<HTMLParagraphElement>
>(({ className, ...props }, ref) => {
  const { formDescriptionId } = useFormField()

  return (
    <p
      ref={ref}
      id={formDescriptionId}
      className={cn("text-sm text-muted-foreground", className)}
      {...props}
    />
  )
})
FormDescription.displayName = "FormDescription"

const FormMessage = React.forwardRef<
  HTMLParagraphElement,
  React.HTMLAttributes<HTMLParagraphElement>
>(({ className, children, ...props }, ref) => {
  const { error, formMessageId } = useFormField()
  const body = error ? String(error?.message ?? "") : children

  if (!body) {
    return null
  }

  return (
    <p
      ref={ref}
      id={formMessageId}
      className={cn("text-sm font-medium text-destructive", className)}
      {...props}
    >
      {body}
    </p>
  )
})
FormMessage.displayName = "FormMessage"

export {
  useFormField,
  Form,
  FormItem,
  FormLabel,
  FormControl,
  FormDescription,
  FormMessage,
  FormField,
}

</file>
<file path="FitForge/client/src/components/ui/hover-card.tsx">
"use client"

import * as React from "react"
import * as HoverCardPrimitive from "@radix-ui/react-hover-card"

import { cn } from "@/lib/utils"

const HoverCard = HoverCardPrimitive.Root

const HoverCardTrigger = HoverCardPrimitive.Trigger

const HoverCardContent = React.forwardRef<
  React.ElementRef<typeof HoverCardPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>
>(({ className, align = "center", sideOffset = 4, ...props }, ref) => (
  <HoverCardPrimitive.Content
    ref={ref}
    align={align}
    sideOffset={sideOffset}
    className={cn(
      "z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]",
      className
    )}
    {...props}
  />
))
HoverCardContent.displayName = HoverCardPrimitive.Content.displayName

export { HoverCard, HoverCardTrigger, HoverCardContent }

</file>
<file path="FitForge/client/src/components/ui/input-otp.tsx">
import * as React from "react"
import { OTPInput, OTPInputContext } from "input-otp"
import { Dot } from "lucide-react"

import { cn } from "@/lib/utils"

const InputOTP = React.forwardRef<
  React.ElementRef<typeof OTPInput>,
  React.ComponentPropsWithoutRef<typeof OTPInput>
>(({ className, containerClassName, ...props }, ref) => (
  <OTPInput
    ref={ref}
    containerClassName={cn(
      "flex items-center gap-2 has-[:disabled]:opacity-50",
      containerClassName
    )}
    className={cn("disabled:cursor-not-allowed", className)}
    {...props}
  />
))
InputOTP.displayName = "InputOTP"

const InputOTPGroup = React.forwardRef<
  React.ElementRef<"div">,
  React.ComponentPropsWithoutRef<"div">
>(({ className, ...props }, ref) => (
  <div ref={ref} className={cn("flex items-center", className)} {...props} />
))
InputOTPGroup.displayName = "InputOTPGroup"

const InputOTPSlot = React.forwardRef<
  React.ElementRef<"div">,
  React.ComponentPropsWithoutRef<"div"> & { index: number }
>(({ index, className, ...props }, ref) => {
  const inputOTPContext = React.useContext(OTPInputContext)
  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]

  return (
    <div
      ref={ref}
      className={cn(
        "relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md",
        isActive && "z-10 ring-2 ring-ring ring-offset-background",
        className
      )}
      {...props}
    >
      {char}
      {hasFakeCaret && (
        <div className="pointer-events-none absolute inset-0 flex items-center justify-center">
          <div className="h-4 w-px animate-caret-blink bg-foreground duration-1000" />
        </div>
      )}
    </div>
  )
})
InputOTPSlot.displayName = "InputOTPSlot"

const InputOTPSeparator = React.forwardRef<
  React.ElementRef<"div">,
  React.ComponentPropsWithoutRef<"div">
>(({ ...props }, ref) => (
  <div ref={ref} role="separator" {...props}>
    <Dot />
  </div>
))
InputOTPSeparator.displayName = "InputOTPSeparator"

export { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }

</file>
<file path="FitForge/client/src/components/ui/input.tsx">
import * as React from "react"

import { cn } from "@/lib/utils"

const Input = React.forwardRef<HTMLInputElement, React.ComponentProps<"input">>(
  ({ className, type, ...props }, ref) => {
    return (
      <input
        type={type}
        className={cn(
          "flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm",
          className
        )}
        ref={ref}
        {...props}
      />
    )
  }
)
Input.displayName = "Input"

export { Input }

</file>
<file path="FitForge/client/src/components/ui/label.tsx">
import * as React from "react"
import * as LabelPrimitive from "@radix-ui/react-label"
import { cva, type VariantProps } from "class-variance-authority"

import { cn } from "@/lib/utils"

const labelVariants = cva(
  "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
)

const Label = React.forwardRef<
  React.ElementRef<typeof LabelPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &
    VariantProps<typeof labelVariants>
>(({ className, ...props }, ref) => (
  <LabelPrimitive.Root
    ref={ref}
    className={cn(labelVariants(), className)}
    {...props}
  />
))
Label.displayName = LabelPrimitive.Root.displayName

export { Label }

</file>
<file path="FitForge/client/src/components/ui/menubar.tsx">
"use client"

import * as React from "react"
import * as MenubarPrimitive from "@radix-ui/react-menubar"
import { Check, ChevronRight, Circle } from "lucide-react"

import { cn } from "@/lib/utils"

function MenubarMenu({
  ...props
}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {
  return <MenubarPrimitive.Menu {...props} />
}

function MenubarGroup({
  ...props
}: React.ComponentProps<typeof MenubarPrimitive.Group>) {
  return <MenubarPrimitive.Group {...props} />
}

function MenubarPortal({
  ...props
}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {
  return <MenubarPrimitive.Portal {...props} />
}

function MenubarRadioGroup({
  ...props
}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {
  return <MenubarPrimitive.RadioGroup {...props} />
}

function MenubarSub({
  ...props
}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {
  return <MenubarPrimitive.Sub data-slot="menubar-sub" {...props} />
}

const Menubar = React.forwardRef<
  React.ElementRef<typeof MenubarPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>
>(({ className, ...props }, ref) => (
  <MenubarPrimitive.Root
    ref={ref}
    className={cn(
      "flex h-10 items-center space-x-1 rounded-md border bg-background p-1",
      className
    )}
    {...props}
  />
))
Menubar.displayName = MenubarPrimitive.Root.displayName

const MenubarTrigger = React.forwardRef<
  React.ElementRef<typeof MenubarPrimitive.Trigger>,
  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>
>(({ className, ...props }, ref) => (
  <MenubarPrimitive.Trigger
    ref={ref}
    className={cn(
      "flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground",
      className
    )}
    {...props}
  />
))
MenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName

const MenubarSubTrigger = React.forwardRef<
  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,
  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {
    inset?: boolean
  }
>(({ className, inset, children, ...props }, ref) => (
  <MenubarPrimitive.SubTrigger
    ref={ref}
    className={cn(
      "flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground",
      inset && "pl-8",
      className
    )}
    {...props}
  >
    {children}
    <ChevronRight className="ml-auto h-4 w-4" />
  </MenubarPrimitive.SubTrigger>
))
MenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName

const MenubarSubContent = React.forwardRef<
  React.ElementRef<typeof MenubarPrimitive.SubContent>,
  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>
>(({ className, ...props }, ref) => (
  <MenubarPrimitive.SubContent
    ref={ref}
    className={cn(
      "z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]",
      className
    )}
    {...props}
  />
))
MenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName

const MenubarContent = React.forwardRef<
  React.ElementRef<typeof MenubarPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>
>(
  (
    { className, align = "start", alignOffset = -4, sideOffset = 8, ...props },
    ref
  ) => (
    <MenubarPrimitive.Portal>
      <MenubarPrimitive.Content
        ref={ref}
        align={align}
        alignOffset={alignOffset}
        sideOffset={sideOffset}
        className={cn(
          "z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]",
          className
        )}
        {...props}
      />
    </MenubarPrimitive.Portal>
  )
)
MenubarContent.displayName = MenubarPrimitive.Content.displayName

const MenubarItem = React.forwardRef<
  React.ElementRef<typeof MenubarPrimitive.Item>,
  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {
    inset?: boolean
  }
>(({ className, inset, ...props }, ref) => (
  <MenubarPrimitive.Item
    ref={ref}
    className={cn(
      "relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      inset && "pl-8",
      className
    )}
    {...props}
  />
))
MenubarItem.displayName = MenubarPrimitive.Item.displayName

const MenubarCheckboxItem = React.forwardRef<
  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,
  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>
>(({ className, children, checked, ...props }, ref) => (
  <MenubarPrimitive.CheckboxItem
    ref={ref}
    className={cn(
      "relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      className
    )}
    checked={checked}
    {...props}
  >
    <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
      <MenubarPrimitive.ItemIndicator>
        <Check className="h-4 w-4" />
      </MenubarPrimitive.ItemIndicator>
    </span>
    {children}
  </MenubarPrimitive.CheckboxItem>
))
MenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName

const MenubarRadioItem = React.forwardRef<
  React.ElementRef<typeof MenubarPrimitive.RadioItem>,
  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>
>(({ className, children, ...props }, ref) => (
  <MenubarPrimitive.RadioItem
    ref={ref}
    className={cn(
      "relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      className
    )}
    {...props}
  >
    <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
      <MenubarPrimitive.ItemIndicator>
        <Circle className="h-2 w-2 fill-current" />
      </MenubarPrimitive.ItemIndicator>
    </span>
    {children}
  </MenubarPrimitive.RadioItem>
))
MenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName

const MenubarLabel = React.forwardRef<
  React.ElementRef<typeof MenubarPrimitive.Label>,
  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {
    inset?: boolean
  }
>(({ className, inset, ...props }, ref) => (
  <MenubarPrimitive.Label
    ref={ref}
    className={cn(
      "px-2 py-1.5 text-sm font-semibold",
      inset && "pl-8",
      className
    )}
    {...props}
  />
))
MenubarLabel.displayName = MenubarPrimitive.Label.displayName

const MenubarSeparator = React.forwardRef<
  React.ElementRef<typeof MenubarPrimitive.Separator>,
  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>
>(({ className, ...props }, ref) => (
  <MenubarPrimitive.Separator
    ref={ref}
    className={cn("-mx-1 my-1 h-px bg-muted", className)}
    {...props}
  />
))
MenubarSeparator.displayName = MenubarPrimitive.Separator.displayName

const MenubarShortcut = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLSpanElement>) => {
  return (
    <span
      className={cn(
        "ml-auto text-xs tracking-widest text-muted-foreground",
        className
      )}
      {...props}
    />
  )
}
MenubarShortcut.displayname = "MenubarShortcut"

export {
  Menubar,
  MenubarMenu,
  MenubarTrigger,
  MenubarContent,
  MenubarItem,
  MenubarSeparator,
  MenubarLabel,
  MenubarCheckboxItem,
  MenubarRadioGroup,
  MenubarRadioItem,
  MenubarPortal,
  MenubarSubContent,
  MenubarSubTrigger,
  MenubarGroup,
  MenubarSub,
  MenubarShortcut,
}

</file>
<file path="FitForge/client/src/components/ui/navigation-menu.tsx">
import * as React from "react"
import * as NavigationMenuPrimitive from "@radix-ui/react-navigation-menu"
import { cva } from "class-variance-authority"
import { ChevronDown } from "lucide-react"

import { cn } from "@/lib/utils"

const NavigationMenu = React.forwardRef<
  React.ElementRef<typeof NavigationMenuPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>
>(({ className, children, ...props }, ref) => (
  <NavigationMenuPrimitive.Root
    ref={ref}
    className={cn(
      "relative z-10 flex max-w-max flex-1 items-center justify-center",
      className
    )}
    {...props}
  >
    {children}
    <NavigationMenuViewport />
  </NavigationMenuPrimitive.Root>
))
NavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName

const NavigationMenuList = React.forwardRef<
  React.ElementRef<typeof NavigationMenuPrimitive.List>,
  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>
>(({ className, ...props }, ref) => (
  <NavigationMenuPrimitive.List
    ref={ref}
    className={cn(
      "group flex flex-1 list-none items-center justify-center space-x-1",
      className
    )}
    {...props}
  />
))
NavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName

const NavigationMenuItem = NavigationMenuPrimitive.Item

const navigationMenuTriggerStyle = cva(
  "group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent"
)

const NavigationMenuTrigger = React.forwardRef<
  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,
  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>
>(({ className, children, ...props }, ref) => (
  <NavigationMenuPrimitive.Trigger
    ref={ref}
    className={cn(navigationMenuTriggerStyle(), "group", className)}
    {...props}
  >
    {children}{" "}
    <ChevronDown
      className="relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180"
      aria-hidden="true"
    />
  </NavigationMenuPrimitive.Trigger>
))
NavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName

const NavigationMenuContent = React.forwardRef<
  React.ElementRef<typeof NavigationMenuPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>
>(({ className, ...props }, ref) => (
  <NavigationMenuPrimitive.Content
    ref={ref}
    className={cn(
      "left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto ",
      className
    )}
    {...props}
  />
))
NavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName

const NavigationMenuLink = NavigationMenuPrimitive.Link

const NavigationMenuViewport = React.forwardRef<
  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,
  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>
>(({ className, ...props }, ref) => (
  <div className={cn("absolute left-0 top-full flex justify-center")}>
    <NavigationMenuPrimitive.Viewport
      className={cn(
        "origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]",
        className
      )}
      ref={ref}
      {...props}
    />
  </div>
))
NavigationMenuViewport.displayName =
  NavigationMenuPrimitive.Viewport.displayName

const NavigationMenuIndicator = React.forwardRef<
  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,
  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>
>(({ className, ...props }, ref) => (
  <NavigationMenuPrimitive.Indicator
    ref={ref}
    className={cn(
      "top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in",
      className
    )}
    {...props}
  >
    <div className="relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md" />
  </NavigationMenuPrimitive.Indicator>
))
NavigationMenuIndicator.displayName =
  NavigationMenuPrimitive.Indicator.displayName

export {
  navigationMenuTriggerStyle,
  NavigationMenu,
  NavigationMenuList,
  NavigationMenuItem,
  NavigationMenuContent,
  NavigationMenuTrigger,
  NavigationMenuLink,
  NavigationMenuIndicator,
  NavigationMenuViewport,
}

</file>
<file path="FitForge/client/src/components/ui/pagination.tsx">
import * as React from "react"
import { ChevronLeft, ChevronRight, MoreHorizontal } from "lucide-react"

import { cn } from "@/lib/utils"
import { ButtonProps, buttonVariants } from "@/components/ui/button"

const Pagination = ({ className, ...props }: React.ComponentProps<"nav">) => (
  <nav
    role="navigation"
    aria-label="pagination"
    className={cn("mx-auto flex w-full justify-center", className)}
    {...props}
  />
)
Pagination.displayName = "Pagination"

const PaginationContent = React.forwardRef<
  HTMLUListElement,
  React.ComponentProps<"ul">
>(({ className, ...props }, ref) => (
  <ul
    ref={ref}
    className={cn("flex flex-row items-center gap-1", className)}
    {...props}
  />
))
PaginationContent.displayName = "PaginationContent"

const PaginationItem = React.forwardRef<
  HTMLLIElement,
  React.ComponentProps<"li">
>(({ className, ...props }, ref) => (
  <li ref={ref} className={cn("", className)} {...props} />
))
PaginationItem.displayName = "PaginationItem"

type PaginationLinkProps = {
  isActive?: boolean
} & Pick<ButtonProps, "size"> &
  React.ComponentProps<"a">

const PaginationLink = ({
  className,
  isActive,
  size = "icon",
  ...props
}: PaginationLinkProps) => (
  <a
    aria-current={isActive ? "page" : undefined}
    className={cn(
      buttonVariants({
        variant: isActive ? "outline" : "ghost",
        size,
      }),
      className
    )}
    {...props}
  />
)
PaginationLink.displayName = "PaginationLink"

const PaginationPrevious = ({
  className,
  ...props
}: React.ComponentProps<typeof PaginationLink>) => (
  <PaginationLink
    aria-label="Go to previous page"
    size="default"
    className={cn("gap-1 pl-2.5", className)}
    {...props}
  >
    <ChevronLeft className="h-4 w-4" />
    <span>Previous</span>
  </PaginationLink>
)
PaginationPrevious.displayName = "PaginationPrevious"

const PaginationNext = ({
  className,
  ...props
}: React.ComponentProps<typeof PaginationLink>) => (
  <PaginationLink
    aria-label="Go to next page"
    size="default"
    className={cn("gap-1 pr-2.5", className)}
    {...props}
  >
    <span>Next</span>
    <ChevronRight className="h-4 w-4" />
  </PaginationLink>
)
PaginationNext.displayName = "PaginationNext"

const PaginationEllipsis = ({
  className,
  ...props
}: React.ComponentProps<"span">) => (
  <span
    aria-hidden
    className={cn("flex h-9 w-9 items-center justify-center", className)}
    {...props}
  >
    <MoreHorizontal className="h-4 w-4" />
    <span className="sr-only">More pages</span>
  </span>
)
PaginationEllipsis.displayName = "PaginationEllipsis"

export {
  Pagination,
  PaginationContent,
  PaginationEllipsis,
  PaginationItem,
  PaginationLink,
  PaginationNext,
  PaginationPrevious,
}

</file>
<file path="FitForge/client/src/components/ui/popover.tsx">
import * as React from "react"
import * as PopoverPrimitive from "@radix-ui/react-popover"

import { cn } from "@/lib/utils"

const Popover = PopoverPrimitive.Root

const PopoverTrigger = PopoverPrimitive.Trigger

const PopoverContent = React.forwardRef<
  React.ElementRef<typeof PopoverPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>
>(({ className, align = "center", sideOffset = 4, ...props }, ref) => (
  <PopoverPrimitive.Portal>
    <PopoverPrimitive.Content
      ref={ref}
      align={align}
      sideOffset={sideOffset}
      className={cn(
        "z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]",
        className
      )}
      {...props}
    />
  </PopoverPrimitive.Portal>
))
PopoverContent.displayName = PopoverPrimitive.Content.displayName

export { Popover, PopoverTrigger, PopoverContent }

</file>
<file path="FitForge/client/src/components/ui/progress.tsx">
"use client"

import * as React from "react"
import * as ProgressPrimitive from "@radix-ui/react-progress"

import { cn } from "@/lib/utils"

const Progress = React.forwardRef<
  React.ElementRef<typeof ProgressPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>
>(({ className, value, ...props }, ref) => (
  <ProgressPrimitive.Root
    ref={ref}
    className={cn(
      "relative h-4 w-full overflow-hidden rounded-full bg-secondary",
      className
    )}
    {...props}
  >
    <ProgressPrimitive.Indicator
      className="h-full w-full flex-1 bg-primary transition-all"
      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}
    />
  </ProgressPrimitive.Root>
))
Progress.displayName = ProgressPrimitive.Root.displayName

export { Progress }

</file>
<file path="FitForge/client/src/components/ui/radio-group.tsx">
import * as React from "react"
import * as RadioGroupPrimitive from "@radix-ui/react-radio-group"
import { Circle } from "lucide-react"

import { cn } from "@/lib/utils"

const RadioGroup = React.forwardRef<
  React.ElementRef<typeof RadioGroupPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>
>(({ className, ...props }, ref) => {
  return (
    <RadioGroupPrimitive.Root
      className={cn("grid gap-2", className)}
      {...props}
      ref={ref}
    />
  )
})
RadioGroup.displayName = RadioGroupPrimitive.Root.displayName

const RadioGroupItem = React.forwardRef<
  React.ElementRef<typeof RadioGroupPrimitive.Item>,
  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>
>(({ className, ...props }, ref) => {
  return (
    <RadioGroupPrimitive.Item
      ref={ref}
      className={cn(
        "aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50",
        className
      )}
      {...props}
    >
      <RadioGroupPrimitive.Indicator className="flex items-center justify-center">
        <Circle className="h-2.5 w-2.5 fill-current text-current" />
      </RadioGroupPrimitive.Indicator>
    </RadioGroupPrimitive.Item>
  )
})
RadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName

export { RadioGroup, RadioGroupItem }

</file>
<file path="FitForge/client/src/components/ui/resizable.tsx">
"use client"

import { GripVertical } from "lucide-react"
import * as ResizablePrimitive from "react-resizable-panels"

import { cn } from "@/lib/utils"

const ResizablePanelGroup = ({
  className,
  ...props
}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (
  <ResizablePrimitive.PanelGroup
    className={cn(
      "flex h-full w-full data-[panel-group-direction=vertical]:flex-col",
      className
    )}
    {...props}
  />
)

const ResizablePanel = ResizablePrimitive.Panel

const ResizableHandle = ({
  withHandle,
  className,
  ...props
}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {
  withHandle?: boolean
}) => (
  <ResizablePrimitive.PanelResizeHandle
    className={cn(
      "relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90",
      className
    )}
    {...props}
  >
    {withHandle && (
      <div className="z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border">
        <GripVertical className="h-2.5 w-2.5" />
      </div>
    )}
  </ResizablePrimitive.PanelResizeHandle>
)

export { ResizablePanelGroup, ResizablePanel, ResizableHandle }

</file>
<file path="FitForge/client/src/components/ui/scroll-area.tsx">
import * as React from "react"
import * as ScrollAreaPrimitive from "@radix-ui/react-scroll-area"

import { cn } from "@/lib/utils"

const ScrollArea = React.forwardRef<
  React.ElementRef<typeof ScrollAreaPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>
>(({ className, children, ...props }, ref) => (
  <ScrollAreaPrimitive.Root
    ref={ref}
    className={cn("relative overflow-hidden", className)}
    {...props}
  >
    <ScrollAreaPrimitive.Viewport className="h-full w-full rounded-[inherit]">
      {children}
    </ScrollAreaPrimitive.Viewport>
    <ScrollBar />
    <ScrollAreaPrimitive.Corner />
  </ScrollAreaPrimitive.Root>
))
ScrollArea.displayName = ScrollAreaPrimitive.Root.displayName

const ScrollBar = React.forwardRef<
  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,
  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>
>(({ className, orientation = "vertical", ...props }, ref) => (
  <ScrollAreaPrimitive.ScrollAreaScrollbar
    ref={ref}
    orientation={orientation}
    className={cn(
      "flex touch-none select-none transition-colors",
      orientation === "vertical" &&
        "h-full w-2.5 border-l border-l-transparent p-[1px]",
      orientation === "horizontal" &&
        "h-2.5 flex-col border-t border-t-transparent p-[1px]",
      className
    )}
    {...props}
  >
    <ScrollAreaPrimitive.ScrollAreaThumb className="relative flex-1 rounded-full bg-border" />
  </ScrollAreaPrimitive.ScrollAreaScrollbar>
))
ScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName

export { ScrollArea, ScrollBar }

</file>
<file path="FitForge/client/src/components/ui/select.tsx">
"use client"

import * as React from "react"
import * as SelectPrimitive from "@radix-ui/react-select"
import { Check, ChevronDown, ChevronUp } from "lucide-react"

import { cn } from "@/lib/utils"

const Select = SelectPrimitive.Root

const SelectGroup = SelectPrimitive.Group

const SelectValue = SelectPrimitive.Value

const SelectTrigger = React.forwardRef<
  React.ElementRef<typeof SelectPrimitive.Trigger>,
  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>
>(({ className, children, ...props }, ref) => (
  <SelectPrimitive.Trigger
    ref={ref}
    className={cn(
      "flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1",
      className
    )}
    {...props}
  >
    {children}
    <SelectPrimitive.Icon asChild>
      <ChevronDown className="h-4 w-4 opacity-50" />
    </SelectPrimitive.Icon>
  </SelectPrimitive.Trigger>
))
SelectTrigger.displayName = SelectPrimitive.Trigger.displayName

const SelectScrollUpButton = React.forwardRef<
  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,
  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>
>(({ className, ...props }, ref) => (
  <SelectPrimitive.ScrollUpButton
    ref={ref}
    className={cn(
      "flex cursor-default items-center justify-center py-1",
      className
    )}
    {...props}
  >
    <ChevronUp className="h-4 w-4" />
  </SelectPrimitive.ScrollUpButton>
))
SelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName

const SelectScrollDownButton = React.forwardRef<
  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,
  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>
>(({ className, ...props }, ref) => (
  <SelectPrimitive.ScrollDownButton
    ref={ref}
    className={cn(
      "flex cursor-default items-center justify-center py-1",
      className
    )}
    {...props}
  >
    <ChevronDown className="h-4 w-4" />
  </SelectPrimitive.ScrollDownButton>
))
SelectScrollDownButton.displayName =
  SelectPrimitive.ScrollDownButton.displayName

const SelectContent = React.forwardRef<
  React.ElementRef<typeof SelectPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>
>(({ className, children, position = "popper", ...props }, ref) => (
  <SelectPrimitive.Portal>
    <SelectPrimitive.Content
      ref={ref}
      className={cn(
        "relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]",
        position === "popper" &&
          "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
        className
      )}
      position={position}
      {...props}
    >
      <SelectScrollUpButton />
      <SelectPrimitive.Viewport
        className={cn(
          "p-1",
          position === "popper" &&
            "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]"
        )}
      >
        {children}
      </SelectPrimitive.Viewport>
      <SelectScrollDownButton />
    </SelectPrimitive.Content>
  </SelectPrimitive.Portal>
))
SelectContent.displayName = SelectPrimitive.Content.displayName

const SelectLabel = React.forwardRef<
  React.ElementRef<typeof SelectPrimitive.Label>,
  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>
>(({ className, ...props }, ref) => (
  <SelectPrimitive.Label
    ref={ref}
    className={cn("py-1.5 pl-8 pr-2 text-sm font-semibold", className)}
    {...props}
  />
))
SelectLabel.displayName = SelectPrimitive.Label.displayName

const SelectItem = React.forwardRef<
  React.ElementRef<typeof SelectPrimitive.Item>,
  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>
>(({ className, children, ...props }, ref) => (
  <SelectPrimitive.Item
    ref={ref}
    className={cn(
      "relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      className
    )}
    {...props}
  >
    <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
      <SelectPrimitive.ItemIndicator>
        <Check className="h-4 w-4" />
      </SelectPrimitive.ItemIndicator>
    </span>

    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>
  </SelectPrimitive.Item>
))
SelectItem.displayName = SelectPrimitive.Item.displayName

const SelectSeparator = React.forwardRef<
  React.ElementRef<typeof SelectPrimitive.Separator>,
  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>
>(({ className, ...props }, ref) => (
  <SelectPrimitive.Separator
    ref={ref}
    className={cn("-mx-1 my-1 h-px bg-muted", className)}
    {...props}
  />
))
SelectSeparator.displayName = SelectPrimitive.Separator.displayName

export {
  Select,
  SelectGroup,
  SelectValue,
  SelectTrigger,
  SelectContent,
  SelectLabel,
  SelectItem,
  SelectSeparator,
  SelectScrollUpButton,
  SelectScrollDownButton,
}

</file>
<file path="FitForge/client/src/components/ui/separator.tsx">
import * as React from "react"
import * as SeparatorPrimitive from "@radix-ui/react-separator"

import { cn } from "@/lib/utils"

const Separator = React.forwardRef<
  React.ElementRef<typeof SeparatorPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>
>(
  (
    { className, orientation = "horizontal", decorative = true, ...props },
    ref
  ) => (
    <SeparatorPrimitive.Root
      ref={ref}
      decorative={decorative}
      orientation={orientation}
      className={cn(
        "shrink-0 bg-border",
        orientation === "horizontal" ? "h-[1px] w-full" : "h-full w-[1px]",
        className
      )}
      {...props}
    />
  )
)
Separator.displayName = SeparatorPrimitive.Root.displayName

export { Separator }

</file>
<file path="FitForge/client/src/components/ui/sheet.tsx">
"use client"

import * as React from "react"
import * as SheetPrimitive from "@radix-ui/react-dialog"
import { cva, type VariantProps } from "class-variance-authority"
import { X } from "lucide-react"

import { cn } from "@/lib/utils"

const Sheet = SheetPrimitive.Root

const SheetTrigger = SheetPrimitive.Trigger

const SheetClose = SheetPrimitive.Close

const SheetPortal = SheetPrimitive.Portal

const SheetOverlay = React.forwardRef<
  React.ElementRef<typeof SheetPrimitive.Overlay>,
  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>
>(({ className, ...props }, ref) => (
  <SheetPrimitive.Overlay
    className={cn(
      "fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",
      className
    )}
    {...props}
    ref={ref}
  />
))
SheetOverlay.displayName = SheetPrimitive.Overlay.displayName

const sheetVariants = cva(
  "fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500",
  {
    variants: {
      side: {
        top: "inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top",
        bottom:
          "inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom",
        left: "inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm",
        right:
          "inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm",
      },
    },
    defaultVariants: {
      side: "right",
    },
  }
)

interface SheetContentProps
  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,
    VariantProps<typeof sheetVariants> {}

const SheetContent = React.forwardRef<
  React.ElementRef<typeof SheetPrimitive.Content>,
  SheetContentProps
>(({ side = "right", className, children, ...props }, ref) => (
  <SheetPortal>
    <SheetOverlay />
    <SheetPrimitive.Content
      ref={ref}
      className={cn(sheetVariants({ side }), className)}
      {...props}
    >
      {children}
      <SheetPrimitive.Close className="absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary">
        <X className="h-4 w-4" />
        <span className="sr-only">Close</span>
      </SheetPrimitive.Close>
    </SheetPrimitive.Content>
  </SheetPortal>
))
SheetContent.displayName = SheetPrimitive.Content.displayName

const SheetHeader = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) => (
  <div
    className={cn(
      "flex flex-col space-y-2 text-center sm:text-left",
      className
    )}
    {...props}
  />
)
SheetHeader.displayName = "SheetHeader"

const SheetFooter = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) => (
  <div
    className={cn(
      "flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2",
      className
    )}
    {...props}
  />
)
SheetFooter.displayName = "SheetFooter"

const SheetTitle = React.forwardRef<
  React.ElementRef<typeof SheetPrimitive.Title>,
  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>
>(({ className, ...props }, ref) => (
  <SheetPrimitive.Title
    ref={ref}
    className={cn("text-lg font-semibold text-foreground", className)}
    {...props}
  />
))
SheetTitle.displayName = SheetPrimitive.Title.displayName

const SheetDescription = React.forwardRef<
  React.ElementRef<typeof SheetPrimitive.Description>,
  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>
>(({ className, ...props }, ref) => (
  <SheetPrimitive.Description
    ref={ref}
    className={cn("text-sm text-muted-foreground", className)}
    {...props}
  />
))
SheetDescription.displayName = SheetPrimitive.Description.displayName

export {
  Sheet,
  SheetPortal,
  SheetOverlay,
  SheetTrigger,
  SheetClose,
  SheetContent,
  SheetHeader,
  SheetFooter,
  SheetTitle,
  SheetDescription,
}

</file>
<file path="FitForge/client/src/components/ui/sidebar.tsx">
import * as React from "react"
import { Slot } from "@radix-ui/react-slot"
import { VariantProps, cva } from "class-variance-authority"
import { PanelLeft } from "lucide-react"

import { useIsMobile } from "@/hooks/use-mobile"
import { cn } from "@/lib/utils"
import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"
import { Separator } from "@/components/ui/separator"
import {
  Sheet,
  SheetContent,
  SheetDescription,
  SheetHeader,
  SheetTitle,
} from "@/components/ui/sheet"
import { Skeleton } from "@/components/ui/skeleton"
import {
  Tooltip,
  TooltipContent,
  TooltipProvider,
  TooltipTrigger,
} from "@/components/ui/tooltip"

const SIDEBAR_COOKIE_NAME = "sidebar_state"
const SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7
const SIDEBAR_WIDTH = "16rem"
const SIDEBAR_WIDTH_MOBILE = "18rem"
const SIDEBAR_WIDTH_ICON = "3rem"
const SIDEBAR_KEYBOARD_SHORTCUT = "b"

type SidebarContextProps = {
  state: "expanded" | "collapsed"
  open: boolean
  setOpen: (open: boolean) => void
  openMobile: boolean
  setOpenMobile: (open: boolean) => void
  isMobile: boolean
  toggleSidebar: () => void
}

const SidebarContext = React.createContext<SidebarContextProps | null>(null)

function useSidebar() {
  const context = React.useContext(SidebarContext)
  if (!context) {
    throw new Error("useSidebar must be used within a SidebarProvider.")
  }

  return context
}

const SidebarProvider = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<"div"> & {
    defaultOpen?: boolean
    open?: boolean
    onOpenChange?: (open: boolean) => void
  }
>(
  (
    {
      defaultOpen = true,
      open: openProp,
      onOpenChange: setOpenProp,
      className,
      style,
      children,
      ...props
    },
    ref
  ) => {
    const isMobile = useIsMobile()
    const [openMobile, setOpenMobile] = React.useState(false)

    // This is the internal state of the sidebar.
    // We use openProp and setOpenProp for control from outside the component.
    const [_open, _setOpen] = React.useState(defaultOpen)
    const open = openProp ?? _open
    const setOpen = React.useCallback(
      (value: boolean | ((value: boolean) => boolean)) => {
        const openState = typeof value === "function" ? value(open) : value
        if (setOpenProp) {
          setOpenProp(openState)
        } else {
          _setOpen(openState)
        }

        // This sets the cookie to keep the sidebar state.
        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`
      },
      [setOpenProp, open]
    )

    // Helper to toggle the sidebar.
    const toggleSidebar = React.useCallback(() => {
      return isMobile
        ? setOpenMobile((open) => !open)
        : setOpen((open) => !open)
    }, [isMobile, setOpen, setOpenMobile])

    // Adds a keyboard shortcut to toggle the sidebar.
    React.useEffect(() => {
      const handleKeyDown = (event: KeyboardEvent) => {
        if (
          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&
          (event.metaKey || event.ctrlKey)
        ) {
          event.preventDefault()
          toggleSidebar()
        }
      }

      window.addEventListener("keydown", handleKeyDown)
      return () => window.removeEventListener("keydown", handleKeyDown)
    }, [toggleSidebar])

    // We add a state so that we can do data-state="expanded" or "collapsed".
    // This makes it easier to style the sidebar with Tailwind classes.
    const state = open ? "expanded" : "collapsed"

    const contextValue = React.useMemo<SidebarContextProps>(
      () => ({
        state,
        open,
        setOpen,
        isMobile,
        openMobile,
        setOpenMobile,
        toggleSidebar,
      }),
      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]
    )

    return (
      <SidebarContext.Provider value={contextValue}>
        <TooltipProvider delayDuration={0}>
          <div
            style={
              {
                "--sidebar-width": SIDEBAR_WIDTH,
                "--sidebar-width-icon": SIDEBAR_WIDTH_ICON,
                ...style,
              } as React.CSSProperties
            }
            className={cn(
              "group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar",
              className
            )}
            ref={ref}
            {...props}
          >
            {children}
          </div>
        </TooltipProvider>
      </SidebarContext.Provider>
    )
  }
)
SidebarProvider.displayName = "SidebarProvider"

const Sidebar = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<"div"> & {
    side?: "left" | "right"
    variant?: "sidebar" | "floating" | "inset"
    collapsible?: "offcanvas" | "icon" | "none"
  }
>(
  (
    {
      side = "left",
      variant = "sidebar",
      collapsible = "offcanvas",
      className,
      children,
      ...props
    },
    ref
  ) => {
    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()

    if (collapsible === "none") {
      return (
        <div
          className={cn(
            "flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground",
            className
          )}
          ref={ref}
          {...props}
        >
          {children}
        </div>
      )
    }

    if (isMobile) {
      return (
        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>
          <SheetContent
            data-sidebar="sidebar"
            data-mobile="true"
            className="w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden"
            style={
              {
                "--sidebar-width": SIDEBAR_WIDTH_MOBILE,
              } as React.CSSProperties
            }
            side={side}
          >
            <SheetHeader className="sr-only">
              <SheetTitle>Sidebar</SheetTitle>
              <SheetDescription>Displays the mobile sidebar.</SheetDescription>
            </SheetHeader>
            <div className="flex h-full w-full flex-col">{children}</div>
          </SheetContent>
        </Sheet>
      )
    }

    return (
      <div
        ref={ref}
        className="group peer hidden text-sidebar-foreground md:block"
        data-state={state}
        data-collapsible={state === "collapsed" ? collapsible : ""}
        data-variant={variant}
        data-side={side}
      >
        {/* This is what handles the sidebar gap on desktop */}
        <div
          className={cn(
            "relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear",
            "group-data-[collapsible=offcanvas]:w-0",
            "group-data-[side=right]:rotate-180",
            variant === "floating" || variant === "inset"
              ? "group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]"
              : "group-data-[collapsible=icon]:w-[--sidebar-width-icon]"
          )}
        />
        <div
          className={cn(
            "fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex",
            side === "left"
              ? "left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]"
              : "right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]",
            // Adjust the padding for floating and inset variants.
            variant === "floating" || variant === "inset"
              ? "p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]"
              : "group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l",
            className
          )}
          {...props}
        >
          <div
            data-sidebar="sidebar"
            className="flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow"
          >
            {children}
          </div>
        </div>
      </div>
    )
  }
)
Sidebar.displayName = "Sidebar"

const SidebarTrigger = React.forwardRef<
  React.ElementRef<typeof Button>,
  React.ComponentProps<typeof Button>
>(({ className, onClick, ...props }, ref) => {
  const { toggleSidebar } = useSidebar()

  return (
    <Button
      ref={ref}
      data-sidebar="trigger"
      variant="ghost"
      size="icon"
      className={cn("h-7 w-7", className)}
      onClick={(event) => {
        onClick?.(event)
        toggleSidebar()
      }}
      {...props}
    >
      <PanelLeft />
      <span className="sr-only">Toggle Sidebar</span>
    </Button>
  )
})
SidebarTrigger.displayName = "SidebarTrigger"

const SidebarRail = React.forwardRef<
  HTMLButtonElement,
  React.ComponentProps<"button">
>(({ className, ...props }, ref) => {
  const { toggleSidebar } = useSidebar()

  return (
    <button
      ref={ref}
      data-sidebar="rail"
      aria-label="Toggle Sidebar"
      tabIndex={-1}
      onClick={toggleSidebar}
      title="Toggle Sidebar"
      className={cn(
        "absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex",
        "[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize",
        "[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize",
        "group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar",
        "[[data-side=left][data-collapsible=offcanvas]_&]:-right-2",
        "[[data-side=right][data-collapsible=offcanvas]_&]:-left-2",
        className
      )}
      {...props}
    />
  )
})
SidebarRail.displayName = "SidebarRail"

const SidebarInset = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<"main">
>(({ className, ...props }, ref) => {
  return (
    <main
      ref={ref}
      className={cn(
        "relative flex w-full flex-1 flex-col bg-background",
        "md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow",
        className
      )}
      {...props}
    />
  )
})
SidebarInset.displayName = "SidebarInset"

const SidebarInput = React.forwardRef<
  React.ElementRef<typeof Input>,
  React.ComponentProps<typeof Input>
>(({ className, ...props }, ref) => {
  return (
    <Input
      ref={ref}
      data-sidebar="input"
      className={cn(
        "h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring",
        className
      )}
      {...props}
    />
  )
})
SidebarInput.displayName = "SidebarInput"

const SidebarHeader = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<"div">
>(({ className, ...props }, ref) => {
  return (
    <div
      ref={ref}
      data-sidebar="header"
      className={cn("flex flex-col gap-2 p-2", className)}
      {...props}
    />
  )
})
SidebarHeader.displayName = "SidebarHeader"

const SidebarFooter = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<"div">
>(({ className, ...props }, ref) => {
  return (
    <div
      ref={ref}
      data-sidebar="footer"
      className={cn("flex flex-col gap-2 p-2", className)}
      {...props}
    />
  )
})
SidebarFooter.displayName = "SidebarFooter"

const SidebarSeparator = React.forwardRef<
  React.ElementRef<typeof Separator>,
  React.ComponentProps<typeof Separator>
>(({ className, ...props }, ref) => {
  return (
    <Separator
      ref={ref}
      data-sidebar="separator"
      className={cn("mx-2 w-auto bg-sidebar-border", className)}
      {...props}
    />
  )
})
SidebarSeparator.displayName = "SidebarSeparator"

const SidebarContent = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<"div">
>(({ className, ...props }, ref) => {
  return (
    <div
      ref={ref}
      data-sidebar="content"
      className={cn(
        "flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden",
        className
      )}
      {...props}
    />
  )
})
SidebarContent.displayName = "SidebarContent"

const SidebarGroup = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<"div">
>(({ className, ...props }, ref) => {
  return (
    <div
      ref={ref}
      data-sidebar="group"
      className={cn("relative flex w-full min-w-0 flex-col p-2", className)}
      {...props}
    />
  )
})
SidebarGroup.displayName = "SidebarGroup"

const SidebarGroupLabel = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<"div"> & { asChild?: boolean }
>(({ className, asChild = false, ...props }, ref) => {
  const Comp = asChild ? Slot : "div"

  return (
    <Comp
      ref={ref}
      data-sidebar="group-label"
      className={cn(
        "flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0",
        "group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0",
        className
      )}
      {...props}
    />
  )
})
SidebarGroupLabel.displayName = "SidebarGroupLabel"

const SidebarGroupAction = React.forwardRef<
  HTMLButtonElement,
  React.ComponentProps<"button"> & { asChild?: boolean }
>(({ className, asChild = false, ...props }, ref) => {
  const Comp = asChild ? Slot : "button"

  return (
    <Comp
      ref={ref}
      data-sidebar="group-action"
      className={cn(
        "absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0",
        // Increases the hit area of the button on mobile.
        "after:absolute after:-inset-2 after:md:hidden",
        "group-data-[collapsible=icon]:hidden",
        className
      )}
      {...props}
    />
  )
})
SidebarGroupAction.displayName = "SidebarGroupAction"

const SidebarGroupContent = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<"div">
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    data-sidebar="group-content"
    className={cn("w-full text-sm", className)}
    {...props}
  />
))
SidebarGroupContent.displayName = "SidebarGroupContent"

const SidebarMenu = React.forwardRef<
  HTMLUListElement,
  React.ComponentProps<"ul">
>(({ className, ...props }, ref) => (
  <ul
    ref={ref}
    data-sidebar="menu"
    className={cn("flex w-full min-w-0 flex-col gap-1", className)}
    {...props}
  />
))
SidebarMenu.displayName = "SidebarMenu"

const SidebarMenuItem = React.forwardRef<
  HTMLLIElement,
  React.ComponentProps<"li">
>(({ className, ...props }, ref) => (
  <li
    ref={ref}
    data-sidebar="menu-item"
    className={cn("group/menu-item relative", className)}
    {...props}
  />
))
SidebarMenuItem.displayName = "SidebarMenuItem"

const sidebarMenuButtonVariants = cva(
  "peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0",
  {
    variants: {
      variant: {
        default: "hover:bg-sidebar-accent hover:text-sidebar-accent-foreground",
        outline:
          "bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]",
      },
      size: {
        default: "h-8 text-sm",
        sm: "h-7 text-xs",
        lg: "h-12 text-sm group-data-[collapsible=icon]:!p-0",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  }
)

const SidebarMenuButton = React.forwardRef<
  HTMLButtonElement,
  React.ComponentProps<"button"> & {
    asChild?: boolean
    isActive?: boolean
    tooltip?: string | React.ComponentProps<typeof TooltipContent>
  } & VariantProps<typeof sidebarMenuButtonVariants>
>(
  (
    {
      asChild = false,
      isActive = false,
      variant = "default",
      size = "default",
      tooltip,
      className,
      ...props
    },
    ref
  ) => {
    const Comp = asChild ? Slot : "button"
    const { isMobile, state } = useSidebar()

    const button = (
      <Comp
        ref={ref}
        data-sidebar="menu-button"
        data-size={size}
        data-active={isActive}
        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}
        {...props}
      />
    )

    if (!tooltip) {
      return button
    }

    if (typeof tooltip === "string") {
      tooltip = {
        children: tooltip,
      }
    }

    return (
      <Tooltip>
        <TooltipTrigger asChild>{button}</TooltipTrigger>
        <TooltipContent
          side="right"
          align="center"
          hidden={state !== "collapsed" || isMobile}
          {...tooltip}
        />
      </Tooltip>
    )
  }
)
SidebarMenuButton.displayName = "SidebarMenuButton"

const SidebarMenuAction = React.forwardRef<
  HTMLButtonElement,
  React.ComponentProps<"button"> & {
    asChild?: boolean
    showOnHover?: boolean
  }
>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {
  const Comp = asChild ? Slot : "button"

  return (
    <Comp
      ref={ref}
      data-sidebar="menu-action"
      className={cn(
        "absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0",
        // Increases the hit area of the button on mobile.
        "after:absolute after:-inset-2 after:md:hidden",
        "peer-data-[size=sm]/menu-button:top-1",
        "peer-data-[size=default]/menu-button:top-1.5",
        "peer-data-[size=lg]/menu-button:top-2.5",
        "group-data-[collapsible=icon]:hidden",
        showOnHover &&
          "group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0",
        className
      )}
      {...props}
    />
  )
})
SidebarMenuAction.displayName = "SidebarMenuAction"

const SidebarMenuBadge = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<"div">
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    data-sidebar="menu-badge"
    className={cn(
      "pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground",
      "peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground",
      "peer-data-[size=sm]/menu-button:top-1",
      "peer-data-[size=default]/menu-button:top-1.5",
      "peer-data-[size=lg]/menu-button:top-2.5",
      "group-data-[collapsible=icon]:hidden",
      className
    )}
    {...props}
  />
))
SidebarMenuBadge.displayName = "SidebarMenuBadge"

const SidebarMenuSkeleton = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<"div"> & {
    showIcon?: boolean
  }
>(({ className, showIcon = false, ...props }, ref) => {
  // Random width between 50 to 90%.
  const width = React.useMemo(() => {
    return `${Math.floor(Math.random() * 40) + 50}%`
  }, [])

  return (
    <div
      ref={ref}
      data-sidebar="menu-skeleton"
      className={cn("flex h-8 items-center gap-2 rounded-md px-2", className)}
      {...props}
    >
      {showIcon && (
        <Skeleton
          className="size-4 rounded-md"
          data-sidebar="menu-skeleton-icon"
        />
      )}
      <Skeleton
        className="h-4 max-w-[--skeleton-width] flex-1"
        data-sidebar="menu-skeleton-text"
        style={
          {
            "--skeleton-width": width,
          } as React.CSSProperties
        }
      />
    </div>
  )
})
SidebarMenuSkeleton.displayName = "SidebarMenuSkeleton"

const SidebarMenuSub = React.forwardRef<
  HTMLUListElement,
  React.ComponentProps<"ul">
>(({ className, ...props }, ref) => (
  <ul
    ref={ref}
    data-sidebar="menu-sub"
    className={cn(
      "mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5",
      "group-data-[collapsible=icon]:hidden",
      className
    )}
    {...props}
  />
))
SidebarMenuSub.displayName = "SidebarMenuSub"

const SidebarMenuSubItem = React.forwardRef<
  HTMLLIElement,
  React.ComponentProps<"li">
>(({ ...props }, ref) => <li ref={ref} {...props} />)
SidebarMenuSubItem.displayName = "SidebarMenuSubItem"

const SidebarMenuSubButton = React.forwardRef<
  HTMLAnchorElement,
  React.ComponentProps<"a"> & {
    asChild?: boolean
    size?: "sm" | "md"
    isActive?: boolean
  }
>(({ asChild = false, size = "md", isActive, className, ...props }, ref) => {
  const Comp = asChild ? Slot : "a"

  return (
    <Comp
      ref={ref}
      data-sidebar="menu-sub-button"
      data-size={size}
      data-active={isActive}
      className={cn(
        "flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground",
        "data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground",
        size === "sm" && "text-xs",
        size === "md" && "text-sm",
        "group-data-[collapsible=icon]:hidden",
        className
      )}
      {...props}
    />
  )
})
SidebarMenuSubButton.displayName = "SidebarMenuSubButton"

export {
  Sidebar,
  SidebarContent,
  SidebarFooter,
  SidebarGroup,
  SidebarGroupAction,
  SidebarGroupContent,
  SidebarGroupLabel,
  SidebarHeader,
  SidebarInput,
  SidebarInset,
  SidebarMenu,
  SidebarMenuAction,
  SidebarMenuBadge,
  SidebarMenuButton,
  SidebarMenuItem,
  SidebarMenuSkeleton,
  SidebarMenuSub,
  SidebarMenuSubButton,
  SidebarMenuSubItem,
  SidebarProvider,
  SidebarRail,
  SidebarSeparator,
  SidebarTrigger,
  useSidebar,
}

</file>
<file path="FitForge/client/src/components/ui/skeleton.tsx">
import { cn } from "@/lib/utils"

function Skeleton({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) {
  return (
    <div
      className={cn("animate-pulse rounded-md bg-muted", className)}
      {...props}
    />
  )
}

export { Skeleton }

</file>
<file path="FitForge/client/src/components/ui/slider.tsx">
import * as React from "react"
import * as SliderPrimitive from "@radix-ui/react-slider"

import { cn } from "@/lib/utils"

const Slider = React.forwardRef<
  React.ElementRef<typeof SliderPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>
>(({ className, ...props }, ref) => (
  <SliderPrimitive.Root
    ref={ref}
    className={cn(
      "relative flex w-full touch-none select-none items-center",
      className
    )}
    {...props}
  >
    <SliderPrimitive.Track className="relative h-2 w-full grow overflow-hidden rounded-full bg-secondary">
      <SliderPrimitive.Range className="absolute h-full bg-primary" />
    </SliderPrimitive.Track>
    <SliderPrimitive.Thumb className="block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50" />
  </SliderPrimitive.Root>
))
Slider.displayName = SliderPrimitive.Root.displayName

export { Slider }

</file>
<file path="FitForge/client/src/components/ui/switch.tsx">
import * as React from "react"
import * as SwitchPrimitives from "@radix-ui/react-switch"

import { cn } from "@/lib/utils"

const Switch = React.forwardRef<
  React.ElementRef<typeof SwitchPrimitives.Root>,
  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>
>(({ className, ...props }, ref) => (
  <SwitchPrimitives.Root
    className={cn(
      "peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input",
      className
    )}
    {...props}
    ref={ref}
  >
    <SwitchPrimitives.Thumb
      className={cn(
        "pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0"
      )}
    />
  </SwitchPrimitives.Root>
))
Switch.displayName = SwitchPrimitives.Root.displayName

export { Switch }

</file>
<file path="FitForge/client/src/components/ui/table.tsx">
import * as React from "react"

import { cn } from "@/lib/utils"

const Table = React.forwardRef<
  HTMLTableElement,
  React.HTMLAttributes<HTMLTableElement>
>(({ className, ...props }, ref) => (
  <div className="relative w-full overflow-auto">
    <table
      ref={ref}
      className={cn("w-full caption-bottom text-sm", className)}
      {...props}
    />
  </div>
))
Table.displayName = "Table"

const TableHeader = React.forwardRef<
  HTMLTableSectionElement,
  React.HTMLAttributes<HTMLTableSectionElement>
>(({ className, ...props }, ref) => (
  <thead ref={ref} className={cn("[&_tr]:border-b", className)} {...props} />
))
TableHeader.displayName = "TableHeader"

const TableBody = React.forwardRef<
  HTMLTableSectionElement,
  React.HTMLAttributes<HTMLTableSectionElement>
>(({ className, ...props }, ref) => (
  <tbody
    ref={ref}
    className={cn("[&_tr:last-child]:border-0", className)}
    {...props}
  />
))
TableBody.displayName = "TableBody"

const TableFooter = React.forwardRef<
  HTMLTableSectionElement,
  React.HTMLAttributes<HTMLTableSectionElement>
>(({ className, ...props }, ref) => (
  <tfoot
    ref={ref}
    className={cn(
      "border-t bg-muted/50 font-medium [&>tr]:last:border-b-0",
      className
    )}
    {...props}
  />
))
TableFooter.displayName = "TableFooter"

const TableRow = React.forwardRef<
  HTMLTableRowElement,
  React.HTMLAttributes<HTMLTableRowElement>
>(({ className, ...props }, ref) => (
  <tr
    ref={ref}
    className={cn(
      "border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted",
      className
    )}
    {...props}
  />
))
TableRow.displayName = "TableRow"

const TableHead = React.forwardRef<
  HTMLTableCellElement,
  React.ThHTMLAttributes<HTMLTableCellElement>
>(({ className, ...props }, ref) => (
  <th
    ref={ref}
    className={cn(
      "h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0",
      className
    )}
    {...props}
  />
))
TableHead.displayName = "TableHead"

const TableCell = React.forwardRef<
  HTMLTableCellElement,
  React.TdHTMLAttributes<HTMLTableCellElement>
>(({ className, ...props }, ref) => (
  <td
    ref={ref}
    className={cn("p-4 align-middle [&:has([role=checkbox])]:pr-0", className)}
    {...props}
  />
))
TableCell.displayName = "TableCell"

const TableCaption = React.forwardRef<
  HTMLTableCaptionElement,
  React.HTMLAttributes<HTMLTableCaptionElement>
>(({ className, ...props }, ref) => (
  <caption
    ref={ref}
    className={cn("mt-4 text-sm text-muted-foreground", className)}
    {...props}
  />
))
TableCaption.displayName = "TableCaption"

export {
  Table,
  TableHeader,
  TableBody,
  TableFooter,
  TableHead,
  TableRow,
  TableCell,
  TableCaption,
}

</file>
<file path="FitForge/client/src/components/ui/tabs.tsx">
import * as React from "react"
import * as TabsPrimitive from "@radix-ui/react-tabs"

import { cn } from "@/lib/utils"

const Tabs = TabsPrimitive.Root

const TabsList = React.forwardRef<
  React.ElementRef<typeof TabsPrimitive.List>,
  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>
>(({ className, ...props }, ref) => (
  <TabsPrimitive.List
    ref={ref}
    className={cn(
      "inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground",
      className
    )}
    {...props}
  />
))
TabsList.displayName = TabsPrimitive.List.displayName

const TabsTrigger = React.forwardRef<
  React.ElementRef<typeof TabsPrimitive.Trigger>,
  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>
>(({ className, ...props }, ref) => (
  <TabsPrimitive.Trigger
    ref={ref}
    className={cn(
      "inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm",
      className
    )}
    {...props}
  />
))
TabsTrigger.displayName = TabsPrimitive.Trigger.displayName

const TabsContent = React.forwardRef<
  React.ElementRef<typeof TabsPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>
>(({ className, ...props }, ref) => (
  <TabsPrimitive.Content
    ref={ref}
    className={cn(
      "mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2",
      className
    )}
    {...props}
  />
))
TabsContent.displayName = TabsPrimitive.Content.displayName

export { Tabs, TabsList, TabsTrigger, TabsContent }

</file>
<file path="FitForge/client/src/components/ui/textarea.tsx">
import * as React from "react"

import { cn } from "@/lib/utils"

const Textarea = React.forwardRef<
  HTMLTextAreaElement,
  React.ComponentProps<"textarea">
>(({ className, ...props }, ref) => {
  return (
    <textarea
      className={cn(
        "flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm",
        className
      )}
      ref={ref}
      {...props}
    />
  )
})
Textarea.displayName = "Textarea"

export { Textarea }

</file>
<file path="FitForge/client/src/components/ui/toast.tsx">
import * as React from "react"
import * as ToastPrimitives from "@radix-ui/react-toast"
import { cva, type VariantProps } from "class-variance-authority"
import { X } from "lucide-react"

import { cn } from "@/lib/utils"

const ToastProvider = ToastPrimitives.Provider

const ToastViewport = React.forwardRef<
  React.ElementRef<typeof ToastPrimitives.Viewport>,
  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>
>(({ className, ...props }, ref) => (
  <ToastPrimitives.Viewport
    ref={ref}
    className={cn(
      "fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]",
      className
    )}
    {...props}
  />
))
ToastViewport.displayName = ToastPrimitives.Viewport.displayName

const toastVariants = cva(
  "group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full",
  {
    variants: {
      variant: {
        default: "border bg-background text-foreground",
        destructive:
          "destructive group border-destructive bg-destructive text-destructive-foreground",
      },
    },
    defaultVariants: {
      variant: "default",
    },
  }
)

const Toast = React.forwardRef<
  React.ElementRef<typeof ToastPrimitives.Root>,
  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &
    VariantProps<typeof toastVariants>
>(({ className, variant, ...props }, ref) => {
  return (
    <ToastPrimitives.Root
      ref={ref}
      className={cn(toastVariants({ variant }), className)}
      {...props}
    />
  )
})
Toast.displayName = ToastPrimitives.Root.displayName

const ToastAction = React.forwardRef<
  React.ElementRef<typeof ToastPrimitives.Action>,
  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>
>(({ className, ...props }, ref) => (
  <ToastPrimitives.Action
    ref={ref}
    className={cn(
      "inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive",
      className
    )}
    {...props}
  />
))
ToastAction.displayName = ToastPrimitives.Action.displayName

const ToastClose = React.forwardRef<
  React.ElementRef<typeof ToastPrimitives.Close>,
  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>
>(({ className, ...props }, ref) => (
  <ToastPrimitives.Close
    ref={ref}
    className={cn(
      "absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600",
      className
    )}
    toast-close=""
    {...props}
  >
    <X className="h-4 w-4" />
  </ToastPrimitives.Close>
))
ToastClose.displayName = ToastPrimitives.Close.displayName

const ToastTitle = React.forwardRef<
  React.ElementRef<typeof ToastPrimitives.Title>,
  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>
>(({ className, ...props }, ref) => (
  <ToastPrimitives.Title
    ref={ref}
    className={cn("text-sm font-semibold", className)}
    {...props}
  />
))
ToastTitle.displayName = ToastPrimitives.Title.displayName

const ToastDescription = React.forwardRef<
  React.ElementRef<typeof ToastPrimitives.Description>,
  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>
>(({ className, ...props }, ref) => (
  <ToastPrimitives.Description
    ref={ref}
    className={cn("text-sm opacity-90", className)}
    {...props}
  />
))
ToastDescription.displayName = ToastPrimitives.Description.displayName

type ToastProps = React.ComponentPropsWithoutRef<typeof Toast>

type ToastActionElement = React.ReactElement<typeof ToastAction>

export {
  type ToastProps,
  type ToastActionElement,
  ToastProvider,
  ToastViewport,
  Toast,
  ToastTitle,
  ToastDescription,
  ToastClose,
  ToastAction,
}

</file>
<file path="FitForge/client/src/components/ui/toaster.tsx">
import { useToast } from "@/hooks/use-toast"
import {
  Toast,
  ToastClose,
  ToastDescription,
  ToastProvider,
  ToastTitle,
  ToastViewport,
} from "@/components/ui/toast"

export function Toaster() {
  const { toasts } = useToast()

  return (
    <ToastProvider>
      {toasts.map(function ({ id, title, description, action, ...props }) {
        return (
          <Toast key={id} {...props}>
            <div className="grid gap-1">
              {title && <ToastTitle>{title}</ToastTitle>}
              {description && (
                <ToastDescription>{description}</ToastDescription>
              )}
            </div>
            {action}
            <ToastClose />
          </Toast>
        )
      })}
      <ToastViewport />
    </ToastProvider>
  )
}

</file>
<file path="FitForge/client/src/components/ui/toggle-group.tsx">
"use client"

import * as React from "react"
import * as ToggleGroupPrimitive from "@radix-ui/react-toggle-group"
import { type VariantProps } from "class-variance-authority"

import { cn } from "@/lib/utils"
import { toggleVariants } from "@/components/ui/toggle"

const ToggleGroupContext = React.createContext<
  VariantProps<typeof toggleVariants>
>({
  size: "default",
  variant: "default",
})

const ToggleGroup = React.forwardRef<
  React.ElementRef<typeof ToggleGroupPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &
    VariantProps<typeof toggleVariants>
>(({ className, variant, size, children, ...props }, ref) => (
  <ToggleGroupPrimitive.Root
    ref={ref}
    className={cn("flex items-center justify-center gap-1", className)}
    {...props}
  >
    <ToggleGroupContext.Provider value={{ variant, size }}>
      {children}
    </ToggleGroupContext.Provider>
  </ToggleGroupPrimitive.Root>
))

ToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName

const ToggleGroupItem = React.forwardRef<
  React.ElementRef<typeof ToggleGroupPrimitive.Item>,
  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &
    VariantProps<typeof toggleVariants>
>(({ className, children, variant, size, ...props }, ref) => {
  const context = React.useContext(ToggleGroupContext)

  return (
    <ToggleGroupPrimitive.Item
      ref={ref}
      className={cn(
        toggleVariants({
          variant: context.variant || variant,
          size: context.size || size,
        }),
        className
      )}
      {...props}
    >
      {children}
    </ToggleGroupPrimitive.Item>
  )
})

ToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName

export { ToggleGroup, ToggleGroupItem }

</file>
<file path="FitForge/client/src/components/ui/toggle.tsx">
import * as React from "react"
import * as TogglePrimitive from "@radix-ui/react-toggle"
import { cva, type VariantProps } from "class-variance-authority"

import { cn } from "@/lib/utils"

const toggleVariants = cva(
  "inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2",
  {
    variants: {
      variant: {
        default: "bg-transparent",
        outline:
          "border border-input bg-transparent hover:bg-accent hover:text-accent-foreground",
      },
      size: {
        default: "h-10 px-3 min-w-10",
        sm: "h-9 px-2.5 min-w-9",
        lg: "h-11 px-5 min-w-11",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  }
)

const Toggle = React.forwardRef<
  React.ElementRef<typeof TogglePrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &
    VariantProps<typeof toggleVariants>
>(({ className, variant, size, ...props }, ref) => (
  <TogglePrimitive.Root
    ref={ref}
    className={cn(toggleVariants({ variant, size, className }))}
    {...props}
  />
))

Toggle.displayName = TogglePrimitive.Root.displayName

export { Toggle, toggleVariants }

</file>
<file path="FitForge/client/src/components/ui/tooltip.tsx">
"use client"

import * as React from "react"
import * as TooltipPrimitive from "@radix-ui/react-tooltip"

import { cn } from "@/lib/utils"

const TooltipProvider = TooltipPrimitive.Provider

const Tooltip = TooltipPrimitive.Root

const TooltipTrigger = TooltipPrimitive.Trigger

const TooltipContent = React.forwardRef<
  React.ElementRef<typeof TooltipPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>
>(({ className, sideOffset = 4, ...props }, ref) => (
  <TooltipPrimitive.Content
    ref={ref}
    sideOffset={sideOffset}
    className={cn(
      "z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]",
      className
    )}
    {...props}
  />
))
TooltipContent.displayName = TooltipPrimitive.Content.displayName

export { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }

</file>
<file path="FitForge/client/src/components/community-features.tsx">
import { useState } from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Progress } from "@/components/ui/progress";
import { Avatar, AvatarFallback } from "@/components/ui/avatar";
import { Heart, MessageCircle, Share2, Users, Calendar, Target } from "lucide-react";
import { useQuery } from "@tanstack/react-query";

export function CommunityFeatures() {
  const [likedPosts, setLikedPosts] = useState(new Set<number>());

  // Mock data - in real app this would come from API
  const challenges = [
    {
      id: 1,
      name: "January Cardio Blitz",
      description: "Complete 20 cardio sessions this month. Win exclusive NFT badges!",
      participants: 12847,
      progress: 16,
      target: 20,
      timeLeft: "3 days left",
      color: "primary",
    },
    {
      id: 2,
      name: "Mindful Movement",
      description: "Practice yoga or mobility work for 10 minutes daily for 30 days.",
      participants: 8432,
      progress: 7,
      target: 30,
      timeLeft: "2 weeks left",
      color: "accent",
    },
  ];

  const socialPosts = [
    {
      id: 1,
      user: { name: "Sarah Anderson", initials: "SA" },
      time: "2 hours ago",
      content: "Just crushed a new deadlift PR! 💪 The AI form analysis helped me perfect my technique. Thanks FitForge! #PersonalRecord #Strength",
      image: "https://images.unsplash.com/photo-1581009146145-b5ef050c2e1e?ixlib=rb-4.0.3&auto=format&fit=crop&w=500&h=300",
      likes: 24,
      comments: 8,
    },
    {
      id: 2,
      user: { name: "Mike Johnson", initials: "MJ" },
      time: "5 hours ago",
      content: "Week 4 of the mindful movement challenge complete! 🧘‍♂️ The progress tracking keeps me motivated every day.",
      likes: 18,
      comments: 5,
      challenge: {
        name: "Mindful Movement",
        completed: 28,
        total: 30,
        progress: 93.3,
      },
    },
  ];

  const toggleLike = (postId: number) => {
    setLikedPosts(prev => {
      const newSet = new Set(prev);
      if (newSet.has(postId)) {
        newSet.delete(postId);
      } else {
        newSet.add(postId);
      }
      return newSet;
    });
  };

  const getProgressColor = (progress: number) => {
    if (progress >= 80) return "bg-accent";
    if (progress >= 50) return "bg-primary";
    return "bg-secondary";
  };

  return (
    <section className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16">
      <div className="text-center mb-12">
        <h2 className="text-4xl font-bold mb-4">Join the FitForge Community</h2>
        <p className="text-xl text-muted-foreground">
          Connect, compete, and celebrate with fitness enthusiasts worldwide
        </p>
      </div>

      <div className="grid lg:grid-cols-2 gap-8">
        {/* Global Challenges */}
        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-2xl">Active Challenges</CardTitle>
            <Button variant="ghost" className="text-primary font-semibold">
              View All
            </Button>
          </CardHeader>
          <CardContent className="space-y-6">
            {challenges.map((challenge) => (
              <Card key={challenge.id} className="border hover:shadow-md transition-all duration-300">
                <CardContent className="p-6">
                  <div className="flex items-center justify-between mb-4">
                    <h4 className="font-bold">{challenge.name}</h4>
                    <Badge 
                      className={
                        challenge.color === "primary" ? "bg-primary/10 text-primary" :
                        challenge.color === "accent" ? "bg-accent/10 text-accent" :
                        "bg-secondary/10 text-secondary"
                      }
                    >
                      {challenge.timeLeft}
                    </Badge>
                  </div>
                  <p className="text-sm text-muted-foreground mb-4">
                    {challenge.description}
                  </p>
                  <div className="flex items-center justify-between mb-4">
                    <div className="flex items-center">
                      <Users className="w-4 h-4 mr-2 text-muted-foreground" />
                      <span className="text-2xl font-bold text-primary mr-1">
                        {challenge.participants.toLocaleString()}
                      </span>
                      <span className="text-sm text-muted-foreground">participants</span>
                    </div>
                    <div className="text-right">
                      <div className="text-sm text-muted-foreground">Your Progress</div>
                      <div className="text-lg font-bold">
                        {challenge.progress}/{challenge.target}
                      </div>
                    </div>
                  </div>
                  <Progress
                    value={(challenge.progress / challenge.target) * 100}
                    className="mb-4"
                  />
                  <Button 
                    className={`w-full ${
                      challenge.progress > 0 ? "gradient-bg" : "btn-secondary"
                    }`}
                  >
                    {challenge.progress > 0 ? "Continue Challenge" : "Join Challenge"}
                  </Button>
                </CardContent>
              </Card>
            ))}
          </CardContent>
        </Card>

        {/* Social Feed */}
        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-2xl">Community Feed</CardTitle>
            <Button variant="ghost" className="text-primary font-semibold">
              Post Update
            </Button>
          </CardHeader>
          <CardContent className="space-y-6">
            {socialPosts.map((post) => (
              <div key={post.id} className="border-b border-border pb-6 last:border-b-0">
                <div className="flex items-center mb-4">
                  <Avatar className="mr-3">
                    <AvatarFallback className="bg-primary text-white font-semibold">
                      {post.user.initials}
                    </AvatarFallback>
                  </Avatar>
                  <div>
                    <h4 className="font-semibold">{post.user.name}</h4>
                    <span className="text-sm text-muted-foreground">{post.time}</span>
                  </div>
                </div>
                <p className="text-foreground mb-4">{post.content}</p>
                
                {post.image && (
                  <img
                    src={post.image}
                    alt="Workout achievement"
                    className="w-full h-48 object-cover rounded-xl mb-4"
                  />
                )}

                {post.challenge && (
                  <div className="bg-gradient-to-r from-accent/10 to-secondary/10 rounded-xl p-4 mb-4">
                    <div className="flex items-center justify-between">
                      <div>
                        <div className="text-2xl font-bold text-accent">
                          {post.challenge.completed}/{post.challenge.total}
                        </div>
                        <div className="text-sm text-muted-foreground">Days Completed</div>
                      </div>
                      <div className="w-16 h-16">
                        <svg className="w-16 h-16 progress-ring">
                          <circle
                            cx="32"
                            cy="32"
                            r="28"
                            stroke="hsl(var(--accent) / 0.3)"
                            strokeWidth="4"
                            fill="none"
                          />
                          <circle
                            cx="32"
                            cy="32"
                            r="28"
                            stroke="hsl(var(--accent))"
                            strokeWidth="4"
                            fill="none"
                            strokeDasharray="175.9"
                            strokeDashoffset={175.9 * (1 - post.challenge.progress / 100)}
                            strokeLinecap="round"
                          />
                        </svg>
                      </div>
                    </div>
                  </div>
                )}

                <div className="flex items-center space-x-6 text-sm text-muted-foreground">
                  <Button
                    variant="ghost"
                    size="sm"
                    onClick={() => toggleLike(post.id)}
                    className={`p-0 h-auto ${
                      likedPosts.has(post.id) ? "text-red-500" : ""
                    }`}
                  >
                    <Heart 
                      className={`w-4 h-4 mr-1 ${
                        likedPosts.has(post.id) ? "fill-current" : ""
                      }`} 
                    />
                    {post.likes + (likedPosts.has(post.id) ? 1 : 0)}
                  </Button>
                  <Button variant="ghost" size="sm" className="p-0 h-auto">
                    <MessageCircle className="w-4 h-4 mr-1" />
                    {post.comments}
                  </Button>
                  <Button variant="ghost" size="sm" className="p-0 h-auto">
                    <Share2 className="w-4 h-4 mr-1" />
                    Share
                  </Button>
                </div>
              </div>
            ))}

            <Button variant="outline" className="w-full">
              Load More Posts
            </Button>
          </CardContent>
        </Card>
      </div>
    </section>
  );
}

</file>
<file path="FitForge/client/src/components/dashboard-overview.tsx">
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Progress } from "@/components/ui/progress";
import { BarChart3, Apple, Brain, TrendingUp, Calendar, Target } from "lucide-react";

export function DashboardOverview() {
  // Mock data - in real app this would come from API
  const workoutData = [
    { day: "Mon", value: 16 },
    { day: "Tue", value: 24 },
    { day: "Wed", value: 20 },
    { day: "Thu", value: 32 },
    { day: "Fri", value: 28 },
    { day: "Sat", value: 24 },
    { day: "Sun", value: 30 },
  ];

  const nutritionData = {
    calories: { consumed: 1847, target: 2200 },
    protein: { consumed: 125, target: 150 },
    carbs: { consumed: 220, target: 275 },
  };

  const insights = [
    {
      icon: TrendingUp,
      title: "Workout Recommendation",
      description: "Based on your recovery metrics, focus on upper body strength training today.",
      color: "text-primary bg-primary/10",
    },
    {
      icon: Target,
      title: "Injury Prevention",
      description: "Your left shoulder shows tension. Consider mobility work.",
      color: "text-accent bg-accent/10",
    },
    {
      icon: Calendar,
      title: "Recovery Status",
      description: "Sleep quality: 85%. Ready for high-intensity training.",
      color: "text-secondary bg-secondary/10",
    },
  ];

  return (
    <section className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16">
      <div className="text-center mb-12">
        <h2 className="text-4xl font-bold mb-4">Your Fitness Command Center</h2>
        <p className="text-xl text-muted-foreground">
          Real-time insights, AI-powered recommendations, and seamless tracking
        </p>
      </div>

      <div className="grid lg:grid-cols-3 gap-8">
        {/* Workout Analytics Card */}
        <Card className="card-hover">
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-xl">Workout Analytics</CardTitle>
            <div className="w-12 h-12 bg-primary/10 rounded-xl flex items-center justify-center">
              <BarChart3 className="w-6 h-6 text-primary" />
            </div>
          </CardHeader>
          <CardContent>
            {/* Mock Chart */}
            <div className="h-32 mb-6 flex items-end justify-between gap-2">
              {workoutData.map((item, index) => (
                <div key={index} className="flex flex-col items-center gap-1">
                  <div
                    className="bg-gradient-to-t from-primary to-primary/50 rounded-t w-8"
                    style={{ height: `${item.value * 2}px` }}
                  />
                  <span className="text-xs text-muted-foreground">{item.day}</span>
                </div>
              ))}
            </div>

            <div className="grid grid-cols-2 gap-4">
              <div>
                <p className="text-3xl font-bold text-primary">12</p>
                <p className="text-sm text-muted-foreground">Workouts This Week</p>
              </div>
              <div>
                <p className="text-3xl font-bold text-accent">8.5</p>
                <p className="text-sm text-muted-foreground">Avg Intensity</p>
              </div>
            </div>
          </CardContent>
        </Card>

        {/* Nutrition Tracking */}
        <Card className="card-hover">
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-xl">Nutrition Today</CardTitle>
            <div className="w-12 h-12 bg-accent/10 rounded-xl flex items-center justify-center">
              <Apple className="w-6 h-6 text-accent" />
            </div>
          </CardHeader>
          <CardContent className="space-y-4">
            <div>
              <div className="flex justify-between mb-2">
                <span className="text-sm font-medium">Calories</span>
                <span className="text-sm text-muted-foreground">
                  {nutritionData.calories.consumed} / {nutritionData.calories.target}
                </span>
              </div>
              <Progress 
                value={(nutritionData.calories.consumed / nutritionData.calories.target) * 100} 
                className="h-2"
              />
            </div>

            <div>
              <div className="flex justify-between mb-2">
                <span className="text-sm font-medium">Protein</span>
                <span className="text-sm text-muted-foreground">
                  {nutritionData.protein.consumed}g / {nutritionData.protein.target}g
                </span>
              </div>
              <Progress 
                value={(nutritionData.protein.consumed / nutritionData.protein.target) * 100} 
                className="h-2"
              />
            </div>

            <div>
              <div className="flex justify-between mb-2">
                <span className="text-sm font-medium">Carbs</span>
                <span className="text-sm text-muted-foreground">
                  {nutritionData.carbs.consumed}g / {nutritionData.carbs.target}g
                </span>
              </div>
              <Progress 
                value={(nutritionData.carbs.consumed / nutritionData.carbs.target) * 100} 
                className="h-2"
              />
            </div>
          </CardContent>
        </Card>

        {/* AI Insights */}
        <Card className="card-hover">
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-xl">AI Insights</CardTitle>
            <div className="w-12 h-12 bg-secondary/10 rounded-xl flex items-center justify-center">
              <Brain className="w-6 h-6 text-secondary" />
            </div>
          </CardHeader>
          <CardContent className="space-y-4">
            {insights.map((insight, index) => (
              <div key={index} className={`p-4 ${insight.color} rounded-xl`}>
                <div className="flex items-center mb-2">
                  <insight.icon className="w-4 h-4 mr-2" />
                  <span className="font-semibold text-sm">{insight.title}</span>
                </div>
                <p className="text-sm text-muted-foreground">{insight.description}</p>
              </div>
            ))}
          </CardContent>
        </Card>
      </div>
    </section>
  );
}

</file>
<file path="FitForge/client/src/components/footer.tsx">
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Dumbbell, Twitter, Instagram, Youtube, ArrowRight } from "lucide-react";
import { Link } from "wouter";

export function Footer() {
  return (
    <footer className="bg-dark text-white py-16">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-8">
          <div>
            <div className="flex items-center space-x-2 mb-6">
              <div className="w-8 h-8 gradient-bg rounded-lg flex items-center justify-center">
                <Dumbbell className="w-4 h-4 text-white" />
              </div>
              <span className="text-xl font-bold">FitForge</span>
            </div>
            <p className="text-gray-400 mb-6">
              The ultimate AI-powered fitness ecosystem that revolutionizes how you train, compete, and achieve your goals.
            </p>
            <div className="flex space-x-4">
              <Button variant="ghost" size="icon" className="w-10 h-10 bg-gray-800 hover:bg-primary">
                <Twitter className="w-4 h-4" />
              </Button>
              <Button variant="ghost" size="icon" className="w-10 h-10 bg-gray-800 hover:bg-primary">
                <Instagram className="w-4 h-4" />
              </Button>
              <Button variant="ghost" size="icon" className="w-10 h-10 bg-gray-800 hover:bg-primary">
                <Youtube className="w-4 h-4" />
              </Button>
            </div>
          </div>

          <div>
            <h4 className="font-bold text-lg mb-6">Platform</h4>
            <ul className="space-y-3 text-gray-400">
              <li>
                <Link href="/workouts" className="hover:text-white transition-colors duration-200">
                  Workouts
                </Link>
              </li>
              <li>
                <Link href="/nutrition" className="hover:text-white transition-colors duration-200">
                  Nutrition
                </Link>
              </li>
              <li>
                <Link href="/progress" className="hover:text-white transition-colors duration-200">
                  Progress Tracking
                </Link>
              </li>
              <li>
                <Link href="/ai-analysis" className="hover:text-white transition-colors duration-200">
                  AI Analysis
                </Link>
              </li>
              <li>
                <Link href="/community" className="hover:text-white transition-colors duration-200">
                  Community
                </Link>
              </li>
            </ul>
          </div>

          <div>
            <h4 className="font-bold text-lg mb-6">Support</h4>
            <ul className="space-y-3 text-gray-400">
              <li>
                <Link href="/help" className="hover:text-white transition-colors duration-200">
                  Help Center
                </Link>
              </li>
              <li>
                <Link href="/contact" className="hover:text-white transition-colors duration-200">
                  Contact Us
                </Link>
              </li>
              <li>
                <Link href="/privacy" className="hover:text-white transition-colors duration-200">
                  Privacy Policy
                </Link>
              </li>
              <li>
                <Link href="/terms" className="hover:text-white transition-colors duration-200">
                  Terms of Service
                </Link>
              </li>
              <li>
                <Link href="/api" className="hover:text-white transition-colors duration-200">
                  API Documentation
                </Link>
              </li>
            </ul>
          </div>

          <div>
            <h4 className="font-bold text-lg mb-6">Stay Updated</h4>
            <p className="text-gray-400 mb-4">
              Get the latest features and fitness tips delivered to your inbox.
            </p>
            <div className="flex">
              <Input
                type="email"
                placeholder="Enter your email"
                className="flex-1 bg-gray-800 border-gray-700 rounded-l-lg rounded-r-none focus:ring-primary"
              />
              <Button className="gradient-bg rounded-l-none rounded-r-lg px-4">
                <ArrowRight className="w-4 h-4" />
              </Button>
            </div>
          </div>
        </div>

        <div className="border-t border-gray-800 mt-12 pt-8 text-center text-gray-400">
          <p>&copy; 2024 FitForge. All rights reserved. Built with passion for fitness excellence.</p>
        </div>
      </div>
    </footer>
  );
}

</file>
<file path="FitForge/client/src/components/freeform-workout-logger.tsx">
import React, { useState, useEffect } from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Badge } from "@/components/ui/badge";
import { Separator } from "@/components/ui/separator";
import { 
  Plus,
  Dumbbell,
  Timer,
  Target,
  Check,
  Trash2,
  Search,
  Filter
} from "lucide-react";
import { useToast } from "@/hooks/use-toast";

// Real exercise data structure from API
interface Exercise {
  exerciseName: string;
  equipmentType: string;
  category: 'Compound' | 'Isolation' | 'Explosive' | 'Functional';
  movementType: string;
  workoutType: string;
  variation: 'A' | 'B' | 'A/B';
  weight: number | string;
  restTime?: string;
  reps: number;
  primaryMuscles: Array<{ muscle: string; percentage: number }>;
  secondaryMuscles?: Array<{ muscle: string; percentage: number }>;
  equipment: string[];
  difficulty: string;
}

interface WorkoutSet {
  id: string;
  exerciseName: string;
  equipment: string;
  weight: number;
  reps: number;
  timestamp: Date;
  volume: number;
  formScore?: number;
  notes?: string;
  ghostText?: {
    targetWeight?: number;
    targetReps?: number;
    previousWeight?: number;
    previousReps?: number;
    previousDate?: string;
  };
}

export function FreeformWorkoutLogger() {
  const { toast } = useToast();
  
  // State for exercises from API
  const [exercises, setExercises] = useState<Exercise[]>([]);
  const [loading, setLoading] = useState(true);
  
  // Search and filters - show ALL exercises first, then filter
  const [searchTerm, setSearchTerm] = useState<string>('');
  const [selectedWorkoutType, setSelectedWorkoutType] = useState<string>('');
  const [selectedEquipmentType, setSelectedEquipmentType] = useState<string>('');
  const [selectedDifficulty, setSelectedDifficulty] = useState<string>('');
  const [selectedCategory, setSelectedCategory] = useState<string>('');
  
  // Exercise selection
  const [selectedExercise, setSelectedExercise] = useState<Exercise | null>(null);
  const [selectedEquipment, setSelectedEquipment] = useState<string>('');
  
  // Set logging
  const [weight, setWeight] = useState<string>('');
  const [reps, setReps] = useState<string>('');
  const [formScore, setFormScore] = useState<string>('');
  const [notes, setNotes] = useState<string>('');
  
  // Session data
  const [loggedSets, setLoggedSets] = useState<WorkoutSet[]>([]);
  const [sessionStartTime] = useState<Date>(new Date());
  const [currentSessionId, setCurrentSessionId] = useState<number | null>(null);
  const [sessionSaving, setSessionSaving] = useState(false);

  // Ghost text for previous performance
  const [ghostText, setGhostText] = useState<{
    targetWeight?: number;
    targetReps?: number;
    previousWeight?: number;
    previousReps?: number;
    previousDate?: string;
  }>({});

  // Fetch exercises from API - show ALL 38 exercises first
  useEffect(() => {
    const fetchExercises = async () => {
      try {
        const response = await fetch('/api/exercises');
        if (response.ok) {
          const data = await response.json();
          setExercises(data);
          console.log(`Loaded ${data.length} exercises from API`);
        } else {
          toast({
            title: "Error loading exercises",
            description: "Could not fetch exercise database",
            variant: "destructive",
          });
        }
      } catch (error) {
        console.error('Error fetching exercises:', error);
        toast({
          title: "Error loading exercises", 
          description: "Could not connect to exercise database",
          variant: "destructive",
        });
      } finally {
        setLoading(false);
      }
    };

    fetchExercises();
  }, [toast]);

  // Session recovery - check for incomplete sessions on load
  useEffect(() => {
    const checkForIncompleteSession = async () => {
      try {
        const response = await fetch('/api/workout-sessions');
        if (response.ok) {
          const sessions = await response.json();
          const incompleteSession = sessions.find((s: any) => s.completionStatus === "in_progress");
          
          if (incompleteSession) {
            setCurrentSessionId(incompleteSession.id);
            
            // Restore sets from session data
            if (incompleteSession.exercises && incompleteSession.exercises.length > 0) {
              const restoredSets: WorkoutSet[] = [];
              incompleteSession.exercises.forEach((exercise: any) => {
                exercise.sets.forEach((set: any, index: number) => {
                  restoredSets.push({
                    id: `restored-${exercise.exerciseName}-${index}`,
                    exerciseName: exercise.exerciseName,
                    equipment: set.equipment,
                    weight: set.weight,
                    reps: set.reps,
                    timestamp: new Date(set.timestamp),
                    volume: set.volume,
                    formScore: set.formScore,
                    notes: set.notes
                  });
                });
              });
              setLoggedSets(restoredSets);
              
              toast({
                title: "Session Restored",
                description: `Resumed workout with ${restoredSets.length} sets`,
              });
            }
          }
        }
      } catch (error) {
        console.error('Error checking for incomplete session:', error);
      }
    };

    // Only check after exercises are loaded
    if (exercises.length > 0) {
      checkForIncompleteSession();
    }
  }, [exercises.length, toast]);

  // Fetch ghost text when exercise is selected
  useEffect(() => {
    if (selectedExercise) {
      const fetchPreviousData = async () => {
        try {
          const response = await fetch(`/api/exercises/${encodeURIComponent(selectedExercise.exerciseName)}/previous`);
          if (response.ok) {
            const data = await response.json();
            setGhostText(data);
            // Pre-fill with target values
            if (data.weight) setWeight(data.weight.toString());
            if (data.reps) setReps(data.reps.toString());
          }
        } catch (error) {
          console.error('Error fetching previous exercise data:', error);
        }
      };
      
      fetchPreviousData();
    } else {
      setGhostText({});
    }
  }, [selectedExercise]);

  // Filtered exercises - search and filter applied to ALL exercises
  const filteredExercises = exercises.filter(exercise => {
    // Search filter
    if (searchTerm && !exercise.exerciseName.toLowerCase().includes(searchTerm.toLowerCase())) {
      return false;
    }
    
    // Dropdown filters
    if (selectedWorkoutType && exercise.workoutType !== selectedWorkoutType) return false;
    if (selectedEquipmentType && exercise.equipmentType !== selectedEquipmentType) return false;
    if (selectedDifficulty && exercise.difficulty !== selectedDifficulty) return false;
    if (selectedCategory && exercise.category !== selectedCategory) return false;
    
    return true;
  });

  // Get unique values for filter dropdowns
  const availableWorkoutTypes = Array.from(new Set(exercises.map(ex => ex.workoutType)));
  const availableEquipmentTypes = Array.from(new Set(exercises.map(ex => ex.equipmentType)));
  const availableDifficulties = Array.from(new Set(exercises.map(ex => ex.difficulty)));
  const availableCategories = Array.from(new Set(exercises.map(ex => ex.category)));

  // Session management functions
  const createWorkoutSession = async (): Promise<number | null> => {
    try {
      setSessionSaving(true);
      
      // Find the "Freeform Workout" ID (it should be the last one created)
      const workoutsResponse = await fetch('/api/workouts');
      if (!workoutsResponse.ok) throw new Error('Failed to fetch workouts');
      
      const workouts = await workoutsResponse.json();
      const freeformWorkout = workouts.find((w: any) => w.name === "Freeform Workout");
      
      if (!freeformWorkout) {
        throw new Error('Freeform workout not found');
      }

      const sessionData = {
        workoutId: freeformWorkout.id,
        startTime: sessionStartTime.toISOString(),
        completionStatus: "in_progress",
        exercises: [],
        notes: "Freeform workout session"
      };

      const response = await fetch('/api/workout-sessions', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(sessionData)
      });

      if (!response.ok) throw new Error('Failed to create workout session');
      
      const session = await response.json();
      setCurrentSessionId(session.id);
      
      console.log('Created workout session:', session.id);
      return session.id;
    } catch (error) {
      console.error('Error creating workout session:', error);
      toast({
        title: "Session Save Error",
        description: "Could not create workout session",
        variant: "destructive"
      });
      return null;
    } finally {
      setSessionSaving(false);
    }
  };

  const updateWorkoutSession = async (sessionId: number, sets: WorkoutSet[]) => {
    try {
      setSessionSaving(true);
      
      // Group sets by exercise name
      const exerciseGroups = sets.reduce((groups, set) => {
        if (!groups[set.exerciseName]) {
          groups[set.exerciseName] = [];
        }
        groups[set.exerciseName].push({
          weight: set.weight,
          reps: set.reps,
          equipment: set.equipment,
          volume: set.volume,
          formScore: set.formScore,
          notes: set.notes,
          timestamp: set.timestamp.toISOString()
        });
        return groups;
      }, {} as Record<string, any[]>);

      // Convert to exercises array format
      const exercisesData = Object.entries(exerciseGroups).map(([exerciseName, sets]) => ({
        exerciseName,
        sets
      }));

      const totalVolume = sets.reduce((sum, set) => sum + set.volume, 0);
      const averageFormScore = sets.filter(s => s.formScore).length > 0 
        ? sets.filter(s => s.formScore).reduce((sum, s) => sum + (s.formScore || 0), 0) / sets.filter(s => s.formScore).length
        : null;

      const updateData = {
        exercises: exercisesData,
        totalDuration: Math.round((Date.now() - sessionStartTime.getTime()) / 60000), // in minutes
        caloriesBurned: Math.round(totalVolume * 0.1), // estimate
        formScore: averageFormScore
      };

      const response = await fetch(`/api/workout-sessions/${sessionId}`, {
        method: 'PATCH',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(updateData)
      });

      if (!response.ok) throw new Error('Failed to update workout session');
      
      console.log('Updated workout session:', sessionId);
    } catch (error) {
      console.error('Error updating workout session:', error);
      toast({
        title: "Auto-Save Error",
        description: "Could not save workout progress",
        variant: "destructive"
      });
    } finally {
      setSessionSaving(false);
    }
  };

  const completeWorkoutSession = async (sessionId: number) => {
    try {
      const updateData = {
        endTime: new Date().toISOString(),
        completionStatus: "completed"
      };

      const response = await fetch(`/api/workout-sessions/${sessionId}`, {
        method: 'PATCH',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(updateData)
      });

      if (!response.ok) throw new Error('Failed to complete workout session');
      
      toast({
        title: "Workout Completed! 🎉",
        description: "Your session has been saved successfully",
      });
    } catch (error) {
      console.error('Error completing workout session:', error);
      toast({
        title: "Completion Error",
        description: "Could not mark workout as complete",
        variant: "destructive"
      });
    }
  };

  const handleLogSet = async () => {
    if (!selectedExercise || !selectedEquipment || !weight || !reps) {
      toast({
        title: "Missing Information",
        description: "Please select exercise, equipment, weight, and reps",
        variant: "destructive",
      });
      return;
    }

    const weightNum = parseFloat(weight);
    const repsNum = parseInt(reps);
    const formScoreNum = formScore ? parseFloat(formScore) : undefined;
    
    if (isNaN(weightNum) || isNaN(repsNum) || weightNum <= 0 || repsNum <= 0) {
      toast({
        title: "Invalid Input",
        description: "Weight and reps must be positive numbers",
        variant: "destructive",
      });
      return;
    }

    if (formScoreNum && (formScoreNum < 1 || formScoreNum > 10)) {
      toast({
        title: "Invalid Form Score",
        description: "Form score must be between 1-10",
        variant: "destructive",
      });
      return;
    }

    const newSet: WorkoutSet = {
      id: `${Date.now()}-${Math.random()}`,
      exerciseName: selectedExercise.exerciseName,
      equipment: selectedEquipment,
      weight: weightNum,
      reps: repsNum,
      timestamp: new Date(),
      volume: weightNum * repsNum,
      formScore: formScoreNum,
      notes: notes || undefined,
      ghostText
    };

    const updatedSets = [...loggedSets, newSet];
    setLoggedSets(updatedSets);
    
    // Create session on first set, or update existing session
    let sessionId = currentSessionId;
    if (!sessionId && updatedSets.length === 1) {
      sessionId = await createWorkoutSession();
    }
    
    // Auto-save the session with the new set
    if (sessionId) {
      await updateWorkoutSession(sessionId, updatedSets);
    }
    
    // Clear inputs for next set but keep exercise/equipment selected
    setWeight('');
    setReps('');
    setFormScore('');
    setNotes('');

    toast({
      title: "Set Logged!",
      description: `${selectedExercise.exerciseName}: ${repsNum} reps @ ${weightNum}lbs (${newSet.volume} volume)`,
    });
  };

  const handleDeleteSet = async (setId: string) => {
    const updatedSets = loggedSets.filter(set => set.id !== setId);
    setLoggedSets(updatedSets);
    
    // Update the session if it exists
    if (currentSessionId && updatedSets.length > 0) {
      await updateWorkoutSession(currentSessionId, updatedSets);
    }
    
    toast({
      title: "Set Deleted",
      description: "Set removed from workout",
    });
  };

  const resetFilters = () => {
    setSearchTerm('');
    setSelectedWorkoutType('');
    setSelectedEquipmentType('');
    setSelectedDifficulty('');
    setSelectedCategory('');
    setSelectedExercise(null);
    setSelectedEquipment('');
    setWeight('');
    setReps('');
    setFormScore('');
    setNotes('');
  };

  const totalVolume = loggedSets.reduce((sum, set) => sum + set.volume, 0);
  const uniqueExercises = Array.from(new Set(loggedSets.map(set => set.exerciseName))).length;
  const averageFormScore = loggedSets.filter(s => s.formScore).length > 0 
    ? loggedSets.filter(s => s.formScore).reduce((sum, s) => sum + (s.formScore || 0), 0) / loggedSets.filter(s => s.formScore).length
    : 0;

  if (loading) {
    return (
      <div className="min-h-screen bg-background p-4">
        <div className="max-w-6xl mx-auto">
          <Card>
            <CardContent className="p-8 text-center">
              <div className="animate-spin rounded-full h-32 w-32 border-b-2 border-primary mx-auto"></div>
              <p className="mt-4 text-muted-foreground">Loading exercise database...</p>
            </CardContent>
          </Card>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-background p-4">
      <div className="max-w-6xl mx-auto space-y-6">
        
        {/* Header */}
        <Card>
          <CardHeader>
            <CardTitle className="text-2xl">Freeform Workout Logger</CardTitle>
            <p className="text-muted-foreground">
              Choose from {exercises.length} real exercises with precise muscle targeting
            </p>
          </CardHeader>
        </Card>

        <div className="grid lg:grid-cols-2 gap-6">
          
          {/* Exercise Selection Column */}
          <div className="space-y-6">
            
            {/* Search and Filters */}
            <Card>
              <CardHeader>
                <CardTitle className="text-lg">Find Exercise</CardTitle>
                <p className="text-sm text-muted-foreground">
                  Showing {filteredExercises.length} of {exercises.length} exercises
                </p>
              </CardHeader>
              <CardContent className="space-y-4">
                
                {/* Search */}
                <div className="relative">
                  <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground w-4 h-4" />
                  <Input
                    type="text"
                    placeholder="Search exercises by name..."
                    value={searchTerm}
                    onChange={(e) => setSearchTerm(e.target.value)}
                    className="pl-10"
                  />
                </div>

                {/* Filter dropdowns */}
                <div className="grid grid-cols-2 gap-3">
                  <div>
                    <Label>Workout Type</Label>
                    <Select value={selectedWorkoutType} onValueChange={setSelectedWorkoutType}>
                      <SelectTrigger>
                        <SelectValue placeholder="All types" />
                      </SelectTrigger>
                      <SelectContent>
                        <SelectItem value="">All types</SelectItem>
                        {availableWorkoutTypes.map(type => (
                          <SelectItem key={type} value={type}>
                            {type} ({exercises.filter(e => e.workoutType === type).length})
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </div>

                  <div>
                    <Label>Equipment</Label>
                    <Select value={selectedEquipmentType} onValueChange={setSelectedEquipmentType}>
                      <SelectTrigger>
                        <SelectValue placeholder="All equipment" />
                      </SelectTrigger>
                      <SelectContent>
                        <SelectItem value="">All equipment</SelectItem>
                        {availableEquipmentTypes.map(equipment => (
                          <SelectItem key={equipment} value={equipment}>
                            {equipment} ({exercises.filter(e => e.equipmentType === equipment).length})
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </div>

                  <div>
                    <Label>Difficulty</Label>
                    <Select value={selectedDifficulty} onValueChange={setSelectedDifficulty}>
                      <SelectTrigger>
                        <SelectValue placeholder="All levels" />
                      </SelectTrigger>
                      <SelectContent>
                        <SelectItem value="">All levels</SelectItem>
                        {availableDifficulties.map(difficulty => (
                          <SelectItem key={difficulty} value={difficulty}>
                            {difficulty} ({exercises.filter(e => e.difficulty === difficulty).length})
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </div>

                  <div>
                    <Label>Category</Label>
                    <Select value={selectedCategory} onValueChange={setSelectedCategory}>
                      <SelectTrigger>
                        <SelectValue placeholder="All categories" />
                      </SelectTrigger>
                      <SelectContent>
                        <SelectItem value="">All categories</SelectItem>
                        {availableCategories.map(category => (
                          <SelectItem key={category} value={category}>
                            {category} ({exercises.filter(e => e.category === category).length})
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </div>
                </div>

                <Button onClick={resetFilters} variant="outline" className="w-full">
                  <Filter className="w-4 h-4 mr-2" />
                  Clear All Filters
                </Button>
              </CardContent>
            </Card>

            {/* Exercise List */}
            <Card>
              <CardHeader>
                <CardTitle className="text-lg">Select Exercise</CardTitle>
              </CardHeader>
              <CardContent>
                {filteredExercises.length > 0 ? (
                  <div className="space-y-2 max-h-96 overflow-y-auto">
                    {filteredExercises.map((exercise, index) => (
                      <div
                        key={`${exercise.exerciseName}-${index}`}
                        className={`p-3 border rounded-lg cursor-pointer transition-colors ${
                          selectedExercise?.exerciseName === exercise.exerciseName 
                            ? 'border-primary bg-primary/10' 
                            : 'border-border hover:border-primary/50'
                        }`}
                        onClick={() => {
                          setSelectedExercise(exercise);
                          setSelectedEquipment(''); // Reset equipment when exercise changes
                        }}
                      >
                        <div className="flex items-center justify-between">
                          <h4 className="font-medium">{exercise.exerciseName}</h4>
                          <div className="flex gap-1 flex-wrap">
                            <Badge variant="outline" className="text-xs">
                              {exercise.workoutType}
                            </Badge>
                            <Badge variant="outline" className="text-xs">
                              {exercise.equipmentType}
                            </Badge>
                            <Badge variant="outline" className="text-xs">
                              {exercise.difficulty}
                            </Badge>
                            {exercise.variation !== 'A/B' && (
                              <Badge variant="outline" className="text-xs">
                                {exercise.variation}
                              </Badge>
                            )}
                          </div>
                        </div>
                        <div className="text-sm text-muted-foreground mt-1">
                          <div>Primary: {exercise.primaryMuscles.map(m => `${m.muscle} ${m.percentage}%`).join(', ')}</div>
                          <div>Equipment: {exercise.equipment.join(', ')}</div>
                        </div>
                      </div>
                    ))}
                  </div>
                ) : (
                  <div className="text-center py-8 text-muted-foreground">
                    <Dumbbell className="w-12 h-12 mx-auto mb-4 opacity-50" />
                    <p>No exercises match your current filters.</p>
                    <p className="text-sm">Try adjusting your search or filters above.</p>
                  </div>
                )}
              </CardContent>
            </Card>

            {/* Equipment Selection */}
            {selectedExercise && (
              <Card>
                <CardHeader>
                  <CardTitle className="text-lg">Equipment for {selectedExercise.exerciseName}</CardTitle>
                </CardHeader>
                <CardContent>
                  <Select value={selectedEquipment} onValueChange={setSelectedEquipment}>
                    <SelectTrigger>
                      <SelectValue placeholder="Select equipment" />
                    </SelectTrigger>
                    <SelectContent>
                      {selectedExercise.equipment.map(equipment => (
                        <SelectItem key={equipment} value={equipment}>{equipment}</SelectItem>
                      ))}
                    </SelectContent>
                  </Select>
                </CardContent>
              </Card>
            )}
          </div>

          {/* Set Logging Column */}
          <div className="space-y-6">
            
            {/* Session Stats */}
            <Card>
              <CardHeader>
                <CardTitle className="text-lg flex items-center justify-between">
                  Session Stats
                  {sessionSaving && (
                    <div className="text-xs text-muted-foreground flex items-center">
                      <div className="animate-spin rounded-full h-3 w-3 border-b border-primary mr-1"></div>
                      Saving...
                    </div>
                  )}
                  {currentSessionId && !sessionSaving && (
                    <div className="text-xs text-green-600">✓ Auto-saved</div>
                  )}
                </CardTitle>
              </CardHeader>
              <CardContent className="space-y-4">
                <div className="grid grid-cols-3 gap-4 text-center">
                  <div>
                    <div className="text-2xl font-bold text-primary">{loggedSets.length}</div>
                    <div className="text-xs text-muted-foreground">Sets</div>
                  </div>
                  <div>
                    <div className="text-2xl font-bold text-accent">{totalVolume}</div>
                    <div className="text-xs text-muted-foreground">Volume (lbs)</div>
                  </div>
                  <div>
                    <div className="text-2xl font-bold text-secondary">{uniqueExercises}</div>
                    <div className="text-xs text-muted-foreground">Exercises</div>
                  </div>
                </div>
                {averageFormScore > 0 && (
                  <div className="text-center">
                    <div className="text-lg font-bold text-orange-500">{averageFormScore.toFixed(1)}/10</div>
                    <div className="text-xs text-muted-foreground">Avg Form Score</div>
                  </div>
                )}

                {/* Session duration */}
                <div className="text-center pt-2 border-t">
                  <div className="text-lg font-bold text-blue-600">
                    {Math.round((Date.now() - sessionStartTime.getTime()) / 60000)} min
                  </div>
                  <div className="text-xs text-muted-foreground">Duration</div>
                </div>

                {/* Complete workout button */}
                {loggedSets.length > 0 && currentSessionId && (
                  <Button 
                    onClick={() => completeWorkoutSession(currentSessionId)}
                    className="w-full mt-4"
                    variant="outline"
                  >
                    <Check className="w-4 h-4 mr-2" />
                    Complete Workout
                  </Button>
                )}
              </CardContent>
            </Card>

            {/* Set Logging Form */}
            {selectedExercise && selectedEquipment && (
              <Card>
                <CardHeader>
                  <CardTitle className="text-lg">Log Set</CardTitle>
                  <p className="text-sm text-muted-foreground">
                    {selectedExercise.exerciseName} using {selectedEquipment}
                  </p>
                </CardHeader>
                <CardContent className="space-y-4">
                  
                  {/* Ghost text display */}
                  {ghostText.targetWeight && ghostText.targetReps && (
                    <div className="p-3 bg-primary/10 rounded-lg border border-primary/20">
                      <div className="text-sm font-medium text-primary">Target (+3%)</div>
                      <div className="text-sm text-muted-foreground">
                        {ghostText.targetWeight}lbs × {ghostText.targetReps} reps
                        {ghostText.previousWeight && ghostText.previousReps && (
                          <span className="block">
                            Previous: {ghostText.previousWeight}lbs × {ghostText.previousReps} reps
                            {ghostText.previousDate && ` on ${new Date(ghostText.previousDate).toLocaleDateString()}`}
                          </span>
                        )}
                      </div>
                    </div>
                  )}

                  <div className="grid grid-cols-2 gap-4">
                    <div>
                      <Label htmlFor="weight">Weight (lbs)</Label>
                      <Input
                        id="weight"
                        type="number"
                        value={weight}
                        onChange={(e) => setWeight(e.target.value)}
                        placeholder={ghostText.targetWeight ? ghostText.targetWeight.toString() : "0"}
                        step="0.5"
                        min="0"
                      />
                    </div>
                    <div>
                      <Label htmlFor="reps">Reps</Label>
                      <Input
                        id="reps"
                        type="number"
                        value={reps}
                        onChange={(e) => setReps(e.target.value)}
                        placeholder={ghostText.targetReps ? ghostText.targetReps.toString() : "0"}
                        min="1"
                      />
                    </div>
                  </div>

                  <div className="grid grid-cols-2 gap-4">
                    <div>
                      <Label htmlFor="formScore">Form Score (1-10)</Label>
                      <Input
                        id="formScore"
                        type="number"
                        value={formScore}
                        onChange={(e) => setFormScore(e.target.value)}
                        placeholder="Optional"
                        min="1"
                        max="10"
                        step="0.5"
                      />
                    </div>
                    <div className="flex items-end">
                      <Button 
                        onClick={handleLogSet} 
                        className="w-full gradient-bg"
                        disabled={!weight || !reps}
                      >
                        <Check className="w-4 h-4 mr-2" />
                        Log Set
                      </Button>
                    </div>
                  </div>

                  <div>
                    <Label htmlFor="notes">Notes (optional)</Label>
                    <Input
                      id="notes"
                      value={notes}
                      onChange={(e) => setNotes(e.target.value)}
                      placeholder="How did it feel?"
                    />
                  </div>

                  {weight && reps && (
                    <div className="p-3 bg-muted/30 rounded-lg">
                      <div className="text-sm font-medium">
                        Set Volume: {parseFloat(weight) * parseInt(reps)} lbs
                      </div>
                      <div className="text-sm text-muted-foreground">
                        Est. Calories: {Math.round(parseFloat(weight) * parseInt(reps) * 0.1)}
                      </div>
                    </div>
                  )}
                </CardContent>
              </Card>
            )}

            {/* Logged Sets */}
            {loggedSets.length > 0 && (
              <Card>
                <CardHeader>
                  <CardTitle className="text-lg">Today's Sets</CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="space-y-2 max-h-64 overflow-y-auto">
                    {loggedSets.map((set, index) => (
                      <div key={set.id} className="flex items-center justify-between p-3 bg-muted/30 rounded-lg">
                        <div className="flex-1">
                          <div className="font-medium text-sm">{set.exerciseName}</div>
                          <div className="text-xs text-muted-foreground">
                            {set.reps} reps @ {set.weight}lbs ({set.equipment})
                            {set.formScore && ` • Form: ${set.formScore}/10`}
                          </div>
                          <div className="text-xs text-muted-foreground">
                            Volume: {set.volume} • {set.timestamp.toLocaleTimeString()}
                          </div>
                          {set.notes && (
                            <div className="text-xs text-muted-foreground italic">"{set.notes}"</div>
                          )}
                        </div>
                        <Button
                          onClick={() => handleDeleteSet(set.id)}
                          variant="ghost"
                          size="sm"
                          className="text-destructive hover:text-destructive"
                        >
                          <Trash2 className="w-4 h-4" />
                        </Button>
                      </div>
                    ))}
                  </div>
                </CardContent>
              </Card>
            )}
          </div>
        </div>
      </div>
    </div>
  );
}
</file>
<file path="FitForge/client/src/components/hero-section.tsx">
import { Button } from "@/components/ui/button";
import { Card, CardContent } from "@/components/ui/card";
import { Progress } from "@/components/ui/progress";
import { useAuth } from "@/hooks/use-auth";
import { Link } from "wouter";

export function HeroSection() {
  const { user } = useAuth();

  return (
    <section className="relative overflow-hidden min-h-[80vh] flex items-center">
      {/* Background Image */}
      <div className="absolute inset-0 z-0">
        <img
          src="https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?ixlib=rb-4.0.3&auto=format&fit=crop&w=2070&h=1000"
          alt="Modern fitness gym with equipment"
          className="w-full h-full object-cover"
        />
        <div className="absolute inset-0 bg-gradient-to-r from-background/90 via-background/60 to-background/30 dark:from-dark/90 dark:via-dark/60 dark:to-dark/30"></div>
      </div>

      <div className="relative z-10 max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-24">
        <div className="grid lg:grid-cols-2 gap-12 items-center">
          <div className="animate-slide-up">
            <h1 className="text-5xl lg:text-6xl font-bold text-foreground mb-6">
              Transform Your{" "}
              <span className="text-gradient">Fitness Journey</span>
            </h1>
            <p className="text-xl text-muted-foreground mb-8 leading-relaxed">
              Experience the future of fitness with AI-powered workouts, real-time form analysis,
              and personalized training that adapts to your goals.
            </p>
            <div className="flex flex-col sm:flex-row gap-4">
              {user ? (
                <>
                  <Link href="/dashboard">
                    <Button className="btn-primary">View Dashboard</Button>
                  </Link>
                  <Link href="/workouts">
                    <Button variant="outline" className="btn-secondary">
                      Browse Workouts
                    </Button>
                  </Link>
                </>
              ) : (
                <>
                  <Link href="/auth">
                    <Button className="btn-primary">Start Your Journey</Button>
                  </Link>
                  <Button variant="outline" className="btn-secondary">
                    Watch Demo
                  </Button>
                </>
              )}
            </div>
          </div>

          {/* Progress Card */}
          {user && (
            <Card className="glass-effect animate-fade-in">
              <CardContent className="p-8">
                <h3 className="text-2xl font-bold mb-6">Today's Progress</h3>
                <div className="grid grid-cols-2 gap-6">
                  <div className="text-center">
                    <div className="w-16 h-16 mx-auto mb-2 relative">
                      <svg className="w-16 h-16 progress-ring">
                        <circle
                          cx="32"
                          cy="32"
                          r="28"
                          stroke="currentColor"
                          strokeWidth="4"
                          fill="none"
                          className="text-muted opacity-30"
                        />
                        <circle
                          cx="32"
                          cy="32"
                          r="28"
                          stroke="hsl(var(--primary))"
                          strokeWidth="4"
                          fill="none"
                          strokeDasharray="175.9"
                          strokeDashoffset="52.8"
                          strokeLinecap="round"
                        />
                      </svg>
                      <div className="absolute inset-0 flex items-center justify-center">
                        <span className="text-foreground font-bold">70%</span>
                      </div>
                    </div>
                    <p className="font-medium">Workout Goal</p>
                  </div>
                  <div className="text-center">
                    <div className="w-16 h-16 mx-auto mb-2 relative">
                      <svg className="w-16 h-16 progress-ring">
                        <circle
                          cx="32"
                          cy="32"
                          r="28"
                          stroke="currentColor"
                          strokeWidth="4"
                          fill="none"
                          className="text-muted opacity-30"
                        />
                        <circle
                          cx="32"
                          cy="32"
                          r="28"
                          stroke="hsl(var(--accent))"
                          strokeWidth="4"
                          fill="none"
                          strokeDasharray="175.9"
                          strokeDashoffset="35.2"
                          strokeLinecap="round"
                        />
                      </svg>
                      <div className="absolute inset-0 flex items-center justify-center">
                        <span className="text-foreground font-bold">80%</span>
                      </div>
                    </div>
                    <p className="font-medium">Calorie Goal</p>
                  </div>
                </div>
              </CardContent>
            </Card>
          )}
        </div>
      </div>
    </section>
  );
}

</file>
<file path="FitForge/client/src/components/live-tracking.tsx">
import { useState, useEffect } from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Progress } from "@/components/ui/progress";
import { Badge } from "@/components/ui/badge";
import { Play, Pause, Camera, Plus, Clock, MessageSquare, Share2, CheckCircle, Users } from "lucide-react";

export function LiveTracking() {
  const [isTracking, setIsTracking] = useState(false);
  const [currentReps, setCurrentReps] = useState(8);
  const [formScore, setFormScore] = useState(92);
  const [currentSet, setCurrentSet] = useState(3);

  // Simulate real-time updates
  useEffect(() => {
    if (!isTracking) return;

    const interval = setInterval(() => {
      // Simulate rep counting
      if (Math.random() > 0.7) {
        setCurrentReps(prev => Math.min(prev + 1, 12));
      }

      // Simulate form score fluctuation
      setFormScore(prev => {
        const change = (Math.random() - 0.5) * 4;
        return Math.max(85, Math.min(98, prev + change));
      });
    }, 3000);

    return () => clearInterval(interval);
  }, [isTracking]);

  const formScoreColor = formScore >= 90 ? "text-accent" : formScore >= 80 ? "text-primary" : "text-orange-500";

  const performanceIndicators = [
    {
      label: "Range of Motion",
      status: "Excellent",
      icon: CheckCircle,
      color: "text-accent bg-accent/10",
    },
    {
      label: "Tempo",
      status: "Perfect",
      icon: Clock,
      color: "text-primary bg-primary/10",
    },
    {
      label: "Balance",
      status: "Good",
      icon: Users,
      color: "text-secondary bg-secondary/10",
    },
  ];

  return (
    <section className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16">
      <div className="text-center mb-12">
        <h2 className="text-4xl font-bold mb-4">Real-Time Form Analysis</h2>
        <p className="text-xl text-muted-foreground">
          AI-powered motion capture ensures perfect technique every rep
        </p>
      </div>

      <div className="grid lg:grid-cols-2 gap-12 items-center">
        {/* Camera Interface */}
        <div className="relative">
          <div className="bg-background border rounded-2xl overflow-hidden aspect-video relative">
            <img
              src="https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450"
              alt="AI form analysis in action"
              className="w-full h-full object-cover"
            />

            {/* AI Overlay Elements */}
            <div className="absolute inset-0 pointer-events-none">
              {/* Skeleton tracking points */}
              <div className="absolute top-1/4 left-1/2 w-3 h-3 bg-accent rounded-full animate-pulse"></div>
              <div 
                className="absolute top-1/3 left-1/2 w-3 h-3 bg-accent rounded-full animate-pulse"
                style={{ transform: "translate(-20px, 10px)" }}
              ></div>
              <div 
                className="absolute top-1/3 left-1/2 w-3 h-3 bg-accent rounded-full animate-pulse"
                style={{ transform: "translate(20px, 10px)" }}
              ></div>

              {/* Form feedback box */}
              <div className="absolute bottom-4 left-4 bg-background/90 backdrop-blur-sm rounded-xl p-4 border">
                <div className="flex items-center mb-2">
                  <CheckCircle className="w-4 h-4 text-accent mr-2" />
                  <span className="font-semibold">Good Form!</span>
                </div>
                <p className="text-sm text-muted-foreground">
                  Keep your core engaged and maintain straight back
                </p>
              </div>

              {/* Rep counter */}
              <div className="absolute top-4 right-4 bg-primary/90 backdrop-blur-sm rounded-xl p-4 text-center text-white">
                <div className="text-3xl font-bold">{currentReps}</div>
                <div className="text-sm opacity-80">REPS</div>
              </div>
            </div>
          </div>

          {/* Camera Controls */}
          <div className="flex justify-center mt-6 space-x-4">
            <Button
              size="icon"
              className={`w-12 h-12 rounded-full ${isTracking ? 'bg-destructive' : 'bg-primary'}`}
              onClick={() => setIsTracking(!isTracking)}
            >
              {isTracking ? <Pause className="w-5 h-5" /> : <Play className="w-5 h-5" />}
            </Button>
            <Button variant="outline" size="icon" className="w-12 h-12 rounded-full">
              <Camera className="w-5 h-5" />
            </Button>
          </div>
        </div>

        {/* Real-time Metrics */}
        <div className="space-y-6">
          <Card>
            <CardHeader>
              <CardTitle className="text-2xl">Current Set Metrics</CardTitle>
            </CardHeader>
            <CardContent>
              <div className="grid grid-cols-2 gap-6 mb-6">
                <div className="text-center">
                  <div className="text-4xl font-bold text-primary mb-2">{currentSet}</div>
                  <div className="text-muted-foreground">Current Set</div>
                </div>
                <div className="text-center">
                  <div className="text-4xl font-bold text-accent mb-2">12</div>
                  <div className="text-muted-foreground">Target Reps</div>
                </div>
              </div>

              {/* Form Score */}
              <div className="mb-6">
                <div className="flex justify-between items-center mb-2">
                  <span className="font-semibold">Form Score</span>
                  <span className={`text-2xl font-bold ${formScoreColor}`}>
                    {Math.round(formScore)}%
                  </span>
                </div>
                <Progress value={formScore} className="h-3" />
              </div>

              {/* Performance Indicators */}
              <div className="space-y-4">
                {performanceIndicators.map((indicator, index) => (
                  <div key={index} className={`flex items-center justify-between p-3 ${indicator.color} rounded-xl`}>
                    <div className="flex items-center">
                      <indicator.icon className="w-5 h-5 mr-3" />
                      <span className="font-medium">{indicator.label}</span>
                    </div>
                    <Badge variant="secondary">{indicator.status}</Badge>
                  </div>
                ))}
              </div>
            </CardContent>
          </Card>

          {/* Quick Actions */}
          <Card>
            <CardHeader>
              <CardTitle>Quick Actions</CardTitle>
            </CardHeader>
            <CardContent>
              <div className="grid grid-cols-2 gap-3">
                <Button variant="outline" className="flex items-center">
                  <Plus className="w-4 h-4 mr-2" />
                  Add Weight
                </Button>
                <Button variant="outline" className="flex items-center">
                  <Clock className="w-4 h-4 mr-2" />
                  Rest Timer
                </Button>
                <Button variant="outline" className="flex items-center">
                  <MessageSquare className="w-4 h-4 mr-2" />
                  Add Note
                </Button>
                <Button variant="outline" className="flex items-center">
                  <Share2 className="w-4 h-4 mr-2" />
                  Share
                </Button>
              </div>
            </CardContent>
          </Card>
        </div>
      </div>
    </section>
  );
}

</file>
<file path="FitForge/client/src/components/live-workout-session.tsx">
import React, { useState, useEffect } from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Badge } from "@/components/ui/badge";
import { Progress } from "@/components/ui/progress";
import { 
  Play, 
  Square, 
  Timer, 
  Target, 
  Check,
  ChevronRight,
  Trophy,
  ArrowLeft
} from "lucide-react";
import { useLocation } from "wouter";
import { useToast } from "@/hooks/use-toast";
import { useWorkoutSession } from "@/hooks/use-workout-session";

export function LiveWorkoutSession() {
  const { toast } = useToast();
  const [, setLocation] = useLocation();
  const { 
    session, 
    logSet, 
    completeExercise, 
    nextExercise, 
    endWorkout,
    calculateSessionStats 
  } = useWorkoutSession();
  
  const [currentSet, setCurrentSet] = useState({ weight: 0, reps: 0 });
  const [isResting, setIsResting] = useState(false);
  const [restTimer, setRestTimer] = useState(0);
  const [sessionDuration, setSessionDuration] = useState(0);

  // Redirect if no active session (with delay to allow session creation)
  useEffect(() => {
    const timeout = setTimeout(() => {
      if (!session) {
        console.log("⚠️ NO SESSION FOUND - REDIRECTING TO WORKOUTS");
        setLocation("/workouts");
      }
    }, 1000); // Give 1 second for session to be created
    
    return () => clearTimeout(timeout);
  }, [session, setLocation]);

  // Session timer
  useEffect(() => {
    if (session?.status === "in_progress") {
      const interval = setInterval(() => {
        setSessionDuration(Date.now() - session.startTime.getTime());
      }, 1000);
      return () => clearInterval(interval);
    }
  }, [session?.status, session?.startTime]);

  // Rest timer
  useEffect(() => {
    if (isResting && restTimer > 0) {
      const interval = setInterval(() => {
        setRestTimer(prev => {
          if (prev <= 1) {
            setIsResting(false);
            toast({
              title: "Rest Complete!",
              description: "Ready for your next set",
            });
            return 0;
          }
          return prev - 1;
        });
      }, 1000);
      return () => clearInterval(interval);
    }
  }, [isResting, restTimer, toast]);

  const handleLogSet = () => {
    if (!session || currentSet.reps <= 0) return;

    const currentExercise = session.exercises[session.currentExerciseIndex];
    
    logSet(currentSet.weight, currentSet.reps, "Default Equipment");
    setCurrentSet({ weight: 0, reps: 0 });

    // Start rest timer based on exercise
    const restTime = getRestTimeForExercise(currentExercise.exerciseName);
    if (restTime > 0) {
      setRestTimer(restTime);
      setIsResting(true);
    }

    toast({
      title: "Set Logged!",
      description: `${currentSet.reps} reps @ ${currentSet.weight}lbs - Volume: ${currentSet.weight * currentSet.reps}`,
    });
  };

  const handleCompleteExercise = () => {
    if (!session) return;

    completeExercise();
    
    if (session.currentExerciseIndex < session.exercises.length - 1) {
      nextExercise();
      toast({
        title: "Exercise Complete!",
        description: "Moving to next exercise",
      });
    } else {
      endWorkout();
      toast({
        title: "Workout Complete! 🎉",
        description: "Outstanding work!",
      });
    }

    setIsResting(false);
    setRestTimer(0);
  };

  const getRestTimeForExercise = (exerciseName: string): number => {
    // Map exercise names to rest times based on Ender's data
    const restTimes: Record<string, number> = {
      "Planks": 30,
      "Spider Planks": 60,
      "Bench Situps": 90,
      "Hanging Knee Raises": 120,
      "Shoulder Shrugs": 150,
      "T Row": 180,
      "Incline Hammer Curl": 210,
      "Neutral Grip Pull-ups": 240,
      "Bent Over Rows": 270,
      "Bench Press": 540,
      "TRX Reverse Flys": 570,
      "Tricep Extension": 600,
      "TRX Pushup": 90,
      "Incline Bench Press": 120,
      "Shoulder Press": 150,
      "Dips": 180,
      "Goblet Squats": 90,
      "Dead Lifts": 120,
      "Calf Raises": 60,
      "Glute Bridges": 90,
      "Kettlebell Swings": 120
    };
    return restTimes[exerciseName] || 60;
  };

  const formatTime = (ms: number) => {
    const seconds = Math.floor(ms / 1000);
    const mins = Math.floor(seconds / 60);
    const secs = seconds % 60;
    return `${mins}:${secs.toString().padStart(2, '0')}`;
  };

  const getWorkoutDisplayName = (workoutType: string) => {
    const names: Record<string, string> = {
      "Abs": "Ender's Core Workout",
      "BackBiceps": "Ender's Pull Day",
      "ChestTriceps": "Ender's Push Day", 
      "Legs": "Ender's Leg Day"
    };
    return names[workoutType] || workoutType;
  };

  const getDifficultyFromExercise = (exerciseName: string): string => {
    const difficulties: Record<string, string> = {
      "Planks": "Beginner",
      "Spider Planks": "Intermediate",
      "Bench Situps": "Intermediate",
      "Hanging Knee Raises": "Intermediate",
      "Shoulder Shrugs": "Beginner",
      "T Row": "Intermediate",
      "Incline Hammer Curl": "Beginner",
      "Neutral Grip Pull-ups": "Intermediate",
      "Bent Over Rows": "Intermediate",
      "Bench Press": "Intermediate",
      "TRX Reverse Flys": "Intermediate",
      "Tricep Extension": "Beginner",
      "TRX Pushup": "Intermediate",
      "Incline Bench Press": "Intermediate",
      "Shoulder Press": "Intermediate",
      "Dips": "Intermediate",
      "Goblet Squats": "Beginner",
      "Dead Lifts": "Advanced",
      "Calf Raises": "Beginner",
      "Glute Bridges": "Beginner",
      "Kettlebell Swings": "Intermediate"
    };
    return difficulties[exerciseName] || "Intermediate";
  };

  if (!session) {
    return (
      <div className="min-h-screen bg-background flex items-center justify-center p-4">
        <Card className="w-full max-w-md text-center">
          <CardContent className="p-6">
            <p className="text-muted-foreground mb-4">No active workout session found.</p>
            <Button onClick={() => setLocation("/workouts")}>
              <ArrowLeft className="w-4 h-4 mr-2" />
              Back to Workouts
            </Button>
          </CardContent>
        </Card>
      </div>
    );
  }

  const currentExercise = session.exercises[session.currentExerciseIndex];
  const progress = ((session.currentExerciseIndex) / session.exercises.length) * 100;
  const stats = calculateSessionStats();

  if (session.status === "completed") {
    return (
      <div className="min-h-screen bg-background flex items-center justify-center p-4">
        <Card className="w-full max-w-md">
          <CardHeader className="text-center">
            <Trophy className="w-12 h-12 mx-auto text-yellow-500 mb-4" />
            <CardTitle className="text-2xl">Workout Complete!</CardTitle>
            <p className="text-muted-foreground">Outstanding work! 💪</p>
          </CardHeader>
          <CardContent className="space-y-4">
            <div className="grid grid-cols-2 gap-4">
              <div className="text-center p-4 bg-muted/30 rounded-lg">
                <div className="text-2xl font-bold text-primary">{stats.totalVolume}</div>
                <div className="text-sm text-muted-foreground">Total Volume (lbs)</div>
              </div>
              <div className="text-center p-4 bg-muted/30 rounded-lg">
                <div className="text-2xl font-bold text-accent">{stats.estimatedCalories}</div>
                <div className="text-sm text-muted-foreground">Calories Burned</div>
              </div>
              <div className="text-center p-4 bg-muted/30 rounded-lg">
                <div className="text-2xl font-bold text-secondary">{formatTime(stats.duration)}</div>
                <div className="text-sm text-muted-foreground">Duration</div>
              </div>
              <div className="text-center p-4 bg-muted/30 rounded-lg">
                <div className="text-2xl font-bold text-orange-500">{stats.totalSets}</div>
                <div className="text-sm text-muted-foreground">Total Sets</div>
              </div>
            </div>
            <Button onClick={() => setLocation("/workouts")} className="w-full">
              Back to Workouts
            </Button>
          </CardContent>
        </Card>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-background p-4">
      <div className="max-w-2xl mx-auto space-y-6">
        {/* Header */}
        <Card>
          <CardHeader>
            <div className="flex items-center justify-between">
              <div>
                <CardTitle className="text-xl">{getWorkoutDisplayName(session.workoutType)}</CardTitle>
                <p className="text-sm text-muted-foreground">
                  Exercise {session.currentExerciseIndex + 1} of {session.exercises.length}
                </p>
              </div>
              <div className="text-right">
                <div className="text-lg font-bold">{formatTime(sessionDuration)}</div>
                <div className="text-sm text-muted-foreground">Duration</div>
              </div>
            </div>
            <Progress value={progress} className="mt-4" />
          </CardHeader>
        </Card>

        {/* Current Exercise */}
        <Card>
          <CardHeader>
            <div className="flex items-center justify-between">
              <CardTitle className="text-2xl">{currentExercise.exerciseName}</CardTitle>
              <Badge className="bg-primary/10 text-primary">
                {getDifficultyFromExercise(currentExercise.exerciseName)}
              </Badge>
            </div>
          </CardHeader>
          <CardContent className="space-y-6">
            {/* Set Logging */}
            <div className="space-y-4">
              <h3 className="font-semibold">Log Set #{currentExercise.sets.length + 1}</h3>
              <div className="grid grid-cols-2 gap-4">
                <div>
                  <Label htmlFor="weight">Weight (lbs)</Label>
                  <Input
                    id="weight"
                    type="number"
                    value={currentSet.weight || ""}
                    onChange={(e) => setCurrentSet(prev => ({ ...prev, weight: Number(e.target.value) }))}
                    placeholder="0"
                  />
                </div>
                <div>
                  <Label htmlFor="reps">Reps</Label>
                  <Input
                    id="reps"
                    type="number"
                    value={currentSet.reps || ""}
                    onChange={(e) => setCurrentSet(prev => ({ ...prev, reps: Number(e.target.value) }))}
                    placeholder="0"
                  />
                </div>
              </div>
              
              {currentSet.weight > 0 && currentSet.reps > 0 && (
                <div className="p-3 bg-muted/30 rounded-lg">
                  <div className="text-sm font-medium">Set Volume: {currentSet.weight * currentSet.reps} lbs</div>
                  <div className="text-sm text-muted-foreground">
                    Est. Calories: {Math.round(currentSet.weight * currentSet.reps * 0.1)}
                  </div>
                </div>
              )}

              <Button 
                onClick={handleLogSet} 
                disabled={currentSet.reps <= 0 || isResting}
                className="w-full gradient-bg"
              >
                <Check className="w-4 h-4 mr-2" />
                Log Set
              </Button>
            </div>

            {/* Rest Timer */}
            {isResting && (
              <Card className="bg-accent/10 border-accent">
                <CardContent className="p-4 text-center">
                  <Timer className="w-8 h-8 mx-auto text-accent mb-2" />
                  <div className="text-2xl font-bold text-accent">{restTimer}s</div>
                  <div className="text-sm text-muted-foreground">Rest Time Remaining</div>
                </CardContent>
              </Card>
            )}

            {/* Previous Sets */}
            {currentExercise.sets.length > 0 && (
              <div className="space-y-2">
                <h4 className="font-semibold">Previous Sets</h4>
                <div className="space-y-2">
                  {currentExercise.sets.map((set, index) => (
                    <div key={index} className="flex justify-between items-center p-2 bg-muted/30 rounded">
                      <span className="text-sm">
                        Set {set.setNumber}: {set.reps} reps @ {set.weight}lbs
                      </span>
                      <span className="text-sm text-muted-foreground">
                        Vol: {set.volume}
                      </span>
                    </div>
                  ))}
                </div>
              </div>
            )}

            {/* Exercise Controls */}
            <div className="flex gap-3">
              <Button 
                onClick={handleCompleteExercise}
                disabled={currentExercise.sets.length === 0}
                className="flex-1"
                variant="outline"
              >
                {session.currentExerciseIndex === session.exercises.length - 1 ? (
                  <>
                    <Square className="w-4 h-4 mr-2" />
                    Finish Workout
                  </>
                ) : (
                  <>
                    <ChevronRight className="w-4 h-4 mr-2" />
                    Next Exercise
                  </>
                )}
              </Button>
            </div>
          </CardContent>
        </Card>

        {/* Session Stats */}
        <Card>
          <CardContent className="p-4">
            <div className="grid grid-cols-3 gap-4 text-center">
              <div>
                <div className="text-lg font-bold text-primary">{session.totalVolume}</div>
                <div className="text-xs text-muted-foreground">Total Volume</div>
              </div>
              <div>
                <div className="text-lg font-bold text-accent">{session.estimatedCalories}</div>
                <div className="text-xs text-muted-foreground">Calories</div>
              </div>
              <div>
                <div className="text-lg font-bold text-secondary">
                  {session.exercises.reduce((total, ex) => total + ex.sets.length, 0)}
                </div>
                <div className="text-xs text-muted-foreground">Sets</div>
              </div>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  );
}
</file>
<file path="FitForge/client/src/components/navigation.tsx">
import { Link, useLocation } from "wouter";
import { Button } from "@/components/ui/button";
import { useTheme } from "@/components/theme-provider";
import { useAuth } from "@/hooks/use-auth";
import { Dumbbell, Moon, Sun, Bell, Menu, User } from "lucide-react";
import { useState } from "react";
import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuSeparator,
  DropdownMenuTrigger,
} from "@/components/ui/dropdown-menu";
import { Sheet, SheetContent, SheetTrigger } from "@/components/ui/sheet";

export function Navigation() {
  const { theme, toggleTheme } = useTheme();
  const { user, logout } = useAuth();
  const [location] = useLocation();
  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);
  const [showNotifications, setShowNotifications] = useState(false);

  const navItems = [
    { path: "/dashboard", label: "Dashboard" },
    { path: "/workouts", label: "Workouts" },
    { path: "/start-workout", label: "Start Workout" },
    { path: "/progress", label: "Progress" },
    { path: "/community", label: "Community" },
  ];

  const isActive = (path: string) => location === path;

  const UserAvatar = () => (
    <div className="w-8 h-8 gradient-bg rounded-full flex items-center justify-center">
      <span className="text-white text-sm font-semibold">
        {user ? `${user.firstName[0]}${user.lastName[0]}` : "U"}
      </span>
    </div>
  );

  return (
    <nav className="bg-background/80 backdrop-blur-lg border-b border-border sticky top-0 z-50">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="flex justify-between items-center h-16">
          {/* Logo */}
          <Link href="/" className="flex items-center space-x-2 hover:opacity-80 transition-opacity">
            <div className="w-8 h-8 gradient-bg rounded-lg flex items-center justify-center">
              <Dumbbell className="w-4 h-4 text-white" />
            </div>
            <span className="text-xl font-bold">FitForge</span>
          </Link>

          {/* Desktop Navigation */}
          {user && (
            <div className="hidden md:flex space-x-6">
              {navItems.map((item) => (
                <Link
                  key={item.path}
                  href={item.path}
                  className={`px-3 py-2 rounded-lg text-sm font-medium transition-colors duration-200 ${
                    isActive(item.path)
                      ? "text-primary bg-primary/10"
                      : "text-muted-foreground hover:text-primary hover:bg-primary/5"
                  }`}
                >
                  {item.label}
                </Link>
              ))}
            </div>
          )}

          {/* Right side items */}
          <div className="flex items-center space-x-3">
            {user && (
              <>
                {/* Notifications */}
                <Button 
                  variant="ghost" 
                  size="icon" 
                  className="hidden md:flex relative"
                  onClick={() => setShowNotifications(!showNotifications)}
                >
                  <Bell className="h-5 w-5" />
                  <span className="absolute -top-1 -right-1 w-3 h-3 bg-red-500 rounded-full"></span>
                </Button>

                {/* Mobile menu */}
                <Sheet open={mobileMenuOpen} onOpenChange={setMobileMenuOpen}>
                  <SheetTrigger asChild>
                    <Button variant="ghost" size="icon" className="md:hidden">
                      <Menu className="h-5 w-5" />
                    </Button>
                  </SheetTrigger>
                  <SheetContent side="right" className="w-[300px]">
                    <div className="flex flex-col space-y-4 mt-6">
                      {navItems.map((item) => (
                        <Link
                          key={item.path}
                          href={item.path}
                          onClick={() => setMobileMenuOpen(false)}
                          className={`px-3 py-2 rounded-lg text-sm font-medium transition-colors duration-200 ${
                            isActive(item.path)
                              ? "text-primary bg-primary/10"
                              : "text-muted-foreground hover:text-primary hover:bg-primary/5"
                          }`}
                        >
                          {item.label}
                        </Link>
                      ))}
                    </div>
                  </SheetContent>
                </Sheet>
              </>
            )}

            {/* Theme toggle */}
            <Button variant="ghost" size="icon" onClick={toggleTheme}>
              {theme === "dark" ? <Sun className="h-5 w-5" /> : <Moon className="h-5 w-5" />}
            </Button>

            {/* User menu or auth buttons */}
            {user ? (
              <DropdownMenu>
                <DropdownMenuTrigger asChild>
                  <Button variant="ghost" size="icon">
                    <UserAvatar />
                  </Button>
                </DropdownMenuTrigger>
                <DropdownMenuContent align="end" className="w-56">
                  <div className="px-2 py-1.5">
                    <p className="text-sm font-medium">{user.firstName} {user.lastName}</p>
                    <p className="text-xs text-muted-foreground">{user.email}</p>
                  </div>
                  <DropdownMenuSeparator />
                  <DropdownMenuItem asChild>
                    <Link href="/profile" className="w-full">
                      <User className="mr-2 h-4 w-4" />
                      Profile
                    </Link>
                  </DropdownMenuItem>
                  <DropdownMenuSeparator />
                  <DropdownMenuItem onClick={logout} className="text-destructive">
                    Logout
                  </DropdownMenuItem>
                </DropdownMenuContent>
              </DropdownMenu>
            ) : (
              <div className="flex items-center space-x-2">
                <Link href="/auth">
                  <Button variant="ghost" size="sm">
                    Sign In
                  </Button>
                </Link>
                <Link href="/auth">
                  <Button size="sm" className="gradient-bg">
                    Get Started
                  </Button>
                </Link>
              </div>
            )}
          </div>
        </div>
      </div>
    </nav>
  );
}

</file>
<file path="FitForge/client/src/components/progress-analytics.tsx">
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Trophy, Flame, Medal, TrendingUp } from "lucide-react";

export function ProgressAnalytics() {
  // Mock data - in real app this would come from API
  const progressData = [
    { month: "Jan", muscle: 15, fat: 20 },
    { month: "Feb", muscle: 18, fat: 18 },
    { month: "Mar", muscle: 22, fat: 16 },
    { month: "Apr", muscle: 25, fat: 14 },
    { month: "May", muscle: 28, fat: 12 },
    { month: "Jun", muscle: 30, fat: 10 },
  ];

  const achievements = [
    {
      icon: Trophy,
      title: "Personal Record",
      description: "New bench press PR: 225 lbs",
      date: "2 days ago",
      color: "text-primary bg-primary/10",
    },
    {
      icon: Flame,
      title: "Streak Master",
      description: "30-day workout streak achieved!",
      date: "1 week ago",
      color: "text-accent bg-accent/10",
    },
    {
      icon: Medal,
      title: "Form Expert",
      description: "Perfect form score for 10 workouts",
      date: "2 weeks ago",
      color: "text-secondary bg-secondary/10",
    },
  ];

  const keyMetrics = [
    { label: "Muscle Gained", value: "+3.2kg", color: "text-primary bg-primary/10" },
    { label: "Body Fat Lost", value: "-2.1%", color: "text-accent bg-accent/10" },
    { label: "Strength Increase", value: "+18%", color: "text-secondary bg-secondary/10" },
  ];

  return (
    <section className="bg-muted/30 py-16">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="text-center mb-12">
          <h2 className="text-4xl font-bold mb-4">Track Your Evolution</h2>
          <p className="text-xl text-muted-foreground">
            Comprehensive analytics powered by machine learning predictions
          </p>
        </div>

        <div className="grid lg:grid-cols-3 gap-8">
          {/* Body Composition Analysis */}
          <Card className="lg:col-span-2">
            <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
              <CardTitle className="text-2xl">Body Composition Trends</CardTitle>
              <div className="flex space-x-2">
                <Button size="sm" className="bg-primary text-white">1M</Button>
                <Button size="sm" variant="outline">3M</Button>
                <Button size="sm" variant="outline">1Y</Button>
              </div>
            </CardHeader>
            <CardContent>
              {/* Mock Chart Area */}
              <div className="h-64 relative mb-6">
                <svg className="w-full h-full" viewBox="0 0 400 200">
                  {/* Grid lines */}
                  <defs>
                    <pattern id="grid" width="40" height="20" patternUnits="userSpaceOnUse">
                      <path d="M 40 0 L 0 0 0 20" fill="none" stroke="hsl(var(--border))" strokeWidth="1" />
                    </pattern>
                  </defs>
                  <rect width="100%" height="100%" fill="url(#grid)" />

                  {/* Muscle mass line */}
                  <polyline
                    fill="none"
                    stroke="hsl(var(--primary))"
                    strokeWidth="3"
                    points="20,160 80,155 140,150 200,145 260,140 320,135 380,130"
                  />

                  {/* Body fat line */}
                  <polyline
                    fill="none"
                    stroke="hsl(var(--accent))"
                    strokeWidth="3"
                    points="20,120 80,125 140,120 200,115 260,110 320,105 380,100"
                  />

                  {/* Data points */}
                  <circle cx="380" cy="130" r="4" fill="hsl(var(--primary))" />
                  <circle cx="380" cy="100" r="4" fill="hsl(var(--accent))" />
                </svg>

                {/* Legend */}
                <div className="absolute bottom-0 left-0 flex space-x-6">
                  <div className="flex items-center">
                    <div className="w-4 h-4 bg-primary rounded mr-2"></div>
                    <span className="text-sm text-muted-foreground">Muscle Mass</span>
                  </div>
                  <div className="flex items-center">
                    <div className="w-4 h-4 bg-accent rounded mr-2"></div>
                    <span className="text-sm text-muted-foreground">Body Fat %</span>
                  </div>
                </div>
              </div>

              {/* Key Metrics */}
              <div className="grid grid-cols-3 gap-6">
                {keyMetrics.map((metric, index) => (
                  <div key={index} className={`text-center p-4 ${metric.color} rounded-xl`}>
                    <div className="text-2xl font-bold mb-1">{metric.value}</div>
                    <div className="text-sm text-muted-foreground">{metric.label}</div>
                  </div>
                ))}
              </div>
            </CardContent>
          </Card>

          {/* Achievement Timeline */}
          <Card>
            <CardHeader>
              <CardTitle className="text-2xl">Recent Achievements</CardTitle>
            </CardHeader>
            <CardContent className="space-y-6">
              {achievements.map((achievement, index) => (
                <div key={index} className="flex items-start space-x-4">
                  <div className={`w-12 h-12 ${achievement.color} rounded-xl flex items-center justify-center flex-shrink-0`}>
                    <achievement.icon className="w-5 h-5" />
                  </div>
                  <div className="flex-1">
                    <h4 className="font-semibold mb-1">{achievement.title}</h4>
                    <p className="text-sm text-muted-foreground mb-2">
                      {achievement.description}
                    </p>
                    <span className="text-xs text-muted-foreground">{achievement.date}</span>
                  </div>
                </div>
              ))}

              <Button variant="outline" className="w-full mt-6">
                View All Achievements
              </Button>
            </CardContent>
          </Card>
        </div>
      </div>
    </section>
  );
}

</file>
<file path="FitForge/client/src/components/theme-provider.tsx">
import { createContext, useContext, useEffect, useState } from "react";

type Theme = "light" | "dark";

type ThemeProviderContextType = {
  theme: Theme;
  setTheme: (theme: Theme) => void;
  toggleTheme: () => void;
};

const ThemeProviderContext = createContext<ThemeProviderContextType | undefined>(undefined);

export function ThemeProvider({ children }: { children: React.ReactNode }) {
  const [theme, setTheme] = useState<Theme>(() => {
    // Check localStorage first
    const savedTheme = localStorage.getItem("fitforge-theme") as Theme;
    if (savedTheme) return savedTheme;
    
    // Fall back to system preference
    return window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";
  });

  useEffect(() => {
    const root = window.document.documentElement;
    root.classList.remove("light", "dark");
    root.classList.add(theme);
    localStorage.setItem("fitforge-theme", theme);
  }, [theme]);

  const toggleTheme = () => {
    setTheme(theme === "light" ? "dark" : "light");
  };

  const value = {
    theme,
    setTheme,
    toggleTheme,
  };

  return (
    <ThemeProviderContext.Provider value={value}>
      {children}
    </ThemeProviderContext.Provider>
  );
}

export const useTheme = () => {
  const context = useContext(ThemeProviderContext);
  if (context === undefined) {
    throw new Error("useTheme must be used within a ThemeProvider");
  }
  return context;
};

</file>
<file path="FitForge/client/src/components/workout-library.tsx">
import { useState } from "react";
import { Card, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Badge } from "@/components/ui/badge";
import { Search, Filter, Clock, Flame, Dumbbell, Play } from "lucide-react";
import { useQuery } from "@tanstack/react-query";
import { useLocation } from "wouter";
import { useWorkoutSession, WorkoutExercise } from "@/hooks/use-workout-session";
import { useToast } from "@/hooks/use-toast";
import { Workout } from "@shared/schema";

export function WorkoutLibrary() {
  const [searchTerm, setSearchTerm] = useState("");
  const [selectedLevel, setSelectedLevel] = useState<string>("all");
  const [selectedDuration, setSelectedDuration] = useState<string>("all");
  
  const [, setLocation] = useLocation();
  const { startWorkout } = useWorkoutSession();

  // DEBUG: Test basic click functionality
  const testClick = () => {
    alert("🔥 DEBUG: Basic click functionality WORKS!");
    console.log("🔥 DEBUG: Basic click test successful");
  };
  const { toast } = useToast();

  const { data: workouts = [], isLoading } = useQuery<Workout[]>({
    queryKey: ["/api/workouts"],
  });

  // Debug logging to see what we're getting
  console.log("🎯 WORKOUT LIBRARY DEBUG:");
  console.log("🎯 isLoading:", isLoading);
  console.log("🎯 workouts array:", workouts);
  console.log("🎯 workouts length:", workouts.length);
  console.log("🎯 first workout:", workouts[0]);

  const filteredWorkouts = workouts.filter((workout) => {
    const matchesSearch = workout.name.toLowerCase().includes(searchTerm.toLowerCase()) ||
                         workout.description?.toLowerCase().includes(searchTerm.toLowerCase()) ||
                         workout.category.toLowerCase().includes(searchTerm.toLowerCase());
    
    const matchesLevel = selectedLevel === "all" || workout.difficulty === selectedLevel;
    
    const matchesDuration = selectedDuration === "all" || 
      (selectedDuration === "15-30" && workout.duration >= 15 && workout.duration <= 30) ||
      (selectedDuration === "30-45" && workout.duration >= 30 && workout.duration <= 45) ||
      (selectedDuration === "45+" && workout.duration >= 45);

    return matchesSearch && matchesLevel && matchesDuration;
  });

  const getDifficultyColor = (difficulty: string) => {
    switch (difficulty) {
      case "beginner":
        return "bg-accent/10 text-accent";
      case "intermediate":
        return "bg-primary/10 text-primary";
      case "advanced":
        return "bg-secondary/10 text-secondary";
      default:
        return "bg-muted/10 text-muted-foreground";
    }
  };

  const capitalizeFirst = (str: string) => str.charAt(0).toUpperCase() + str.slice(1);

  const convertWorkoutToExercises = (workout: Workout): WorkoutExercise[] => {
    console.log("🔄 CONVERTING WORKOUT:", workout);
    
    if (!workout.exercises || !Array.isArray(workout.exercises) || workout.exercises.length === 0) {
      console.error("❌ NO EXERCISES TO CONVERT");
      return [];
    }
    
    const converted = workout.exercises.map((ex: any, index: number) => {
      console.log(`🔄 CONVERTING EXERCISE ${index + 1}:`, ex);
      
      const exercise = {
        id: index + 1,
        name: ex.name || "Unknown Exercise",
        primaryMuscles: ex.primaryMuscles ? ex.primaryMuscles.split(", ") : [],
        secondaryMuscles: [],
        equipment: [ex.equipment || "Unknown"],
        restTime: getRestTimeForExercise(ex.name || ""),
        difficulty: workout.difficulty || "intermediate",
        workoutType: workout.category || "strength"
      };
      
      console.log(`✅ CONVERTED EXERCISE ${index + 1}:`, exercise);
      return exercise;
    });
    
    console.log("✅ ALL EXERCISES CONVERTED:", converted);
    return converted;
  };

  const getRestTimeForExercise = (exerciseName: string): number => {
    // Map exercise names to rest times based on Ender's data
    const restTimes: Record<string, number> = {
      "Planks": 30,
      "Spider Planks": 60,
      "Bench Situps": 90,
      "Hanging Knee Raises": 120,
      "Shoulder Shrugs": 150,
      "T Row": 180,
      "Incline Hammer Curl": 210,
      "Neutral Grip Pull-ups": 240,
      "Bent Over Rows": 270,
      "Bench Press": 540,
      "TRX Reverse Flys": 570,
      "Tricep Extension": 600,
      "TRX Pushup": 90,
      "Incline Bench Press": 120,
      "Shoulder Press": 150,
      "Dips": 180,
      "Goblet Squats": 90,
      "Dead Lifts": 120,
      "Calf Raises": 60,
      "Glute Bridges": 90,
      "Kettlebell Swings": 120
    };
    return restTimes[exerciseName] || 90; // Default to 90 seconds
  };

  const handleStartWorkout = (workout: Workout) => {
    console.log("🔥🔥🔥 BUTTON CLICKED - STARTING WORKOUT:", workout.name);
    console.log("🔥 WORKOUT OBJECT:", JSON.stringify(workout, null, 2));
    console.log("🔥 RAW EXERCISES:", workout.exercises);
    
    // Check if we have authentication/session
    console.log("🔥 CHECKING AUTH/SESSION STATE...");
    console.log("🔥 startWorkout function exists:", typeof startWorkout);
    console.log("🔥 setLocation function exists:", typeof setLocation);
    
    if (!workout.exercises || !Array.isArray(workout.exercises) || workout.exercises.length === 0) {
      console.error("❌ NO EXERCISES IN WORKOUT!");
      toast({
        title: "Error",
        description: "This workout has no exercises configured",
        variant: "destructive"
      });
      return;
    }
    
    const exercises = convertWorkoutToExercises(workout);
    console.log("🔥 CONVERTED EXERCISES:", exercises);
    
    if (exercises.length === 0) {
      console.error("❌ CONVERSION FAILED!");
      toast({
        title: "Error",
        description: "Failed to convert workout exercises",
        variant: "destructive"
      });
      return;
    }
    
    console.log("🔥 CALLING startWorkout WITH:", { name: workout.name, exercises });
    
    try {
      const result = startWorkout(workout.name, exercises);
      console.log("🔥 startWorkout RESULT:", result);
      console.log("🔥 WORKOUT SESSION STARTED, WAITING BEFORE NAVIGATION...");
      
      // Small delay to ensure session is properly set
      setTimeout(() => {
        console.log("🔥 NAVIGATING TO /workout-session");
        console.log("🔥 BEFORE setLocation - current location:", window.location.href);
        setLocation("/workout-session");
        console.log("🔥 AFTER setLocation call");
        
        // Double check navigation after a moment
        setTimeout(() => {
          console.log("🔥 POST-NAVIGATION CHECK - current location:", window.location.href);
        }, 200);
      }, 100);
      
      toast({
        title: "🔥 Workout Started!",
        description: `${workout.name} with ${exercises.length} exercises`,
      });
    } catch (error) {
      console.error("❌ START WORKOUT FAILED:", error);
      console.error("❌ ERROR STACK:", error instanceof Error ? error.stack : "No stack trace");
      toast({
        title: "Error", 
        description: "Failed to start workout session",
        variant: "destructive"
      });
    }
  };
  
  const handleSelectExerciseStart = (workout: Workout) => {
    // For now, just start the workout - we'll add exercise selection later
    handleStartWorkout(workout);
  };

  if (isLoading) {
    return (
      <section className="bg-muted/30 py-16">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="text-center mb-12">
            <h2 className="text-4xl font-bold mb-4">Discover Your Perfect Workout</h2>
            <p className="text-xl text-muted-foreground">AI-curated exercises tailored to your goals and equipment</p>
          </div>
          <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
            {[...Array(6)].map((_, i) => (
              <Card key={i} className="overflow-hidden">
                <div className="w-full h-48 bg-muted animate-pulse" />
                <CardContent className="p-6">
                  <div className="h-4 bg-muted rounded animate-pulse mb-4" />
                  <div className="h-3 bg-muted rounded animate-pulse mb-2" />
                  <div className="h-3 bg-muted rounded animate-pulse w-2/3" />
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
      </section>
    );
  }

  return (
    <section className="bg-muted/30 py-16">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="text-center mb-12">
          <h2 className="text-4xl font-bold mb-4">Discover Your Perfect Workout</h2>
          <p className="text-xl text-muted-foreground">AI-curated exercises tailored to your goals and equipment</p>
          
          {/* CRITICAL DEBUG TEST */}
          <div className="mt-4 p-4 bg-red-100 border-2 border-red-500 rounded">
            <Button 
              onClick={testClick}
              className="bg-red-500 hover:bg-red-600 text-white font-bold"
            >
              🚨 CLICK TEST - BASIC FUNCTIONALITY
            </Button>
          </div>
        </div>

        {/* DEBUG TEST BUTTON */}
        <Card className="p-6 mb-4 bg-red-100 border-red-300">
          <h3 className="font-bold text-red-800 mb-2">🚨 DEBUG TEST SECTION</h3>
          <p className="text-sm text-red-700 mb-4">Testing if JavaScript onClick handlers work at all:</p>
          <Button 
            onClick={() => {
              console.log("🧪 TEST BUTTON CLICKED - JAVASCRIPT IS WORKING!");
              alert("JavaScript onClick works! Problem is elsewhere.");
            }}
            className="bg-red-500 hover:bg-red-600 text-white"
          >
            TEST: Click Me (Should Show Alert)
          </Button>
          <p className="text-xs text-red-600 mt-2">
            Workouts found: {workouts.length} | Loading: {isLoading ? 'YES' : 'NO'}
          </p>
        </Card>

        {/* Search and Filter Bar */}
        <Card className="p-6 mb-8">
          <div className="flex flex-col lg:flex-row gap-4">
            <div className="flex-1 relative">
              <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground w-4 h-4" />
              <Input
                type="text"
                placeholder="Search workouts, exercises, muscle groups..."
                value={searchTerm}
                onChange={(e) => setSearchTerm(e.target.value)}
                className="pl-10"
              />
            </div>
            <div className="flex gap-3">
              <Select value={selectedLevel} onValueChange={setSelectedLevel}>
                <SelectTrigger className="w-[140px]">
                  <SelectValue placeholder="All Levels" />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="all">All Levels</SelectItem>
                  <SelectItem value="beginner">Beginner</SelectItem>
                  <SelectItem value="intermediate">Intermediate</SelectItem>
                  <SelectItem value="advanced">Advanced</SelectItem>
                </SelectContent>
              </Select>
              <Select value={selectedDuration} onValueChange={setSelectedDuration}>
                <SelectTrigger className="w-[150px]">
                  <SelectValue placeholder="Any Duration" />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="all">Any Duration</SelectItem>
                  <SelectItem value="15-30">15-30 min</SelectItem>
                  <SelectItem value="30-45">30-45 min</SelectItem>
                  <SelectItem value="45+">45+ min</SelectItem>
                </SelectContent>
              </Select>
              <Button className="gradient-bg">
                <Filter className="w-4 h-4 mr-2" />
                Filter
              </Button>
            </div>
          </div>
        </Card>

        {/* Workout Grid */}
        <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
          {filteredWorkouts.map((workout) => (
            <Card key={workout.id} className="overflow-hidden card-hover">
              <img
                src={workout.imageUrl || "https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=300"}
                alt={workout.name}
                className="w-full h-48 object-cover"
              />
              <CardContent className="p-6">
                <div className="flex items-center justify-between mb-4">
                  <h3 className="text-xl font-bold">{workout.name}</h3>
                  <Badge className={getDifficultyColor(workout.difficulty)}>
                    {capitalizeFirst(workout.difficulty)}
                  </Badge>
                </div>
                <p className="text-muted-foreground mb-4 line-clamp-2">
                  {workout.description}
                </p>
                
                {/* SHOW ALL EXERCISES IN WORKOUT */}
                <div className="mb-4">
                  <h4 className="font-semibold mb-2 text-sm">Exercises ({Array.isArray(workout.exercises) ? workout.exercises.length : 0}):</h4>
                  <div className="space-y-1 max-h-32 overflow-y-auto">
                    {Array.isArray(workout.exercises) && workout.exercises.map((exercise: any, idx: number) => (
                      <div key={idx} className="text-xs text-muted-foreground flex justify-between items-center py-1 px-2 bg-muted/20 rounded">
                        <span className="font-medium">{exercise.name}</span>
                        <div className="flex gap-2 text-xs">
                          <span>{exercise.sets}x{exercise.reps}</span>
                          <span className="text-orange-500">{exercise.variation}</span>
                        </div>
                      </div>
                    )) || <p className="text-xs text-muted-foreground">No exercises found</p>}
                  </div>
                </div>
                
                <div className="flex items-center justify-between mb-4">
                  <div className="flex items-center space-x-4 text-sm text-muted-foreground">
                    <span className="flex items-center">
                      <Clock className="w-4 h-4 mr-1" />
                      {workout.duration} min
                    </span>
                    <span className="flex items-center">
                      <Flame className="w-4 h-4 mr-1" />
                      {workout.calories} cal
                    </span>
                    <span className="flex items-center">
                      <Dumbbell className="w-4 h-4 mr-1" />
                      {workout.equipment?.length ? "Equipment" : "Bodyweight"}
                    </span>
                  </div>
                </div>
                
                {/* EXERCISE SELECTION */}
                <div className="mb-4">
                  <Button 
                    onClick={(e) => {
                      console.log("🚨🚨🚨 BUTTON CLICK EVENT FIRED!");
                      console.log("🚨 Event object:", e);
                      console.log("🚨 Event target:", e.target);
                      console.log("🚨 Current target:", e.currentTarget);
                      e.preventDefault();
                      e.stopPropagation();
                      console.log("🔥 BUTTON CLICKED FOR WORKOUT:", workout.id, workout.name);
                      console.log("🔥 About to call handleStartWorkout...");
                      handleStartWorkout(workout);
                      console.log("🔥 handleStartWorkout call completed");
                    }}
                    className="w-full gradient-bg mb-2"
                  >
                    <Play className="w-4 h-4 mr-2" />
                    Start Full Workout ({Array.isArray(workout.exercises) ? workout.exercises.length : 0} exercises)
                  </Button>
                  <Button 
                    onClick={(e) => {
                      console.log("🚨🚨🚨 SELECT EXERCISE BUTTON CLICK EVENT FIRED!");
                      e.preventDefault();
                      e.stopPropagation();
                      console.log("🔥 SELECT EXERCISE CLICKED FOR:", workout.name);
                      handleSelectExerciseStart(workout);
                    }}
                    variant="outline"
                    className="w-full"
                  >
                    Choose Starting Exercise
                  </Button>
                </div>
              </CardContent>
            </Card>
          ))}
        </div>

        {filteredWorkouts.length === 0 && (
          <div className="text-center py-12">
            <p className="text-xl text-muted-foreground">No workouts found matching your criteria.</p>
            <Button
              onClick={() => {
                setSearchTerm("");
                setSelectedLevel("all");
                setSelectedDuration("all");
              }}
              variant="outline"
              className="mt-4"
            >
              Clear Filters
            </Button>
          </div>
        )}

        {/* View All Button */}
        {filteredWorkouts.length > 0 && (
          <div className="text-center mt-12">
            <Button variant="outline" className="btn-secondary">
              View All Workouts
            </Button>
          </div>
        )}
      </div>
    </section>
  );
}

</file>
<file path="FitForge/client/src/components/workout-starter.tsx">
import React from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Play, Timer, Target, Dumbbell } from "lucide-react";
import { useLocation } from "wouter";
import { useWorkoutSession, WorkoutExercise } from "@/hooks/use-workout-session";
import { useToast } from "@/hooks/use-toast";

// Import Ender's real exercise data
const enderWorkouts = {
  "Abs": {
    name: "Ender's Core Workout",
    description: "Comprehensive core strengthening with progressive hold times",
    duration: 30,
    difficulty: "Intermediate",
    exercises: [
      {
        id: 1,
        name: "Planks",
        primaryMuscles: ["Rectus Abdominis", "Transverse Abdominis"],
        secondaryMuscles: ["Obliques", "Erector Spinae"],
        equipment: ["None"],
        restTime: 30,
        difficulty: "Beginner",
        workoutType: "Abs"
      },
      {
        id: 2,
        name: "Spider Planks", 
        primaryMuscles: ["Rectus Abdominis", "Transverse Abdominis"],
        secondaryMuscles: ["Obliques", "Erector Spinae", "Shoulders"],
        equipment: ["Bench"],
        restTime: 60,
        difficulty: "Intermediate",
        workoutType: "Abs"
      },
      {
        id: 3,
        name: "Bench Situps",
        primaryMuscles: ["Rectus Abdominis"],
        secondaryMuscles: ["Hip Flexors", "Obliques"], 
        equipment: ["TRX", "Bench"],
        restTime: 90,
        difficulty: "Intermediate",
        workoutType: "Abs"
      },
      {
        id: 4,
        name: "Hanging Knee Raises",
        primaryMuscles: ["Rectus Abdominis"],
        secondaryMuscles: ["Hip Flexors", "Obliques", "Grip/Forearms"],
        equipment: ["Pull-up Bar"],
        restTime: 120,
        difficulty: "Intermediate",
        workoutType: "Abs"
      }
    ]
  },
  "BackBiceps": {
    name: "Ender's Pull Day",
    description: "Back and bicep development with compound movements", 
    duration: 60,
    difficulty: "Intermediate",
    exercises: [
      {
        id: 5,
        name: "Shoulder Shrugs",
        primaryMuscles: ["Trapezius"],
        secondaryMuscles: ["Levator Scapulae"],
        equipment: ["Dumbbells"],
        restTime: 150,
        difficulty: "Beginner",
        workoutType: "BackBiceps"
      },
      {
        id: 6,
        name: "T Row",
        primaryMuscles: ["Latissimus Dorsi"],
        secondaryMuscles: ["Rhomboids", "Trapezius", "Biceps Brachii", "Grip/Forearms"],
        equipment: ["T-Bar", "Barbell"],
        restTime: 180,
        difficulty: "Intermediate",
        workoutType: "BackBiceps"
      },
      {
        id: 7,
        name: "Incline Hammer Curl",
        primaryMuscles: ["Biceps Brachii"],
        secondaryMuscles: ["Brachialis", "Brachioradialis", "Grip/Forearms"],
        equipment: ["Dumbbells", "Incline Bench"],
        restTime: 210,
        difficulty: "Beginner",
        workoutType: "BackBiceps"
      },
      {
        id: 8,
        name: "Neutral Grip Pull-ups",
        primaryMuscles: ["Latissimus Dorsi"],
        secondaryMuscles: ["Biceps Brachii", "Rhomboids", "Trapezius", "Grip/Forearms"],
        equipment: ["Pull-up Bar"],
        restTime: 240,
        difficulty: "Intermediate",
        workoutType: "BackBiceps"
      },
      {
        id: 9,
        name: "Bent Over Rows",
        primaryMuscles: ["Latissimus Dorsi"],
        secondaryMuscles: ["Rhomboids", "Trapezius", "Biceps Brachii", "Grip/Forearms"],
        equipment: ["Barbell", "Dumbbells"],
        restTime: 270,
        difficulty: "Intermediate",
        workoutType: "BackBiceps"
      }
    ]
  },
  "ChestTriceps": {
    name: "Ender's Push Day",
    description: "Chest and tricep focus with pressing movements",
    duration: 75,
    difficulty: "Intermediate",
    exercises: [
      {
        id: 10,
        name: "Bench Press",
        primaryMuscles: ["Pectoralis Major"],
        secondaryMuscles: ["Triceps Brachii", "Anterior Deltoids", "Serratus Anterior"],
        equipment: ["Barbell", "Bench"],
        restTime: 540,
        difficulty: "Intermediate",
        workoutType: "ChestTriceps"
      },
      {
        id: 11,
        name: "TRX Reverse Flys",
        primaryMuscles: ["Rhomboids"],
        secondaryMuscles: ["Trapezius", "Rear Deltoids", "Core"],
        equipment: ["TRX"],
        restTime: 570,
        difficulty: "Intermediate",
        workoutType: "ChestTriceps"
      },
      {
        id: 12,
        name: "Tricep Extension",
        primaryMuscles: ["Triceps Brachii"],
        secondaryMuscles: ["Anconeus"],
        equipment: ["Dumbbells"],
        restTime: 600,
        difficulty: "Beginner",
        workoutType: "ChestTriceps"
      },
      {
        id: 13,
        name: "TRX Pushup",
        primaryMuscles: ["Pectoralis Major"],
        secondaryMuscles: ["Triceps Brachii", "Anterior Deltoids", "Core"],
        equipment: ["TRX"],
        restTime: 0,
        difficulty: "Intermediate",
        workoutType: "ChestTriceps"
      },
      {
        id: 14,
        name: "Incline Bench Press",
        primaryMuscles: ["Pectoralis Major"],
        secondaryMuscles: ["Triceps Brachii", "Anterior Deltoids", "Serratus Anterior"],
        equipment: ["Barbell", "Incline Bench"],
        restTime: 0,
        difficulty: "Intermediate",
        workoutType: "ChestTriceps"
      },
      {
        id: 15,
        name: "Shoulder Press",
        primaryMuscles: ["Deltoids"],
        secondaryMuscles: ["Triceps Brachii", "Trapezius", "Serratus Anterior"],
        equipment: ["Barbell", "Dumbbells"],
        restTime: 0,
        difficulty: "Intermediate",
        workoutType: "ChestTriceps"
      },
      {
        id: 16,
        name: "Dips",
        primaryMuscles: ["Triceps Brachii"],
        secondaryMuscles: ["Pectoralis Major", "Anterior Deltoids", "Core"],
        equipment: ["Dip Station", "Parallel Bars"],
        restTime: 0,
        difficulty: "Intermediate",
        workoutType: "ChestTriceps"
      }
    ]
  },
  "Legs": {
    name: "Ender's Leg Day",
    description: "Lower body compound movements and glute activation",
    duration: 50,
    difficulty: "Advanced",
    exercises: [
      {
        id: 17,
        name: "Goblet Squats",
        primaryMuscles: ["Quadriceps", "Gluteus Maximus"],
        secondaryMuscles: ["Hamstrings", "Core", "Grip/Forearms"],
        equipment: ["Kettlebell", "Dumbbell"],
        restTime: 0,
        difficulty: "Beginner",
        workoutType: "Legs"
      },
      {
        id: 18,
        name: "Dead Lifts",
        primaryMuscles: ["Gluteus Maximus", "Hamstrings"],
        secondaryMuscles: ["Erector Spinae", "Core", "Grip/Forearms"],
        equipment: ["Barbell"],
        restTime: 0,
        difficulty: "Advanced",
        workoutType: "Legs"
      },
      {
        id: 19,
        name: "Calf Raises",
        primaryMuscles: ["Gastrocnemius", "Soleus"],
        secondaryMuscles: [],
        equipment: ["None", "Calf Machine"],
        restTime: 0,
        difficulty: "Beginner",
        workoutType: "Legs"
      },
      {
        id: 20,
        name: "Glute Bridges",
        primaryMuscles: ["Gluteus Maximus"],
        secondaryMuscles: ["Hamstrings", "Core", "Quadriceps"],
        equipment: ["None", "Barbell"],
        restTime: 0,
        difficulty: "Beginner",
        workoutType: "Legs"
      },
      {
        id: 21,
        name: "Kettlebell Swings",
        primaryMuscles: ["Gluteus Maximus", "Hamstrings"],
        secondaryMuscles: ["Core", "Shoulders", "Grip/Forearms"],
        equipment: ["Kettlebell"],
        restTime: 0,
        difficulty: "Intermediate",
        workoutType: "Legs"
      }
    ]
  }
};

export function WorkoutStarter() {
  const [, setLocation] = useLocation();
  const { startWorkout } = useWorkoutSession();
  const { toast } = useToast();

  const handleStartWorkout = (workoutType: keyof typeof enderWorkouts) => {
    const workout = enderWorkouts[workoutType];
    
    toast({
      title: "Starting Workout!",
      description: `Get ready for ${workout.name}`,
    });

    startWorkout(workoutType, workout.exercises as WorkoutExercise[]);
    setLocation("/workout-session");
  };

  const getDifficultyColor = (difficulty: string) => {
    switch (difficulty.toLowerCase()) {
      case "beginner":
        return "bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-300";
      case "intermediate":
        return "bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-300";
      case "advanced":
        return "bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-300";
      default:
        return "bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-300";
    }
  };

  return (
    <section className="bg-muted/30 py-16">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="text-center mb-12">
          <h2 className="text-4xl font-bold mb-4">Ender's Workout Collection</h2>
          <p className="text-xl text-muted-foreground">
            Professional workout routines with precise muscle targeting
          </p>
        </div>

        <div className="grid md:grid-cols-2 lg:grid-cols-2 gap-8">
          {Object.entries(enderWorkouts).map(([workoutType, workout]) => (
            <Card key={workoutType} className="overflow-hidden card-hover">
              <CardHeader>
                <div className="flex items-center justify-between">
                  <CardTitle className="text-xl">{workout.name}</CardTitle>
                  <Badge className={getDifficultyColor(workout.difficulty)}>
                    {workout.difficulty}
                  </Badge>
                </div>
                <p className="text-muted-foreground">{workout.description}</p>
              </CardHeader>
              <CardContent className="space-y-4">
                <div className="flex items-center justify-between text-sm text-muted-foreground">
                  <span className="flex items-center">
                    <Timer className="w-4 h-4 mr-1" />
                    {workout.duration} min
                  </span>
                  <span className="flex items-center">
                    <Target className="w-4 h-4 mr-1" />
                    {workout.exercises.length} exercises
                  </span>
                  <span className="flex items-center">
                    <Dumbbell className="w-4 h-4 mr-1" />
                    Mixed Equipment
                  </span>
                </div>

                {/* Exercise Preview */}
                <div className="space-y-2">
                  <h4 className="text-sm font-medium">Exercises:</h4>
                  <div className="grid grid-cols-1 gap-1">
                    {workout.exercises.slice(0, 3).map((exercise, index) => (
                      <div key={exercise.id} className="text-xs text-muted-foreground">
                        {index + 1}. {exercise.name}
                      </div>
                    ))}
                    {workout.exercises.length > 3 && (
                      <div className="text-xs text-muted-foreground">
                        +{workout.exercises.length - 3} more exercises
                      </div>
                    )}
                  </div>
                </div>

                <Button 
                  onClick={() => handleStartWorkout(workoutType as keyof typeof enderWorkouts)}
                  className="w-full gradient-bg"
                >
                  <Play className="w-4 h-4 mr-2" />
                  Start {workoutType} Workout
                </Button>
              </CardContent>
            </Card>
          ))}
        </div>

        <div className="mt-12 text-center">
          <Card className="inline-block p-6 bg-gradient-to-r from-primary/10 to-accent/10">
            <h3 className="text-lg font-bold mb-2">Real Exercise Database</h3>
            <p className="text-sm text-muted-foreground mb-4">
              Based on Ender's actual workout logs with precise muscle activation percentages
            </p>
            <div className="grid grid-cols-4 gap-4 text-center">
              <div>
                <div className="text-2xl font-bold text-primary">27</div>
                <div className="text-xs text-muted-foreground">Total Exercises</div>
              </div>
              <div>
                <div className="text-2xl font-bold text-accent">4</div>
                <div className="text-xs text-muted-foreground">Workout Types</div>
              </div>
              <div>
                <div className="text-2xl font-bold text-secondary">215</div>
                <div className="text-xs text-muted-foreground">Total Minutes</div>
              </div>
              <div>
                <div className="text-2xl font-bold text-orange-500">100%</div>
                <div className="text-xs text-muted-foreground">Real Data</div>
              </div>
            </div>
          </Card>
        </div>
      </div>
    </section>
  );
}
</file>
<file path="FitForge/client/src/hooks/use-auth.tsx">
import { createContext, useContext, useEffect, useState } from "react";
import { User } from "@shared/schema";

interface AuthContextType {
  user: User | null;
  token: string | null;
  login: (token: string, user: User) => void;
  logout: () => void;
  isLoading: boolean;
}

const AuthContext = createContext<AuthContextType | undefined>(undefined);

export function AuthProvider({ children }: { children: React.ReactNode }) {
  const [user, setUser] = useState<User | null>(null);
  const [token, setToken] = useState<string | null>(null);
  const [isLoading, setIsLoading] = useState(true);

  useEffect(() => {
    // Auto-login as Ender (bypass authentication for testing)
    fetchCurrentUser();
  }, []);

  const fetchCurrentUser = async () => {
    try {
      const response = await fetch("/api/auth/me");

      if (response.ok) {
        const userData = await response.json();
        setUser(userData);
        setToken("auto-login"); // Set dummy token
      } else {
        console.error("Failed to auto-login as Ender");
      }
    } catch (error) {
      console.error("Failed to fetch current user:", error);
    } finally {
      setIsLoading(false);
    }
  };

  const login = (authToken: string, userData: User) => {
    setToken(authToken);
    setUser(userData);
    localStorage.setItem("fitforge-token", authToken);
  };

  const logout = () => {
    setToken(null);
    setUser(null);
    localStorage.removeItem("fitforge-token");
  };

  const value = {
    user,
    token,
    login,
    logout,
    isLoading,
  };

  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;
}

export const useAuth = () => {
  const context = useContext(AuthContext);
  if (context === undefined) {
    throw new Error("useAuth must be used within an AuthProvider");
  }
  return context;
};

</file>
<file path="FitForge/client/src/hooks/use-mobile.tsx">
import * as React from "react"

const MOBILE_BREAKPOINT = 768

export function useIsMobile() {
  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)

  React.useEffect(() => {
    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)
    const onChange = () => {
      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)
    }
    mql.addEventListener("change", onChange)
    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)
    return () => mql.removeEventListener("change", onChange)
  }, [])

  return !!isMobile
}

</file>
<file path="FitForge/client/src/hooks/use-toast.ts">
import * as React from "react"

import type {
  ToastActionElement,
  ToastProps,
} from "@/components/ui/toast"

const TOAST_LIMIT = 1
const TOAST_REMOVE_DELAY = 1000000

type ToasterToast = ToastProps & {
  id: string
  title?: React.ReactNode
  description?: React.ReactNode
  action?: ToastActionElement
}

const actionTypes = {
  ADD_TOAST: "ADD_TOAST",
  UPDATE_TOAST: "UPDATE_TOAST",
  DISMISS_TOAST: "DISMISS_TOAST",
  REMOVE_TOAST: "REMOVE_TOAST",
} as const

let count = 0

function genId() {
  count = (count + 1) % Number.MAX_SAFE_INTEGER
  return count.toString()
}

type ActionType = typeof actionTypes

type Action =
  | {
      type: ActionType["ADD_TOAST"]
      toast: ToasterToast
    }
  | {
      type: ActionType["UPDATE_TOAST"]
      toast: Partial<ToasterToast>
    }
  | {
      type: ActionType["DISMISS_TOAST"]
      toastId?: ToasterToast["id"]
    }
  | {
      type: ActionType["REMOVE_TOAST"]
      toastId?: ToasterToast["id"]
    }

interface State {
  toasts: ToasterToast[]
}

const toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()

const addToRemoveQueue = (toastId: string) => {
  if (toastTimeouts.has(toastId)) {
    return
  }

  const timeout = setTimeout(() => {
    toastTimeouts.delete(toastId)
    dispatch({
      type: "REMOVE_TOAST",
      toastId: toastId,
    })
  }, TOAST_REMOVE_DELAY)

  toastTimeouts.set(toastId, timeout)
}

export const reducer = (state: State, action: Action): State => {
  switch (action.type) {
    case "ADD_TOAST":
      return {
        ...state,
        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),
      }

    case "UPDATE_TOAST":
      return {
        ...state,
        toasts: state.toasts.map((t) =>
          t.id === action.toast.id ? { ...t, ...action.toast } : t
        ),
      }

    case "DISMISS_TOAST": {
      const { toastId } = action

      // ! Side effects ! - This could be extracted into a dismissToast() action,
      // but I'll keep it here for simplicity
      if (toastId) {
        addToRemoveQueue(toastId)
      } else {
        state.toasts.forEach((toast) => {
          addToRemoveQueue(toast.id)
        })
      }

      return {
        ...state,
        toasts: state.toasts.map((t) =>
          t.id === toastId || toastId === undefined
            ? {
                ...t,
                open: false,
              }
            : t
        ),
      }
    }
    case "REMOVE_TOAST":
      if (action.toastId === undefined) {
        return {
          ...state,
          toasts: [],
        }
      }
      return {
        ...state,
        toasts: state.toasts.filter((t) => t.id !== action.toastId),
      }
  }
}

const listeners: Array<(state: State) => void> = []

let memoryState: State = { toasts: [] }

function dispatch(action: Action) {
  memoryState = reducer(memoryState, action)
  listeners.forEach((listener) => {
    listener(memoryState)
  })
}

type Toast = Omit<ToasterToast, "id">

function toast({ ...props }: Toast) {
  const id = genId()

  const update = (props: ToasterToast) =>
    dispatch({
      type: "UPDATE_TOAST",
      toast: { ...props, id },
    })
  const dismiss = () => dispatch({ type: "DISMISS_TOAST", toastId: id })

  dispatch({
    type: "ADD_TOAST",
    toast: {
      ...props,
      id,
      open: true,
      onOpenChange: (open) => {
        if (!open) dismiss()
      },
    },
  })

  return {
    id: id,
    dismiss,
    update,
  }
}

function useToast() {
  const [state, setState] = React.useState<State>(memoryState)

  React.useEffect(() => {
    listeners.push(setState)
    return () => {
      const index = listeners.indexOf(setState)
      if (index > -1) {
        listeners.splice(index, 1)
      }
    }
  }, [state])

  return {
    ...state,
    toast,
    dismiss: (toastId?: string) => dispatch({ type: "DISMISS_TOAST", toastId }),
  }
}

export { useToast, toast }

</file>
<file path="FitForge/client/src/hooks/use-workout-session.tsx">
import React, { createContext, useContext, useState, useCallback, ReactNode } from "react";

export interface WorkoutSet {
  weight: number;
  reps: number;
  equipment: string;
  timestamp: Date;
  setNumber: number;
  volume: number; // calculated: weight * reps
}

export interface ExerciseSession {
  exerciseId: number;
  exerciseName: string;
  sets: WorkoutSet[];
  completed: boolean;
  restTimeRemaining: number;
}

export interface WorkoutSessionState {
  sessionId: string;
  startTime: Date;
  endTime?: Date;
  currentExerciseIndex: number;
  exercises: ExerciseSession[];
  status: "in_progress" | "paused" | "completed";
  totalVolume: number;
  estimatedCalories: number;
  workoutType: string; // "Abs", "BackBiceps", "ChestTriceps", "Legs"
}

export interface WorkoutExercise {
  id: number;
  name: string;
  primaryMuscles: string[];
  secondaryMuscles: string[];
  equipment: string[];
  restTime: number; // seconds
  difficulty: string;
  workoutType: string;
}

interface WorkoutSessionContextType {
  session: WorkoutSessionState | null;
  startWorkout: (workoutType: string, exercises: WorkoutExercise[]) => void;
  pauseWorkout: () => void;
  resumeWorkout: () => void;
  endWorkout: () => void;
  logSet: (weight: number, reps: number, equipment: string) => void;
  completeExercise: () => void;
  nextExercise: () => void;
  previousExercise: () => void;
  updateRestTimer: (timeRemaining: number) => void;
  calculateSessionStats: () => {
    totalSets: number;
    totalVolume: number;
    estimatedCalories: number;
    duration: number;
    averageRestTime: number;
  };
}

const WorkoutSessionContext = createContext<WorkoutSessionContextType | undefined>(undefined);

export function WorkoutSessionProvider({ children }: { children: ReactNode }) {
  const [session, setSession] = useState<WorkoutSessionState | null>(null);

  const startWorkout = useCallback((workoutType: string, exercises: WorkoutExercise[]) => {
    console.log("💪💪💪 startWorkout CALLED!");
    console.log("💪 workoutType:", workoutType);
    console.log("💪 exercises:", exercises);
    console.log("💪 exercises length:", exercises.length);
    
    const newSession: WorkoutSessionState = {
      sessionId: `session_${Date.now()}`,
      startTime: new Date(),
      currentExerciseIndex: 0,
      exercises: exercises.map(ex => ({
        exerciseId: ex.id,
        exerciseName: ex.name,
        sets: [],
        completed: false,
        restTimeRemaining: ex.restTime
      })),
      status: "in_progress",
      totalVolume: 0,
      estimatedCalories: 0,
      workoutType
    };
    
    console.log("💪 NEW SESSION CREATED:", newSession);
    setSession(newSession);
    console.log("💪 SESSION STATE UPDATED");
    
    // Persist to localStorage for recovery
    localStorage.setItem('activeWorkoutSession', JSON.stringify(newSession));
    console.log("💪 SESSION SAVED TO LOCALSTORAGE");
    console.log("💪 startWorkout COMPLETED SUCCESSFULLY");
  }, []);

  const pauseWorkout = useCallback(() => {
    if (session) {
      const updatedSession = { ...session, status: "paused" as const };
      setSession(updatedSession);
      localStorage.setItem('activeWorkoutSession', JSON.stringify(updatedSession));
    }
  }, [session]);

  const resumeWorkout = useCallback(() => {
    if (session) {
      const updatedSession = { ...session, status: "in_progress" as const };
      setSession(updatedSession);
      localStorage.setItem('activeWorkoutSession', JSON.stringify(updatedSession));
    }
  }, [session]);

  const endWorkout = useCallback(() => {
    if (session) {
      const updatedSession = { 
        ...session, 
        status: "completed" as const,
        endTime: new Date()
      };
      setSession(updatedSession);
      
      // TODO: Save to database via API call
      console.log("Saving workout session:", updatedSession);
      
      // Clear localStorage
      localStorage.removeItem('activeWorkoutSession');
    }
  }, [session]);

  const logSet = useCallback((weight: number, reps: number, equipment: string) => {
    if (!session) return;

    const currentExercise = session.exercises[session.currentExerciseIndex];
    const volume = weight * reps;
    
    const newSet: WorkoutSet = {
      weight,
      reps,
      equipment,
      timestamp: new Date(),
      setNumber: currentExercise.sets.length + 1,
      volume
    };

    const updatedSession = { ...session };
    updatedSession.exercises[session.currentExerciseIndex].sets.push(newSet);
    updatedSession.totalVolume += volume;
    
    // Simple calorie calculation: approximately 0.1 calories per pound moved
    updatedSession.estimatedCalories += Math.round(volume * 0.1);

    setSession(updatedSession);
    localStorage.setItem('activeWorkoutSession', JSON.stringify(updatedSession));
  }, [session]);

  const completeExercise = useCallback(() => {
    if (!session) return;

    const updatedSession = { ...session };
    updatedSession.exercises[session.currentExerciseIndex].completed = true;

    setSession(updatedSession);
    localStorage.setItem('activeWorkoutSession', JSON.stringify(updatedSession));
  }, [session]);

  const nextExercise = useCallback(() => {
    if (!session || session.currentExerciseIndex >= session.exercises.length - 1) return;

    const updatedSession = { 
      ...session, 
      currentExerciseIndex: session.currentExerciseIndex + 1 
    };
    
    setSession(updatedSession);
    localStorage.setItem('activeWorkoutSession', JSON.stringify(updatedSession));
  }, [session]);

  const previousExercise = useCallback(() => {
    if (!session || session.currentExerciseIndex <= 0) return;

    const updatedSession = { 
      ...session, 
      currentExerciseIndex: session.currentExerciseIndex - 1 
    };
    
    setSession(updatedSession);
    localStorage.setItem('activeWorkoutSession', JSON.stringify(updatedSession));
  }, [session]);

  const updateRestTimer = useCallback((timeRemaining: number) => {
    if (!session) return;

    const updatedSession = { ...session };
    updatedSession.exercises[session.currentExerciseIndex].restTimeRemaining = timeRemaining;
    
    setSession(updatedSession);
  }, [session]);

  const calculateSessionStats = useCallback(() => {
    if (!session) {
      return {
        totalSets: 0,
        totalVolume: 0,
        estimatedCalories: 0,
        duration: 0,
        averageRestTime: 0
      };
    }

    const totalSets = session.exercises.reduce((total, ex) => total + ex.sets.length, 0);
    const duration = session.endTime 
      ? session.endTime.getTime() - session.startTime.getTime()
      : Date.now() - session.startTime.getTime();

    // Calculate average rest time based on completed exercises
    const completedExercises = session.exercises.filter(ex => ex.completed);
    const averageRestTime = completedExercises.length > 0
      ? completedExercises.reduce((total, ex) => total + ex.restTimeRemaining, 0) / completedExercises.length
      : 0;

    return {
      totalSets,
      totalVolume: session.totalVolume,
      estimatedCalories: session.estimatedCalories,
      duration,
      averageRestTime
    };
  }, [session]);

  // Recovery function to restore session from localStorage
  const recoverSession = useCallback(() => {
    const savedSession = localStorage.getItem('activeWorkoutSession');
    if (savedSession) {
      try {
        const parsedSession = JSON.parse(savedSession);
        // Convert date strings back to Date objects
        parsedSession.startTime = new Date(parsedSession.startTime);
        if (parsedSession.endTime) {
          parsedSession.endTime = new Date(parsedSession.endTime);
        }
        parsedSession.exercises.forEach((ex: ExerciseSession) => {
          ex.sets.forEach((set: WorkoutSet) => {
            set.timestamp = new Date(set.timestamp);
          });
        });
        
        setSession(parsedSession);
      } catch (error) {
        console.error("Failed to recover workout session:", error);
        localStorage.removeItem('activeWorkoutSession');
      }
    }
  }, []);

  // Initialize session recovery on mount
  React.useEffect(() => {
    recoverSession();
  }, [recoverSession]);

  return (
    <WorkoutSessionContext.Provider
      value={{
        session,
        startWorkout,
        pauseWorkout,
        resumeWorkout,
        endWorkout,
        logSet,
        completeExercise,
        nextExercise,
        previousExercise,
        updateRestTimer,
        calculateSessionStats
      }}
    >
      {children}
    </WorkoutSessionContext.Provider>
  );
}

export function useWorkoutSession() {
  const context = useContext(WorkoutSessionContext);
  if (context === undefined) {
    throw new Error('useWorkoutSession must be used within a WorkoutSessionProvider');
  }
  return context;
}
</file>
<file path="FitForge/client/src/lib/auth.ts">
import { apiRequest } from "./queryClient";
import { InsertUser, LoginData } from "@shared/schema";

export async function registerUser(userData: InsertUser) {
  const response = await apiRequest("POST", "/api/auth/register", userData);
  return response.json();
}

export async function loginUser(loginData: {email: string}) {
  const response = await apiRequest("POST", "/api/auth/login", loginData);
  return response.json();
}

export async function getCurrentUser(token?: string) {
  // No token required - auto-returns Ender's profile
  const response = await fetch("/api/auth/me");
  
  if (!response.ok) {
    throw new Error("Failed to get current user");
  }
  
  return response.json();
}

</file>
<file path="FitForge/client/src/lib/queryClient.ts">
import { QueryClient, QueryFunction } from "@tanstack/react-query";

async function throwIfResNotOk(res: Response) {
  if (!res.ok) {
    const text = (await res.text()) || res.statusText;
    throw new Error(`${res.status}: ${text}`);
  }
}

export async function apiRequest(
  method: string,
  url: string,
  data?: unknown | undefined,
): Promise<Response> {
  const res = await fetch(url, {
    method,
    headers: data ? { "Content-Type": "application/json" } : {},
    body: data ? JSON.stringify(data) : undefined,
    credentials: "include",
  });

  await throwIfResNotOk(res);
  return res;
}

type UnauthorizedBehavior = "returnNull" | "throw";
export const getQueryFn: <T>(options: {
  on401: UnauthorizedBehavior;
}) => QueryFunction<T> =
  ({ on401: unauthorizedBehavior }) =>
  async ({ queryKey }) => {
    const res = await fetch(queryKey[0] as string, {
      credentials: "include",
    });

    if (unauthorizedBehavior === "returnNull" && res.status === 401) {
      return null;
    }

    await throwIfResNotOk(res);
    return await res.json();
  };

export const queryClient = new QueryClient({
  defaultOptions: {
    queries: {
      queryFn: getQueryFn({ on401: "throw" }),
      refetchInterval: false,
      refetchOnWindowFocus: false,
      staleTime: Infinity,
      retry: false,
    },
    mutations: {
      retry: false,
    },
  },
});

</file>
<file path="FitForge/client/src/lib/utils.ts">
import { clsx, type ClassValue } from "clsx"
import { twMerge } from "tailwind-merge"

export function cn(...inputs: ClassValue[]) {
  return twMerge(clsx(inputs))
}

</file>
<file path="FitForge/client/src/pages/auth.tsx">
import { useState } from "react";
import { useLocation } from "wouter";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { useForm } from "react-hook-form";
import { zodResolver } from "@hookform/resolvers/zod";
import { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from "@/components/ui/form";
import { useToast } from "@/hooks/use-toast";
import { useAuth } from "@/hooks/use-auth";
import { loginUser, registerUser } from "@/lib/auth";
import { insertUserSchema, loginSchema } from "@shared/schema";
import { Dumbbell, Loader2 } from "lucide-react";
import { z } from "zod";

const registerFormSchema = insertUserSchema.extend({
  confirmPassword: z.string().min(6, "Password must be at least 6 characters"),
}).refine((data) => data.password === data.confirmPassword, {
  message: "Passwords don't match",
  path: ["confirmPassword"],
});

type RegisterFormData = z.infer<typeof registerFormSchema>;
type LoginFormData = z.infer<typeof loginSchema>;

export default function Auth() {
  const [, setLocation] = useLocation();
  const { login } = useAuth();
  const { toast } = useToast();
  const [isLoading, setIsLoading] = useState(false);

  const loginForm = useForm<{email: string}>({
    resolver: zodResolver(z.object({ email: z.string().email() })),
    defaultValues: {
      email: "",
    },
  });

  const registerForm = useForm<RegisterFormData>({
    resolver: zodResolver(registerFormSchema),
    defaultValues: {
      username: "",
      email: "",
      password: "",
      confirmPassword: "",
      firstName: "",
      lastName: "",
    },
  });

  const onLogin = async (data: {email: string}) => {
    setIsLoading(true);
    try {
      const response = await loginUser(data);
      login(response.token, response.user);
      toast({
        title: "Welcome back!",
        description: "You have been successfully logged in.",
      });
      setLocation("/dashboard");
    } catch (error: any) {
      toast({
        title: "Login failed",
        description: error.message || "Please check your credentials and try again.",
        variant: "destructive",
      });
    } finally {
      setIsLoading(false);
    }
  };

  const onRegister = async (data: RegisterFormData) => {
    setIsLoading(true);
    try {
      const { confirmPassword, ...registerData } = data;
      const response = await registerUser(registerData);
      login(response.token, response.user);
      toast({
        title: "Account created!",
        description: "Welcome to FitForge! Your fitness journey starts now.",
      });
      setLocation("/dashboard");
    } catch (error: any) {
      toast({
        title: "Registration failed",
        description: error.message || "Please try again with different details.",
        variant: "destructive",
      });
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div className="min-h-screen flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8">
      {/* Background */}
      <div className="absolute inset-0 z-0">
        <img
          src="https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?ixlib=rb-4.0.3&auto=format&fit=crop&w=2070&h=1000"
          alt="Fitness gym background"
          className="w-full h-full object-cover"
        />
        <div className="absolute inset-0 bg-background/80 backdrop-blur-sm"></div>
      </div>

      <div className="relative z-10 w-full max-w-md space-y-8">
        <div className="text-center">
          <div className="flex justify-center items-center space-x-2 mb-6">
            <div className="w-12 h-12 gradient-bg rounded-xl flex items-center justify-center">
              <Dumbbell className="w-6 h-6 text-white" />
            </div>
            <h1 className="text-3xl font-bold">FitForge</h1>
          </div>
          <p className="text-muted-foreground">
            Join the ultimate AI-powered fitness ecosystem
          </p>
        </div>

        <Card className="glass-effect">
          <Tabs defaultValue="login" className="w-full">
            <TabsList className="grid w-full grid-cols-2">
              <TabsTrigger value="login">Sign In</TabsTrigger>
              <TabsTrigger value="register">Sign Up</TabsTrigger>
            </TabsList>

            <TabsContent value="login">
              <CardHeader>
                <CardTitle>Welcome back</CardTitle>
                <CardDescription>
                  Enter your credentials to access your account
                </CardDescription>
              </CardHeader>
              <CardContent>
                <Form {...loginForm}>
                  <form onSubmit={loginForm.handleSubmit(onLogin)} className="space-y-4">
                    <FormField
                      control={loginForm.control}
                      name="email"
                      render={({ field }) => (
                        <FormItem>
                          <FormLabel>Email</FormLabel>
                          <FormControl>
                            <Input
                              type="email"
                              placeholder="Enter your email"
                              {...field}
                              disabled={isLoading}
                            />
                          </FormControl>
                          <FormMessage />
                        </FormItem>
                      )}
                    />
                    <div className="text-sm text-muted-foreground p-3 bg-muted/50 rounded-lg">
                      <p>🔓 <strong>Password not required for demo</strong></p>
                      <p>Just enter your email to access your workout data</p>
                    </div>
                    <Button type="submit" className="w-full gradient-bg" disabled={isLoading}>
                      {isLoading && <Loader2 className="mr-2 h-4 w-4 animate-spin" />}
                      Sign In
                    </Button>
                  </form>
                </Form>
              </CardContent>
            </TabsContent>

            <TabsContent value="register">
              <CardHeader>
                <CardTitle>Create account</CardTitle>
                <CardDescription>
                  Start your fitness journey with FitForge
                </CardDescription>
              </CardHeader>
              <CardContent>
                <Form {...registerForm}>
                  <form onSubmit={registerForm.handleSubmit(onRegister)} className="space-y-4">
                    <div className="grid grid-cols-2 gap-4">
                      <FormField
                        control={registerForm.control}
                        name="firstName"
                        render={({ field }) => (
                          <FormItem>
                            <FormLabel>First Name</FormLabel>
                            <FormControl>
                              <Input placeholder="John" {...field} disabled={isLoading} />
                            </FormControl>
                            <FormMessage />
                          </FormItem>
                        )}
                      />
                      <FormField
                        control={registerForm.control}
                        name="lastName"
                        render={({ field }) => (
                          <FormItem>
                            <FormLabel>Last Name</FormLabel>
                            <FormControl>
                              <Input placeholder="Doe" {...field} disabled={isLoading} />
                            </FormControl>
                            <FormMessage />
                          </FormItem>
                        )}
                      />
                    </div>
                    <FormField
                      control={registerForm.control}
                      name="username"
                      render={({ field }) => (
                        <FormItem>
                          <FormLabel>Username</FormLabel>
                          <FormControl>
                            <Input placeholder="johndoe" {...field} disabled={isLoading} />
                          </FormControl>
                          <FormMessage />
                        </FormItem>
                      )}
                    />
                    <FormField
                      control={registerForm.control}
                      name="email"
                      render={({ field }) => (
                        <FormItem>
                          <FormLabel>Email</FormLabel>
                          <FormControl>
                            <Input
                              type="email"
                              placeholder="john@example.com"
                              {...field}
                              disabled={isLoading}
                            />
                          </FormControl>
                          <FormMessage />
                        </FormItem>
                      )}
                    />
                    <FormField
                      control={registerForm.control}
                      name="password"
                      render={({ field }) => (
                        <FormItem>
                          <FormLabel>Password</FormLabel>
                          <FormControl>
                            <Input
                              type="password"
                              placeholder="Create a password"
                              {...field}
                              disabled={isLoading}
                            />
                          </FormControl>
                          <FormMessage />
                        </FormItem>
                      )}
                    />
                    <FormField
                      control={registerForm.control}
                      name="confirmPassword"
                      render={({ field }) => (
                        <FormItem>
                          <FormLabel>Confirm Password</FormLabel>
                          <FormControl>
                            <Input
                              type="password"
                              placeholder="Confirm your password"
                              {...field}
                              disabled={isLoading}
                            />
                          </FormControl>
                          <FormMessage />
                        </FormItem>
                      )}
                    />
                    <Button type="submit" className="w-full gradient-bg" disabled={isLoading}>
                      {isLoading && <Loader2 className="mr-2 h-4 w-4 animate-spin" />}
                      Create Account
                    </Button>
                  </form>
                </Form>
              </CardContent>
            </TabsContent>
          </Tabs>
        </Card>
      </div>
    </div>
  );
}

</file>
<file path="FitForge/client/src/pages/community.tsx">
import { CommunityFeatures } from "@/components/community-features";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Progress } from "@/components/ui/progress";
import { Avatar, AvatarFallback } from "@/components/ui/avatar";
import { useQuery, useMutation, useQueryClient } from "@tanstack/react-query";
import { Challenge, SocialPost } from "@shared/schema";
import { useAuth } from "@/hooks/use-auth";
import { useToast } from "@/hooks/use-toast";
import { useState } from "react";
import {
  Users,
  Trophy,
  Target,
  Calendar,
  MessageCircle,
  Heart,
  Share2,
  Plus,
  TrendingUp,
  Award,
  Flame,
} from "lucide-react";

export default function Community() {
  const { user } = useAuth();
  const { toast } = useToast();
  const queryClient = useQueryClient();
  const [showCreateChallengeDialog, setShowCreateChallengeDialog] = useState(false);
  const [showShareProgressDialog, setShowShareProgressDialog] = useState(false);

  const { data: challenges = [] } = useQuery<Challenge[]>({
    queryKey: ["/api/challenges"],
  });

  const { data: socialPosts = [] } = useQuery<(SocialPost & { user: any })[]>({
    queryKey: ["/api/social/posts"],
  });

  const communityStats = {
    totalMembers: 45672,
    activeChallenges: challenges.filter(c => c.isActive).length,
    completedWorkouts: 892344,
    totalCaloriesBurned: 15672890,
  };

  const leaderboard = [
    { rank: 1, name: "Sarah Chen", points: 2847, avatar: "SC" },
    { rank: 2, name: "Mike Rodriguez", points: 2756, avatar: "MR" },
    { rank: 3, name: "Emma Johnson", points: 2698, avatar: "EJ" },
    { rank: 4, name: "Alex Thompson", points: 2634, avatar: "AT" },
    { rank: 5, name: "Lisa Wang", points: 2587, avatar: "LW" },
  ];

  const featuredChallenges = challenges.filter(c => c.isActive).slice(0, 3);

  // Join Challenge Mutation
  const joinChallengeMutation = useMutation({
    mutationFn: async (challengeId: number) => {
      const response = await fetch(`/api/challenges/${challengeId}/join`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
      });
      if (!response.ok) {
        throw new Error('Failed to join challenge');
      }
      return response.json();
    },
    onSuccess: () => {
      queryClient.invalidateQueries({ queryKey: ['/api/challenges'] });
      toast({
        title: "Challenge Joined!",
        description: "You've successfully joined the challenge. Good luck!",
      });
    },
    onError: () => {
      toast({
        title: "Error",
        description: "Failed to join challenge. Please try again.",
        variant: "destructive",
      });
    }
  });

  // Create Social Post Mutation
  const createPostMutation = useMutation({
    mutationFn: async (content: string) => {
      const response = await fetch('/api/social/posts', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ content }),
      });
      if (!response.ok) {
        throw new Error('Failed to create post');
      }
      return response.json();
    },
    onSuccess: () => {
      queryClient.invalidateQueries({ queryKey: ['/api/social/posts'] });
      setShowShareProgressDialog(false);
      toast({
        title: "Posted!",
        description: "Your progress has been shared with the community.",
      });
    },
    onError: () => {
      toast({
        title: "Error",
        description: "Failed to share progress. Please try again.",
        variant: "destructive",
      });
    }
  });

  // Button Handlers
  const handleJoinChallenge = (challengeId: number, challengeName: string) => {
    if (!user) {
      toast({
        title: "Please Sign In",
        description: "You need to be signed in to join challenges.",
        variant: "destructive",
      });
      return;
    }
    
    joinChallengeMutation.mutate(challengeId);
  };

  const handleViewFullLeaderboard = () => {
    toast({
      title: "Coming Soon!",
      description: "Full leaderboard view is being developed.",
    });
  };

  const handleViewFullFeed = () => {
    toast({
      title: "Coming Soon!",
      description: "Full activity feed view is being developed.",
    });
  };

  const handleShareProgress = () => {
    if (!user) {
      toast({
        title: "Please Sign In",
        description: "You need to be signed in to share progress.",
        variant: "destructive",
      });
      return;
    }

    // Example progress post - in a real app, this would come from user's actual data
    const progressMessage = "Just completed an amazing workout! 💪 Feeling stronger every day. #FitForge #Progress";
    createPostMutation.mutate(progressMessage);
  };

  return (
    <div className="min-h-screen bg-background">
      {/* Header */}
      <section className="bg-gradient-to-r from-primary/10 via-accent/5 to-secondary/10 py-12">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="text-center mb-8">
            <h1 className="text-4xl font-bold mb-4">FitForge Community</h1>
            <p className="text-xl text-muted-foreground">
              Connect, compete, and achieve greatness together
            </p>
          </div>

          {/* Community Stats */}
          <div className="grid md:grid-cols-4 gap-6">
            <Card>
              <CardContent className="p-6 text-center">
                <Users className="w-8 h-8 text-primary mx-auto mb-4" />
                <div className="text-3xl font-bold text-primary mb-1">
                  {communityStats.totalMembers.toLocaleString()}
                </div>
                <p className="text-sm text-muted-foreground">Active Members</p>
              </CardContent>
            </Card>
            <Card>
              <CardContent className="p-6 text-center">
                <Target className="w-8 h-8 text-accent mx-auto mb-4" />
                <div className="text-3xl font-bold text-accent mb-1">
                  {communityStats.activeChallenges}
                </div>
                <p className="text-sm text-muted-foreground">Live Challenges</p>
              </CardContent>
            </Card>
            <Card>
              <CardContent className="p-6 text-center">
                <Trophy className="w-8 h-8 text-secondary mx-auto mb-4" />
                <div className="text-3xl font-bold text-secondary mb-1">
                  {(communityStats.completedWorkouts / 1000).toFixed(0)}K
                </div>
                <p className="text-sm text-muted-foreground">Workouts Completed</p>
              </CardContent>
            </Card>
            <Card>
              <CardContent className="p-6 text-center">
                <Flame className="w-8 h-8 text-orange-500 mx-auto mb-4" />
                <div className="text-3xl font-bold text-orange-500 mb-1">
                  {(communityStats.totalCaloriesBurned / 1000000).toFixed(1)}M
                </div>
                <p className="text-sm text-muted-foreground">Calories Burned</p>
              </CardContent>
            </Card>
          </div>
        </div>
      </section>

      {/* Featured Challenges */}
      <section className="py-12">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex items-center justify-between mb-8">
            <h2 className="text-2xl font-bold">Featured Challenges</h2>
            <Button 
              className="gradient-bg"
              onClick={() => setShowCreateChallengeDialog(true)}
            >
              <Plus className="w-4 h-4 mr-2" />
              Create Challenge
            </Button>
          </div>
          <div className="grid md:grid-cols-3 gap-6">
            {featuredChallenges.map((challenge) => (
              <Card key={challenge.id} className="card-hover">
                <CardContent className="p-6">
                  <div className="flex items-center justify-between mb-4">
                    <h3 className="font-bold">{challenge.name}</h3>
                    <Badge className="bg-primary/10 text-primary">
                      {Math.ceil((new Date(challenge.endDate).getTime() - new Date().getTime()) / (1000 * 60 * 60 * 24))} days left
                    </Badge>
                  </div>
                  <p className="text-sm text-muted-foreground mb-4">
                    {challenge.description}
                  </p>
                  <div className="flex items-center justify-between mb-4">
                    <div className="flex items-center">
                      <Users className="w-4 h-4 mr-2 text-muted-foreground" />
                      <span className="text-sm text-muted-foreground">
                        {challenge.participants?.toLocaleString()} participants
                      </span>
                    </div>
                    <div className="flex items-center">
                      <Target className="w-4 h-4 mr-2 text-muted-foreground" />
                      <span className="text-sm text-muted-foreground">
                        {challenge.target} {challenge.unit}
                      </span>
                    </div>
                  </div>
                  <Button 
                    className="w-full btn-secondary"
                    onClick={() => handleJoinChallenge(challenge.id, challenge.name)}
                  >
                    Join Challenge
                  </Button>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
      </section>

      {/* Leaderboard */}
      <section className="py-12 bg-muted/30">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="grid lg:grid-cols-3 gap-8">
            {/* Weekly Leaderboard */}
            <Card className="lg:col-span-1">
              <CardHeader>
                <CardTitle className="flex items-center">
                  <Award className="w-5 h-5 mr-2 text-accent" />
                  Weekly Leaders
                </CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-4">
                  {leaderboard.map((leader) => (
                    <div key={leader.rank} className="flex items-center space-x-3">
                      <div className={`w-8 h-8 rounded-full flex items-center justify-center text-sm font-bold ${
                        leader.rank === 1 ? 'bg-yellow-500 text-white' :
                        leader.rank === 2 ? 'bg-gray-400 text-white' :
                        leader.rank === 3 ? 'bg-orange-600 text-white' :
                        'bg-muted text-muted-foreground'
                      }`}>
                        {leader.rank}
                      </div>
                      <Avatar className="w-8 h-8">
                        <AvatarFallback className="text-xs">
                          {leader.avatar}
                        </AvatarFallback>
                      </Avatar>
                      <div className="flex-1">
                        <p className="font-medium text-sm">{leader.name}</p>
                        <p className="text-xs text-muted-foreground">{leader.points} points</p>
                      </div>
                    </div>
                  ))}
                </div>
                <Button 
                  variant="outline" 
                  className="w-full mt-4"
                  onClick={handleViewFullLeaderboard}
                >
                  View Full Leaderboard
                </Button>
              </CardContent>
            </Card>

            {/* Activity Feed Preview */}
            <Card className="lg:col-span-2">
              <CardHeader>
                <CardTitle className="flex items-center">
                  <TrendingUp className="w-5 h-5 mr-2 text-primary" />
                  Community Activity
                </CardTitle>
              </CardHeader>
              <CardContent>
                {socialPosts.length > 0 ? (
                  <div className="space-y-6">
                    {socialPosts.slice(0, 3).map((post) => (
                      <div key={post.id} className="border-b border-border pb-4 last:border-b-0">
                        <div className="flex items-center mb-3">
                          <Avatar className="w-8 h-8 mr-3">
                            <AvatarFallback className="text-xs">
                              {post.user.firstName?.[0]}{post.user.lastName?.[0]}
                            </AvatarFallback>
                          </Avatar>
                          <div>
                            <p className="font-medium text-sm">
                              {post.user.firstName} {post.user.lastName}
                            </p>
                            <p className="text-xs text-muted-foreground">
                              {new Date(post.createdAt).toLocaleDateString()}
                            </p>
                          </div>
                        </div>
                        <p className="text-sm mb-3">{post.content}</p>
                        <div className="flex items-center space-x-4 text-xs text-muted-foreground">
                          <span className="flex items-center">
                            <Heart className="w-3 h-3 mr-1" />
                            {post.likes}
                          </span>
                          <span className="flex items-center">
                            <MessageCircle className="w-3 h-3 mr-1" />
                            {post.comments}
                          </span>
                        </div>
                      </div>
                    ))}
                  </div>
                ) : (
                  <div className="text-center py-8">
                    <MessageCircle className="w-12 h-12 mx-auto text-muted-foreground mb-4" />
                    <p className="text-muted-foreground">No activity yet</p>
                    <Button 
                      className="mt-4 gradient-bg"
                      onClick={handleShareProgress}
                    >
                      Share Your Progress
                    </Button>
                  </div>
                )}
                <Button 
                  variant="outline" 
                  className="w-full mt-4"
                  onClick={handleViewFullFeed}
                >
                  View Full Feed
                </Button>
              </CardContent>
            </Card>
          </div>
        </div>
      </section>

      {/* Community Features Component */}
      <CommunityFeatures />
    </div>
  );
}

</file>
<file path="FitForge/client/src/pages/dashboard.tsx">
import { DashboardOverview } from "@/components/dashboard-overview";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Progress } from "@/components/ui/progress";
import { useAuth } from "@/hooks/use-auth";
import { useQuery } from "@tanstack/react-query";
import { WorkoutSession, UserStats, Achievement, Challenge } from "@shared/schema";
import { 
  Calendar, 
  TrendingUp, 
  Target, 
  Clock, 
  Flame, 
  Trophy,
  Activity,
  Users,
  Play
} from "lucide-react";
import { Link } from "wouter";

export default function Dashboard() {
  const { user } = useAuth();

  const { data: recentSessions = [] } = useQuery<WorkoutSession[]>({
    queryKey: ["/api/workout-sessions"],
  });

  const { data: userStats } = useQuery<UserStats>({
    queryKey: ["/api/user-stats/latest"],
  });

  const { data: achievements = [] } = useQuery<Achievement[]>({
    queryKey: ["/api/achievements"],
  });

  const { data: challenges = [] } = useQuery<Challenge[]>({
    queryKey: ["/api/challenges"],
  });

  const todayStats = {
    workoutProgress: 70,
    calorieGoal: 2200,
    caloriesConsumed: userStats?.caloriesConsumed || 1750,
    workoutsThisWeek: recentSessions.filter(session => {
      const sessionDate = new Date(session.createdAt);
      const weekAgo = new Date();
      weekAgo.setDate(weekAgo.getDate() - 7);
      return sessionDate >= weekAgo;
    }).length,
  };

  const quickActions = [
    {
      title: "Start Quick Workout",
      description: "15-minute full body routine",
      icon: Play,
      color: "bg-primary/10 text-primary",
      href: "/workouts",
    },
    {
      title: "Log Nutrition",
      description: "Track your meals",
      icon: Target,
      color: "bg-accent/10 text-accent",
      href: "/nutrition",
    },
    {
      title: "View Progress",
      description: "Check your stats",
      icon: TrendingUp,
      color: "bg-secondary/10 text-secondary",
      href: "/progress",
    },
  ];

  return (
    <div className="min-h-screen bg-background">
      {/* Welcome Section */}
      <section className="bg-gradient-to-r from-primary/10 via-accent/5 to-secondary/10 py-12">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="text-center">
            <h1 className="text-4xl font-bold mb-4">
              Welcome back, {user?.firstName}! 👋
            </h1>
            <p className="text-xl text-muted-foreground mb-8">
              Ready to crush your fitness goals today?
            </p>
            
            {/* Today's Progress */}
            <div className="grid md:grid-cols-3 gap-6 max-w-3xl mx-auto">
              <Card>
                <CardContent className="p-6 text-center">
                  <div className="w-16 h-16 mx-auto mb-4 relative">
                    <svg className="w-16 h-16 progress-ring">
                      <circle
                        cx="32"
                        cy="32"
                        r="28"
                        stroke="currentColor"
                        strokeWidth="4"
                        fill="none"
                        className="text-muted opacity-30"
                      />
                      <circle
                        cx="32"
                        cy="32"
                        r="28"
                        stroke="hsl(var(--primary))"
                        strokeWidth="4"
                        fill="none"
                        strokeDasharray="175.9"
                        strokeDashoffset={175.9 * (1 - todayStats.workoutProgress / 100)}
                        strokeLinecap="round"
                      />
                    </svg>
                    <div className="absolute inset-0 flex items-center justify-center">
                      <span className="text-foreground font-bold">{todayStats.workoutProgress}%</span>
                    </div>
                  </div>
                  <p className="font-medium">Daily Goal</p>
                </CardContent>
              </Card>

              <Card>
                <CardContent className="p-6 text-center">
                  <div className="text-3xl font-bold text-accent mb-2">
                    {todayStats.workoutsThisWeek}
                  </div>
                  <p className="font-medium">Workouts This Week</p>
                </CardContent>
              </Card>

              <Card>
                <CardContent className="p-6 text-center">
                  <div className="text-3xl font-bold text-secondary mb-2">
                    {Math.round((todayStats.caloriesConsumed / todayStats.calorieGoal) * 100)}%
                  </div>
                  <p className="font-medium">Calorie Goal</p>
                  <Progress 
                    value={(todayStats.caloriesConsumed / todayStats.calorieGoal) * 100} 
                    className="mt-2 h-2"
                  />
                </CardContent>
              </Card>
            </div>
          </div>
        </div>
      </section>

      {/* Quick Actions */}
      <section className="py-12">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <h2 className="text-2xl font-bold mb-8">Quick Actions</h2>
          <div className="grid md:grid-cols-3 gap-6">
            {quickActions.map((action, index) => (
              <Link key={index} href={action.href}>
                <Card className="card-hover cursor-pointer">
                  <CardContent className="p-6">
                    <div className={`w-12 h-12 ${action.color} rounded-xl flex items-center justify-center mb-4`}>
                      <action.icon className="w-6 h-6" />
                    </div>
                    <h3 className="font-bold mb-2">{action.title}</h3>
                    <p className="text-sm text-muted-foreground">{action.description}</p>
                  </CardContent>
                </Card>
              </Link>
            ))}
          </div>
        </div>
      </section>

      {/* Recent Activity */}
      <section className="py-12 bg-muted/30">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="grid lg:grid-cols-2 gap-8">
            {/* Recent Workouts */}
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center">
                  <Activity className="w-5 h-5 mr-2 text-primary" />
                  Recent Workouts
                </CardTitle>
              </CardHeader>
              <CardContent>
                {recentSessions.length > 0 ? (
                  <div className="space-y-4">
                    {recentSessions.slice(0, 3).map((session) => (
                      <div key={session.id} className="flex items-center justify-between p-3 bg-muted/50 rounded-lg">
                        <div>
                          <p className="font-medium">Workout Session</p>
                          <p className="text-sm text-muted-foreground">
                            {new Date(session.createdAt).toLocaleDateString()}
                          </p>
                        </div>
                        <div className="text-right">
                          <p className="font-bold text-primary">
                            {session.totalDuration || 0} min
                          </p>
                          <p className="text-sm text-muted-foreground">
                            {session.caloriesBurned || 0} cal
                          </p>
                        </div>
                      </div>
                    ))}
                  </div>
                ) : (
                  <div className="text-center py-8">
                    <Activity className="w-12 h-12 mx-auto text-muted-foreground mb-4" />
                    <p className="text-muted-foreground">No recent workouts</p>
                    <Link href="/workouts">
                      <Button className="mt-4 gradient-bg">Start First Workout</Button>
                    </Link>
                  </div>
                )}
              </CardContent>
            </Card>

            {/* Recent Achievements */}
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center">
                  <Trophy className="w-5 h-5 mr-2 text-accent" />
                  Recent Achievements
                </CardTitle>
              </CardHeader>
              <CardContent>
                {achievements.length > 0 ? (
                  <div className="space-y-4">
                    {achievements.slice(0, 3).map((achievement) => (
                      <div key={achievement.id} className="flex items-start space-x-3 p-3 bg-muted/50 rounded-lg">
                        <div className="w-10 h-10 bg-accent/10 rounded-xl flex items-center justify-center flex-shrink-0">
                          <Trophy className="w-5 h-5 text-accent" />
                        </div>
                        <div className="flex-1">
                          <p className="font-medium">{achievement.title}</p>
                          <p className="text-sm text-muted-foreground">
                            {achievement.description}
                          </p>
                          <p className="text-xs text-muted-foreground mt-1">
                            {new Date(achievement.unlockedAt).toLocaleDateString()}
                          </p>
                        </div>
                      </div>
                    ))}
                  </div>
                ) : (
                  <div className="text-center py-8">
                    <Trophy className="w-12 h-12 mx-auto text-muted-foreground mb-4" />
                    <p className="text-muted-foreground">No achievements yet</p>
                    <p className="text-sm text-muted-foreground mt-2">
                      Complete workouts to earn your first achievement!
                    </p>
                  </div>
                )}
              </CardContent>
            </Card>
          </div>
        </div>
      </section>

      {/* Dashboard Overview Component */}
      <DashboardOverview />
    </div>
  );
}

</file>
<file path="FitForge/client/src/pages/home.tsx">
import { HeroSection } from "@/components/hero-section";
import { DashboardOverview } from "@/components/dashboard-overview";
import { WorkoutLibrary } from "@/components/workout-library";
import { LiveTracking } from "@/components/live-tracking";
import { ProgressAnalytics } from "@/components/progress-analytics";
import { CommunityFeatures } from "@/components/community-features";
import { Footer } from "@/components/footer";

export default function Home() {
  return (
    <div className="min-h-screen">
      <HeroSection />
      <DashboardOverview />
      <WorkoutLibrary />
      <LiveTracking />
      <ProgressAnalytics />
      <CommunityFeatures />
      <Footer />
    </div>
  );
}

</file>
<file path="FitForge/client/src/pages/not-found.tsx">
import { Card, CardContent } from "@/components/ui/card";
import { AlertCircle } from "lucide-react";

export default function NotFound() {
  return (
    <div className="min-h-screen w-full flex items-center justify-center bg-gray-50">
      <Card className="w-full max-w-md mx-4">
        <CardContent className="pt-6">
          <div className="flex mb-4 gap-2">
            <AlertCircle className="h-8 w-8 text-red-500" />
            <h1 className="text-2xl font-bold text-gray-900">404 Page Not Found</h1>
          </div>

          <p className="mt-4 text-sm text-gray-600">
            Did you forget to add the page to the router?
          </p>
        </CardContent>
      </Card>
    </div>
  );
}

</file>
<file path="FitForge/client/src/pages/nutrition.tsx">
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Progress } from "@/components/ui/progress";
import { useAuth } from "@/hooks/use-auth";
import { useQuery, useMutation, useQueryClient } from "@tanstack/react-query";
import { UserStats } from "@shared/schema";
import { 
  Apple, 
  Coffee, 
  Utensils, 
  Plus,
  Target,
  TrendingUp,
  Calendar,
  Search
} from "lucide-react";
import { useState } from "react";
import { useToast } from "@/hooks/use-toast";
import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from "@/components/ui/dialog";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Label } from "@/components/ui/label";

export default function Nutrition() {
  const { user } = useAuth();
  const { toast } = useToast();
  const queryClient = useQueryClient();
  const [searchFood, setSearchFood] = useState("");
  const [showAddFoodDialog, setShowAddFoodDialog] = useState(false);
  const [selectedMealType, setSelectedMealType] = useState("snack");
  const [searchResults, setSearchResults] = useState<any[]>([]);

  const { data: userStats } = useQuery<UserStats>({
    queryKey: ["/api/user-stats/latest"],
  });

  const dailyGoals = {
    calories: 2200,
    protein: 150, // grams
    carbs: 275,   // grams  
    fat: 73,      // grams
  };

  const todaysIntake = {
    calories: userStats?.caloriesConsumed || 1650,
    protein: 98,
    carbs: 180,
    fat: 45,
  };

  const macroPercentages = {
    protein: Math.round((todaysIntake.protein / dailyGoals.protein) * 100),
    carbs: Math.round((todaysIntake.carbs / dailyGoals.carbs) * 100),
    fat: Math.round((todaysIntake.fat / dailyGoals.fat) * 100),
  };

  const recentMeals = [
    {
      id: 1,
      time: "8:00 AM",
      meal: "Breakfast",
      food: "Oatmeal with berries",
      calories: 320,
      protein: 12,
    },
    {
      id: 2,
      time: "12:30 PM", 
      meal: "Lunch",
      food: "Chicken salad bowl",
      calories: 450,
      protein: 35,
    },
    {
      id: 3,
      time: "3:00 PM",
      meal: "Snack", 
      food: "Greek yogurt",
      calories: 150,
      protein: 15,
    },
    {
      id: 4,
      time: "7:00 PM",
      meal: "Dinner",
      food: "Salmon with quinoa",
      calories: 520,
      protein: 36,
    },
  ];

  // Food logging mutation
  const logFoodMutation = useMutation({
    mutationFn: async (foodData: any) => {
      const response = await fetch('/api/nutrition/log', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(foodData),
      });
      if (!response.ok) {
        throw new Error('Failed to log food');
      }
      return response.json();
    },
    onSuccess: () => {
      queryClient.invalidateQueries({ queryKey: ['/api/nutrition/daily-intake'] });
      queryClient.invalidateQueries({ queryKey: ['/api/user-stats/latest'] });
      setShowAddFoodDialog(false);
      setSearchFood('');
      setSearchResults([]);
      toast({
        title: "Food Logged!",
        description: "Successfully added to your nutrition log.",
      });
    },
    onError: () => {
      toast({
        title: "Error",
        description: "Failed to log food. Please try again.",
        variant: "destructive",
      });
    }
  });

  // Handle food search with debouncing
  const handleFoodSearch = async (e: React.ChangeEvent<HTMLInputElement>) => {
    const query = e.target.value;
    setSearchFood(query);
    
    if (query.length > 2) {
      try {
        const response = await fetch(`/api/nutrition/foods/search?q=${encodeURIComponent(query)}`);
        if (response.ok) {
          const results = await response.json();
          setSearchResults(results);
        }
      } catch (error) {
        console.error('Food search error:', error);
      }
    } else {
      setSearchResults([]);
    }
  };

  // Handle adding food from search results
  const handleAddFood = (food: any) => {
    if (!user) {
      toast({
        title: "Please Sign In",
        description: "You need to be signed in to log food.",
        variant: "destructive",
      });
      return;
    }

    logFoodMutation.mutate({
      foodId: food.id,
      foodName: food.name,
      calories: food.calories,
      protein: food.protein,
      carbs: food.carbs,
      fat: food.fat,
      serving: food.serving,
      mealType: selectedMealType
    });
  };

  // Handle quick add foods
  const handleQuickAddFood = (food: any) => {
    if (!user) {
      toast({
        title: "Please Sign In",
        description: "You need to be signed in to log food.",
        variant: "destructive",
      });
      return;
    }

    logFoodMutation.mutate({
      foodId: null,
      foodName: food.name,
      calories: food.calories,
      protein: food.protein,
      carbs: food.carbs || 0,
      fat: food.fat || 0,
      serving: "1 serving",
      mealType: "snack"
    });
  };

  const quickAddFoods = [
    { name: "Banana", calories: 105, protein: 1 },
    { name: "Chicken Breast (4oz)", calories: 185, protein: 35 },
    { name: "Brown Rice (1 cup)", calories: 216, protein: 5 },
    { name: "Eggs (2 large)", calories: 140, protein: 12 },
    { name: "Almonds (1oz)", calories: 164, protein: 6 },
    { name: "Avocado (half)", calories: 160, protein: 2 },
  ];

  return (
    <div className="min-h-screen bg-background">
      {/* Header Section */}
      <section className="bg-gradient-to-r from-primary/10 via-accent/5 to-secondary/10 py-12">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex items-center justify-between mb-8">
            <div>
              <h1 className="text-4xl font-bold mb-4">Nutrition Tracking</h1>
              <p className="text-xl text-muted-foreground">
                Fuel your fitness journey with smart nutrition
              </p>
            </div>
            <Dialog open={showAddFoodDialog} onOpenChange={setShowAddFoodDialog}>
              <DialogTrigger asChild>
                <Button className="gradient-bg">
                  <Plus className="w-4 h-4 mr-2" />
                  Add Food
                </Button>
              </DialogTrigger>
              <DialogContent className="max-w-md">
                <DialogHeader>
                  <DialogTitle>Add Food to Log</DialogTitle>
                </DialogHeader>
                <div className="space-y-4">
                  <div>
                    <Label htmlFor="meal-type">Meal Type</Label>
                    <Select value={selectedMealType} onValueChange={setSelectedMealType}>
                      <SelectTrigger>
                        <SelectValue placeholder="Select meal type" />
                      </SelectTrigger>
                      <SelectContent>
                        <SelectItem value="breakfast">Breakfast</SelectItem>
                        <SelectItem value="lunch">Lunch</SelectItem>
                        <SelectItem value="dinner">Dinner</SelectItem>
                        <SelectItem value="snack">Snack</SelectItem>
                      </SelectContent>
                    </Select>
                  </div>
                  <div>
                    <Label htmlFor="food-search">Search Food</Label>
                    <div className="relative">
                      <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground w-4 h-4" />
                      <Input 
                        id="food-search"
                        placeholder="Search for food..."
                        value={searchFood}
                        onChange={handleFoodSearch}
                        className="pl-10"
                      />
                    </div>
                  </div>
                  {searchResults.length > 0 && (
                    <div className="max-h-40 overflow-y-auto space-y-2">
                      {searchResults.map((food) => (
                        <Button
                          key={food.id}
                          variant="outline"
                          className="w-full justify-start text-left p-3 h-auto"
                          onClick={() => handleAddFood(food)}
                        >
                          <div>
                            <div className="font-medium">{food.name}</div>
                            <div className="text-xs text-muted-foreground">
                              {food.calories} cal, {food.protein}g protein ({food.serving})
                            </div>
                          </div>
                        </Button>
                      ))}
                    </div>
                  )}
                </div>
              </DialogContent>
            </Dialog>
          </div>

          {/* Daily Overview */}
          <div className="grid md:grid-cols-4 gap-6">
            <Card>
              <CardContent className="p-6 text-center">
                <div className="text-3xl font-bold text-primary mb-2">
                  {todaysIntake.calories}
                </div>
                <p className="text-sm text-muted-foreground">Calories</p>
                <Progress 
                  value={(todaysIntake.calories / dailyGoals.calories) * 100} 
                  className="mt-2 h-2"
                />
                <p className="text-xs text-muted-foreground mt-1">
                  {dailyGoals.calories - todaysIntake.calories} remaining
                </p>
              </CardContent>
            </Card>
            <Card>
              <CardContent className="p-6 text-center">
                <div className="text-3xl font-bold text-accent mb-2">
                  {todaysIntake.protein}g
                </div>
                <p className="text-sm text-muted-foreground">Protein</p>
                <Progress 
                  value={macroPercentages.protein} 
                  className="mt-2 h-2"
                />
                <p className="text-xs text-muted-foreground mt-1">
                  {dailyGoals.protein - todaysIntake.protein}g remaining
                </p>
              </CardContent>
            </Card>
            <Card>
              <CardContent className="p-6 text-center">
                <div className="text-3xl font-bold text-secondary mb-2">
                  {todaysIntake.carbs}g
                </div>
                <p className="text-sm text-muted-foreground">Carbs</p>
                <Progress 
                  value={macroPercentages.carbs} 
                  className="mt-2 h-2"
                />
                <p className="text-xs text-muted-foreground mt-1">
                  {dailyGoals.carbs - todaysIntake.carbs}g remaining
                </p>
              </CardContent>
            </Card>
            <Card>
              <CardContent className="p-6 text-center">
                <div className="text-3xl font-bold text-orange-500 mb-2">
                  {todaysIntake.fat}g
                </div>
                <p className="text-sm text-muted-foreground">Fat</p>
                <Progress 
                  value={macroPercentages.fat} 
                  className="mt-2 h-2"
                />
                <p className="text-xs text-muted-foreground mt-1">
                  {dailyGoals.fat - todaysIntake.fat}g remaining
                </p>
              </CardContent>
            </Card>
          </div>
        </div>
      </section>

      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
        <div className="grid lg:grid-cols-2 gap-8">
          {/* Food Search & Quick Add */}
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center">
                <Search className="w-5 h-5 mr-2 text-primary" />
                Add Food
              </CardTitle>
            </CardHeader>
            <CardContent>
              <div className="space-y-4">
                <div className="relative">
                  <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground w-4 h-4" />
                  <Input 
                    placeholder="Search for food..."
                    value={searchFood}
                    onChange={(e) => setSearchFood(e.target.value)}
                    className="pl-10"
                  />
                </div>
                <div>
                  <h4 className="font-medium mb-3">Quick Add</h4>
                  <div className="grid grid-cols-2 gap-2">
                    {quickAddFoods.map((food, index) => (
                      <Button 
                        key={index}
                        variant="outline" 
                        size="sm"
                        className="text-left justify-start p-3 h-auto"
                        onClick={() => handleQuickAddFood(food)}
                      >
                        <div>
                          <div className="font-medium text-sm">{food.name}</div>
                          <div className="text-xs text-muted-foreground">
                            {food.calories} cal, {food.protein}g protein
                          </div>
                        </div>
                      </Button>
                    ))}
                  </div>
                </div>
              </div>
            </CardContent>
          </Card>

          {/* Today's Meals */}
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center">
                <Utensils className="w-5 h-5 mr-2 text-accent" />
                Today's Meals
              </CardTitle>
            </CardHeader>
            <CardContent>
              <div className="space-y-4">
                {recentMeals.map((meal) => (
                  <div key={meal.id} className="flex items-center justify-between p-3 bg-muted/50 rounded-lg">
                    <div className="flex items-center space-x-3">
                      <div className="w-10 h-10 bg-primary/10 rounded-xl flex items-center justify-center">
                        {meal.meal === "Breakfast" && <Coffee className="w-5 h-5 text-primary" />}
                        {meal.meal === "Lunch" && <Utensils className="w-5 h-5 text-primary" />}
                        {meal.meal === "Snack" && <Apple className="w-5 h-5 text-primary" />}
                        {meal.meal === "Dinner" && <Utensils className="w-5 h-5 text-primary" />}
                      </div>
                      <div>
                        <p className="font-medium">{meal.food}</p>
                        <p className="text-sm text-muted-foreground">
                          {meal.meal} • {meal.time}
                        </p>
                      </div>
                    </div>
                    <div className="text-right">
                      <p className="font-bold text-primary">{meal.calories} cal</p>
                      <p className="text-sm text-muted-foreground">{meal.protein}g protein</p>
                    </div>
                  </div>
                ))}
              </div>
            </CardContent>
          </Card>
        </div>

        {/* Nutrition Goals */}
        <Card className="mt-8">
          <CardHeader>
            <CardTitle className="flex items-center">
              <Target className="w-5 h-5 mr-2 text-secondary" />
              Nutrition Goals
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="grid md:grid-cols-4 gap-6 text-center">
              <div>
                <div className="text-2xl font-bold text-primary mb-2">
                  {Math.round((todaysIntake.calories / dailyGoals.calories) * 100)}%
                </div>
                <p className="text-sm text-muted-foreground">Calorie Goal</p>
              </div>
              <div>
                <div className="text-2xl font-bold text-accent mb-2">
                  {macroPercentages.protein}%
                </div>
                <p className="text-sm text-muted-foreground">Protein Goal</p>
              </div>
              <div>
                <div className="text-2xl font-bold text-secondary mb-2">
                  {macroPercentages.carbs}%
                </div>
                <p className="text-sm text-muted-foreground">Carb Goal</p>
              </div>
              <div>
                <div className="text-2xl font-bold text-orange-500 mb-2">
                  {macroPercentages.fat}%
                </div>
                <p className="text-sm text-muted-foreground">Fat Goal</p>
              </div>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  );
}
</file>
<file path="FitForge/client/src/pages/profile.tsx">
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Textarea } from "@/components/ui/textarea";
import { useAuth } from "@/hooks/use-auth";
import { useQuery, useMutation, useQueryClient } from "@tanstack/react-query";
import { UserStats } from "@shared/schema";
import { 
  User, 
  Settings, 
  Target, 
  Activity, 
  Trophy,
  Calendar,
  Edit
} from "lucide-react";
import { useState } from "react";
import { useToast } from "@/hooks/use-toast";

export default function Profile() {
  const { user } = useAuth();
  const { toast } = useToast();
  const queryClient = useQueryClient();
  const [isEditing, setIsEditing] = useState(false);
  const [profileForm, setProfileForm] = useState({
    firstName: '',
    lastName: '',
    email: '',
    height: '',
    weight: ''
  });
  const [goalsForm, setGoalsForm] = useState({
    weeklyWorkouts: 4,
    targetWeight: 180,
    dailyCalories: 2200
  });

  const { data: userStats } = useQuery<UserStats>({
    queryKey: ["/api/user-stats/latest"],
  });

  const fitnessGoals = {
    weeklyWorkouts: 4,
    targetWeight: userStats?.weight || 180,
    dailyCalories: 2200,
  };

  // Profile update mutations
  const updateProfileMutation = useMutation({
    mutationFn: async (data: any) => {
      const response = await fetch('/api/auth/profile', {
        method: 'PATCH',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(data),
      });
      if (!response.ok) {
        throw new Error('Failed to update profile');
      }
      return response.json();
    },
    onSuccess: () => {
      queryClient.invalidateQueries({ queryKey: ['/api/auth/me'] });
      setIsEditing(false);
      toast({
        title: "Profile Updated!",
        description: "Your profile has been successfully updated.",
      });
    },
    onError: () => {
      toast({
        title: "Error",
        description: "Failed to update profile. Please try again.",
        variant: "destructive",
      });
    }
  });

  const updateGoalsMutation = useMutation({
    mutationFn: async (data: any) => {
      const response = await fetch('/api/auth/goals', {
        method: 'PATCH',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(data),
      });
      if (!response.ok) {
        throw new Error('Failed to update goals');
      }
      return response.json();
    },
    onSuccess: () => {
      setIsEditing(false);
      toast({
        title: "Goals Updated!",
        description: "Your fitness goals have been successfully updated.",
      });
    },
    onError: () => {
      toast({
        title: "Error",
        description: "Failed to update goals. Please try again.",
        variant: "destructive",
      });
    }
  });

  // Handle form submissions
  const handleEditToggle = () => {
    if (!isEditing) {
      // Initialize forms with current values when starting to edit
      setProfileForm({
        firstName: user?.firstName || '',
        lastName: user?.lastName || '',
        email: user?.email || '',
        height: '170',
        weight: userStats?.weight?.toString() || ''
      });
      setGoalsForm({
        weeklyWorkouts: fitnessGoals.weeklyWorkouts,
        targetWeight: fitnessGoals.targetWeight,
        dailyCalories: fitnessGoals.dailyCalories
      });
    }
    setIsEditing(!isEditing);
  };

  const handleSaveProfile = () => {
    if (!user) {
      toast({
        title: "Please Sign In",
        description: "You need to be signed in to update your profile.",
        variant: "destructive",
      });
      return;
    }
    updateProfileMutation.mutate(profileForm);
  };

  const handleUpdateGoals = () => {
    if (!user) {
      toast({
        title: "Please Sign In",
        description: "You need to be signed in to update your goals.",
        variant: "destructive",
      });
      return;
    }
    updateGoalsMutation.mutate(goalsForm);
  };

  const preferences = {
    workoutReminders: true,
    nutritionTracking: true,
    socialSharing: false,
  };

  return (
    <div className="min-h-screen bg-background">
      {/* Header Section */}
      <section className="bg-gradient-to-r from-primary/10 via-accent/5 to-secondary/10 py-12">
        <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-6">
              <div className="w-24 h-24 gradient-bg rounded-full flex items-center justify-center">
                <span className="text-white text-3xl font-bold">
                  {user ? `${user.firstName[0]}${user.lastName[0]}` : "U"}
                </span>
              </div>
              <div>
                <h1 className="text-4xl font-bold mb-2">
                  {user?.firstName} {user?.lastName}
                </h1>
                <p className="text-xl text-muted-foreground">{user?.email}</p>
                <p className="text-sm text-muted-foreground mt-1">
                  Member since {user ? new Date(user.createdAt).toLocaleDateString() : 'N/A'}
                </p>
              </div>
            </div>
            <Button 
              onClick={handleEditToggle}
              variant={isEditing ? "outline" : "default"}
              className={!isEditing ? "gradient-bg" : ""}
            >
              <Edit className="w-4 h-4 mr-2" />
              {isEditing ? "Cancel" : "Edit Profile"}
            </Button>
          </div>
        </div>
      </section>

      <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
        <div className="grid md:grid-cols-2 gap-8">
          {/* Personal Information */}
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center">
                <User className="w-5 h-5 mr-2 text-primary" />
                Personal Information
              </CardTitle>
            </CardHeader>
            <CardContent className="space-y-4">
              <div className="grid grid-cols-2 gap-4">
                <div>
                  <Label htmlFor="firstName">First Name</Label>
                  <Input 
                    id="firstName" 
                    value={isEditing ? profileForm.firstName : (user?.firstName || '')} 
                    disabled={!isEditing}
                    onChange={(e) => setProfileForm(prev => ({ ...prev, firstName: e.target.value }))}
                  />
                </div>
                <div>
                  <Label htmlFor="lastName">Last Name</Label>
                  <Input 
                    id="lastName" 
                    value={isEditing ? profileForm.lastName : (user?.lastName || '')} 
                    disabled={!isEditing}
                    onChange={(e) => setProfileForm(prev => ({ ...prev, lastName: e.target.value }))}
                  />
                </div>
              </div>
              <div>
                <Label htmlFor="email">Email</Label>
                <Input 
                  id="email" 
                  value={isEditing ? profileForm.email : (user?.email || '')} 
                  disabled={!isEditing}
                  type="email"
                  onChange={(e) => setProfileForm(prev => ({ ...prev, email: e.target.value }))}
                />
              </div>
              <div className="grid grid-cols-2 gap-4">
                <div>
                  <Label htmlFor="height">Height (cm)</Label>
                  <Input 
                    id="height" 
                    value={isEditing ? profileForm.height : '170'} 
                    disabled={!isEditing}
                    type="number"
                    onChange={(e) => setProfileForm(prev => ({ ...prev, height: e.target.value }))}
                  />
                </div>
                <div>
                  <Label htmlFor="weight">Current Weight (lbs)</Label>
                  <Input 
                    id="weight" 
                    value={isEditing ? profileForm.weight : (userStats?.weight || '')} 
                    disabled={!isEditing}
                    type="number"
                    onChange={(e) => setProfileForm(prev => ({ ...prev, weight: e.target.value }))}
                  />
                </div>
              </div>
              {isEditing && (
                <Button 
                  className="w-full gradient-bg"
                  onClick={handleSaveProfile}
                  disabled={updateProfileMutation.isPending}
                >
                  {updateProfileMutation.isPending ? 'Saving...' : 'Save Changes'}
                </Button>
              )}
            </CardContent>
          </Card>

          {/* Fitness Goals */}
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center">
                <Target className="w-5 h-5 mr-2 text-accent" />
                Fitness Goals
              </CardTitle>
            </CardHeader>
            <CardContent className="space-y-4">
              <div>
                <Label htmlFor="weeklyWorkouts">Weekly Workout Goal</Label>
                <Input 
                  id="weeklyWorkouts" 
                  value={isEditing ? goalsForm.weeklyWorkouts : fitnessGoals.weeklyWorkouts} 
                  disabled={!isEditing}
                  type="number"
                  onChange={(e) => setGoalsForm(prev => ({ ...prev, weeklyWorkouts: Number(e.target.value) }))}
                />
              </div>
              <div>
                <Label htmlFor="targetWeight">Target Weight (lbs)</Label>
                <Input 
                  id="targetWeight" 
                  value={isEditing ? goalsForm.targetWeight : fitnessGoals.targetWeight} 
                  disabled={!isEditing}
                  type="number"
                  onChange={(e) => setGoalsForm(prev => ({ ...prev, targetWeight: Number(e.target.value) }))}
                />
              </div>
              <div>
                <Label htmlFor="dailyCalories">Daily Calorie Goal</Label>
                <Input 
                  id="dailyCalories" 
                  value={isEditing ? goalsForm.dailyCalories : fitnessGoals.dailyCalories} 
                  disabled={!isEditing}
                  type="number"
                  onChange={(e) => setGoalsForm(prev => ({ ...prev, dailyCalories: Number(e.target.value) }))}
                />
              </div>
              {isEditing && (
                <Button 
                  className="w-full gradient-bg"
                  onClick={handleUpdateGoals}
                  disabled={updateGoalsMutation.isPending}
                >
                  {updateGoalsMutation.isPending ? 'Updating...' : 'Update Goals'}
                </Button>
              )}
            </CardContent>
          </Card>
        </div>

        {/* Statistics Overview */}
        <Card className="mt-8">
          <CardHeader>
            <CardTitle className="flex items-center">
              <Activity className="w-5 h-5 mr-2 text-secondary" />
              Your Statistics
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="grid md:grid-cols-4 gap-6 text-center">
              <div>
                <div className="text-3xl font-bold text-primary mb-2">
                  24
                </div>
                <p className="text-sm text-muted-foreground">Total Workouts</p>
              </div>
              <div>
                <div className="text-3xl font-bold text-accent mb-2">
                  12k
                </div>
                <p className="text-sm text-muted-foreground">Calories Burned</p>
              </div>
              <div>
                <div className="text-3xl font-bold text-secondary mb-2">
                  36h
                </div>
                <p className="text-sm text-muted-foreground">Training Time</p>
              </div>
              <div>
                <div className="text-3xl font-bold text-orange-500 mb-2">
                  7
                </div>
                <p className="text-sm text-muted-foreground">Day Streak</p>
              </div>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  );
}
</file>
<file path="FitForge/client/src/pages/progress.tsx">
import { ProgressAnalytics } from "@/components/progress-analytics";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Progress } from "@/components/ui/progress";
import { useQuery } from "@tanstack/react-query";
import { UserStats, Achievement, WorkoutSession } from "@shared/schema";
import { useAuth } from "@/hooks/use-auth";
import {
  TrendingUp,
  TrendingDown,
  Target,
  Calendar,
  Trophy,
  Activity,
  Flame,
  Weight,
  Heart,
  Zap,
} from "lucide-react";

export default function ProgressPage() {
  const { user } = useAuth();

  const { data: userStats = [] } = useQuery<UserStats[]>({
    queryKey: ["/api/user-stats"],
  });

  const { data: achievements = [] } = useQuery<Achievement[]>({
    queryKey: ["/api/achievements"],
  });

  const { data: workoutSessions = [] } = useQuery<WorkoutSession[]>({
    queryKey: ["/api/workout-sessions"],
  });

  const latestStats = userStats[0];
  const previousStats = userStats[1];

  const calculateChange = (current: number | null | undefined, previous: number | null | undefined) => {
    if (!current || !previous) return 0;
    return ((current - previous) / previous) * 100;
  };

  const progressMetrics = [
    {
      label: "Weight",
      current: latestStats?.weight || 0,
      previous: previousStats?.weight,
      unit: "kg",
      icon: Weight,
      color: "text-primary",
    },
    {
      label: "Body Fat",
      current: latestStats?.bodyFat || 0,
      previous: previousStats?.bodyFat,
      unit: "%",
      icon: Target,
      color: "text-accent",
      reverse: true, // Lower is better
    },
    {
      label: "Muscle Mass",
      current: latestStats?.muscleMass || 0,
      previous: previousStats?.muscleMass,
      unit: "kg",
      icon: Activity,
      color: "text-secondary",
    },
    {
      label: "Energy Level",
      current: latestStats?.energyLevel || 0,
      previous: previousStats?.energyLevel,
      unit: "/10",
      icon: Zap,
      color: "text-orange-500",
    },
  ];

  const workoutMetrics = {
    totalSessions: workoutSessions.length,
    totalDuration: workoutSessions.reduce((sum, session) => sum + (session.totalDuration || 0), 0),
    totalCalories: workoutSessions.reduce((sum, session) => sum + (session.caloriesBurned || 0), 0),
    averageFormScore: (() => {
      const sessionsWithScore = workoutSessions.filter(s => s.formScore);
      return sessionsWithScore.length > 0 
        ? sessionsWithScore.reduce((sum, session) => sum + (session.formScore || 0), 0) / sessionsWithScore.length
        : 0;
    })(),
    thisWeekSessions: workoutSessions.filter(session => {
      const sessionDate = new Date(session.createdAt);
      const weekAgo = new Date();
      weekAgo.setDate(weekAgo.getDate() - 7);
      return sessionDate >= weekAgo;
    }).length,
  };

  const goals = [
    {
      title: "Weekly Workout Goal",
      current: workoutMetrics.thisWeekSessions,
      target: 5,
      unit: "sessions",
      color: "primary",
    },
    {
      title: "Monthly Calorie Burn",
      current: workoutMetrics.totalCalories,
      target: 8000,
      unit: "calories",
      color: "accent",
    },
    {
      title: "Form Score Target",
      current: Math.round(workoutMetrics.averageFormScore),
      target: 95,
      unit: "%",
      color: "secondary",
    },
  ];

  return (
    <div className="min-h-screen bg-background">
      {/* Header */}
      <section className="bg-gradient-to-r from-primary/10 via-accent/5 to-secondary/10 py-12">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="text-center">
            <h1 className="text-4xl font-bold mb-4">Your Progress Journey</h1>
            <p className="text-xl text-muted-foreground">
              Track your transformation with detailed analytics
            </p>
          </div>
        </div>
      </section>

      {/* Key Metrics */}
      <section className="py-12">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <h2 className="text-2xl font-bold mb-8">Body Composition</h2>
          <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-6 mb-12">
            {progressMetrics.map((metric, index) => {
              const change = calculateChange(metric.current ?? undefined, metric.previous ?? undefined);
              const isPositive = metric.reverse ? change < 0 : change > 0;
              const isNegative = metric.reverse ? change > 0 : change < 0;

              return (
                <Card key={index}>
                  <CardContent className="p-6">
                    <div className="flex items-center justify-between mb-4">
                      <metric.icon className={`w-8 h-8 ${metric.color}`} />
                      {metric.previous && (
                        <div className={`flex items-center text-sm ${
                          isPositive ? 'text-green-500' : isNegative ? 'text-red-500' : 'text-muted-foreground'
                        }`}>
                          {isPositive ? (
                            <TrendingUp className="w-4 h-4 mr-1" />
                          ) : isNegative ? (
                            <TrendingDown className="w-4 h-4 mr-1" />
                          ) : null}
                          {change !== 0 && `${Math.abs(change).toFixed(1)}%`}
                        </div>
                      )}
                    </div>
                    <div className="text-3xl font-bold mb-1">
                      {metric.current}{metric.unit}
                    </div>
                    <p className="text-sm text-muted-foreground">{metric.label}</p>
                  </CardContent>
                </Card>
              );
            })}
          </div>

          {/* Workout Performance */}
          <h2 className="text-2xl font-bold mb-8">Workout Performance</h2>
          <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-6 mb-12">
            <Card>
              <CardContent className="p-6 text-center">
                <Activity className="w-8 h-8 text-primary mx-auto mb-4" />
                <div className="text-3xl font-bold text-primary mb-1">
                  {workoutMetrics.totalSessions}
                </div>
                <p className="text-sm text-muted-foreground">Total Sessions</p>
              </CardContent>
            </Card>
            <Card>
              <CardContent className="p-6 text-center">
                <Calendar className="w-8 h-8 text-accent mx-auto mb-4" />
                <div className="text-3xl font-bold text-accent mb-1">
                  {Math.round(workoutMetrics.totalDuration / 60)}h
                </div>
                <p className="text-sm text-muted-foreground">Total Time</p>
              </CardContent>
            </Card>
            <Card>
              <CardContent className="p-6 text-center">
                <Flame className="w-8 h-8 text-orange-500 mx-auto mb-4" />
                <div className="text-3xl font-bold text-orange-500 mb-1">
                  {workoutMetrics.totalCalories}
                </div>
                <p className="text-sm text-muted-foreground">Calories Burned</p>
              </CardContent>
            </Card>
            <Card>
              <CardContent className="p-6 text-center">
                <Target className="w-8 h-8 text-secondary mx-auto mb-4" />
                <div className="text-3xl font-bold text-secondary mb-1">
                  {Math.round(workoutMetrics.averageFormScore)}%
                </div>
                <p className="text-sm text-muted-foreground">Avg Form Score</p>
              </CardContent>
            </Card>
          </div>
        </div>
      </section>

      {/* Goals Progress */}
      <section className="py-12 bg-muted/30">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <h2 className="text-2xl font-bold mb-8">Current Goals</h2>
          <div className="grid md:grid-cols-3 gap-6">
            {goals.map((goal, index) => {
              const progress = Math.min((goal.current / goal.target) * 100, 100);
              const colorClass = 
                goal.color === "primary" ? "text-primary" :
                goal.color === "accent" ? "text-accent" :
                "text-secondary";

              return (
                <Card key={index}>
                  <CardContent className="p-6">
                    <h3 className="font-bold mb-4">{goal.title}</h3>
                    <div className="flex items-center justify-between mb-2">
                      <span className="text-sm text-muted-foreground">Progress</span>
                      <span className={`font-bold ${colorClass}`}>
                        {goal.current} / {goal.target} {goal.unit}
                      </span>
                    </div>
                    <Progress value={progress} className="mb-2" />
                    <p className="text-sm text-muted-foreground">
                      {Math.round(progress)}% complete
                    </p>
                  </CardContent>
                </Card>
              );
            })}
          </div>
        </div>
      </section>

      {/* Achievements */}
      {achievements.length > 0 && (
        <section className="py-12">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div className="flex items-center justify-between mb-8">
              <h2 className="text-2xl font-bold">Recent Achievements</h2>
              <Button variant="outline">View All</Button>
            </div>
            <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
              {achievements.slice(0, 6).map((achievement) => (
                <Card key={achievement.id} className="card-hover">
                  <CardContent className="p-6">
                    <div className="flex items-start space-x-4">
                      <div className="w-12 h-12 bg-accent/10 rounded-xl flex items-center justify-center flex-shrink-0">
                        <Trophy className="w-6 h-6 text-accent" />
                      </div>
                      <div className="flex-1">
                        <h3 className="font-bold mb-1">{achievement.title}</h3>
                        <p className="text-sm text-muted-foreground mb-2">
                          {achievement.description}
                        </p>
                        {achievement.value && (
                          <Badge variant="secondary" className="text-xs">
                            {achievement.value}
                          </Badge>
                        )}
                        <p className="text-xs text-muted-foreground mt-2">
                          {new Date(achievement.unlockedAt).toLocaleDateString()}
                        </p>
                      </div>
                    </div>
                  </CardContent>
                </Card>
              ))}
            </div>
          </div>
        </section>
      )}

      {/* Progress Analytics Component */}
      <ProgressAnalytics />
    </div>
  );
}

</file>
<file path="FitForge/client/src/pages/workouts.tsx">
import { WorkoutLibrary } from "@/components/workout-library";
import { WorkoutStarter } from "@/components/workout-starter";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { useQuery } from "@tanstack/react-query";
import { Workout, WorkoutSession } from "@shared/schema";
import { useAuth } from "@/hooks/use-auth";
import { Link } from "wouter";
import { 
  Plus, 
  Play, 
  Clock, 
  Flame, 
  TrendingUp,
  Target,
  Activity,
  BarChart3
} from "lucide-react";

export default function Workouts() {
  const { user } = useAuth();

  const { data: workouts = [] } = useQuery<Workout[]>({
    queryKey: ["/api/workouts"],
  });

  const { data: recentSessions = [] } = useQuery<WorkoutSession[]>({
    queryKey: ["/api/workout-sessions"],
  });

  const workoutStats = {
    totalWorkouts: recentSessions.length,
    weeklyWorkouts: recentSessions.filter(session => {
      const sessionDate = new Date(session.createdAt);
      const weekAgo = new Date();
      weekAgo.setDate(weekAgo.getDate() - 7);
      return sessionDate >= weekAgo;
    }).length,
    totalMinutes: recentSessions.reduce((total, session) => total + (session.totalDuration || 0), 0),
    totalCalories: recentSessions.reduce((total, session) => total + (session.caloriesBurned || 0), 0),
  };

  const categories = [
    {
      name: "Strength Training",
      count: workouts.filter(w => w.category === "strength").length,
      icon: Target,
      color: "bg-primary/10 text-primary",
    },
    {
      name: "Cardio",
      count: workouts.filter(w => w.category === "cardio").length,
      icon: Activity,
      color: "bg-accent/10 text-accent",
    },
    {
      name: "Yoga & Flexibility",
      count: workouts.filter(w => w.category === "yoga").length,
      icon: TrendingUp,
      color: "bg-secondary/10 text-secondary",
    },
  ];

  return (
    <div className="min-h-screen bg-background">
      {/* Header Section */}
      <section className="bg-gradient-to-r from-primary/10 via-accent/5 to-secondary/10 py-12">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex items-center justify-between mb-8">
            <div>
              <h1 className="text-4xl font-bold mb-4">Your Workouts</h1>
              <p className="text-xl text-muted-foreground">
                AI-powered training tailored to your goals
              </p>
            </div>
            <Link href="/start-workout">
              <Button className="gradient-bg">
                <Plus className="w-4 h-4 mr-2" />
                Create Workout
              </Button>
            </Link>
          </div>

          {/* Workout Stats */}
          <div className="grid md:grid-cols-4 gap-6">
            <Card>
              <CardContent className="p-6 text-center">
                <div className="text-3xl font-bold text-primary mb-2">
                  {workoutStats.totalWorkouts}
                </div>
                <p className="text-sm text-muted-foreground">Total Workouts</p>
              </CardContent>
            </Card>
            <Card>
              <CardContent className="p-6 text-center">
                <div className="text-3xl font-bold text-accent mb-2">
                  {workoutStats.weeklyWorkouts}
                </div>
                <p className="text-sm text-muted-foreground">This Week</p>
              </CardContent>
            </Card>
            <Card>
              <CardContent className="p-6 text-center">
                <div className="text-3xl font-bold text-secondary mb-2">
                  {Math.round(workoutStats.totalMinutes / 60)}h
                </div>
                <p className="text-sm text-muted-foreground">Total Time</p>
              </CardContent>
            </Card>
            <Card>
              <CardContent className="p-6 text-center">
                <div className="text-3xl font-bold text-orange-500 mb-2">
                  {workoutStats.totalCalories}
                </div>
                <p className="text-sm text-muted-foreground">Calories Burned</p>
              </CardContent>
            </Card>
          </div>
        </div>
      </section>

      {/* Categories Section */}
      <section className="py-12">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <h2 className="text-2xl font-bold mb-8">Browse by Category</h2>
          <div className="grid md:grid-cols-3 gap-6 mb-12">
            {categories.map((category, index) => (
              <Card key={index} className="card-hover cursor-pointer">
                <CardContent className="p-6">
                  <div className={`w-12 h-12 ${category.color} rounded-xl flex items-center justify-center mb-4`}>
                    <category.icon className="w-6 h-6" />
                  </div>
                  <h3 className="font-bold mb-2">{category.name}</h3>
                  <p className="text-muted-foreground">
                    {category.count} workout{category.count !== 1 ? 's' : ''} available
                  </p>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
      </section>

      {/* Recent Sessions */}
      {recentSessions.length > 0 && (
        <section className="py-12 bg-muted/30">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div className="flex items-center justify-between mb-8">
              <h2 className="text-2xl font-bold">Recent Sessions</h2>
              <Link href="/progress">
                <Button variant="outline">View All</Button>
              </Link>
            </div>
            <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
              {recentSessions.slice(0, 6).map((session) => (
                <Card key={session.id} className="card-hover">
                  <CardContent className="p-6">
                    <div className="flex items-center justify-between mb-4">
                      <h3 className="font-bold">Workout Session</h3>
                      <Badge variant={session.completionStatus === "completed" ? "default" : "secondary"}>
                        {session.completionStatus}
                      </Badge>
                    </div>
                    <div className="space-y-2 text-sm">
                      <div className="flex items-center justify-between">
                        <span className="flex items-center text-muted-foreground">
                          <Clock className="w-4 h-4 mr-1" />
                          Duration
                        </span>
                        <span className="font-medium">{session.totalDuration || 0} min</span>
                      </div>
                      <div className="flex items-center justify-between">
                        <span className="flex items-center text-muted-foreground">
                          <Flame className="w-4 h-4 mr-1" />
                          Calories
                        </span>
                        <span className="font-medium">{session.caloriesBurned || 0}</span>
                      </div>
                      {session.formScore && (
                        <div className="flex items-center justify-between">
                          <span className="flex items-center text-muted-foreground">
                            <BarChart3 className="w-4 h-4 mr-1" />
                            Form Score
                          </span>
                          <span className="font-medium">{Math.round(session.formScore)}%</span>
                        </div>
                      )}
                      <p className="text-muted-foreground mt-2">
                        {new Date(session.createdAt).toLocaleDateString()}
                      </p>
                    </div>
                  </CardContent>
                </Card>
              ))}
            </div>
          </div>
        </section>
      )}

      {/* Ender's Real Workouts */}
      <WorkoutStarter />
      
      {/* Workout Library */}
      <WorkoutLibrary />
    </div>
  );
}

</file>
<file path="FitForge/client/src/App.tsx">
import { Switch, Route } from "wouter";
import { queryClient } from "./lib/queryClient";
import { QueryClientProvider } from "@tanstack/react-query";
import { Toaster } from "@/components/ui/toaster";
import { TooltipProvider } from "@/components/ui/tooltip";
import { ThemeProvider } from "@/components/theme-provider";
import { AuthProvider, useAuth } from "@/hooks/use-auth";
import { WorkoutSessionProvider } from "@/hooks/use-workout-session";
import { Navigation } from "@/components/navigation";
import { LiveWorkoutSession } from "@/components/live-workout-session";
import { FreeformWorkoutLogger } from "@/components/freeform-workout-logger";
import NotFound from "@/pages/not-found";
import Home from "@/pages/home";
import Auth from "@/pages/auth";
import Dashboard from "@/pages/dashboard";
import Workouts from "@/pages/workouts";
import Progress from "@/pages/progress";
import Community from "@/pages/community";
import Profile from "@/pages/profile";
import Nutrition from "@/pages/nutrition";

function ProtectedRoute({ children }: { children: React.ReactNode }) {
  const { user, isLoading } = useAuth();

  if (isLoading) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <div className="animate-spin rounded-full h-32 w-32 border-b-2 border-primary"></div>
      </div>
    );
  }

  if (!user) {
    return <Auth />;
  }

  return <>{children}</>;
}

function Router() {
  const { user } = useAuth();

  return (
    <div className="min-h-screen bg-background">
      <Navigation />
      <Switch>
        <Route path="/" component={Home} />
        <Route path="/auth" component={Auth} />
        <Route path="/dashboard">
          <ProtectedRoute>
            <Dashboard />
          </ProtectedRoute>
        </Route>
        <Route path="/workouts">
          <ProtectedRoute>
            <Workouts />
          </ProtectedRoute>
        </Route>
        <Route path="/progress">
          <ProtectedRoute>
            <Progress />
          </ProtectedRoute>
        </Route>
        <Route path="/community">
          <ProtectedRoute>
            <Community />
          </ProtectedRoute>
        </Route>
        <Route path="/workout-session">
          <ProtectedRoute>
            <LiveWorkoutSession />
          </ProtectedRoute>
        </Route>
        <Route path="/start-workout">
          <ProtectedRoute>
            <FreeformWorkoutLogger />
          </ProtectedRoute>
        </Route>
        <Route path="/profile">
          <ProtectedRoute>
            <Profile />
          </ProtectedRoute>
        </Route>
        <Route path="/nutrition">
          <ProtectedRoute>
            <Nutrition />
          </ProtectedRoute>
        </Route>
        <Route component={NotFound} />
      </Switch>
    </div>
  );
}

function App() {
  return (
    <QueryClientProvider client={queryClient}>
      <ThemeProvider>
        <AuthProvider>
          <WorkoutSessionProvider>
            <TooltipProvider>
              <Toaster />
              <Router />
            </TooltipProvider>
          </WorkoutSessionProvider>
        </AuthProvider>
      </ThemeProvider>
    </QueryClientProvider>
  );
}

export default App;

</file>
<file path="FitForge/client/src/index.css">
@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --background: 210 11% 98%; /* #F5F7FA */
  --foreground: 213 24% 10%; /* #1A1B23 */
  --muted: 210 11% 96%; /* #F1F3F5 */
  --muted-foreground: 213 12% 45%; /* #6B7280 */
  --popover: 0 0% 100%; /* #FFFFFF */
  --popover-foreground: 213 24% 10%; /* #1A1B23 */
  --card: 0 0% 100%; /* #FFFFFF */
  --card-foreground: 213 24% 10%; /* #1A1B23 */
  --border: 210 20% 90%; /* #E5E7EB */
  --input: 210 20% 90%; /* #E5E7EB */
  --primary: 15 90% 60%; /* #FF6B35 */
  --primary-foreground: 0 0% 100%; /* #FFFFFF */
  --secondary: 207 100% 28%; /* #004E89 */
  --secondary-foreground: 0 0% 100%; /* #FFFFFF */
  --accent: 162 100% 39%; /* #00C896 */
  --accent-foreground: 0 0% 100%; /* #FFFFFF */
  --destructive: 0 84% 60%; /* #EF4444 */
  --destructive-foreground: 0 0% 100%; /* #FFFFFF */
  --ring: 15 90% 60%; /* #FF6B35 */
  --radius: 0.75rem;
  
  /* Custom FitForge variables */
  --dark: 240 6% 4%; /* #0A0A0B */
  --dark-card: 240 6% 11%; /* #1A1B1E */
  --light-gray: 210 11% 98%; /* #F8F9FA */
  --dark-gray: 213 12% 16%; /* #212529 */
  --gradient-primary: linear-gradient(135deg, hsl(15 90% 60%) 0%, hsl(207 100% 28%) 100%);
  --glass-bg: rgba(255, 255, 255, 0.1);
  --glass-border: rgba(255, 255, 255, 0.2);
}

.dark {
  --background: 240 6% 4%; /* #0A0A0B */
  --foreground: 0 0% 98%; /* #FAFAFA */
  --muted: 240 6% 11%; /* #1A1B1E */
  --muted-foreground: 240 5% 65%; /* #9CA3AF */
  --popover: 240 6% 11%; /* #1A1B1E */
  --popover-foreground: 0 0% 98%; /* #FAFAFA */
  --card: 240 6% 11%; /* #1A1B1E */
  --card-foreground: 0 0% 98%; /* #FAFAFA */
  --border: 240 6% 18%; /* #2D2E33 */
  --input: 240 6% 18%; /* #2D2E33 */
  --primary: 15 90% 60%; /* #FF6B35 */
  --primary-foreground: 0 0% 100%; /* #FFFFFF */
  --secondary: 240 6% 18%; /* #2D2E33 */
  --secondary-foreground: 0 0% 98%; /* #FAFAFA */
  --accent: 162 100% 39%; /* #00C896 */
  --accent-foreground: 0 0% 100%; /* #FFFFFF */
  --destructive: 0 62% 30%; /* #991B1B */
  --destructive-foreground: 0 0% 98%; /* #FAFAFA */
  --ring: 15 90% 60%; /* #FF6B35 */
  
  /* Dark mode custom variables */
  --glass-bg: rgba(26, 27, 30, 0.8);
  --glass-border: rgba(255, 255, 255, 0.1);
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground font-sans antialiased;
    font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', sans-serif;
  }

  html {
    scroll-behavior: smooth;
  }
}

@layer components {
  .gradient-bg {
    background: linear-gradient(135deg, hsl(var(--primary)) 0%, hsl(var(--secondary)) 100%);
  }
  
  .gradient-accent {
    background: linear-gradient(135deg, hsl(var(--accent)) 0%, hsl(var(--primary)) 100%);
  }
  
  .glass-effect {
    backdrop-filter: blur(16px);
    background: var(--glass-bg);
    border: 1px solid var(--glass-border);
  }
  
  .text-gradient {
    background: linear-gradient(135deg, hsl(var(--primary)) 0%, hsl(var(--accent)) 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }
  
  .card-hover {
    @apply transition-all duration-300 hover:shadow-xl hover:-translate-y-2;
  }
  
  .btn-primary {
    @apply px-6 py-3 gradient-bg text-white font-semibold rounded-xl hover:shadow-lg transform hover:scale-105 transition-all duration-300;
  }
  
  .btn-secondary {
    @apply px-6 py-3 border-2 border-primary text-primary hover:bg-primary hover:text-white rounded-xl transition-all duration-300 font-semibold;
  }
  
  .progress-ring {
    transform: rotate(-90deg);
  }
  
  .progress-ring circle {
    transition: stroke-dasharray 1s ease-in-out, stroke-dashoffset 1s ease-in-out;
  }
}

@layer utilities {
  .animate-fade-in {
    animation: fadeIn 0.6s ease-in-out;
  }
  
  .animate-slide-up {
    animation: slideUp 0.8s ease-out;
  }
  
  .animate-pulse-slow {
    animation: pulse 3s infinite;
  }
  
  .animate-float {
    animation: float 6s ease-in-out infinite;
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes float {
  0%, 100% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-10px);
  }
}

/* Custom scrollbar */
::-webkit-scrollbar {
  width: 8px;
}

::-webkit-scrollbar-track {
  background: hsl(var(--muted));
}

::-webkit-scrollbar-thumb {
  background: hsl(var(--muted-foreground) / 0.3);
  border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
  background: hsl(var(--muted-foreground) / 0.5);
}

/* Loading states */
.skeleton {
  @apply bg-muted animate-pulse rounded;
}

/* Focus styles */
.focus-ring {
  @apply focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2 focus:ring-offset-background;
}

/* Mobile responsive improvements */
@media (max-width: 768px) {
  .container {
    @apply px-4;
  }
}

/* High contrast mode support */
@media (prefers-contrast: high) {
  :root {
    --border: 0 0% 20%;
  }
  
  .dark {
    --border: 0 0% 80%;
  }
}

/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
}

</file>
<file path="FitForge/client/src/main.tsx">
import { createRoot } from "react-dom/client";
import App from "./App";
import "./index.css";

createRoot(document.getElementById("root")!).render(<App />);

</file>
<file path="FitForge/client/index.html">
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1" />
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.tsx"></script>
    <!-- This is a replit script which adds a banner on the top of the page when opened in development mode outside the replit environment -->
    <script type="text/javascript" src="https://replit.com/public/js/replit-dev-banner.js"></script>
  </body>
</html>
</file>
<file path="FitForge/dist/public/assets/index-BJvHg-M7.js">
var PE=Object.defineProperty;var Dp=e=>{throw TypeError(e)};var RE=(e,t,r)=>t in e?PE(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r;var k=(e,t,r)=>RE(e,typeof t!="symbol"?t+"":t,r),cd=(e,t,r)=>t.has(e)||Dp("Cannot "+r);var _=(e,t,r)=>(cd(e,t,"read from private field"),r?r.call(e):t.get(e)),he=(e,t,r)=>t.has(e)?Dp("Cannot add the same private member more than once"):t instanceof WeakSet?t.add(e):t.set(e,r),J=(e,t,r,n)=>(cd(e,t,"write to private field"),n?n.call(e,r):t.set(e,r),r),Ne=(e,t,r)=>(cd(e,t,"access private method"),r);var jl=(e,t,r,n)=>({set _(s){J(e,t,s,r)},get _(){return _(e,t,n)}});function AE(e,t){for(var r=0;r<t.length;r++){const n=t[r];if(typeof n!="string"&&!Array.isArray(n)){for(const s in n)if(s!=="default"&&!(s in e)){const i=Object.getOwnPropertyDescriptor(n,s);i&&Object.defineProperty(e,s,i.get?i:{enumerable:!0,get:()=>n[s]})}}}return Object.freeze(Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}))}(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))n(s);new MutationObserver(s=>{for(const i of s)if(i.type==="childList")for(const a of i.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&n(a)}).observe(document,{childList:!0,subtree:!0});function r(s){const i={};return s.integrity&&(i.integrity=s.integrity),s.referrerPolicy&&(i.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?i.credentials="include":s.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function n(s){if(s.ep)return;s.ep=!0;const i=r(s);fetch(s.href,i)}})();function s1(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}var i1={exports:{}},pu={},o1={exports:{}},be={};/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var sl=Symbol.for("react.element"),IE=Symbol.for("react.portal"),ME=Symbol.for("react.fragment"),DE=Symbol.for("react.strict_mode"),OE=Symbol.for("react.profiler"),LE=Symbol.for("react.provider"),FE=Symbol.for("react.context"),VE=Symbol.for("react.forward_ref"),$E=Symbol.for("react.suspense"),zE=Symbol.for("react.memo"),BE=Symbol.for("react.lazy"),Op=Symbol.iterator;function UE(e){return e===null||typeof e!="object"?null:(e=Op&&e[Op]||e["@@iterator"],typeof e=="function"?e:null)}var a1={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},l1=Object.assign,c1={};function ko(e,t,r){this.props=e,this.context=t,this.refs=c1,this.updater=r||a1}ko.prototype.isReactComponent={};ko.prototype.setState=function(e,t){if(typeof e!="object"&&typeof e!="function"&&e!=null)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")};ko.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")};function u1(){}u1.prototype=ko.prototype;function Vm(e,t,r){this.props=e,this.context=t,this.refs=c1,this.updater=r||a1}var $m=Vm.prototype=new u1;$m.constructor=Vm;l1($m,ko.prototype);$m.isPureReactComponent=!0;var Lp=Array.isArray,d1=Object.prototype.hasOwnProperty,zm={current:null},f1={key:!0,ref:!0,__self:!0,__source:!0};function m1(e,t,r){var n,s={},i=null,a=null;if(t!=null)for(n in t.ref!==void 0&&(a=t.ref),t.key!==void 0&&(i=""+t.key),t)d1.call(t,n)&&!f1.hasOwnProperty(n)&&(s[n]=t[n]);var l=arguments.length-2;if(l===1)s.children=r;else if(1<l){for(var c=Array(l),u=0;u<l;u++)c[u]=arguments[u+2];s.children=c}if(e&&e.defaultProps)for(n in l=e.defaultProps,l)s[n]===void 0&&(s[n]=l[n]);return{$typeof:sl,type:e,key:i,ref:a,props:s,_owner:zm.current}}function WE(e,t){return{$typeof:sl,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}function Bm(e){return typeof e=="object"&&e!==null&&e.$typeof===sl}function HE(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,function(r){return t[r]})}var Fp=/\/+/g;function ud(e,t){return typeof e=="object"&&e!==null&&e.key!=null?HE(""+e.key):t.toString(36)}function Zl(e,t,r,n,s){var i=typeof e;(i==="undefined"||i==="boolean")&&(e=null);var a=!1;if(e===null)a=!0;else switch(i){case"string":case"number":a=!0;break;case"object":switch(e.$typeof){case sl:case IE:a=!0}}if(a)return a=e,s=s(a),e=n===""?"."+ud(a,0):n,Lp(s)?(r="",e!=null&&(r=e.replace(Fp,"{FILE_STRUCTURE}/")+"/"),Zl(s,t,r,"",function(u){return u})):s!=null&&(Bm(s)&&(s=WE(s,r+(!s.key||a&&a.key===s.key?"":(""+s.key).replace(Fp,"{FILE_STRUCTURE}/")+"/")+e)),t.push(s)),1;if(a=0,n=n===""?".":n+":",Lp(e))for(var l=0;l<e.length;l++){i=e[l];var c=n+ud(i,l);a+=Zl(i,t,r,c,s)}else if(c=UE(e),typeof c=="function")for(e=c.call(e),l=0;!(i=e.next()).done;)i=i.value,c=n+ud(i,l++),a+=Zl(i,t,r,c,s);else if(i==="object")throw t=String(e),Error("Objects are not valid as a React child (found: "+(t==="[object Object]"?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.");return a}function Cl(e,t,r){if(e==null)return e;var n=[],s=0;return Zl(e,n,"","",function(i){return t.call(r,i,s++)}),n}function qE(e){if(e._status===-1){var t=e._result;t=t(),t.then(function(r){(e._status===0||e._status===-1)&&(e._status=1,e._result=r)},function(r){(e._status===0||e._status===-1)&&(e._status=2,e._result=r)}),e._status===-1&&(e._status=0,e._result=t)}if(e._status===1)return e._result.default;throw e._result}var Ut={current:null},Xl={transition:null},QE={ReactCurrentDispatcher:Ut,ReactCurrentBatchConfig:Xl,ReactCurrentOwner:zm};function h1(){throw Error("act(...) is not supported in production builds of React.")}be.Children={map:Cl,forEach:function(e,t,r){Cl(e,function(){t.apply(this,arguments)},r)},count:function(e){var t=0;return Cl(e,function(){t++}),t},toArray:function(e){return Cl(e,function(t){return t})||[]},only:function(e){if(!Bm(e))throw Error("React.Children.only expected to receive a single React element child.");return e}};be.Component=ko;be.Fragment=ME;be.Profiler=OE;be.PureComponent=Vm;be.StrictMode=DE;be.Suspense=$E;be.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=QE;be.act=h1;be.cloneElement=function(e,t,r){if(e==null)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var n=l1({},e.props),s=e.key,i=e.ref,a=e._owner;if(t!=null){if(t.ref!==void 0&&(i=t.ref,a=zm.current),t.key!==void 0&&(s=""+t.key),e.type&&e.type.defaultProps)var l=e.type.defaultProps;for(c in t)d1.call(t,c)&&!f1.hasOwnProperty(c)&&(n[c]=t[c]===void 0&&l!==void 0?l[c]:t[c])}var c=arguments.length-2;if(c===1)n.children=r;else if(1<c){l=Array(c);for(var u=0;u<c;u++)l[u]=arguments[u+2];n.children=l}return{$typeof:sl,type:e.type,key:s,ref:i,props:n,_owner:a}};be.createContext=function(e){return e={$typeof:FE,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null},e.Provider={$typeof:LE,_context:e},e.Consumer=e};be.createElement=m1;be.createFactory=function(e){var t=m1.bind(null,e);return t.type=e,t};be.createRef=function(){return{current:null}};be.forwardRef=function(e){return{$typeof:VE,render:e}};be.isValidElement=Bm;be.lazy=function(e){return{$typeof:BE,_payload:{_status:-1,_result:e},_init:qE}};be.memo=function(e,t){return{$typeof:zE,type:e,compare:t===void 0?null:t}};be.startTransition=function(e){var t=Xl.transition;Xl.transition={};try{e()}finally{Xl.transition=t}};be.unstable_act=h1;be.useCallback=function(e,t){return Ut.current.useCallback(e,t)};be.useContext=function(e){return Ut.current.useContext(e)};be.useDebugValue=function(){};be.useDeferredValue=function(e){return Ut.current.useDeferredValue(e)};be.useEffect=function(e,t){return Ut.current.useEffect(e,t)};be.useId=function(){return Ut.current.useId()};be.useImperativeHandle=function(e,t,r){return Ut.current.useImperativeHandle(e,t,r)};be.useInsertionEffect=function(e,t){return Ut.current.useInsertionEffect(e,t)};be.useLayoutEffect=function(e,t){return Ut.current.useLayoutEffect(e,t)};be.useMemo=function(e,t){return Ut.current.useMemo(e,t)};be.useReducer=function(e,t,r){return Ut.current.useReducer(e,t,r)};be.useRef=function(e){return Ut.current.useRef(e)};be.useState=function(e){return Ut.current.useState(e)};be.useSyncExternalStore=function(e,t,r){return Ut.current.useSyncExternalStore(e,t,r)};be.useTransition=function(){return Ut.current.useTransition()};be.version="18.3.1";o1.exports=be;var m=o1.exports;const pe=s1(m),p1=AE({__proto__:null,default:pe},[m]);/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var GE=m,KE=Symbol.for("react.element"),ZE=Symbol.for("react.fragment"),XE=Object.prototype.hasOwnProperty,YE=GE.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,JE={key:!0,ref:!0,__self:!0,__source:!0};function g1(e,t,r){var n,s={},i=null,a=null;r!==void 0&&(i=""+r),t.key!==void 0&&(i=""+t.key),t.ref!==void 0&&(a=t.ref);for(n in t)XE.call(t,n)&&!JE.hasOwnProperty(n)&&(s[n]=t[n]);if(e&&e.defaultProps)for(n in t=e.defaultProps,t)s[n]===void 0&&(s[n]=t[n]);return{$typeof:KE,type:e,key:i,ref:a,props:s,_owner:YE.current}}pu.Fragment=ZE;pu.jsx=g1;pu.jsxs=g1;i1.exports=pu;var o=i1.exports,v1={exports:{}},ur={},y1={exports:{}},x1={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */(function(e){function t(I,M){var W=I.length;I.push(M);e:for(;0<W;){var se=W-1>>>1,xe=I[se];if(0<s(xe,M))I[se]=M,I[W]=xe,W=se;else break e}}function r(I){return I.length===0?null:I[0]}function n(I){if(I.length===0)return null;var M=I[0],W=I.pop();if(W!==M){I[0]=W;e:for(var se=0,xe=I.length,Je=xe>>>1;se<Je;){var ze=2*(se+1)-1,Ct=I[ze],qe=ze+1,ne=I[qe];if(0>s(Ct,W))qe<xe&&0>s(ne,Ct)?(I[se]=ne,I[qe]=W,se=qe):(I[se]=Ct,I[ze]=W,se=ze);else if(qe<xe&&0>s(ne,W))I[se]=ne,I[qe]=W,se=qe;else break e}}return M}function s(I,M){var W=I.sortIndex-M.sortIndex;return W!==0?W:I.id-M.id}if(typeof performance=="object"&&typeof performance.now=="function"){var i=performance;e.unstable_now=function(){return i.now()}}else{var a=Date,l=a.now();e.unstable_now=function(){return a.now()-l}}var c=[],u=[],d=1,f=null,h=3,x=!1,w=!1,g=!1,b=typeof setTimeout=="function"?setTimeout:null,v=typeof clearTimeout=="function"?clearTimeout:null,p=typeof setImmediate<"u"?setImmediate:null;typeof navigator<"u"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function y(I){for(var M=r(u);M!==null;){if(M.callback===null)n(u);else if(M.startTime<=I)n(u),M.sortIndex=M.expirationTime,t(c,M);else break;M=r(u)}}function N(I){if(g=!1,y(I),!w)if(r(c)!==null)w=!0,Q(j);else{var M=r(u);M!==null&&oe(N,M.startTime-I)}}function j(I,M){w=!1,g&&(g=!1,v(P),P=-1),x=!0;var W=h;try{for(y(M),f=r(c);f!==null&&(!(f.expirationTime>M)||I&&!z());){var se=f.callback;if(typeof se=="function"){f.callback=null,h=f.priorityLevel;var xe=se(f.expirationTime<=M);M=e.unstable_now(),typeof xe=="function"?f.callback=xe:f===r(c)&&n(c),y(M)}else n(c);f=r(c)}if(f!==null)var Je=!0;else{var ze=r(u);ze!==null&&oe(N,ze.startTime-M),Je=!1}return Je}finally{f=null,h=W,x=!1}}var E=!1,T=null,P=-1,C=5,A=-1;function z(){return!(e.unstable_now()-A<C)}function O(){if(T!==null){var I=e.unstable_now();A=I;var M=!0;try{M=T(!0,I)}finally{M?U():(E=!1,T=null)}}else E=!1}var U;if(typeof p=="function")U=function(){p(O)};else if(typeof MessageChannel<"u"){var F=new MessageChannel,re=F.port2;F.port1.onmessage=O,U=function(){re.postMessage(null)}}else U=function(){b(O,0)};function Q(I){T=I,E||(E=!0,U())}function oe(I,M){P=b(function(){I(e.unstable_now())},M)}e.unstable_IdlePriority=5,e.unstable_ImmediatePriority=1,e.unstable_LowPriority=4,e.unstable_NormalPriority=3,e.unstable_Profiling=null,e.unstable_UserBlockingPriority=2,e.unstable_cancelCallback=function(I){I.callback=null},e.unstable_continueExecution=function(){w||x||(w=!0,Q(j))},e.unstable_forceFrameRate=function(I){0>I||125<I?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):C=0<I?Math.floor(1e3/I):5},e.unstable_getCurrentPriorityLevel=function(){return h},e.unstable_getFirstCallbackNode=function(){return r(c)},e.unstable_next=function(I){switch(h){case 1:case 2:case 3:var M=3;break;default:M=h}var W=h;h=M;try{return I()}finally{h=W}},e.unstable_pauseExecution=function(){},e.unstable_requestPaint=function(){},e.unstable_runWithPriority=function(I,M){switch(I){case 1:case 2:case 3:case 4:case 5:break;default:I=3}var W=h;h=I;try{return M()}finally{h=W}},e.unstable_scheduleCallback=function(I,M,W){var se=e.unstable_now();switch(typeof W=="object"&&W!==null?(W=W.delay,W=typeof W=="number"&&0<W?se+W:se):W=se,I){case 1:var xe=-1;break;case 2:xe=250;break;case 5:xe=1073741823;break;case 4:xe=1e4;break;default:xe=5e3}return xe=W+xe,I={id:d++,callback:M,priorityLevel:I,startTime:W,expirationTime:xe,sortIndex:-1},W>se?(I.sortIndex=W,t(u,I),r(c)===null&&I===r(u)&&(g?(v(P),P=-1):g=!0,oe(N,W-se))):(I.sortIndex=xe,t(c,I),w||x||(w=!0,Q(j))),I},e.unstable_shouldYield=z,e.unstable_wrapCallback=function(I){var M=h;return function(){var W=h;h=M;try{return I.apply(this,arguments)}finally{h=W}}}})(x1);y1.exports=x1;var e2=y1.exports;/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var t2=m,cr=e2;function $(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=1;r<arguments.length;r++)t+="&args[]="+encodeURIComponent(arguments[r]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var w1=new Set,va={};function di(e,t){mo(e,t),mo(e+"Capture",t)}function mo(e,t){for(va[e]=t,e=0;e<t.length;e++)w1.add(t[e])}var Sn=!(typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"),nf=Object.prototype.hasOwnProperty,r2=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,Vp={},$p={};function n2(e){return nf.call($p,e)?!0:nf.call(Vp,e)?!1:r2.test(e)?$p[e]=!0:(Vp[e]=!0,!1)}function s2(e,t,r,n){if(r!==null&&r.type===0)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return n?!1:r!==null?!r.acceptsBooleans:(e=e.toLowerCase().slice(0,5),e!=="data-"&&e!=="aria-");default:return!1}}function i2(e,t,r,n){if(t===null||typeof t>"u"||s2(e,t,r,n))return!0;if(n)return!1;if(r!==null)switch(r.type){case 3:return!t;case 4:return t===!1;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}function Wt(e,t,r,n,s,i,a){this.acceptsBooleans=t===2||t===3||t===4,this.attributeName=n,this.attributeNamespace=s,this.mustUseProperty=r,this.propertyName=e,this.type=t,this.sanitizeURL=i,this.removeEmptyString=a}var St={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(e){St[e]=new Wt(e,0,!1,e,null,!1,!1)});[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(e){var t=e[0];St[t]=new Wt(t,1,!1,e[1],null,!1,!1)});["contentEditable","draggable","spellCheck","value"].forEach(function(e){St[e]=new Wt(e,2,!1,e.toLowerCase(),null,!1,!1)});["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(e){St[e]=new Wt(e,2,!1,e,null,!1,!1)});"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(e){St[e]=new Wt(e,3,!1,e.toLowerCase(),null,!1,!1)});["checked","multiple","muted","selected"].forEach(function(e){St[e]=new Wt(e,3,!0,e,null,!1,!1)});["capture","download"].forEach(function(e){St[e]=new Wt(e,4,!1,e,null,!1,!1)});["cols","rows","size","span"].forEach(function(e){St[e]=new Wt(e,6,!1,e,null,!1,!1)});["rowSpan","start"].forEach(function(e){St[e]=new Wt(e,5,!1,e.toLowerCase(),null,!1,!1)});var Um=/[\-:]([a-z])/g;function Wm(e){return e[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(e){var t=e.replace(Um,Wm);St[t]=new Wt(t,1,!1,e,null,!1,!1)});"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(e){var t=e.replace(Um,Wm);St[t]=new Wt(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)});["xml:base","xml:lang","xml:space"].forEach(function(e){var t=e.replace(Um,Wm);St[t]=new Wt(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)});["tabIndex","crossOrigin"].forEach(function(e){St[e]=new Wt(e,1,!1,e.toLowerCase(),null,!1,!1)});St.xlinkHref=new Wt("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1);["src","href","action","formAction"].forEach(function(e){St[e]=new Wt(e,1,!1,e.toLowerCase(),null,!0,!0)});function Hm(e,t,r,n){var s=St.hasOwnProperty(t)?St[t]:null;(s!==null?s.type!==0:n||!(2<t.length)||t[0]!=="o"&&t[0]!=="O"||t[1]!=="n"&&t[1]!=="N")&&(i2(t,r,s,n)&&(r=null),n||s===null?n2(t)&&(r===null?e.removeAttribute(t):e.setAttribute(t,""+r)):s.mustUseProperty?e[s.propertyName]=r===null?s.type===3?!1:"":r:(t=s.attributeName,n=s.attributeNamespace,r===null?e.removeAttribute(t):(s=s.type,r=s===3||s===4&&r===!0?"":""+r,n?e.setAttributeNS(n,t,r):e.setAttribute(t,r))))}var Pn=t2.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,_l=Symbol.for("react.element"),Ci=Symbol.for("react.portal"),_i=Symbol.for("react.fragment"),qm=Symbol.for("react.strict_mode"),sf=Symbol.for("react.profiler"),b1=Symbol.for("react.provider"),N1=Symbol.for("react.context"),Qm=Symbol.for("react.forward_ref"),of=Symbol.for("react.suspense"),af=Symbol.for("react.suspense_list"),Gm=Symbol.for("react.memo"),Wn=Symbol.for("react.lazy"),S1=Symbol.for("react.offscreen"),zp=Symbol.iterator;function Fo(e){return e===null||typeof e!="object"?null:(e=zp&&e[zp]||e["@@iterator"],typeof e=="function"?e:null)}var Ye=Object.assign,dd;function Zo(e){if(dd===void 0)try{throw Error()}catch(r){var t=r.stack.trim().match(/\n( *(at )?)/);dd=t&&t[1]||""}return`
`+dd+e}var fd=!1;function md(e,t){if(!e||fd)return"";fd=!0;var r=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(t,[])}catch(u){var n=u}Reflect.construct(e,[],t)}else{try{t.call()}catch(u){n=u}e.call(t.prototype)}else{try{throw Error()}catch(u){n=u}e()}}catch(u){if(u&&n&&typeof u.stack=="string"){for(var s=u.stack.split(`
`),i=n.stack.split(`
`),a=s.length-1,l=i.length-1;1<=a&&0<=l&&s[a]!==i[l];)l--;for(;1<=a&&0<=l;a--,l--)if(s[a]!==i[l]){if(a!==1||l!==1)do if(a--,l--,0>l||s[a]!==i[l]){var c=`
`+s[a].replace(" at new "," at ");return e.displayName&&c.includes("<anonymous>")&&(c=c.replace("<anonymous>",e.displayName)),c}while(1<=a&&0<=l);break}}}finally{fd=!1,Error.prepareStackTrace=r}return(e=e?e.displayName||e.name:"")?Zo(e):""}function o2(e){switch(e.tag){case 5:return Zo(e.type);case 16:return Zo("Lazy");case 13:return Zo("Suspense");case 19:return Zo("SuspenseList");case 0:case 2:case 15:return e=md(e.type,!1),e;case 11:return e=md(e.type.render,!1),e;case 1:return e=md(e.type,!0),e;default:return""}}function lf(e){if(e==null)return null;if(typeof e=="function")return e.displayName||e.name||null;if(typeof e=="string")return e;switch(e){case _i:return"Fragment";case Ci:return"Portal";case sf:return"Profiler";case qm:return"StrictMode";case of:return"Suspense";case af:return"SuspenseList"}if(typeof e=="object")switch(e.$typeof){case N1:return(e.displayName||"Context")+".Consumer";case b1:return(e._context.displayName||"Context")+".Provider";case Qm:var t=e.render;return e=e.displayName,e||(e=t.displayName||t.name||"",e=e!==""?"ForwardRef("+e+")":"ForwardRef"),e;case Gm:return t=e.displayName||null,t!==null?t:lf(e.type)||"Memo";case Wn:t=e._payload,e=e._init;try{return lf(e(t))}catch{}}return null}function a2(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=t.render,e=e.displayName||e.name||"",t.displayName||(e!==""?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return lf(t);case 8:return t===qm?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if(typeof t=="function")return t.displayName||t.name||null;if(typeof t=="string")return t}return null}function fs(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":return e;case"object":return e;default:return""}}function j1(e){var t=e.type;return(e=e.nodeName)&&e.toLowerCase()==="input"&&(t==="checkbox"||t==="radio")}function l2(e){var t=j1(e)?"checked":"value",r=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),n=""+e[t];if(!e.hasOwnProperty(t)&&typeof r<"u"&&typeof r.get=="function"&&typeof r.set=="function"){var s=r.get,i=r.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return s.call(this)},set:function(a){n=""+a,i.call(this,a)}}),Object.defineProperty(e,t,{enumerable:r.enumerable}),{getValue:function(){return n},setValue:function(a){n=""+a},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}function kl(e){e._valueTracker||(e._valueTracker=l2(e))}function C1(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var r=t.getValue(),n="";return e&&(n=j1(e)?e.checked?"true":"false":e.value),e=n,e!==r?(t.setValue(e),!0):!1}function hc(e){if(e=e||(typeof document<"u"?document:void 0),typeof e>"u")return null;try{return e.activeElement||e.body}catch{return e.body}}function cf(e,t){var r=t.checked;return Ye({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:r??e._wrapperState.initialChecked})}function Bp(e,t){var r=t.defaultValue==null?"":t.defaultValue,n=t.checked!=null?t.checked:t.defaultChecked;r=fs(t.value!=null?t.value:r),e._wrapperState={initialChecked:n,initialValue:r,controlled:t.type==="checkbox"||t.type==="radio"?t.checked!=null:t.value!=null}}function _1(e,t){t=t.checked,t!=null&&Hm(e,"checked",t,!1)}function uf(e,t){_1(e,t);var r=fs(t.value),n=t.type;if(r!=null)n==="number"?(r===0&&e.value===""||e.value!=r)&&(e.value=""+r):e.value!==""+r&&(e.value=""+r);else if(n==="submit"||n==="reset"){e.removeAttribute("value");return}t.hasOwnProperty("value")?df(e,t.type,r):t.hasOwnProperty("defaultValue")&&df(e,t.type,fs(t.defaultValue)),t.checked==null&&t.defaultChecked!=null&&(e.defaultChecked=!!t.defaultChecked)}function Up(e,t,r){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var n=t.type;if(!(n!=="submit"&&n!=="reset"||t.value!==void 0&&t.value!==null))return;t=""+e._wrapperState.initialValue,r||t===e.value||(e.value=t),e.defaultValue=t}r=e.name,r!==""&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,r!==""&&(e.name=r)}function df(e,t,r){(t!=="number"||hc(e.ownerDocument)!==e)&&(r==null?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+r&&(e.defaultValue=""+r))}var Xo=Array.isArray;function $i(e,t,r,n){if(e=e.options,t){t={};for(var s=0;s<r.length;s++)t["$"+r[s]]=!0;for(r=0;r<e.length;r++)s=t.hasOwnProperty("$"+e[r].value),e[r].selected!==s&&(e[r].selected=s),s&&n&&(e[r].defaultSelected=!0)}else{for(r=""+fs(r),t=null,s=0;s<e.length;s++){if(e[s].value===r){e[s].selected=!0,n&&(e[s].defaultSelected=!0);return}t!==null||e[s].disabled||(t=e[s])}t!==null&&(t.selected=!0)}}function ff(e,t){if(t.dangerouslySetInnerHTML!=null)throw Error($(91));return Ye({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Wp(e,t){var r=t.value;if(r==null){if(r=t.children,t=t.defaultValue,r!=null){if(t!=null)throw Error($(92));if(Xo(r)){if(1<r.length)throw Error($(93));r=r[0]}t=r}t==null&&(t=""),r=t}e._wrapperState={initialValue:fs(r)}}function k1(e,t){var r=fs(t.value),n=fs(t.defaultValue);r!=null&&(r=""+r,r!==e.value&&(e.value=r),t.defaultValue==null&&e.defaultValue!==r&&(e.defaultValue=r)),n!=null&&(e.defaultValue=""+n)}function Hp(e){var t=e.textContent;t===e._wrapperState.initialValue&&t!==""&&t!==null&&(e.value=t)}function T1(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function mf(e,t){return e==null||e==="http://www.w3.org/1999/xhtml"?T1(t):e==="http://www.w3.org/2000/svg"&&t==="foreignObject"?"http://www.w3.org/1999/xhtml":e}var Tl,E1=function(e){return typeof MSApp<"u"&&MSApp.execUnsafeLocalFunction?function(t,r,n,s){MSApp.execUnsafeLocalFunction(function(){return e(t,r,n,s)})}:e}(function(e,t){if(e.namespaceURI!=="http://www.w3.org/2000/svg"||"innerHTML"in e)e.innerHTML=t;else{for(Tl=Tl||document.createElement("div"),Tl.innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=Tl.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}});function ya(e,t){if(t){var r=e.firstChild;if(r&&r===e.lastChild&&r.nodeType===3){r.nodeValue=t;return}}e.textContent=t}var ia={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},c2=["Webkit","ms","Moz","O"];Object.keys(ia).forEach(function(e){c2.forEach(function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),ia[t]=ia[e]})});function P1(e,t,r){return t==null||typeof t=="boolean"||t===""?"":r||typeof t!="number"||t===0||ia.hasOwnProperty(e)&&ia[e]?(""+t).trim():t+"px"}function R1(e,t){e=e.style;for(var r in t)if(t.hasOwnProperty(r)){var n=r.indexOf("--")===0,s=P1(r,t[r],n);r==="float"&&(r="cssFloat"),n?e.setProperty(r,s):e[r]=s}}var u2=Ye({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function hf(e,t){if(t){if(u2[e]&&(t.children!=null||t.dangerouslySetInnerHTML!=null))throw Error($(137,e));if(t.dangerouslySetInnerHTML!=null){if(t.children!=null)throw Error($(60));if(typeof t.dangerouslySetInnerHTML!="object"||!("__html"in t.dangerouslySetInnerHTML))throw Error($(61))}if(t.style!=null&&typeof t.style!="object")throw Error($(62))}}function pf(e,t){if(e.indexOf("-")===-1)return typeof t.is=="string";switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var gf=null;function Km(e){return e=e.target||e.srcElement||window,e.correspondingUseElement&&(e=e.correspondingUseElement),e.nodeType===3?e.parentNode:e}var vf=null,zi=null,Bi=null;function qp(e){if(e=al(e)){if(typeof vf!="function")throw Error($(280));var t=e.stateNode;t&&(t=wu(t),vf(e.stateNode,e.type,t))}}function A1(e){zi?Bi?Bi.push(e):Bi=[e]:zi=e}function I1(){if(zi){var e=zi,t=Bi;if(Bi=zi=null,qp(e),t)for(e=0;e<t.length;e++)qp(t[e])}}function M1(e,t){return e(t)}function D1(){}var hd=!1;function O1(e,t,r){if(hd)return e(t,r);hd=!0;try{return M1(e,t,r)}finally{hd=!1,(zi!==null||Bi!==null)&&(D1(),I1())}}function xa(e,t){var r=e.stateNode;if(r===null)return null;var n=wu(r);if(n===null)return null;r=n[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(n=!n.disabled)||(e=e.type,n=!(e==="button"||e==="input"||e==="select"||e==="textarea")),e=!n;break e;default:e=!1}if(e)return null;if(r&&typeof r!="function")throw Error($(231,t,typeof r));return r}var yf=!1;if(Sn)try{var Vo={};Object.defineProperty(Vo,"passive",{get:function(){yf=!0}}),window.addEventListener("test",Vo,Vo),window.removeEventListener("test",Vo,Vo)}catch{yf=!1}function d2(e,t,r,n,s,i,a,l,c){var u=Array.prototype.slice.call(arguments,3);try{t.apply(r,u)}catch(d){this.onError(d)}}var oa=!1,pc=null,gc=!1,xf=null,f2={onError:function(e){oa=!0,pc=e}};function m2(e,t,r,n,s,i,a,l,c){oa=!1,pc=null,d2.apply(f2,arguments)}function h2(e,t,r,n,s,i,a,l,c){if(m2.apply(this,arguments),oa){if(oa){var u=pc;oa=!1,pc=null}else throw Error($(198));gc||(gc=!0,xf=u)}}function fi(e){var t=e,r=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do t=e,t.flags&4098&&(r=t.return),e=t.return;while(e)}return t.tag===3?r:null}function L1(e){if(e.tag===13){var t=e.memoizedState;if(t===null&&(e=e.alternate,e!==null&&(t=e.memoizedState)),t!==null)return t.dehydrated}return null}function Qp(e){if(fi(e)!==e)throw Error($(188))}function p2(e){var t=e.alternate;if(!t){if(t=fi(e),t===null)throw Error($(188));return t!==e?null:e}for(var r=e,n=t;;){var s=r.return;if(s===null)break;var i=s.alternate;if(i===null){if(n=s.return,n!==null){r=n;continue}break}if(s.child===i.child){for(i=s.child;i;){if(i===r)return Qp(s),e;if(i===n)return Qp(s),t;i=i.sibling}throw Error($(188))}if(r.return!==n.return)r=s,n=i;else{for(var a=!1,l=s.child;l;){if(l===r){a=!0,r=s,n=i;break}if(l===n){a=!0,n=s,r=i;break}l=l.sibling}if(!a){for(l=i.child;l;){if(l===r){a=!0,r=i,n=s;break}if(l===n){a=!0,n=i,r=s;break}l=l.sibling}if(!a)throw Error($(189))}}if(r.alternate!==n)throw Error($(190))}if(r.tag!==3)throw Error($(188));return r.stateNode.current===r?e:t}function F1(e){return e=p2(e),e!==null?V1(e):null}function V1(e){if(e.tag===5||e.tag===6)return e;for(e=e.child;e!==null;){var t=V1(e);if(t!==null)return t;e=e.sibling}return null}var $1=cr.unstable_scheduleCallback,Gp=cr.unstable_cancelCallback,g2=cr.unstable_shouldYield,v2=cr.unstable_requestPaint,it=cr.unstable_now,y2=cr.unstable_getCurrentPriorityLevel,Zm=cr.unstable_ImmediatePriority,z1=cr.unstable_UserBlockingPriority,vc=cr.unstable_NormalPriority,x2=cr.unstable_LowPriority,B1=cr.unstable_IdlePriority,gu=null,Jr=null;function w2(e){if(Jr&&typeof Jr.onCommitFiberRoot=="function")try{Jr.onCommitFiberRoot(gu,e,void 0,(e.current.flags&128)===128)}catch{}}var Mr=Math.clz32?Math.clz32:S2,b2=Math.log,N2=Math.LN2;function S2(e){return e>>>=0,e===0?32:31-(b2(e)/N2|0)|0}var El=64,Pl=4194304;function Yo(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return e&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return e&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function yc(e,t){var r=e.pendingLanes;if(r===0)return 0;var n=0,s=e.suspendedLanes,i=e.pingedLanes,a=r&268435455;if(a!==0){var l=a&~s;l!==0?n=Yo(l):(i&=a,i!==0&&(n=Yo(i)))}else a=r&~s,a!==0?n=Yo(a):i!==0&&(n=Yo(i));if(n===0)return 0;if(t!==0&&t!==n&&!(t&s)&&(s=n&-n,i=t&-t,s>=i||s===16&&(i&4194240)!==0))return t;if(n&4&&(n|=r&16),t=e.entangledLanes,t!==0)for(e=e.entanglements,t&=n;0<t;)r=31-Mr(t),s=1<<r,n|=e[r],t&=~s;return n}function j2(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function C2(e,t){for(var r=e.suspendedLanes,n=e.pingedLanes,s=e.expirationTimes,i=e.pendingLanes;0<i;){var a=31-Mr(i),l=1<<a,c=s[a];c===-1?(!(l&r)||l&n)&&(s[a]=j2(l,t)):c<=t&&(e.expiredLanes|=l),i&=~l}}function wf(e){return e=e.pendingLanes&-1073741825,e!==0?e:e&1073741824?1073741824:0}function U1(){var e=El;return El<<=1,!(El&4194240)&&(El=64),e}function pd(e){for(var t=[],r=0;31>r;r++)t.push(e);return t}function il(e,t,r){e.pendingLanes|=t,t!==536870912&&(e.suspendedLanes=0,e.pingedLanes=0),e=e.eventTimes,t=31-Mr(t),e[t]=r}function _2(e,t){var r=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var n=e.eventTimes;for(e=e.expirationTimes;0<r;){var s=31-Mr(r),i=1<<s;t[s]=0,n[s]=-1,e[s]=-1,r&=~i}}function Xm(e,t){var r=e.entangledLanes|=t;for(e=e.entanglements;r;){var n=31-Mr(r),s=1<<n;s&t|e[n]&t&&(e[n]|=t),r&=~s}}var Oe=0;function W1(e){return e&=-e,1<e?4<e?e&268435455?16:536870912:4:1}var H1,Ym,q1,Q1,G1,bf=!1,Rl=[],ss=null,is=null,os=null,wa=new Map,ba=new Map,qn=[],k2="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Kp(e,t){switch(e){case"focusin":case"focusout":ss=null;break;case"dragenter":case"dragleave":is=null;break;case"mouseover":case"mouseout":os=null;break;case"pointerover":case"pointerout":wa.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":ba.delete(t.pointerId)}}function $o(e,t,r,n,s,i){return e===null||e.nativeEvent!==i?(e={blockedOn:t,domEventName:r,eventSystemFlags:n,nativeEvent:i,targetContainers:[s]},t!==null&&(t=al(t),t!==null&&Ym(t)),e):(e.eventSystemFlags|=n,t=e.targetContainers,s!==null&&t.indexOf(s)===-1&&t.push(s),e)}function T2(e,t,r,n,s){switch(t){case"focusin":return ss=$o(ss,e,t,r,n,s),!0;case"dragenter":return is=$o(is,e,t,r,n,s),!0;case"mouseover":return os=$o(os,e,t,r,n,s),!0;case"pointerover":var i=s.pointerId;return wa.set(i,$o(wa.get(i)||null,e,t,r,n,s)),!0;case"gotpointercapture":return i=s.pointerId,ba.set(i,$o(ba.get(i)||null,e,t,r,n,s)),!0}return!1}function K1(e){var t=Ms(e.target);if(t!==null){var r=fi(t);if(r!==null){if(t=r.tag,t===13){if(t=L1(r),t!==null){e.blockedOn=t,G1(e.priority,function(){q1(r)});return}}else if(t===3&&r.stateNode.current.memoizedState.isDehydrated){e.blockedOn=r.tag===3?r.stateNode.containerInfo:null;return}}}e.blockedOn=null}function Yl(e){if(e.blockedOn!==null)return!1;for(var t=e.targetContainers;0<t.length;){var r=Nf(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(r===null){r=e.nativeEvent;var n=new r.constructor(r.type,r);gf=n,r.target.dispatchEvent(n),gf=null}else return t=al(r),t!==null&&Ym(t),e.blockedOn=r,!1;t.shift()}return!0}function Zp(e,t,r){Yl(e)&&r.delete(t)}function E2(){bf=!1,ss!==null&&Yl(ss)&&(ss=null),is!==null&&Yl(is)&&(is=null),os!==null&&Yl(os)&&(os=null),wa.forEach(Zp),ba.forEach(Zp)}function zo(e,t){e.blockedOn===t&&(e.blockedOn=null,bf||(bf=!0,cr.unstable_scheduleCallback(cr.unstable_NormalPriority,E2)))}function Na(e){function t(s){return zo(s,e)}if(0<Rl.length){zo(Rl[0],e);for(var r=1;r<Rl.length;r++){var n=Rl[r];n.blockedOn===e&&(n.blockedOn=null)}}for(ss!==null&&zo(ss,e),is!==null&&zo(is,e),os!==null&&zo(os,e),wa.forEach(t),ba.forEach(t),r=0;r<qn.length;r++)n=qn[r],n.blockedOn===e&&(n.blockedOn=null);for(;0<qn.length&&(r=qn[0],r.blockedOn===null);)K1(r),r.blockedOn===null&&qn.shift()}var Ui=Pn.ReactCurrentBatchConfig,xc=!0;function P2(e,t,r,n){var s=Oe,i=Ui.transition;Ui.transition=null;try{Oe=1,Jm(e,t,r,n)}finally{Oe=s,Ui.transition=i}}function R2(e,t,r,n){var s=Oe,i=Ui.transition;Ui.transition=null;try{Oe=4,Jm(e,t,r,n)}finally{Oe=s,Ui.transition=i}}function Jm(e,t,r,n){if(xc){var s=Nf(e,t,r,n);if(s===null)Cd(e,t,n,wc,r),Kp(e,n);else if(T2(s,e,t,r,n))n.stopPropagation();else if(Kp(e,n),t&4&&-1<k2.indexOf(e)){for(;s!==null;){var i=al(s);if(i!==null&&H1(i),i=Nf(e,t,r,n),i===null&&Cd(e,t,n,wc,r),i===s)break;s=i}s!==null&&n.stopPropagation()}else Cd(e,t,n,null,r)}}var wc=null;function Nf(e,t,r,n){if(wc=null,e=Km(n),e=Ms(e),e!==null)if(t=fi(e),t===null)e=null;else if(r=t.tag,r===13){if(e=L1(t),e!==null)return e;e=null}else if(r===3){if(t.stateNode.current.memoizedState.isDehydrated)return t.tag===3?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null);return wc=e,null}function Z1(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(y2()){case Zm:return 1;case z1:return 4;case vc:case x2:return 16;case B1:return 536870912;default:return 16}default:return 16}}var rs=null,eh=null,Jl=null;function X1(){if(Jl)return Jl;var e,t=eh,r=t.length,n,s="value"in rs?rs.value:rs.textContent,i=s.length;for(e=0;e<r&&t[e]===s[e];e++);var a=r-e;for(n=1;n<=a&&t[r-n]===s[i-n];n++);return Jl=s.slice(e,1<n?1-n:void 0)}function ec(e){var t=e.keyCode;return"charCode"in e?(e=e.charCode,e===0&&t===13&&(e=13)):e=t,e===10&&(e=13),32<=e||e===13?e:0}function Al(){return!0}function Xp(){return!1}function dr(e){function t(r,n,s,i,a){this._reactName=r,this._targetInst=s,this.type=n,this.nativeEvent=i,this.target=a,this.currentTarget=null;for(var l in e)e.hasOwnProperty(l)&&(r=e[l],this[l]=r?r(i):i[l]);return this.isDefaultPrevented=(i.defaultPrevented!=null?i.defaultPrevented:i.returnValue===!1)?Al:Xp,this.isPropagationStopped=Xp,this}return Ye(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var r=this.nativeEvent;r&&(r.preventDefault?r.preventDefault():typeof r.returnValue!="unknown"&&(r.returnValue=!1),this.isDefaultPrevented=Al)},stopPropagation:function(){var r=this.nativeEvent;r&&(r.stopPropagation?r.stopPropagation():typeof r.cancelBubble!="unknown"&&(r.cancelBubble=!0),this.isPropagationStopped=Al)},persist:function(){},isPersistent:Al}),t}var To={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},th=dr(To),ol=Ye({},To,{view:0,detail:0}),A2=dr(ol),gd,vd,Bo,vu=Ye({},ol,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:rh,button:0,buttons:0,relatedTarget:function(e){return e.relatedTarget===void 0?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==Bo&&(Bo&&e.type==="mousemove"?(gd=e.screenX-Bo.screenX,vd=e.screenY-Bo.screenY):vd=gd=0,Bo=e),gd)},movementY:function(e){return"movementY"in e?e.movementY:vd}}),Yp=dr(vu),I2=Ye({},vu,{dataTransfer:0}),M2=dr(I2),D2=Ye({},ol,{relatedTarget:0}),yd=dr(D2),O2=Ye({},To,{animationName:0,elapsedTime:0,pseudoElement:0}),L2=dr(O2),F2=Ye({},To,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),V2=dr(F2),$2=Ye({},To,{data:0}),Jp=dr($2),z2={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},B2={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},U2={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function W2(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):(e=U2[e])?!!t[e]:!1}function rh(){return W2}var H2=Ye({},ol,{key:function(e){if(e.key){var t=z2[e.key]||e.key;if(t!=="Unidentified")return t}return e.type==="keypress"?(e=ec(e),e===13?"Enter":String.fromCharCode(e)):e.type==="keydown"||e.type==="keyup"?B2[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:rh,charCode:function(e){return e.type==="keypress"?ec(e):0},keyCode:function(e){return e.type==="keydown"||e.type==="keyup"?e.keyCode:0},which:function(e){return e.type==="keypress"?ec(e):e.type==="keydown"||e.type==="keyup"?e.keyCode:0}}),q2=dr(H2),Q2=Ye({},vu,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),eg=dr(Q2),G2=Ye({},ol,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:rh}),K2=dr(G2),Z2=Ye({},To,{propertyName:0,elapsedTime:0,pseudoElement:0}),X2=dr(Z2),Y2=Ye({},vu,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),J2=dr(Y2),eP=[9,13,27,32],nh=Sn&&"CompositionEvent"in window,aa=null;Sn&&"documentMode"in document&&(aa=document.documentMode);var tP=Sn&&"TextEvent"in window&&!aa,Y1=Sn&&(!nh||aa&&8<aa&&11>=aa),tg=" ",rg=!1;function J1(e,t){switch(e){case"keyup":return eP.indexOf(t.keyCode)!==-1;case"keydown":return t.keyCode!==229;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function eb(e){return e=e.detail,typeof e=="object"&&"data"in e?e.data:null}var ki=!1;function rP(e,t){switch(e){case"compositionend":return eb(t);case"keypress":return t.which!==32?null:(rg=!0,tg);case"textInput":return e=t.data,e===tg&&rg?null:e;default:return null}}function nP(e,t){if(ki)return e==="compositionend"||!nh&&J1(e,t)?(e=X1(),Jl=eh=rs=null,ki=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Y1&&t.locale!=="ko"?null:t.data;default:return null}}var sP={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function ng(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t==="input"?!!sP[e.type]:t==="textarea"}function tb(e,t,r,n){A1(n),t=bc(t,"onChange"),0<t.length&&(r=new th("onChange","change",null,r,n),e.push({event:r,listeners:t}))}var la=null,Sa=null;function iP(e){fb(e,0)}function yu(e){var t=Pi(e);if(C1(t))return e}function oP(e,t){if(e==="change")return t}var rb=!1;if(Sn){var xd;if(Sn){var wd="oninput"in document;if(!wd){var sg=document.createElement("div");sg.setAttribute("oninput","return;"),wd=typeof sg.oninput=="function"}xd=wd}else xd=!1;rb=xd&&(!document.documentMode||9<document.documentMode)}function ig(){la&&(la.detachEvent("onpropertychange",nb),Sa=la=null)}function nb(e){if(e.propertyName==="value"&&yu(Sa)){var t=[];tb(t,Sa,e,Km(e)),O1(iP,t)}}function aP(e,t,r){e==="focusin"?(ig(),la=t,Sa=r,la.attachEvent("onpropertychange",nb)):e==="focusout"&&ig()}function lP(e){if(e==="selectionchange"||e==="keyup"||e==="keydown")return yu(Sa)}function cP(e,t){if(e==="click")return yu(t)}function uP(e,t){if(e==="input"||e==="change")return yu(t)}function dP(e,t){return e===t&&(e!==0||1/e===1/t)||e!==e&&t!==t}var Fr=typeof Object.is=="function"?Object.is:dP;function ja(e,t){if(Fr(e,t))return!0;if(typeof e!="object"||e===null||typeof t!="object"||t===null)return!1;var r=Object.keys(e),n=Object.keys(t);if(r.length!==n.length)return!1;for(n=0;n<r.length;n++){var s=r[n];if(!nf.call(t,s)||!Fr(e[s],t[s]))return!1}return!0}function og(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function ag(e,t){var r=og(e);e=0;for(var n;r;){if(r.nodeType===3){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=og(r)}}function sb(e,t){return e&&t?e===t?!0:e&&e.nodeType===3?!1:t&&t.nodeType===3?sb(e,t.parentNode):"contains"in e?e.contains(t):e.compareDocumentPosition?!!(e.compareDocumentPosition(t)&16):!1:!1}function ib(){for(var e=window,t=hc();t instanceof e.HTMLIFrameElement;){try{var r=typeof t.contentWindow.location.href=="string"}catch{r=!1}if(r)e=t.contentWindow;else break;t=hc(e.document)}return t}function sh(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&(t==="input"&&(e.type==="text"||e.type==="search"||e.type==="tel"||e.type==="url"||e.type==="password")||t==="textarea"||e.contentEditable==="true")}function fP(e){var t=ib(),r=e.focusedElem,n=e.selectionRange;if(t!==r&&r&&r.ownerDocument&&sb(r.ownerDocument.documentElement,r)){if(n!==null&&sh(r)){if(t=n.start,e=n.end,e===void 0&&(e=t),"selectionStart"in r)r.selectionStart=t,r.selectionEnd=Math.min(e,r.value.length);else if(e=(t=r.ownerDocument||document)&&t.defaultView||window,e.getSelection){e=e.getSelection();var s=r.textContent.length,i=Math.min(n.start,s);n=n.end===void 0?i:Math.min(n.end,s),!e.extend&&i>n&&(s=n,n=i,i=s),s=ag(r,i);var a=ag(r,n);s&&a&&(e.rangeCount!==1||e.anchorNode!==s.node||e.anchorOffset!==s.offset||e.focusNode!==a.node||e.focusOffset!==a.offset)&&(t=t.createRange(),t.setStart(s.node,s.offset),e.removeAllRanges(),i>n?(e.addRange(t),e.extend(a.node,a.offset)):(t.setEnd(a.node,a.offset),e.addRange(t)))}}for(t=[],e=r;e=e.parentNode;)e.nodeType===1&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for(typeof r.focus=="function"&&r.focus(),r=0;r<t.length;r++)e=t[r],e.element.scrollLeft=e.left,e.element.scrollTop=e.top}}var mP=Sn&&"documentMode"in document&&11>=document.documentMode,Ti=null,Sf=null,ca=null,jf=!1;function lg(e,t,r){var n=r.window===r?r.document:r.nodeType===9?r:r.ownerDocument;jf||Ti==null||Ti!==hc(n)||(n=Ti,"selectionStart"in n&&sh(n)?n={start:n.selectionStart,end:n.selectionEnd}:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection(),n={anchorNode:n.anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset}),ca&&ja(ca,n)||(ca=n,n=bc(Sf,"onSelect"),0<n.length&&(t=new th("onSelect","select",null,t,r),e.push({event:t,listeners:n}),t.target=Ti)))}function Il(e,t){var r={};return r[e.toLowerCase()]=t.toLowerCase(),r["Webkit"+e]="webkit"+t,r["Moz"+e]="moz"+t,r}var Ei={animationend:Il("Animation","AnimationEnd"),animationiteration:Il("Animation","AnimationIteration"),animationstart:Il("Animation","AnimationStart"),transitionend:Il("Transition","TransitionEnd")},bd={},ob={};Sn&&(ob=document.createElement("div").style,"AnimationEvent"in window||(delete Ei.animationend.animation,delete Ei.animationiteration.animation,delete Ei.animationstart.animation),"TransitionEvent"in window||delete Ei.transitionend.transition);function xu(e){if(bd[e])return bd[e];if(!Ei[e])return e;var t=Ei[e],r;for(r in t)if(t.hasOwnProperty(r)&&r in ob)return bd[e]=t[r];return e}var ab=xu("animationend"),lb=xu("animationiteration"),cb=xu("animationstart"),ub=xu("transitionend"),db=new Map,cg="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Ns(e,t){db.set(e,t),di(t,[e])}for(var Nd=0;Nd<cg.length;Nd++){var Sd=cg[Nd],hP=Sd.toLowerCase(),pP=Sd[0].toUpperCase()+Sd.slice(1);Ns(hP,"on"+pP)}Ns(ab,"onAnimationEnd");Ns(lb,"onAnimationIteration");Ns(cb,"onAnimationStart");Ns("dblclick","onDoubleClick");Ns("focusin","onFocus");Ns("focusout","onBlur");Ns(ub,"onTransitionEnd");mo("onMouseEnter",["mouseout","mouseover"]);mo("onMouseLeave",["mouseout","mouseover"]);mo("onPointerEnter",["pointerout","pointerover"]);mo("onPointerLeave",["pointerout","pointerover"]);di("onChange","change click focusin focusout input keydown keyup selectionchange".split(" "));di("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));di("onBeforeInput",["compositionend","keypress","textInput","paste"]);di("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" "));di("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" "));di("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Jo="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),gP=new Set("cancel close invalid load scroll toggle".split(" ").concat(Jo));function ug(e,t,r){var n=e.type||"unknown-event";e.currentTarget=r,h2(n,t,void 0,e),e.currentTarget=null}function fb(e,t){t=(t&4)!==0;for(var r=0;r<e.length;r++){var n=e[r],s=n.event;n=n.listeners;e:{var i=void 0;if(t)for(var a=n.length-1;0<=a;a--){var l=n[a],c=l.instance,u=l.currentTarget;if(l=l.listener,c!==i&&s.isPropagationStopped())break e;ug(s,l,u),i=c}else for(a=0;a<n.length;a++){if(l=n[a],c=l.instance,u=l.currentTarget,l=l.listener,c!==i&&s.isPropagationStopped())break e;ug(s,l,u),i=c}}}if(gc)throw e=xf,gc=!1,xf=null,e}function Ue(e,t){var r=t[Ef];r===void 0&&(r=t[Ef]=new Set);var n=e+"__bubble";r.has(n)||(mb(t,e,2,!1),r.add(n))}function jd(e,t,r){var n=0;t&&(n|=4),mb(r,e,n,t)}var Ml="_reactListening"+Math.random().toString(36).slice(2);function Ca(e){if(!e[Ml]){e[Ml]=!0,w1.forEach(function(r){r!=="selectionchange"&&(gP.has(r)||jd(r,!1,e),jd(r,!0,e))});var t=e.nodeType===9?e:e.ownerDocument;t===null||t[Ml]||(t[Ml]=!0,jd("selectionchange",!1,t))}}function mb(e,t,r,n){switch(Z1(t)){case 1:var s=P2;break;case 4:s=R2;break;default:s=Jm}r=s.bind(null,t,r,e),s=void 0,!yf||t!=="touchstart"&&t!=="touchmove"&&t!=="wheel"||(s=!0),n?s!==void 0?e.addEventListener(t,r,{capture:!0,passive:s}):e.addEventListener(t,r,!0):s!==void 0?e.addEventListener(t,r,{passive:s}):e.addEventListener(t,r,!1)}function Cd(e,t,r,n,s){var i=n;if(!(t&1)&&!(t&2)&&n!==null)e:for(;;){if(n===null)return;var a=n.tag;if(a===3||a===4){var l=n.stateNode.containerInfo;if(l===s||l.nodeType===8&&l.parentNode===s)break;if(a===4)for(a=n.return;a!==null;){var c=a.tag;if((c===3||c===4)&&(c=a.stateNode.containerInfo,c===s||c.nodeType===8&&c.parentNode===s))return;a=a.return}for(;l!==null;){if(a=Ms(l),a===null)return;if(c=a.tag,c===5||c===6){n=i=a;continue e}l=l.parentNode}}n=n.return}O1(function(){var u=i,d=Km(r),f=[];e:{var h=db.get(e);if(h!==void 0){var x=th,w=e;switch(e){case"keypress":if(ec(r)===0)break e;case"keydown":case"keyup":x=q2;break;case"focusin":w="focus",x=yd;break;case"focusout":w="blur",x=yd;break;case"beforeblur":case"afterblur":x=yd;break;case"click":if(r.button===2)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":x=Yp;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":x=M2;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":x=K2;break;case ab:case lb:case cb:x=L2;break;case ub:x=X2;break;case"scroll":x=A2;break;case"wheel":x=J2;break;case"copy":case"cut":case"paste":x=V2;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":x=eg}var g=(t&4)!==0,b=!g&&e==="scroll",v=g?h!==null?h+"Capture":null:h;g=[];for(var p=u,y;p!==null;){y=p;var N=y.stateNode;if(y.tag===5&&N!==null&&(y=N,v!==null&&(N=xa(p,v),N!=null&&g.push(_a(p,N,y)))),b)break;p=p.return}0<g.length&&(h=new x(h,w,null,r,d),f.push({event:h,listeners:g}))}}if(!(t&7)){e:{if(h=e==="mouseover"||e==="pointerover",x=e==="mouseout"||e==="pointerout",h&&r!==gf&&(w=r.relatedTarget||r.fromElement)&&(Ms(w)||w[jn]))break e;if((x||h)&&(h=d.window===d?d:(h=d.ownerDocument)?h.defaultView||h.parentWindow:window,x?(w=r.relatedTarget||r.toElement,x=u,w=w?Ms(w):null,w!==null&&(b=fi(w),w!==b||w.tag!==5&&w.tag!==6)&&(w=null)):(x=null,w=u),x!==w)){if(g=Yp,N="onMouseLeave",v="onMouseEnter",p="mouse",(e==="pointerout"||e==="pointerover")&&(g=eg,N="onPointerLeave",v="onPointerEnter",p="pointer"),b=x==null?h:Pi(x),y=w==null?h:Pi(w),h=new g(N,p+"leave",x,r,d),h.target=b,h.relatedTarget=y,N=null,Ms(d)===u&&(g=new g(v,p+"enter",w,r,d),g.target=y,g.relatedTarget=b,N=g),b=N,x&&w)t:{for(g=x,v=w,p=0,y=g;y;y=yi(y))p++;for(y=0,N=v;N;N=yi(N))y++;for(;0<p-y;)g=yi(g),p--;for(;0<y-p;)v=yi(v),y--;for(;p--;){if(g===v||v!==null&&g===v.alternate)break t;g=yi(g),v=yi(v)}g=null}else g=null;x!==null&&dg(f,h,x,g,!1),w!==null&&b!==null&&dg(f,b,w,g,!0)}}e:{if(h=u?Pi(u):window,x=h.nodeName&&h.nodeName.toLowerCase(),x==="select"||x==="input"&&h.type==="file")var j=oP;else if(ng(h))if(rb)j=uP;else{j=lP;var E=aP}else(x=h.nodeName)&&x.toLowerCase()==="input"&&(h.type==="checkbox"||h.type==="radio")&&(j=cP);if(j&&(j=j(e,u))){tb(f,j,r,d);break e}E&&E(e,h,u),e==="focusout"&&(E=h._wrapperState)&&E.controlled&&h.type==="number"&&df(h,"number",h.value)}switch(E=u?Pi(u):window,e){case"focusin":(ng(E)||E.contentEditable==="true")&&(Ti=E,Sf=u,ca=null);break;case"focusout":ca=Sf=Ti=null;break;case"mousedown":jf=!0;break;case"contextmenu":case"mouseup":case"dragend":jf=!1,lg(f,r,d);break;case"selectionchange":if(mP)break;case"keydown":case"keyup":lg(f,r,d)}var T;if(nh)e:{switch(e){case"compositionstart":var P="onCompositionStart";break e;case"compositionend":P="onCompositionEnd";break e;case"compositionupdate":P="onCompositionUpdate";break e}P=void 0}else ki?J1(e,r)&&(P="onCompositionEnd"):e==="keydown"&&r.keyCode===229&&(P="onCompositionStart");P&&(Y1&&r.locale!=="ko"&&(ki||P!=="onCompositionStart"?P==="onCompositionEnd"&&ki&&(T=X1()):(rs=d,eh="value"in rs?rs.value:rs.textContent,ki=!0)),E=bc(u,P),0<E.length&&(P=new Jp(P,e,null,r,d),f.push({event:P,listeners:E}),T?P.data=T:(T=eb(r),T!==null&&(P.data=T)))),(T=tP?rP(e,r):nP(e,r))&&(u=bc(u,"onBeforeInput"),0<u.length&&(d=new Jp("onBeforeInput","beforeinput",null,r,d),f.push({event:d,listeners:u}),d.data=T))}fb(f,t)})}function _a(e,t,r){return{instance:e,listener:t,currentTarget:r}}function bc(e,t){for(var r=t+"Capture",n=[];e!==null;){var s=e,i=s.stateNode;s.tag===5&&i!==null&&(s=i,i=xa(e,r),i!=null&&n.unshift(_a(e,i,s)),i=xa(e,t),i!=null&&n.push(_a(e,i,s))),e=e.return}return n}function yi(e){if(e===null)return null;do e=e.return;while(e&&e.tag!==5);return e||null}function dg(e,t,r,n,s){for(var i=t._reactName,a=[];r!==null&&r!==n;){var l=r,c=l.alternate,u=l.stateNode;if(c!==null&&c===n)break;l.tag===5&&u!==null&&(l=u,s?(c=xa(r,i),c!=null&&a.unshift(_a(r,c,l))):s||(c=xa(r,i),c!=null&&a.push(_a(r,c,l)))),r=r.return}a.length!==0&&e.push({event:t,listeners:a})}var vP=/\r\n?/g,yP=/\u0000|\uFFFD/g;function fg(e){return(typeof e=="string"?e:""+e).replace(vP,`
`).replace(yP,"")}function Dl(e,t,r){if(t=fg(t),fg(e)!==t&&r)throw Error($(425))}function Nc(){}var Cf=null,_f=null;function kf(e,t){return e==="textarea"||e==="noscript"||typeof t.children=="string"||typeof t.children=="number"||typeof t.dangerouslySetInnerHTML=="object"&&t.dangerouslySetInnerHTML!==null&&t.dangerouslySetInnerHTML.__html!=null}var Tf=typeof setTimeout=="function"?setTimeout:void 0,xP=typeof clearTimeout=="function"?clearTimeout:void 0,mg=typeof Promise=="function"?Promise:void 0,wP=typeof queueMicrotask=="function"?queueMicrotask:typeof mg<"u"?function(e){return mg.resolve(null).then(e).catch(bP)}:Tf;function bP(e){setTimeout(function(){throw e})}function _d(e,t){var r=t,n=0;do{var s=r.nextSibling;if(e.removeChild(r),s&&s.nodeType===8)if(r=s.data,r==="/$"){if(n===0){e.removeChild(s),Na(t);return}n--}else r!=="$"&&r!=="$?"&&r!=="$!"||n++;r=s}while(r);Na(t)}function as(e){for(;e!=null;e=e.nextSibling){var t=e.nodeType;if(t===1||t===3)break;if(t===8){if(t=e.data,t==="$"||t==="$!"||t==="$?")break;if(t==="/$")return null}}return e}function hg(e){e=e.previousSibling;for(var t=0;e;){if(e.nodeType===8){var r=e.data;if(r==="$"||r==="$!"||r==="$?"){if(t===0)return e;t--}else r==="/$"&&t++}e=e.previousSibling}return null}var Eo=Math.random().toString(36).slice(2),Zr="__reactFiber$"+Eo,ka="__reactProps$"+Eo,jn="__reactContainer$"+Eo,Ef="__reactEvents$"+Eo,NP="__reactListeners$"+Eo,SP="__reactHandles$"+Eo;function Ms(e){var t=e[Zr];if(t)return t;for(var r=e.parentNode;r;){if(t=r[jn]||r[Zr]){if(r=t.alternate,t.child!==null||r!==null&&r.child!==null)for(e=hg(e);e!==null;){if(r=e[Zr])return r;e=hg(e)}return t}e=r,r=e.parentNode}return null}function al(e){return e=e[Zr]||e[jn],!e||e.tag!==5&&e.tag!==6&&e.tag!==13&&e.tag!==3?null:e}function Pi(e){if(e.tag===5||e.tag===6)return e.stateNode;throw Error($(33))}function wu(e){return e[ka]||null}var Pf=[],Ri=-1;function Ss(e){return{current:e}}function We(e){0>Ri||(e.current=Pf[Ri],Pf[Ri]=null,Ri--)}function $e(e,t){Ri++,Pf[Ri]=e.current,e.current=t}var ms={},At=Ss(ms),Zt=Ss(!1),Xs=ms;function ho(e,t){var r=e.type.contextTypes;if(!r)return ms;var n=e.stateNode;if(n&&n.__reactInternalMemoizedUnmaskedChildContext===t)return n.__reactInternalMemoizedMaskedChildContext;var s={},i;for(i in r)s[i]=t[i];return n&&(e=e.stateNode,e.__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=s),s}function Xt(e){return e=e.childContextTypes,e!=null}function Sc(){We(Zt),We(At)}function pg(e,t,r){if(At.current!==ms)throw Error($(168));$e(At,t),$e(Zt,r)}function hb(e,t,r){var n=e.stateNode;if(t=t.childContextTypes,typeof n.getChildContext!="function")return r;n=n.getChildContext();for(var s in n)if(!(s in t))throw Error($(108,a2(e)||"Unknown",s));return Ye({},r,n)}function jc(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||ms,Xs=At.current,$e(At,e),$e(Zt,Zt.current),!0}function gg(e,t,r){var n=e.stateNode;if(!n)throw Error($(169));r?(e=hb(e,t,Xs),n.__reactInternalMemoizedMergedChildContext=e,We(Zt),We(At),$e(At,e)):We(Zt),$e(Zt,r)}var gn=null,bu=!1,kd=!1;function pb(e){gn===null?gn=[e]:gn.push(e)}function jP(e){bu=!0,pb(e)}function js(){if(!kd&&gn!==null){kd=!0;var e=0,t=Oe;try{var r=gn;for(Oe=1;e<r.length;e++){var n=r[e];do n=n(!0);while(n!==null)}gn=null,bu=!1}catch(s){throw gn!==null&&(gn=gn.slice(e+1)),$1(Zm,js),s}finally{Oe=t,kd=!1}}return null}var Ai=[],Ii=0,Cc=null,_c=0,pr=[],gr=0,Ys=null,xn=1,wn="";function Rs(e,t){Ai[Ii++]=_c,Ai[Ii++]=Cc,Cc=e,_c=t}function gb(e,t,r){pr[gr++]=xn,pr[gr++]=wn,pr[gr++]=Ys,Ys=e;var n=xn;e=wn;var s=32-Mr(n)-1;n&=~(1<<s),r+=1;var i=32-Mr(t)+s;if(30<i){var a=s-s%5;i=(n&(1<<a)-1).toString(32),n>>=a,s-=a,xn=1<<32-Mr(t)+s|r<<s|n,wn=i+e}else xn=1<<i|r<<s|n,wn=e}function ih(e){e.return!==null&&(Rs(e,1),gb(e,1,0))}function oh(e){for(;e===Cc;)Cc=Ai[--Ii],Ai[Ii]=null,_c=Ai[--Ii],Ai[Ii]=null;for(;e===Ys;)Ys=pr[--gr],pr[gr]=null,wn=pr[--gr],pr[gr]=null,xn=pr[--gr],pr[gr]=null}var or=null,ir=null,He=!1,Er=null;function vb(e,t){var r=vr(5,null,null,0);r.elementType="DELETED",r.stateNode=t,r.return=e,t=e.deletions,t===null?(e.deletions=[r],e.flags|=16):t.push(r)}function vg(e,t){switch(e.tag){case 5:var r=e.type;return t=t.nodeType!==1||r.toLowerCase()!==t.nodeName.toLowerCase()?null:t,t!==null?(e.stateNode=t,or=e,ir=as(t.firstChild),!0):!1;case 6:return t=e.pendingProps===""||t.nodeType!==3?null:t,t!==null?(e.stateNode=t,or=e,ir=null,!0):!1;case 13:return t=t.nodeType!==8?null:t,t!==null?(r=Ys!==null?{id:xn,overflow:wn}:null,e.memoizedState={dehydrated:t,treeContext:r,retryLane:1073741824},r=vr(18,null,null,0),r.stateNode=t,r.return=e,e.child=r,or=e,ir=null,!0):!1;default:return!1}}function Rf(e){return(e.mode&1)!==0&&(e.flags&128)===0}function Af(e){if(He){var t=ir;if(t){var r=t;if(!vg(e,t)){if(Rf(e))throw Error($(418));t=as(r.nextSibling);var n=or;t&&vg(e,t)?vb(n,r):(e.flags=e.flags&-4097|2,He=!1,or=e)}}else{if(Rf(e))throw Error($(418));e.flags=e.flags&-4097|2,He=!1,or=e}}}function yg(e){for(e=e.return;e!==null&&e.tag!==5&&e.tag!==3&&e.tag!==13;)e=e.return;or=e}function Ol(e){if(e!==or)return!1;if(!He)return yg(e),He=!0,!1;var t;if((t=e.tag!==3)&&!(t=e.tag!==5)&&(t=e.type,t=t!=="head"&&t!=="body"&&!kf(e.type,e.memoizedProps)),t&&(t=ir)){if(Rf(e))throw yb(),Error($(418));for(;t;)vb(e,t),t=as(t.nextSibling)}if(yg(e),e.tag===13){if(e=e.memoizedState,e=e!==null?e.dehydrated:null,!e)throw Error($(317));e:{for(e=e.nextSibling,t=0;e;){if(e.nodeType===8){var r=e.data;if(r==="/$"){if(t===0){ir=as(e.nextSibling);break e}t--}else r!=="$"&&r!=="$!"&&r!=="$?"||t++}e=e.nextSibling}ir=null}}else ir=or?as(e.stateNode.nextSibling):null;return!0}function yb(){for(var e=ir;e;)e=as(e.nextSibling)}function po(){ir=or=null,He=!1}function ah(e){Er===null?Er=[e]:Er.push(e)}var CP=Pn.ReactCurrentBatchConfig;function Uo(e,t,r){if(e=r.ref,e!==null&&typeof e!="function"&&typeof e!="object"){if(r._owner){if(r=r._owner,r){if(r.tag!==1)throw Error($(309));var n=r.stateNode}if(!n)throw Error($(147,e));var s=n,i=""+e;return t!==null&&t.ref!==null&&typeof t.ref=="function"&&t.ref._stringRef===i?t.ref:(t=function(a){var l=s.refs;a===null?delete l[i]:l[i]=a},t._stringRef=i,t)}if(typeof e!="string")throw Error($(284));if(!r._owner)throw Error($(290,e))}return e}function Ll(e,t){throw e=Object.prototype.toString.call(t),Error($(31,e==="[object Object]"?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function xg(e){var t=e._init;return t(e._payload)}function xb(e){function t(v,p){if(e){var y=v.deletions;y===null?(v.deletions=[p],v.flags|=16):y.push(p)}}function r(v,p){if(!e)return null;for(;p!==null;)t(v,p),p=p.sibling;return null}function n(v,p){for(v=new Map;p!==null;)p.key!==null?v.set(p.key,p):v.set(p.index,p),p=p.sibling;return v}function s(v,p){return v=ds(v,p),v.index=0,v.sibling=null,v}function i(v,p,y){return v.index=y,e?(y=v.alternate,y!==null?(y=y.index,y<p?(v.flags|=2,p):y):(v.flags|=2,p)):(v.flags|=1048576,p)}function a(v){return e&&v.alternate===null&&(v.flags|=2),v}function l(v,p,y,N){return p===null||p.tag!==6?(p=Md(y,v.mode,N),p.return=v,p):(p=s(p,y),p.return=v,p)}function c(v,p,y,N){var j=y.type;return j===_i?d(v,p,y.props.children,N,y.key):p!==null&&(p.elementType===j||typeof j=="object"&&j!==null&&j.$typeof===Wn&&xg(j)===p.type)?(N=s(p,y.props),N.ref=Uo(v,p,y),N.return=v,N):(N=ac(y.type,y.key,y.props,null,v.mode,N),N.ref=Uo(v,p,y),N.return=v,N)}function u(v,p,y,N){return p===null||p.tag!==4||p.stateNode.containerInfo!==y.containerInfo||p.stateNode.implementation!==y.implementation?(p=Dd(y,v.mode,N),p.return=v,p):(p=s(p,y.children||[]),p.return=v,p)}function d(v,p,y,N,j){return p===null||p.tag!==7?(p=Gs(y,v.mode,N,j),p.return=v,p):(p=s(p,y),p.return=v,p)}function f(v,p,y){if(typeof p=="string"&&p!==""||typeof p=="number")return p=Md(""+p,v.mode,y),p.return=v,p;if(typeof p=="object"&&p!==null){switch(p.$typeof){case _l:return y=ac(p.type,p.key,p.props,null,v.mode,y),y.ref=Uo(v,null,p),y.return=v,y;case Ci:return p=Dd(p,v.mode,y),p.return=v,p;case Wn:var N=p._init;return f(v,N(p._payload),y)}if(Xo(p)||Fo(p))return p=Gs(p,v.mode,y,null),p.return=v,p;Ll(v,p)}return null}function h(v,p,y,N){var j=p!==null?p.key:null;if(typeof y=="string"&&y!==""||typeof y=="number")return j!==null?null:l(v,p,""+y,N);if(typeof y=="object"&&y!==null){switch(y.$typeof){case _l:return y.key===j?c(v,p,y,N):null;case Ci:return y.key===j?u(v,p,y,N):null;case Wn:return j=y._init,h(v,p,j(y._payload),N)}if(Xo(y)||Fo(y))return j!==null?null:d(v,p,y,N,null);Ll(v,y)}return null}function x(v,p,y,N,j){if(typeof N=="string"&&N!==""||typeof N=="number")return v=v.get(y)||null,l(p,v,""+N,j);if(typeof N=="object"&&N!==null){switch(N.$typeof){case _l:return v=v.get(N.key===null?y:N.key)||null,c(p,v,N,j);case Ci:return v=v.get(N.key===null?y:N.key)||null,u(p,v,N,j);case Wn:var E=N._init;return x(v,p,y,E(N._payload),j)}if(Xo(N)||Fo(N))return v=v.get(y)||null,d(p,v,N,j,null);Ll(p,N)}return null}function w(v,p,y,N){for(var j=null,E=null,T=p,P=p=0,C=null;T!==null&&P<y.length;P++){T.index>P?(C=T,T=null):C=T.sibling;var A=h(v,T,y[P],N);if(A===null){T===null&&(T=C);break}e&&T&&A.alternate===null&&t(v,T),p=i(A,p,P),E===null?j=A:E.sibling=A,E=A,T=C}if(P===y.length)return r(v,T),He&&Rs(v,P),j;if(T===null){for(;P<y.length;P++)T=f(v,y[P],N),T!==null&&(p=i(T,p,P),E===null?j=T:E.sibling=T,E=T);return He&&Rs(v,P),j}for(T=n(v,T);P<y.length;P++)C=x(T,v,P,y[P],N),C!==null&&(e&&C.alternate!==null&&T.delete(C.key===null?P:C.key),p=i(C,p,P),E===null?j=C:E.sibling=C,E=C);return e&&T.forEach(function(z){return t(v,z)}),He&&Rs(v,P),j}function g(v,p,y,N){var j=Fo(y);if(typeof j!="function")throw Error($(150));if(y=j.call(y),y==null)throw Error($(151));for(var E=j=null,T=p,P=p=0,C=null,A=y.next();T!==null&&!A.done;P++,A=y.next()){T.index>P?(C=T,T=null):C=T.sibling;var z=h(v,T,A.value,N);if(z===null){T===null&&(T=C);break}e&&T&&z.alternate===null&&t(v,T),p=i(z,p,P),E===null?j=z:E.sibling=z,E=z,T=C}if(A.done)return r(v,T),He&&Rs(v,P),j;if(T===null){for(;!A.done;P++,A=y.next())A=f(v,A.value,N),A!==null&&(p=i(A,p,P),E===null?j=A:E.sibling=A,E=A);return He&&Rs(v,P),j}for(T=n(v,T);!A.done;P++,A=y.next())A=x(T,v,P,A.value,N),A!==null&&(e&&A.alternate!==null&&T.delete(A.key===null?P:A.key),p=i(A,p,P),E===null?j=A:E.sibling=A,E=A);return e&&T.forEach(function(O){return t(v,O)}),He&&Rs(v,P),j}function b(v,p,y,N){if(typeof y=="object"&&y!==null&&y.type===_i&&y.key===null&&(y=y.props.children),typeof y=="object"&&y!==null){switch(y.$typeof){case _l:e:{for(var j=y.key,E=p;E!==null;){if(E.key===j){if(j=y.type,j===_i){if(E.tag===7){r(v,E.sibling),p=s(E,y.props.children),p.return=v,v=p;break e}}else if(E.elementType===j||typeof j=="object"&&j!==null&&j.$typeof===Wn&&xg(j)===E.type){r(v,E.sibling),p=s(E,y.props),p.ref=Uo(v,E,y),p.return=v,v=p;break e}r(v,E);break}else t(v,E);E=E.sibling}y.type===_i?(p=Gs(y.props.children,v.mode,N,y.key),p.return=v,v=p):(N=ac(y.type,y.key,y.props,null,v.mode,N),N.ref=Uo(v,p,y),N.return=v,v=N)}return a(v);case Ci:e:{for(E=y.key;p!==null;){if(p.key===E)if(p.tag===4&&p.stateNode.containerInfo===y.containerInfo&&p.stateNode.implementation===y.implementation){r(v,p.sibling),p=s(p,y.children||[]),p.return=v,v=p;break e}else{r(v,p);break}else t(v,p);p=p.sibling}p=Dd(y,v.mode,N),p.return=v,v=p}return a(v);case Wn:return E=y._init,b(v,p,E(y._payload),N)}if(Xo(y))return w(v,p,y,N);if(Fo(y))return g(v,p,y,N);Ll(v,y)}return typeof y=="string"&&y!==""||typeof y=="number"?(y=""+y,p!==null&&p.tag===6?(r(v,p.sibling),p=s(p,y),p.return=v,v=p):(r(v,p),p=Md(y,v.mode,N),p.return=v,v=p),a(v)):r(v,p)}return b}var go=xb(!0),wb=xb(!1),kc=Ss(null),Tc=null,Mi=null,lh=null;function ch(){lh=Mi=Tc=null}function uh(e){var t=kc.current;We(kc),e._currentValue=t}function If(e,t,r){for(;e!==null;){var n=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,n!==null&&(n.childLanes|=t)):n!==null&&(n.childLanes&t)!==t&&(n.childLanes|=t),e===r)break;e=e.return}}function Wi(e,t){Tc=e,lh=Mi=null,e=e.dependencies,e!==null&&e.firstContext!==null&&(e.lanes&t&&(Kt=!0),e.firstContext=null)}function br(e){var t=e._currentValue;if(lh!==e)if(e={context:e,memoizedValue:t,next:null},Mi===null){if(Tc===null)throw Error($(308));Mi=e,Tc.dependencies={lanes:0,firstContext:e}}else Mi=Mi.next=e;return t}var Ds=null;function dh(e){Ds===null?Ds=[e]:Ds.push(e)}function bb(e,t,r,n){var s=t.interleaved;return s===null?(r.next=r,dh(t)):(r.next=s.next,s.next=r),t.interleaved=r,Cn(e,n)}function Cn(e,t){e.lanes|=t;var r=e.alternate;for(r!==null&&(r.lanes|=t),r=e,e=e.return;e!==null;)e.childLanes|=t,r=e.alternate,r!==null&&(r.childLanes|=t),r=e,e=e.return;return r.tag===3?r.stateNode:null}var Hn=!1;function fh(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Nb(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function bn(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function ls(e,t,r){var n=e.updateQueue;if(n===null)return null;if(n=n.shared,_e&2){var s=n.pending;return s===null?t.next=t:(t.next=s.next,s.next=t),n.pending=t,Cn(e,r)}return s=n.interleaved,s===null?(t.next=t,dh(n)):(t.next=s.next,s.next=t),n.interleaved=t,Cn(e,r)}function tc(e,t,r){if(t=t.updateQueue,t!==null&&(t=t.shared,(r&4194240)!==0)){var n=t.lanes;n&=e.pendingLanes,r|=n,t.lanes=r,Xm(e,r)}}function wg(e,t){var r=e.updateQueue,n=e.alternate;if(n!==null&&(n=n.updateQueue,r===n)){var s=null,i=null;if(r=r.firstBaseUpdate,r!==null){do{var a={eventTime:r.eventTime,lane:r.lane,tag:r.tag,payload:r.payload,callback:r.callback,next:null};i===null?s=i=a:i=i.next=a,r=r.next}while(r!==null);i===null?s=i=t:i=i.next=t}else s=i=t;r={baseState:n.baseState,firstBaseUpdate:s,lastBaseUpdate:i,shared:n.shared,effects:n.effects},e.updateQueue=r;return}e=r.lastBaseUpdate,e===null?r.firstBaseUpdate=t:e.next=t,r.lastBaseUpdate=t}function Ec(e,t,r,n){var s=e.updateQueue;Hn=!1;var i=s.firstBaseUpdate,a=s.lastBaseUpdate,l=s.shared.pending;if(l!==null){s.shared.pending=null;var c=l,u=c.next;c.next=null,a===null?i=u:a.next=u,a=c;var d=e.alternate;d!==null&&(d=d.updateQueue,l=d.lastBaseUpdate,l!==a&&(l===null?d.firstBaseUpdate=u:l.next=u,d.lastBaseUpdate=c))}if(i!==null){var f=s.baseState;a=0,d=u=c=null,l=i;do{var h=l.lane,x=l.eventTime;if((n&h)===h){d!==null&&(d=d.next={eventTime:x,lane:0,tag:l.tag,payload:l.payload,callback:l.callback,next:null});e:{var w=e,g=l;switch(h=t,x=r,g.tag){case 1:if(w=g.payload,typeof w=="function"){f=w.call(x,f,h);break e}f=w;break e;case 3:w.flags=w.flags&-65537|128;case 0:if(w=g.payload,h=typeof w=="function"?w.call(x,f,h):w,h==null)break e;f=Ye({},f,h);break e;case 2:Hn=!0}}l.callback!==null&&l.lane!==0&&(e.flags|=64,h=s.effects,h===null?s.effects=[l]:h.push(l))}else x={eventTime:x,lane:h,tag:l.tag,payload:l.payload,callback:l.callback,next:null},d===null?(u=d=x,c=f):d=d.next=x,a|=h;if(l=l.next,l===null){if(l=s.shared.pending,l===null)break;h=l,l=h.next,h.next=null,s.lastBaseUpdate=h,s.shared.pending=null}}while(!0);if(d===null&&(c=f),s.baseState=c,s.firstBaseUpdate=u,s.lastBaseUpdate=d,t=s.shared.interleaved,t!==null){s=t;do a|=s.lane,s=s.next;while(s!==t)}else i===null&&(s.shared.lanes=0);ei|=a,e.lanes=a,e.memoizedState=f}}function bg(e,t,r){if(e=t.effects,t.effects=null,e!==null)for(t=0;t<e.length;t++){var n=e[t],s=n.callback;if(s!==null){if(n.callback=null,n=r,typeof s!="function")throw Error($(191,s));s.call(n)}}}var ll={},en=Ss(ll),Ta=Ss(ll),Ea=Ss(ll);function Os(e){if(e===ll)throw Error($(174));return e}function mh(e,t){switch($e(Ea,t),$e(Ta,e),$e(en,ll),e=t.nodeType,e){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:mf(null,"");break;default:e=e===8?t.parentNode:t,t=e.namespaceURI||null,e=e.tagName,t=mf(t,e)}We(en),$e(en,t)}function vo(){We(en),We(Ta),We(Ea)}function Sb(e){Os(Ea.current);var t=Os(en.current),r=mf(t,e.type);t!==r&&($e(Ta,e),$e(en,r))}function hh(e){Ta.current===e&&(We(en),We(Ta))}var Ke=Ss(0);function Pc(e){for(var t=e;t!==null;){if(t.tag===13){var r=t.memoizedState;if(r!==null&&(r=r.dehydrated,r===null||r.data==="$?"||r.data==="$!"))return t}else if(t.tag===19&&t.memoizedProps.revealOrder!==void 0){if(t.flags&128)return t}else if(t.child!==null){t.child.return=t,t=t.child;continue}if(t===e)break;for(;t.sibling===null;){if(t.return===null||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var Td=[];function ph(){for(var e=0;e<Td.length;e++)Td[e]._workInProgressVersionPrimary=null;Td.length=0}var rc=Pn.ReactCurrentDispatcher,Ed=Pn.ReactCurrentBatchConfig,Js=0,Xe=null,dt=null,pt=null,Rc=!1,ua=!1,Pa=0,_P=0;function kt(){throw Error($(321))}function gh(e,t){if(t===null)return!1;for(var r=0;r<t.length&&r<e.length;r++)if(!Fr(e[r],t[r]))return!1;return!0}function vh(e,t,r,n,s,i){if(Js=i,Xe=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,rc.current=e===null||e.memoizedState===null?PP:RP,e=r(n,s),ua){i=0;do{if(ua=!1,Pa=0,25<=i)throw Error($(301));i+=1,pt=dt=null,t.updateQueue=null,rc.current=AP,e=r(n,s)}while(ua)}if(rc.current=Ac,t=dt!==null&&dt.next!==null,Js=0,pt=dt=Xe=null,Rc=!1,t)throw Error($(300));return e}function yh(){var e=Pa!==0;return Pa=0,e}function Hr(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return pt===null?Xe.memoizedState=pt=e:pt=pt.next=e,pt}function Nr(){if(dt===null){var e=Xe.alternate;e=e!==null?e.memoizedState:null}else e=dt.next;var t=pt===null?Xe.memoizedState:pt.next;if(t!==null)pt=t,dt=e;else{if(e===null)throw Error($(310));dt=e,e={memoizedState:dt.memoizedState,baseState:dt.baseState,baseQueue:dt.baseQueue,queue:dt.queue,next:null},pt===null?Xe.memoizedState=pt=e:pt=pt.next=e}return pt}function Ra(e,t){return typeof t=="function"?t(e):t}function Pd(e){var t=Nr(),r=t.queue;if(r===null)throw Error($(311));r.lastRenderedReducer=e;var n=dt,s=n.baseQueue,i=r.pending;if(i!==null){if(s!==null){var a=s.next;s.next=i.next,i.next=a}n.baseQueue=s=i,r.pending=null}if(s!==null){i=s.next,n=n.baseState;var l=a=null,c=null,u=i;do{var d=u.lane;if((Js&d)===d)c!==null&&(c=c.next={lane:0,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null}),n=u.hasEagerState?u.eagerState:e(n,u.action);else{var f={lane:d,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null};c===null?(l=c=f,a=n):c=c.next=f,Xe.lanes|=d,ei|=d}u=u.next}while(u!==null&&u!==i);c===null?a=n:c.next=l,Fr(n,t.memoizedState)||(Kt=!0),t.memoizedState=n,t.baseState=a,t.baseQueue=c,r.lastRenderedState=n}if(e=r.interleaved,e!==null){s=e;do i=s.lane,Xe.lanes|=i,ei|=i,s=s.next;while(s!==e)}else s===null&&(r.lanes=0);return[t.memoizedState,r.dispatch]}function Rd(e){var t=Nr(),r=t.queue;if(r===null)throw Error($(311));r.lastRenderedReducer=e;var n=r.dispatch,s=r.pending,i=t.memoizedState;if(s!==null){r.pending=null;var a=s=s.next;do i=e(i,a.action),a=a.next;while(a!==s);Fr(i,t.memoizedState)||(Kt=!0),t.memoizedState=i,t.baseQueue===null&&(t.baseState=i),r.lastRenderedState=i}return[i,n]}function jb(){}function Cb(e,t){var r=Xe,n=Nr(),s=t(),i=!Fr(n.memoizedState,s);if(i&&(n.memoizedState=s,Kt=!0),n=n.queue,xh(Tb.bind(null,r,n,e),[e]),n.getSnapshot!==t||i||pt!==null&&pt.memoizedState.tag&1){if(r.flags|=2048,Aa(9,kb.bind(null,r,n,s,t),void 0,null),gt===null)throw Error($(349));Js&30||_b(r,t,s)}return s}function _b(e,t,r){e.flags|=16384,e={getSnapshot:t,value:r},t=Xe.updateQueue,t===null?(t={lastEffect:null,stores:null},Xe.updateQueue=t,t.stores=[e]):(r=t.stores,r===null?t.stores=[e]:r.push(e))}function kb(e,t,r,n){t.value=r,t.getSnapshot=n,Eb(t)&&Pb(e)}function Tb(e,t,r){return r(function(){Eb(t)&&Pb(e)})}function Eb(e){var t=e.getSnapshot;e=e.value;try{var r=t();return!Fr(e,r)}catch{return!0}}function Pb(e){var t=Cn(e,1);t!==null&&Dr(t,e,1,-1)}function Ng(e){var t=Hr();return typeof e=="function"&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Ra,lastRenderedState:e},t.queue=e,e=e.dispatch=EP.bind(null,Xe,e),[t.memoizedState,e]}function Aa(e,t,r,n){return e={tag:e,create:t,destroy:r,deps:n,next:null},t=Xe.updateQueue,t===null?(t={lastEffect:null,stores:null},Xe.updateQueue=t,t.lastEffect=e.next=e):(r=t.lastEffect,r===null?t.lastEffect=e.next=e:(n=r.next,r.next=e,e.next=n,t.lastEffect=e)),e}function Rb(){return Nr().memoizedState}function nc(e,t,r,n){var s=Hr();Xe.flags|=e,s.memoizedState=Aa(1|t,r,void 0,n===void 0?null:n)}function Nu(e,t,r,n){var s=Nr();n=n===void 0?null:n;var i=void 0;if(dt!==null){var a=dt.memoizedState;if(i=a.destroy,n!==null&&gh(n,a.deps)){s.memoizedState=Aa(t,r,i,n);return}}Xe.flags|=e,s.memoizedState=Aa(1|t,r,i,n)}function Sg(e,t){return nc(8390656,8,e,t)}function xh(e,t){return Nu(2048,8,e,t)}function Ab(e,t){return Nu(4,2,e,t)}function Ib(e,t){return Nu(4,4,e,t)}function Mb(e,t){if(typeof t=="function")return e=e(),t(e),function(){t(null)};if(t!=null)return e=e(),t.current=e,function(){t.current=null}}function Db(e,t,r){return r=r!=null?r.concat([e]):null,Nu(4,4,Mb.bind(null,t,e),r)}function wh(){}function Ob(e,t){var r=Nr();t=t===void 0?null:t;var n=r.memoizedState;return n!==null&&t!==null&&gh(t,n[1])?n[0]:(r.memoizedState=[e,t],e)}function Lb(e,t){var r=Nr();t=t===void 0?null:t;var n=r.memoizedState;return n!==null&&t!==null&&gh(t,n[1])?n[0]:(e=e(),r.memoizedState=[e,t],e)}function Fb(e,t,r){return Js&21?(Fr(r,t)||(r=U1(),Xe.lanes|=r,ei|=r,e.baseState=!0),t):(e.baseState&&(e.baseState=!1,Kt=!0),e.memoizedState=r)}function kP(e,t){var r=Oe;Oe=r!==0&&4>r?r:4,e(!0);var n=Ed.transition;Ed.transition={};try{e(!1),t()}finally{Oe=r,Ed.transition=n}}function Vb(){return Nr().memoizedState}function TP(e,t,r){var n=us(e);if(r={lane:n,action:r,hasEagerState:!1,eagerState:null,next:null},$b(e))zb(t,r);else if(r=bb(e,t,r,n),r!==null){var s=zt();Dr(r,e,n,s),Bb(r,t,n)}}function EP(e,t,r){var n=us(e),s={lane:n,action:r,hasEagerState:!1,eagerState:null,next:null};if($b(e))zb(t,s);else{var i=e.alternate;if(e.lanes===0&&(i===null||i.lanes===0)&&(i=t.lastRenderedReducer,i!==null))try{var a=t.lastRenderedState,l=i(a,r);if(s.hasEagerState=!0,s.eagerState=l,Fr(l,a)){var c=t.interleaved;c===null?(s.next=s,dh(t)):(s.next=c.next,c.next=s),t.interleaved=s;return}}catch{}finally{}r=bb(e,t,s,n),r!==null&&(s=zt(),Dr(r,e,n,s),Bb(r,t,n))}}function $b(e){var t=e.alternate;return e===Xe||t!==null&&t===Xe}function zb(e,t){ua=Rc=!0;var r=e.pending;r===null?t.next=t:(t.next=r.next,r.next=t),e.pending=t}function Bb(e,t,r){if(r&4194240){var n=t.lanes;n&=e.pendingLanes,r|=n,t.lanes=r,Xm(e,r)}}var Ac={readContext:br,useCallback:kt,useContext:kt,useEffect:kt,useImperativeHandle:kt,useInsertionEffect:kt,useLayoutEffect:kt,useMemo:kt,useReducer:kt,useRef:kt,useState:kt,useDebugValue:kt,useDeferredValue:kt,useTransition:kt,useMutableSource:kt,useSyncExternalStore:kt,useId:kt,unstable_isNewReconciler:!1},PP={readContext:br,useCallback:function(e,t){return Hr().memoizedState=[e,t===void 0?null:t],e},useContext:br,useEffect:Sg,useImperativeHandle:function(e,t,r){return r=r!=null?r.concat([e]):null,nc(4194308,4,Mb.bind(null,t,e),r)},useLayoutEffect:function(e,t){return nc(4194308,4,e,t)},useInsertionEffect:function(e,t){return nc(4,2,e,t)},useMemo:function(e,t){var r=Hr();return t=t===void 0?null:t,e=e(),r.memoizedState=[e,t],e},useReducer:function(e,t,r){var n=Hr();return t=r!==void 0?r(t):t,n.memoizedState=n.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},n.queue=e,e=e.dispatch=TP.bind(null,Xe,e),[n.memoizedState,e]},useRef:function(e){var t=Hr();return e={current:e},t.memoizedState=e},useState:Ng,useDebugValue:wh,useDeferredValue:function(e){return Hr().memoizedState=e},useTransition:function(){var e=Ng(!1),t=e[0];return e=kP.bind(null,e[1]),Hr().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,r){var n=Xe,s=Hr();if(He){if(r===void 0)throw Error($(407));r=r()}else{if(r=t(),gt===null)throw Error($(349));Js&30||_b(n,t,r)}s.memoizedState=r;var i={value:r,getSnapshot:t};return s.queue=i,Sg(Tb.bind(null,n,i,e),[e]),n.flags|=2048,Aa(9,kb.bind(null,n,i,r,t),void 0,null),r},useId:function(){var e=Hr(),t=gt.identifierPrefix;if(He){var r=wn,n=xn;r=(n&~(1<<32-Mr(n)-1)).toString(32)+r,t=":"+t+"R"+r,r=Pa++,0<r&&(t+="H"+r.toString(32)),t+=":"}else r=_P++,t=":"+t+"r"+r.toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},RP={readContext:br,useCallback:Ob,useContext:br,useEffect:xh,useImperativeHandle:Db,useInsertionEffect:Ab,useLayoutEffect:Ib,useMemo:Lb,useReducer:Pd,useRef:Rb,useState:function(){return Pd(Ra)},useDebugValue:wh,useDeferredValue:function(e){var t=Nr();return Fb(t,dt.memoizedState,e)},useTransition:function(){var e=Pd(Ra)[0],t=Nr().memoizedState;return[e,t]},useMutableSource:jb,useSyncExternalStore:Cb,useId:Vb,unstable_isNewReconciler:!1},AP={readContext:br,useCallback:Ob,useContext:br,useEffect:xh,useImperativeHandle:Db,useInsertionEffect:Ab,useLayoutEffect:Ib,useMemo:Lb,useReducer:Rd,useRef:Rb,useState:function(){return Rd(Ra)},useDebugValue:wh,useDeferredValue:function(e){var t=Nr();return dt===null?t.memoizedState=e:Fb(t,dt.memoizedState,e)},useTransition:function(){var e=Rd(Ra)[0],t=Nr().memoizedState;return[e,t]},useMutableSource:jb,useSyncExternalStore:Cb,useId:Vb,unstable_isNewReconciler:!1};function _r(e,t){if(e&&e.defaultProps){t=Ye({},t),e=e.defaultProps;for(var r in e)t[r]===void 0&&(t[r]=e[r]);return t}return t}function Mf(e,t,r,n){t=e.memoizedState,r=r(n,t),r=r==null?t:Ye({},t,r),e.memoizedState=r,e.lanes===0&&(e.updateQueue.baseState=r)}var Su={isMounted:function(e){return(e=e._reactInternals)?fi(e)===e:!1},enqueueSetState:function(e,t,r){e=e._reactInternals;var n=zt(),s=us(e),i=bn(n,s);i.payload=t,r!=null&&(i.callback=r),t=ls(e,i,s),t!==null&&(Dr(t,e,s,n),tc(t,e,s))},enqueueReplaceState:function(e,t,r){e=e._reactInternals;var n=zt(),s=us(e),i=bn(n,s);i.tag=1,i.payload=t,r!=null&&(i.callback=r),t=ls(e,i,s),t!==null&&(Dr(t,e,s,n),tc(t,e,s))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var r=zt(),n=us(e),s=bn(r,n);s.tag=2,t!=null&&(s.callback=t),t=ls(e,s,n),t!==null&&(Dr(t,e,n,r),tc(t,e,n))}};function jg(e,t,r,n,s,i,a){return e=e.stateNode,typeof e.shouldComponentUpdate=="function"?e.shouldComponentUpdate(n,i,a):t.prototype&&t.prototype.isPureReactComponent?!ja(r,n)||!ja(s,i):!0}function Ub(e,t,r){var n=!1,s=ms,i=t.contextType;return typeof i=="object"&&i!==null?i=br(i):(s=Xt(t)?Xs:At.current,n=t.contextTypes,i=(n=n!=null)?ho(e,s):ms),t=new t(r,i),e.memoizedState=t.state!==null&&t.state!==void 0?t.state:null,t.updater=Su,e.stateNode=t,t._reactInternals=e,n&&(e=e.stateNode,e.__reactInternalMemoizedUnmaskedChildContext=s,e.__reactInternalMemoizedMaskedChildContext=i),t}function Cg(e,t,r,n){e=t.state,typeof t.componentWillReceiveProps=="function"&&t.componentWillReceiveProps(r,n),typeof t.UNSAFE_componentWillReceiveProps=="function"&&t.UNSAFE_componentWillReceiveProps(r,n),t.state!==e&&Su.enqueueReplaceState(t,t.state,null)}function Df(e,t,r,n){var s=e.stateNode;s.props=r,s.state=e.memoizedState,s.refs={},fh(e);var i=t.contextType;typeof i=="object"&&i!==null?s.context=br(i):(i=Xt(t)?Xs:At.current,s.context=ho(e,i)),s.state=e.memoizedState,i=t.getDerivedStateFromProps,typeof i=="function"&&(Mf(e,t,i,r),s.state=e.memoizedState),typeof t.getDerivedStateFromProps=="function"||typeof s.getSnapshotBeforeUpdate=="function"||typeof s.UNSAFE_componentWillMount!="function"&&typeof s.componentWillMount!="function"||(t=s.state,typeof s.componentWillMount=="function"&&s.componentWillMount(),typeof s.UNSAFE_componentWillMount=="function"&&s.UNSAFE_componentWillMount(),t!==s.state&&Su.enqueueReplaceState(s,s.state,null),Ec(e,r,s,n),s.state=e.memoizedState),typeof s.componentDidMount=="function"&&(e.flags|=4194308)}function yo(e,t){try{var r="",n=t;do r+=o2(n),n=n.return;while(n);var s=r}catch(i){s=`
Error generating stack: `+i.message+`
`+i.stack}return{value:e,source:t,stack:s,digest:null}}function Ad(e,t,r){return{value:e,source:null,stack:r??null,digest:t??null}}function Of(e,t){try{console.error(t.value)}catch(r){setTimeout(function(){throw r})}}var IP=typeof WeakMap=="function"?WeakMap:Map;function Wb(e,t,r){r=bn(-1,r),r.tag=3,r.payload={element:null};var n=t.value;return r.callback=function(){Mc||(Mc=!0,qf=n),Of(e,t)},r}function Hb(e,t,r){r=bn(-1,r),r.tag=3;var n=e.type.getDerivedStateFromError;if(typeof n=="function"){var s=t.value;r.payload=function(){return n(s)},r.callback=function(){Of(e,t)}}var i=e.stateNode;return i!==null&&typeof i.componentDidCatch=="function"&&(r.callback=function(){Of(e,t),typeof n!="function"&&(cs===null?cs=new Set([this]):cs.add(this));var a=t.stack;this.componentDidCatch(t.value,{componentStack:a!==null?a:""})}),r}function _g(e,t,r){var n=e.pingCache;if(n===null){n=e.pingCache=new IP;var s=new Set;n.set(t,s)}else s=n.get(t),s===void 0&&(s=new Set,n.set(t,s));s.has(r)||(s.add(r),e=QP.bind(null,e,t,r),t.then(e,e))}function kg(e){do{var t;if((t=e.tag===13)&&(t=e.memoizedState,t=t!==null?t.dehydrated!==null:!0),t)return e;e=e.return}while(e!==null);return null}function Tg(e,t,r,n,s){return e.mode&1?(e.flags|=65536,e.lanes=s,e):(e===t?e.flags|=65536:(e.flags|=128,r.flags|=131072,r.flags&=-52805,r.tag===1&&(r.alternate===null?r.tag=17:(t=bn(-1,1),t.tag=2,ls(r,t,1))),r.lanes|=1),e)}var MP=Pn.ReactCurrentOwner,Kt=!1;function Ft(e,t,r,n){t.child=e===null?wb(t,null,r,n):go(t,e.child,r,n)}function Eg(e,t,r,n,s){r=r.render;var i=t.ref;return Wi(t,s),n=vh(e,t,r,n,i,s),r=yh(),e!==null&&!Kt?(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~s,_n(e,t,s)):(He&&r&&ih(t),t.flags|=1,Ft(e,t,n,s),t.child)}function Pg(e,t,r,n,s){if(e===null){var i=r.type;return typeof i=="function"&&!Th(i)&&i.defaultProps===void 0&&r.compare===null&&r.defaultProps===void 0?(t.tag=15,t.type=i,qb(e,t,i,n,s)):(e=ac(r.type,null,n,t,t.mode,s),e.ref=t.ref,e.return=t,t.child=e)}if(i=e.child,!(e.lanes&s)){var a=i.memoizedProps;if(r=r.compare,r=r!==null?r:ja,r(a,n)&&e.ref===t.ref)return _n(e,t,s)}return t.flags|=1,e=ds(i,n),e.ref=t.ref,e.return=t,t.child=e}function qb(e,t,r,n,s){if(e!==null){var i=e.memoizedProps;if(ja(i,n)&&e.ref===t.ref)if(Kt=!1,t.pendingProps=n=i,(e.lanes&s)!==0)e.flags&131072&&(Kt=!0);else return t.lanes=e.lanes,_n(e,t,s)}return Lf(e,t,r,n,s)}function Qb(e,t,r){var n=t.pendingProps,s=n.children,i=e!==null?e.memoizedState:null;if(n.mode==="hidden")if(!(t.mode&1))t.memoizedState={baseLanes:0,cachePool:null,transitions:null},$e(Oi,rr),rr|=r;else{if(!(r&1073741824))return e=i!==null?i.baseLanes|r:r,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null,transitions:null},t.updateQueue=null,$e(Oi,rr),rr|=e,null;t.memoizedState={baseLanes:0,cachePool:null,transitions:null},n=i!==null?i.baseLanes:r,$e(Oi,rr),rr|=n}else i!==null?(n=i.baseLanes|r,t.memoizedState=null):n=r,$e(Oi,rr),rr|=n;return Ft(e,t,s,r),t.child}function Gb(e,t){var r=t.ref;(e===null&&r!==null||e!==null&&e.ref!==r)&&(t.flags|=512,t.flags|=2097152)}function Lf(e,t,r,n,s){var i=Xt(r)?Xs:At.current;return i=ho(t,i),Wi(t,s),r=vh(e,t,r,n,i,s),n=yh(),e!==null&&!Kt?(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~s,_n(e,t,s)):(He&&n&&ih(t),t.flags|=1,Ft(e,t,r,s),t.child)}function Rg(e,t,r,n,s){if(Xt(r)){var i=!0;jc(t)}else i=!1;if(Wi(t,s),t.stateNode===null)sc(e,t),Ub(t,r,n),Df(t,r,n,s),n=!0;else if(e===null){var a=t.stateNode,l=t.memoizedProps;a.props=l;var c=a.context,u=r.contextType;typeof u=="object"&&u!==null?u=br(u):(u=Xt(r)?Xs:At.current,u=ho(t,u));var d=r.getDerivedStateFromProps,f=typeof d=="function"||typeof a.getSnapshotBeforeUpdate=="function";f||typeof a.UNSAFE_componentWillReceiveProps!="function"&&typeof a.componentWillReceiveProps!="function"||(l!==n||c!==u)&&Cg(t,a,n,u),Hn=!1;var h=t.memoizedState;a.state=h,Ec(t,n,a,s),c=t.memoizedState,l!==n||h!==c||Zt.current||Hn?(typeof d=="function"&&(Mf(t,r,d,n),c=t.memoizedState),(l=Hn||jg(t,r,l,n,h,c,u))?(f||typeof a.UNSAFE_componentWillMount!="function"&&typeof a.componentWillMount!="function"||(typeof a.componentWillMount=="function"&&a.componentWillMount(),typeof a.UNSAFE_componentWillMount=="function"&&a.UNSAFE_componentWillMount()),typeof a.componentDidMount=="function"&&(t.flags|=4194308)):(typeof a.componentDidMount=="function"&&(t.flags|=4194308),t.memoizedProps=n,t.memoizedState=c),a.props=n,a.state=c,a.context=u,n=l):(typeof a.componentDidMount=="function"&&(t.flags|=4194308),n=!1)}else{a=t.stateNode,Nb(e,t),l=t.memoizedProps,u=t.type===t.elementType?l:_r(t.type,l),a.props=u,f=t.pendingProps,h=a.context,c=r.contextType,typeof c=="object"&&c!==null?c=br(c):(c=Xt(r)?Xs:At.current,c=ho(t,c));var x=r.getDerivedStateFromProps;(d=typeof x=="function"||typeof a.getSnapshotBeforeUpdate=="function")||typeof a.UNSAFE_componentWillReceiveProps!="function"&&typeof a.componentWillReceiveProps!="function"||(l!==f||h!==c)&&Cg(t,a,n,c),Hn=!1,h=t.memoizedState,a.state=h,Ec(t,n,a,s);var w=t.memoizedState;l!==f||h!==w||Zt.current||Hn?(typeof x=="function"&&(Mf(t,r,x,n),w=t.memoizedState),(u=Hn||jg(t,r,u,n,h,w,c)||!1)?(d||typeof a.UNSAFE_componentWillUpdate!="function"&&typeof a.componentWillUpdate!="function"||(typeof a.componentWillUpdate=="function"&&a.componentWillUpdate(n,w,c),typeof a.UNSAFE_componentWillUpdate=="function"&&a.UNSAFE_componentWillUpdate(n,w,c)),typeof a.componentDidUpdate=="function"&&(t.flags|=4),typeof a.getSnapshotBeforeUpdate=="function"&&(t.flags|=1024)):(typeof a.componentDidUpdate!="function"||l===e.memoizedProps&&h===e.memoizedState||(t.flags|=4),typeof a.getSnapshotBeforeUpdate!="function"||l===e.memoizedProps&&h===e.memoizedState||(t.flags|=1024),t.memoizedProps=n,t.memoizedState=w),a.props=n,a.state=w,a.context=c,n=u):(typeof a.componentDidUpdate!="function"||l===e.memoizedProps&&h===e.memoizedState||(t.flags|=4),typeof a.getSnapshotBeforeUpdate!="function"||l===e.memoizedProps&&h===e.memoizedState||(t.flags|=1024),n=!1)}return Ff(e,t,r,n,i,s)}function Ff(e,t,r,n,s,i){Gb(e,t);var a=(t.flags&128)!==0;if(!n&&!a)return s&&gg(t,r,!1),_n(e,t,i);n=t.stateNode,MP.current=t;var l=a&&typeof r.getDerivedStateFromError!="function"?null:n.render();return t.flags|=1,e!==null&&a?(t.child=go(t,e.child,null,i),t.child=go(t,null,l,i)):Ft(e,t,l,i),t.memoizedState=n.state,s&&gg(t,r,!0),t.child}function Kb(e){var t=e.stateNode;t.pendingContext?pg(e,t.pendingContext,t.pendingContext!==t.context):t.context&&pg(e,t.context,!1),mh(e,t.containerInfo)}function Ag(e,t,r,n,s){return po(),ah(s),t.flags|=256,Ft(e,t,r,n),t.child}var Vf={dehydrated:null,treeContext:null,retryLane:0};function $f(e){return{baseLanes:e,cachePool:null,transitions:null}}function Zb(e,t,r){var n=t.pendingProps,s=Ke.current,i=!1,a=(t.flags&128)!==0,l;if((l=a)||(l=e!==null&&e.memoizedState===null?!1:(s&2)!==0),l?(i=!0,t.flags&=-129):(e===null||e.memoizedState!==null)&&(s|=1),$e(Ke,s&1),e===null)return Af(t),e=t.memoizedState,e!==null&&(e=e.dehydrated,e!==null)?(t.mode&1?e.data==="$!"?t.lanes=8:t.lanes=1073741824:t.lanes=1,null):(a=n.children,e=n.fallback,i?(n=t.mode,i=t.child,a={mode:"hidden",children:a},!(n&1)&&i!==null?(i.childLanes=0,i.pendingProps=a):i=_u(a,n,0,null),e=Gs(e,n,r,null),i.return=t,e.return=t,i.sibling=e,t.child=i,t.child.memoizedState=$f(r),t.memoizedState=Vf,e):bh(t,a));if(s=e.memoizedState,s!==null&&(l=s.dehydrated,l!==null))return DP(e,t,a,n,l,s,r);if(i){i=n.fallback,a=t.mode,s=e.child,l=s.sibling;var c={mode:"hidden",children:n.children};return!(a&1)&&t.child!==s?(n=t.child,n.childLanes=0,n.pendingProps=c,t.deletions=null):(n=ds(s,c),n.subtreeFlags=s.subtreeFlags&14680064),l!==null?i=ds(l,i):(i=Gs(i,a,r,null),i.flags|=2),i.return=t,n.return=t,n.sibling=i,t.child=n,n=i,i=t.child,a=e.child.memoizedState,a=a===null?$f(r):{baseLanes:a.baseLanes|r,cachePool:null,transitions:a.transitions},i.memoizedState=a,i.childLanes=e.childLanes&~r,t.memoizedState=Vf,n}return i=e.child,e=i.sibling,n=ds(i,{mode:"visible",children:n.children}),!(t.mode&1)&&(n.lanes=r),n.return=t,n.sibling=null,e!==null&&(r=t.deletions,r===null?(t.deletions=[e],t.flags|=16):r.push(e)),t.child=n,t.memoizedState=null,n}function bh(e,t){return t=_u({mode:"visible",children:t},e.mode,0,null),t.return=e,e.child=t}function Fl(e,t,r,n){return n!==null&&ah(n),go(t,e.child,null,r),e=bh(t,t.pendingProps.children),e.flags|=2,t.memoizedState=null,e}function DP(e,t,r,n,s,i,a){if(r)return t.flags&256?(t.flags&=-257,n=Ad(Error($(422))),Fl(e,t,a,n)):t.memoizedState!==null?(t.child=e.child,t.flags|=128,null):(i=n.fallback,s=t.mode,n=_u({mode:"visible",children:n.children},s,0,null),i=Gs(i,s,a,null),i.flags|=2,n.return=t,i.return=t,n.sibling=i,t.child=n,t.mode&1&&go(t,e.child,null,a),t.child.memoizedState=$f(a),t.memoizedState=Vf,i);if(!(t.mode&1))return Fl(e,t,a,null);if(s.data==="$!"){if(n=s.nextSibling&&s.nextSibling.dataset,n)var l=n.dgst;return n=l,i=Error($(419)),n=Ad(i,n,void 0),Fl(e,t,a,n)}if(l=(a&e.childLanes)!==0,Kt||l){if(n=gt,n!==null){switch(a&-a){case 4:s=2;break;case 16:s=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:s=32;break;case 536870912:s=268435456;break;default:s=0}s=s&(n.suspendedLanes|a)?0:s,s!==0&&s!==i.retryLane&&(i.retryLane=s,Cn(e,s),Dr(n,e,s,-1))}return kh(),n=Ad(Error($(421))),Fl(e,t,a,n)}return s.data==="$?"?(t.flags|=128,t.child=e.child,t=GP.bind(null,e),s._reactRetry=t,null):(e=i.treeContext,ir=as(s.nextSibling),or=t,He=!0,Er=null,e!==null&&(pr[gr++]=xn,pr[gr++]=wn,pr[gr++]=Ys,xn=e.id,wn=e.overflow,Ys=t),t=bh(t,n.children),t.flags|=4096,t)}function Ig(e,t,r){e.lanes|=t;var n=e.alternate;n!==null&&(n.lanes|=t),If(e.return,t,r)}function Id(e,t,r,n,s){var i=e.memoizedState;i===null?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:n,tail:r,tailMode:s}:(i.isBackwards=t,i.rendering=null,i.renderingStartTime=0,i.last=n,i.tail=r,i.tailMode=s)}function Xb(e,t,r){var n=t.pendingProps,s=n.revealOrder,i=n.tail;if(Ft(e,t,n.children,r),n=Ke.current,n&2)n=n&1|2,t.flags|=128;else{if(e!==null&&e.flags&128)e:for(e=t.child;e!==null;){if(e.tag===13)e.memoizedState!==null&&Ig(e,r,t);else if(e.tag===19)Ig(e,r,t);else if(e.child!==null){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;e.sibling===null;){if(e.return===null||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}n&=1}if($e(Ke,n),!(t.mode&1))t.memoizedState=null;else switch(s){case"forwards":for(r=t.child,s=null;r!==null;)e=r.alternate,e!==null&&Pc(e)===null&&(s=r),r=r.sibling;r=s,r===null?(s=t.child,t.child=null):(s=r.sibling,r.sibling=null),Id(t,!1,s,r,i);break;case"backwards":for(r=null,s=t.child,t.child=null;s!==null;){if(e=s.alternate,e!==null&&Pc(e)===null){t.child=s;break}e=s.sibling,s.sibling=r,r=s,s=e}Id(t,!0,r,null,i);break;case"together":Id(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function sc(e,t){!(t.mode&1)&&e!==null&&(e.alternate=null,t.alternate=null,t.flags|=2)}function _n(e,t,r){if(e!==null&&(t.dependencies=e.dependencies),ei|=t.lanes,!(r&t.childLanes))return null;if(e!==null&&t.child!==e.child)throw Error($(153));if(t.child!==null){for(e=t.child,r=ds(e,e.pendingProps),t.child=r,r.return=t;e.sibling!==null;)e=e.sibling,r=r.sibling=ds(e,e.pendingProps),r.return=t;r.sibling=null}return t.child}function OP(e,t,r){switch(t.tag){case 3:Kb(t),po();break;case 5:Sb(t);break;case 1:Xt(t.type)&&jc(t);break;case 4:mh(t,t.stateNode.containerInfo);break;case 10:var n=t.type._context,s=t.memoizedProps.value;$e(kc,n._currentValue),n._currentValue=s;break;case 13:if(n=t.memoizedState,n!==null)return n.dehydrated!==null?($e(Ke,Ke.current&1),t.flags|=128,null):r&t.child.childLanes?Zb(e,t,r):($e(Ke,Ke.current&1),e=_n(e,t,r),e!==null?e.sibling:null);$e(Ke,Ke.current&1);break;case 19:if(n=(r&t.childLanes)!==0,e.flags&128){if(n)return Xb(e,t,r);t.flags|=128}if(s=t.memoizedState,s!==null&&(s.rendering=null,s.tail=null,s.lastEffect=null),$e(Ke,Ke.current),n)break;return null;case 22:case 23:return t.lanes=0,Qb(e,t,r)}return _n(e,t,r)}var Yb,zf,Jb,eN;Yb=function(e,t){for(var r=t.child;r!==null;){if(r.tag===5||r.tag===6)e.appendChild(r.stateNode);else if(r.tag!==4&&r.child!==null){r.child.return=r,r=r.child;continue}if(r===t)break;for(;r.sibling===null;){if(r.return===null||r.return===t)return;r=r.return}r.sibling.return=r.return,r=r.sibling}};zf=function(){};Jb=function(e,t,r,n){var s=e.memoizedProps;if(s!==n){e=t.stateNode,Os(en.current);var i=null;switch(r){case"input":s=cf(e,s),n=cf(e,n),i=[];break;case"select":s=Ye({},s,{value:void 0}),n=Ye({},n,{value:void 0}),i=[];break;case"textarea":s=ff(e,s),n=ff(e,n),i=[];break;default:typeof s.onClick!="function"&&typeof n.onClick=="function"&&(e.onclick=Nc)}hf(r,n);var a;r=null;for(u in s)if(!n.hasOwnProperty(u)&&s.hasOwnProperty(u)&&s[u]!=null)if(u==="style"){var l=s[u];for(a in l)l.hasOwnProperty(a)&&(r||(r={}),r[a]="")}else u!=="dangerouslySetInnerHTML"&&u!=="children"&&u!=="suppressContentEditableWarning"&&u!=="suppressHydrationWarning"&&u!=="autoFocus"&&(va.hasOwnProperty(u)?i||(i=[]):(i=i||[]).push(u,null));for(u in n){var c=n[u];if(l=s!=null?s[u]:void 0,n.hasOwnProperty(u)&&c!==l&&(c!=null||l!=null))if(u==="style")if(l){for(a in l)!l.hasOwnProperty(a)||c&&c.hasOwnProperty(a)||(r||(r={}),r[a]="");for(a in c)c.hasOwnProperty(a)&&l[a]!==c[a]&&(r||(r={}),r[a]=c[a])}else r||(i||(i=[]),i.push(u,r)),r=c;else u==="dangerouslySetInnerHTML"?(c=c?c.__html:void 0,l=l?l.__html:void 0,c!=null&&l!==c&&(i=i||[]).push(u,c)):u==="children"?typeof c!="string"&&typeof c!="number"||(i=i||[]).push(u,""+c):u!=="suppressContentEditableWarning"&&u!=="suppressHydrationWarning"&&(va.hasOwnProperty(u)?(c!=null&&u==="onScroll"&&Ue("scroll",e),i||l===c||(i=[])):(i=i||[]).push(u,c))}r&&(i=i||[]).push("style",r);var u=i;(t.updateQueue=u)&&(t.flags|=4)}};eN=function(e,t,r,n){r!==n&&(t.flags|=4)};function Wo(e,t){if(!He)switch(e.tailMode){case"hidden":t=e.tail;for(var r=null;t!==null;)t.alternate!==null&&(r=t),t=t.sibling;r===null?e.tail=null:r.sibling=null;break;case"collapsed":r=e.tail;for(var n=null;r!==null;)r.alternate!==null&&(n=r),r=r.sibling;n===null?t||e.tail===null?e.tail=null:e.tail.sibling=null:n.sibling=null}}function Tt(e){var t=e.alternate!==null&&e.alternate.child===e.child,r=0,n=0;if(t)for(var s=e.child;s!==null;)r|=s.lanes|s.childLanes,n|=s.subtreeFlags&14680064,n|=s.flags&14680064,s.return=e,s=s.sibling;else for(s=e.child;s!==null;)r|=s.lanes|s.childLanes,n|=s.subtreeFlags,n|=s.flags,s.return=e,s=s.sibling;return e.subtreeFlags|=n,e.childLanes=r,t}function LP(e,t,r){var n=t.pendingProps;switch(oh(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Tt(t),null;case 1:return Xt(t.type)&&Sc(),Tt(t),null;case 3:return n=t.stateNode,vo(),We(Zt),We(At),ph(),n.pendingContext&&(n.context=n.pendingContext,n.pendingContext=null),(e===null||e.child===null)&&(Ol(t)?t.flags|=4:e===null||e.memoizedState.isDehydrated&&!(t.flags&256)||(t.flags|=1024,Er!==null&&(Kf(Er),Er=null))),zf(e,t),Tt(t),null;case 5:hh(t);var s=Os(Ea.current);if(r=t.type,e!==null&&t.stateNode!=null)Jb(e,t,r,n,s),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!n){if(t.stateNode===null)throw Error($(166));return Tt(t),null}if(e=Os(en.current),Ol(t)){n=t.stateNode,r=t.type;var i=t.memoizedProps;switch(n[Zr]=t,n[ka]=i,e=(t.mode&1)!==0,r){case"dialog":Ue("cancel",n),Ue("close",n);break;case"iframe":case"object":case"embed":Ue("load",n);break;case"video":case"audio":for(s=0;s<Jo.length;s++)Ue(Jo[s],n);break;case"source":Ue("error",n);break;case"img":case"image":case"link":Ue("error",n),Ue("load",n);break;case"details":Ue("toggle",n);break;case"input":Bp(n,i),Ue("invalid",n);break;case"select":n._wrapperState={wasMultiple:!!i.multiple},Ue("invalid",n);break;case"textarea":Wp(n,i),Ue("invalid",n)}hf(r,i),s=null;for(var a in i)if(i.hasOwnProperty(a)){var l=i[a];a==="children"?typeof l=="string"?n.textContent!==l&&(i.suppressHydrationWarning!==!0&&Dl(n.textContent,l,e),s=["children",l]):typeof l=="number"&&n.textContent!==""+l&&(i.suppressHydrationWarning!==!0&&Dl(n.textContent,l,e),s=["children",""+l]):va.hasOwnProperty(a)&&l!=null&&a==="onScroll"&&Ue("scroll",n)}switch(r){case"input":kl(n),Up(n,i,!0);break;case"textarea":kl(n),Hp(n);break;case"select":case"option":break;default:typeof i.onClick=="function"&&(n.onclick=Nc)}n=s,t.updateQueue=n,n!==null&&(t.flags|=4)}else{a=s.nodeType===9?s:s.ownerDocument,e==="http://www.w3.org/1999/xhtml"&&(e=T1(r)),e==="http://www.w3.org/1999/xhtml"?r==="script"?(e=a.createElement("div"),e.innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):typeof n.is=="string"?e=a.createElement(r,{is:n.is}):(e=a.createElement(r),r==="select"&&(a=e,n.multiple?a.multiple=!0:n.size&&(a.size=n.size))):e=a.createElementNS(e,r),e[Zr]=t,e[ka]=n,Yb(e,t,!1,!1),t.stateNode=e;e:{switch(a=pf(r,n),r){case"dialog":Ue("cancel",e),Ue("close",e),s=n;break;case"iframe":case"object":case"embed":Ue("load",e),s=n;break;case"video":case"audio":for(s=0;s<Jo.length;s++)Ue(Jo[s],e);s=n;break;case"source":Ue("error",e),s=n;break;case"img":case"image":case"link":Ue("error",e),Ue("load",e),s=n;break;case"details":Ue("toggle",e),s=n;break;case"input":Bp(e,n),s=cf(e,n),Ue("invalid",e);break;case"option":s=n;break;case"select":e._wrapperState={wasMultiple:!!n.multiple},s=Ye({},n,{value:void 0}),Ue("invalid",e);break;case"textarea":Wp(e,n),s=ff(e,n),Ue("invalid",e);break;default:s=n}hf(r,s),l=s;for(i in l)if(l.hasOwnProperty(i)){var c=l[i];i==="style"?R1(e,c):i==="dangerouslySetInnerHTML"?(c=c?c.__html:void 0,c!=null&&E1(e,c)):i==="children"?typeof c=="string"?(r!=="textarea"||c!=="")&&ya(e,c):typeof c=="number"&&ya(e,""+c):i!=="suppressContentEditableWarning"&&i!=="suppressHydrationWarning"&&i!=="autoFocus"&&(va.hasOwnProperty(i)?c!=null&&i==="onScroll"&&Ue("scroll",e):c!=null&&Hm(e,i,c,a))}switch(r){case"input":kl(e),Up(e,n,!1);break;case"textarea":kl(e),Hp(e);break;case"option":n.value!=null&&e.setAttribute("value",""+fs(n.value));break;case"select":e.multiple=!!n.multiple,i=n.value,i!=null?$i(e,!!n.multiple,i,!1):n.defaultValue!=null&&$i(e,!!n.multiple,n.defaultValue,!0);break;default:typeof s.onClick=="function"&&(e.onclick=Nc)}switch(r){case"button":case"input":case"select":case"textarea":n=!!n.autoFocus;break e;case"img":n=!0;break e;default:n=!1}}n&&(t.flags|=4)}t.ref!==null&&(t.flags|=512,t.flags|=2097152)}return Tt(t),null;case 6:if(e&&t.stateNode!=null)eN(e,t,e.memoizedProps,n);else{if(typeof n!="string"&&t.stateNode===null)throw Error($(166));if(r=Os(Ea.current),Os(en.current),Ol(t)){if(n=t.stateNode,r=t.memoizedProps,n[Zr]=t,(i=n.nodeValue!==r)&&(e=or,e!==null))switch(e.tag){case 3:Dl(n.nodeValue,r,(e.mode&1)!==0);break;case 5:e.memoizedProps.suppressHydrationWarning!==!0&&Dl(n.nodeValue,r,(e.mode&1)!==0)}i&&(t.flags|=4)}else n=(r.nodeType===9?r:r.ownerDocument).createTextNode(n),n[Zr]=t,t.stateNode=n}return Tt(t),null;case 13:if(We(Ke),n=t.memoizedState,e===null||e.memoizedState!==null&&e.memoizedState.dehydrated!==null){if(He&&ir!==null&&t.mode&1&&!(t.flags&128))yb(),po(),t.flags|=98560,i=!1;else if(i=Ol(t),n!==null&&n.dehydrated!==null){if(e===null){if(!i)throw Error($(318));if(i=t.memoizedState,i=i!==null?i.dehydrated:null,!i)throw Error($(317));i[Zr]=t}else po(),!(t.flags&128)&&(t.memoizedState=null),t.flags|=4;Tt(t),i=!1}else Er!==null&&(Kf(Er),Er=null),i=!0;if(!i)return t.flags&65536?t:null}return t.flags&128?(t.lanes=r,t):(n=n!==null,n!==(e!==null&&e.memoizedState!==null)&&n&&(t.child.flags|=8192,t.mode&1&&(e===null||Ke.current&1?ft===0&&(ft=3):kh())),t.updateQueue!==null&&(t.flags|=4),Tt(t),null);case 4:return vo(),zf(e,t),e===null&&Ca(t.stateNode.containerInfo),Tt(t),null;case 10:return uh(t.type._context),Tt(t),null;case 17:return Xt(t.type)&&Sc(),Tt(t),null;case 19:if(We(Ke),i=t.memoizedState,i===null)return Tt(t),null;if(n=(t.flags&128)!==0,a=i.rendering,a===null)if(n)Wo(i,!1);else{if(ft!==0||e!==null&&e.flags&128)for(e=t.child;e!==null;){if(a=Pc(e),a!==null){for(t.flags|=128,Wo(i,!1),n=a.updateQueue,n!==null&&(t.updateQueue=n,t.flags|=4),t.subtreeFlags=0,n=r,r=t.child;r!==null;)i=r,e=n,i.flags&=14680066,a=i.alternate,a===null?(i.childLanes=0,i.lanes=e,i.child=null,i.subtreeFlags=0,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null,i.stateNode=null):(i.childLanes=a.childLanes,i.lanes=a.lanes,i.child=a.child,i.subtreeFlags=0,i.deletions=null,i.memoizedProps=a.memoizedProps,i.memoizedState=a.memoizedState,i.updateQueue=a.updateQueue,i.type=a.type,e=a.dependencies,i.dependencies=e===null?null:{lanes:e.lanes,firstContext:e.firstContext}),r=r.sibling;return $e(Ke,Ke.current&1|2),t.child}e=e.sibling}i.tail!==null&&it()>xo&&(t.flags|=128,n=!0,Wo(i,!1),t.lanes=4194304)}else{if(!n)if(e=Pc(a),e!==null){if(t.flags|=128,n=!0,r=e.updateQueue,r!==null&&(t.updateQueue=r,t.flags|=4),Wo(i,!0),i.tail===null&&i.tailMode==="hidden"&&!a.alternate&&!He)return Tt(t),null}else 2*it()-i.renderingStartTime>xo&&r!==1073741824&&(t.flags|=128,n=!0,Wo(i,!1),t.lanes=4194304);i.isBackwards?(a.sibling=t.child,t.child=a):(r=i.last,r!==null?r.sibling=a:t.child=a,i.last=a)}return i.tail!==null?(t=i.tail,i.rendering=t,i.tail=t.sibling,i.renderingStartTime=it(),t.sibling=null,r=Ke.current,$e(Ke,n?r&1|2:r&1),t):(Tt(t),null);case 22:case 23:return _h(),n=t.memoizedState!==null,e!==null&&e.memoizedState!==null!==n&&(t.flags|=8192),n&&t.mode&1?rr&1073741824&&(Tt(t),t.subtreeFlags&6&&(t.flags|=8192)):Tt(t),null;case 24:return null;case 25:return null}throw Error($(156,t.tag))}function FP(e,t){switch(oh(t),t.tag){case 1:return Xt(t.type)&&Sc(),e=t.flags,e&65536?(t.flags=e&-65537|128,t):null;case 3:return vo(),We(Zt),We(At),ph(),e=t.flags,e&65536&&!(e&128)?(t.flags=e&-65537|128,t):null;case 5:return hh(t),null;case 13:if(We(Ke),e=t.memoizedState,e!==null&&e.dehydrated!==null){if(t.alternate===null)throw Error($(340));po()}return e=t.flags,e&65536?(t.flags=e&-65537|128,t):null;case 19:return We(Ke),null;case 4:return vo(),null;case 10:return uh(t.type._context),null;case 22:case 23:return _h(),null;case 24:return null;default:return null}}var Vl=!1,Rt=!1,VP=typeof WeakSet=="function"?WeakSet:Set,Y=null;function Di(e,t){var r=e.ref;if(r!==null)if(typeof r=="function")try{r(null)}catch(n){tt(e,t,n)}else r.current=null}function Bf(e,t,r){try{r()}catch(n){tt(e,t,n)}}var Mg=!1;function $P(e,t){if(Cf=xc,e=ib(),sh(e)){if("selectionStart"in e)var r={start:e.selectionStart,end:e.selectionEnd};else e:{r=(r=e.ownerDocument)&&r.defaultView||window;var n=r.getSelection&&r.getSelection();if(n&&n.rangeCount!==0){r=n.anchorNode;var s=n.anchorOffset,i=n.focusNode;n=n.focusOffset;try{r.nodeType,i.nodeType}catch{r=null;break e}var a=0,l=-1,c=-1,u=0,d=0,f=e,h=null;t:for(;;){for(var x;f!==r||s!==0&&f.nodeType!==3||(l=a+s),f!==i||n!==0&&f.nodeType!==3||(c=a+n),f.nodeType===3&&(a+=f.nodeValue.length),(x=f.firstChild)!==null;)h=f,f=x;for(;;){if(f===e)break t;if(h===r&&++u===s&&(l=a),h===i&&++d===n&&(c=a),(x=f.nextSibling)!==null)break;f=h,h=f.parentNode}f=x}r=l===-1||c===-1?null:{start:l,end:c}}else r=null}r=r||{start:0,end:0}}else r=null;for(_f={focusedElem:e,selectionRange:r},xc=!1,Y=t;Y!==null;)if(t=Y,e=t.child,(t.subtreeFlags&1028)!==0&&e!==null)e.return=t,Y=e;else for(;Y!==null;){t=Y;try{var w=t.alternate;if(t.flags&1024)switch(t.tag){case 0:case 11:case 15:break;case 1:if(w!==null){var g=w.memoizedProps,b=w.memoizedState,v=t.stateNode,p=v.getSnapshotBeforeUpdate(t.elementType===t.type?g:_r(t.type,g),b);v.__reactInternalSnapshotBeforeUpdate=p}break;case 3:var y=t.stateNode.containerInfo;y.nodeType===1?y.textContent="":y.nodeType===9&&y.documentElement&&y.removeChild(y.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error($(163))}}catch(N){tt(t,t.return,N)}if(e=t.sibling,e!==null){e.return=t.return,Y=e;break}Y=t.return}return w=Mg,Mg=!1,w}function da(e,t,r){var n=t.updateQueue;if(n=n!==null?n.lastEffect:null,n!==null){var s=n=n.next;do{if((s.tag&e)===e){var i=s.destroy;s.destroy=void 0,i!==void 0&&Bf(t,r,i)}s=s.next}while(s!==n)}}function ju(e,t){if(t=t.updateQueue,t=t!==null?t.lastEffect:null,t!==null){var r=t=t.next;do{if((r.tag&e)===e){var n=r.create;r.destroy=n()}r=r.next}while(r!==t)}}function Uf(e){var t=e.ref;if(t!==null){var r=e.stateNode;switch(e.tag){case 5:e=r;break;default:e=r}typeof t=="function"?t(e):t.current=e}}function tN(e){var t=e.alternate;t!==null&&(e.alternate=null,tN(t)),e.child=null,e.deletions=null,e.sibling=null,e.tag===5&&(t=e.stateNode,t!==null&&(delete t[Zr],delete t[ka],delete t[Ef],delete t[NP],delete t[SP])),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function rN(e){return e.tag===5||e.tag===3||e.tag===4}function Dg(e){e:for(;;){for(;e.sibling===null;){if(e.return===null||rN(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;e.tag!==5&&e.tag!==6&&e.tag!==18;){if(e.flags&2||e.child===null||e.tag===4)continue e;e.child.return=e,e=e.child}if(!(e.flags&2))return e.stateNode}}function Wf(e,t,r){var n=e.tag;if(n===5||n===6)e=e.stateNode,t?r.nodeType===8?r.parentNode.insertBefore(e,t):r.insertBefore(e,t):(r.nodeType===8?(t=r.parentNode,t.insertBefore(e,r)):(t=r,t.appendChild(e)),r=r._reactRootContainer,r!=null||t.onclick!==null||(t.onclick=Nc));else if(n!==4&&(e=e.child,e!==null))for(Wf(e,t,r),e=e.sibling;e!==null;)Wf(e,t,r),e=e.sibling}function Hf(e,t,r){var n=e.tag;if(n===5||n===6)e=e.stateNode,t?r.insertBefore(e,t):r.appendChild(e);else if(n!==4&&(e=e.child,e!==null))for(Hf(e,t,r),e=e.sibling;e!==null;)Hf(e,t,r),e=e.sibling}var xt=null,Tr=!1;function Dn(e,t,r){for(r=r.child;r!==null;)nN(e,t,r),r=r.sibling}function nN(e,t,r){if(Jr&&typeof Jr.onCommitFiberUnmount=="function")try{Jr.onCommitFiberUnmount(gu,r)}catch{}switch(r.tag){case 5:Rt||Di(r,t);case 6:var n=xt,s=Tr;xt=null,Dn(e,t,r),xt=n,Tr=s,xt!==null&&(Tr?(e=xt,r=r.stateNode,e.nodeType===8?e.parentNode.removeChild(r):e.removeChild(r)):xt.removeChild(r.stateNode));break;case 18:xt!==null&&(Tr?(e=xt,r=r.stateNode,e.nodeType===8?_d(e.parentNode,r):e.nodeType===1&&_d(e,r),Na(e)):_d(xt,r.stateNode));break;case 4:n=xt,s=Tr,xt=r.stateNode.containerInfo,Tr=!0,Dn(e,t,r),xt=n,Tr=s;break;case 0:case 11:case 14:case 15:if(!Rt&&(n=r.updateQueue,n!==null&&(n=n.lastEffect,n!==null))){s=n=n.next;do{var i=s,a=i.destroy;i=i.tag,a!==void 0&&(i&2||i&4)&&Bf(r,t,a),s=s.next}while(s!==n)}Dn(e,t,r);break;case 1:if(!Rt&&(Di(r,t),n=r.stateNode,typeof n.componentWillUnmount=="function"))try{n.props=r.memoizedProps,n.state=r.memoizedState,n.componentWillUnmount()}catch(l){tt(r,t,l)}Dn(e,t,r);break;case 21:Dn(e,t,r);break;case 22:r.mode&1?(Rt=(n=Rt)||r.memoizedState!==null,Dn(e,t,r),Rt=n):Dn(e,t,r);break;default:Dn(e,t,r)}}function Og(e){var t=e.updateQueue;if(t!==null){e.updateQueue=null;var r=e.stateNode;r===null&&(r=e.stateNode=new VP),t.forEach(function(n){var s=KP.bind(null,e,n);r.has(n)||(r.add(n),n.then(s,s))})}}function jr(e,t){var r=t.deletions;if(r!==null)for(var n=0;n<r.length;n++){var s=r[n];try{var i=e,a=t,l=a;e:for(;l!==null;){switch(l.tag){case 5:xt=l.stateNode,Tr=!1;break e;case 3:xt=l.stateNode.containerInfo,Tr=!0;break e;case 4:xt=l.stateNode.containerInfo,Tr=!0;break e}l=l.return}if(xt===null)throw Error($(160));nN(i,a,s),xt=null,Tr=!1;var c=s.alternate;c!==null&&(c.return=null),s.return=null}catch(u){tt(s,t,u)}}if(t.subtreeFlags&12854)for(t=t.child;t!==null;)sN(t,e),t=t.sibling}function sN(e,t){var r=e.alternate,n=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(jr(t,e),Wr(e),n&4){try{da(3,e,e.return),ju(3,e)}catch(g){tt(e,e.return,g)}try{da(5,e,e.return)}catch(g){tt(e,e.return,g)}}break;case 1:jr(t,e),Wr(e),n&512&&r!==null&&Di(r,r.return);break;case 5:if(jr(t,e),Wr(e),n&512&&r!==null&&Di(r,r.return),e.flags&32){var s=e.stateNode;try{ya(s,"")}catch(g){tt(e,e.return,g)}}if(n&4&&(s=e.stateNode,s!=null)){var i=e.memoizedProps,a=r!==null?r.memoizedProps:i,l=e.type,c=e.updateQueue;if(e.updateQueue=null,c!==null)try{l==="input"&&i.type==="radio"&&i.name!=null&&_1(s,i),pf(l,a);var u=pf(l,i);for(a=0;a<c.length;a+=2){var d=c[a],f=c[a+1];d==="style"?R1(s,f):d==="dangerouslySetInnerHTML"?E1(s,f):d==="children"?ya(s,f):Hm(s,d,f,u)}switch(l){case"input":uf(s,i);break;case"textarea":k1(s,i);break;case"select":var h=s._wrapperState.wasMultiple;s._wrapperState.wasMultiple=!!i.multiple;var x=i.value;x!=null?$i(s,!!i.multiple,x,!1):h!==!!i.multiple&&(i.defaultValue!=null?$i(s,!!i.multiple,i.defaultValue,!0):$i(s,!!i.multiple,i.multiple?[]:"",!1))}s[ka]=i}catch(g){tt(e,e.return,g)}}break;case 6:if(jr(t,e),Wr(e),n&4){if(e.stateNode===null)throw Error($(162));s=e.stateNode,i=e.memoizedProps;try{s.nodeValue=i}catch(g){tt(e,e.return,g)}}break;case 3:if(jr(t,e),Wr(e),n&4&&r!==null&&r.memoizedState.isDehydrated)try{Na(t.containerInfo)}catch(g){tt(e,e.return,g)}break;case 4:jr(t,e),Wr(e);break;case 13:jr(t,e),Wr(e),s=e.child,s.flags&8192&&(i=s.memoizedState!==null,s.stateNode.isHidden=i,!i||s.alternate!==null&&s.alternate.memoizedState!==null||(jh=it())),n&4&&Og(e);break;case 22:if(d=r!==null&&r.memoizedState!==null,e.mode&1?(Rt=(u=Rt)||d,jr(t,e),Rt=u):jr(t,e),Wr(e),n&8192){if(u=e.memoizedState!==null,(e.stateNode.isHidden=u)&&!d&&e.mode&1)for(Y=e,d=e.child;d!==null;){for(f=Y=d;Y!==null;){switch(h=Y,x=h.child,h.tag){case 0:case 11:case 14:case 15:da(4,h,h.return);break;case 1:Di(h,h.return);var w=h.stateNode;if(typeof w.componentWillUnmount=="function"){n=h,r=h.return;try{t=n,w.props=t.memoizedProps,w.state=t.memoizedState,w.componentWillUnmount()}catch(g){tt(n,r,g)}}break;case 5:Di(h,h.return);break;case 22:if(h.memoizedState!==null){Fg(f);continue}}x!==null?(x.return=h,Y=x):Fg(f)}d=d.sibling}e:for(d=null,f=e;;){if(f.tag===5){if(d===null){d=f;try{s=f.stateNode,u?(i=s.style,typeof i.setProperty=="function"?i.setProperty("display","none","important"):i.display="none"):(l=f.stateNode,c=f.memoizedProps.style,a=c!=null&&c.hasOwnProperty("display")?c.display:null,l.style.display=P1("display",a))}catch(g){tt(e,e.return,g)}}}else if(f.tag===6){if(d===null)try{f.stateNode.nodeValue=u?"":f.memoizedProps}catch(g){tt(e,e.return,g)}}else if((f.tag!==22&&f.tag!==23||f.memoizedState===null||f===e)&&f.child!==null){f.child.return=f,f=f.child;continue}if(f===e)break e;for(;f.sibling===null;){if(f.return===null||f.return===e)break e;d===f&&(d=null),f=f.return}d===f&&(d=null),f.sibling.return=f.return,f=f.sibling}}break;case 19:jr(t,e),Wr(e),n&4&&Og(e);break;case 21:break;default:jr(t,e),Wr(e)}}function Wr(e){var t=e.flags;if(t&2){try{e:{for(var r=e.return;r!==null;){if(rN(r)){var n=r;break e}r=r.return}throw Error($(160))}switch(n.tag){case 5:var s=n.stateNode;n.flags&32&&(ya(s,""),n.flags&=-33);var i=Dg(e);Hf(e,i,s);break;case 3:case 4:var a=n.stateNode.containerInfo,l=Dg(e);Wf(e,l,a);break;default:throw Error($(161))}}catch(c){tt(e,e.return,c)}e.flags&=-3}t&4096&&(e.flags&=-4097)}function zP(e,t,r){Y=e,iN(e)}function iN(e,t,r){for(var n=(e.mode&1)!==0;Y!==null;){var s=Y,i=s.child;if(s.tag===22&&n){var a=s.memoizedState!==null||Vl;if(!a){var l=s.alternate,c=l!==null&&l.memoizedState!==null||Rt;l=Vl;var u=Rt;if(Vl=a,(Rt=c)&&!u)for(Y=s;Y!==null;)a=Y,c=a.child,a.tag===22&&a.memoizedState!==null?Vg(s):c!==null?(c.return=a,Y=c):Vg(s);for(;i!==null;)Y=i,iN(i),i=i.sibling;Y=s,Vl=l,Rt=u}Lg(e)}else s.subtreeFlags&8772&&i!==null?(i.return=s,Y=i):Lg(e)}}function Lg(e){for(;Y!==null;){var t=Y;if(t.flags&8772){var r=t.alternate;try{if(t.flags&8772)switch(t.tag){case 0:case 11:case 15:Rt||ju(5,t);break;case 1:var n=t.stateNode;if(t.flags&4&&!Rt)if(r===null)n.componentDidMount();else{var s=t.elementType===t.type?r.memoizedProps:_r(t.type,r.memoizedProps);n.componentDidUpdate(s,r.memoizedState,n.__reactInternalSnapshotBeforeUpdate)}var i=t.updateQueue;i!==null&&bg(t,i,n);break;case 3:var a=t.updateQueue;if(a!==null){if(r=null,t.child!==null)switch(t.child.tag){case 5:r=t.child.stateNode;break;case 1:r=t.child.stateNode}bg(t,a,r)}break;case 5:var l=t.stateNode;if(r===null&&t.flags&4){r=l;var c=t.memoizedProps;switch(t.type){case"button":case"input":case"select":case"textarea":c.autoFocus&&r.focus();break;case"img":c.src&&(r.src=c.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(t.memoizedState===null){var u=t.alternate;if(u!==null){var d=u.memoizedState;if(d!==null){var f=d.dehydrated;f!==null&&Na(f)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;default:throw Error($(163))}Rt||t.flags&512&&Uf(t)}catch(h){tt(t,t.return,h)}}if(t===e){Y=null;break}if(r=t.sibling,r!==null){r.return=t.return,Y=r;break}Y=t.return}}function Fg(e){for(;Y!==null;){var t=Y;if(t===e){Y=null;break}var r=t.sibling;if(r!==null){r.return=t.return,Y=r;break}Y=t.return}}function Vg(e){for(;Y!==null;){var t=Y;try{switch(t.tag){case 0:case 11:case 15:var r=t.return;try{ju(4,t)}catch(c){tt(t,r,c)}break;case 1:var n=t.stateNode;if(typeof n.componentDidMount=="function"){var s=t.return;try{n.componentDidMount()}catch(c){tt(t,s,c)}}var i=t.return;try{Uf(t)}catch(c){tt(t,i,c)}break;case 5:var a=t.return;try{Uf(t)}catch(c){tt(t,a,c)}}}catch(c){tt(t,t.return,c)}if(t===e){Y=null;break}var l=t.sibling;if(l!==null){l.return=t.return,Y=l;break}Y=t.return}}var BP=Math.ceil,Ic=Pn.ReactCurrentDispatcher,Nh=Pn.ReactCurrentOwner,xr=Pn.ReactCurrentBatchConfig,_e=0,gt=null,lt=null,Nt=0,rr=0,Oi=Ss(0),ft=0,Ia=null,ei=0,Cu=0,Sh=0,fa=null,Gt=null,jh=0,xo=1/0,hn=null,Mc=!1,qf=null,cs=null,$l=!1,ns=null,Dc=0,ma=0,Qf=null,ic=-1,oc=0;function zt(){return _e&6?it():ic!==-1?ic:ic=it()}function us(e){return e.mode&1?_e&2&&Nt!==0?Nt&-Nt:CP.transition!==null?(oc===0&&(oc=U1()),oc):(e=Oe,e!==0||(e=window.event,e=e===void 0?16:Z1(e.type)),e):1}function Dr(e,t,r,n){if(50<ma)throw ma=0,Qf=null,Error($(185));il(e,r,n),(!(_e&2)||e!==gt)&&(e===gt&&(!(_e&2)&&(Cu|=r),ft===4&&Qn(e,Nt)),Yt(e,n),r===1&&_e===0&&!(t.mode&1)&&(xo=it()+500,bu&&js()))}function Yt(e,t){var r=e.callbackNode;C2(e,t);var n=yc(e,e===gt?Nt:0);if(n===0)r!==null&&Gp(r),e.callbackNode=null,e.callbackPriority=0;else if(t=n&-n,e.callbackPriority!==t){if(r!=null&&Gp(r),t===1)e.tag===0?jP($g.bind(null,e)):pb($g.bind(null,e)),wP(function(){!(_e&6)&&js()}),r=null;else{switch(W1(n)){case 1:r=Zm;break;case 4:r=z1;break;case 16:r=vc;break;case 536870912:r=B1;break;default:r=vc}r=mN(r,oN.bind(null,e))}e.callbackPriority=t,e.callbackNode=r}}function oN(e,t){if(ic=-1,oc=0,_e&6)throw Error($(327));var r=e.callbackNode;if(Hi()&&e.callbackNode!==r)return null;var n=yc(e,e===gt?Nt:0);if(n===0)return null;if(n&30||n&e.expiredLanes||t)t=Oc(e,n);else{t=n;var s=_e;_e|=2;var i=lN();(gt!==e||Nt!==t)&&(hn=null,xo=it()+500,Qs(e,t));do try{HP();break}catch(l){aN(e,l)}while(!0);ch(),Ic.current=i,_e=s,lt!==null?t=0:(gt=null,Nt=0,t=ft)}if(t!==0){if(t===2&&(s=wf(e),s!==0&&(n=s,t=Gf(e,s))),t===1)throw r=Ia,Qs(e,0),Qn(e,n),Yt(e,it()),r;if(t===6)Qn(e,n);else{if(s=e.current.alternate,!(n&30)&&!UP(s)&&(t=Oc(e,n),t===2&&(i=wf(e),i!==0&&(n=i,t=Gf(e,i))),t===1))throw r=Ia,Qs(e,0),Qn(e,n),Yt(e,it()),r;switch(e.finishedWork=s,e.finishedLanes=n,t){case 0:case 1:throw Error($(345));case 2:As(e,Gt,hn);break;case 3:if(Qn(e,n),(n&130023424)===n&&(t=jh+500-it(),10<t)){if(yc(e,0)!==0)break;if(s=e.suspendedLanes,(s&n)!==n){zt(),e.pingedLanes|=e.suspendedLanes&s;break}e.timeoutHandle=Tf(As.bind(null,e,Gt,hn),t);break}As(e,Gt,hn);break;case 4:if(Qn(e,n),(n&4194240)===n)break;for(t=e.eventTimes,s=-1;0<n;){var a=31-Mr(n);i=1<<a,a=t[a],a>s&&(s=a),n&=~i}if(n=s,n=it()-n,n=(120>n?120:480>n?480:1080>n?1080:1920>n?1920:3e3>n?3e3:4320>n?4320:1960*BP(n/1960))-n,10<n){e.timeoutHandle=Tf(As.bind(null,e,Gt,hn),n);break}As(e,Gt,hn);break;case 5:As(e,Gt,hn);break;default:throw Error($(329))}}}return Yt(e,it()),e.callbackNode===r?oN.bind(null,e):null}function Gf(e,t){var r=fa;return e.current.memoizedState.isDehydrated&&(Qs(e,t).flags|=256),e=Oc(e,t),e!==2&&(t=Gt,Gt=r,t!==null&&Kf(t)),e}function Kf(e){Gt===null?Gt=e:Gt.push.apply(Gt,e)}function UP(e){for(var t=e;;){if(t.flags&16384){var r=t.updateQueue;if(r!==null&&(r=r.stores,r!==null))for(var n=0;n<r.length;n++){var s=r[n],i=s.getSnapshot;s=s.value;try{if(!Fr(i(),s))return!1}catch{return!1}}}if(r=t.child,t.subtreeFlags&16384&&r!==null)r.return=t,t=r;else{if(t===e)break;for(;t.sibling===null;){if(t.return===null||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}function Qn(e,t){for(t&=~Sh,t&=~Cu,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var r=31-Mr(t),n=1<<r;e[r]=-1,t&=~n}}function $g(e){if(_e&6)throw Error($(327));Hi();var t=yc(e,0);if(!(t&1))return Yt(e,it()),null;var r=Oc(e,t);if(e.tag!==0&&r===2){var n=wf(e);n!==0&&(t=n,r=Gf(e,n))}if(r===1)throw r=Ia,Qs(e,0),Qn(e,t),Yt(e,it()),r;if(r===6)throw Error($(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,As(e,Gt,hn),Yt(e,it()),null}function Ch(e,t){var r=_e;_e|=1;try{return e(t)}finally{_e=r,_e===0&&(xo=it()+500,bu&&js())}}function ti(e){ns!==null&&ns.tag===0&&!(_e&6)&&Hi();var t=_e;_e|=1;var r=xr.transition,n=Oe;try{if(xr.transition=null,Oe=1,e)return e()}finally{Oe=n,xr.transition=r,_e=t,!(_e&6)&&js()}}function _h(){rr=Oi.current,We(Oi)}function Qs(e,t){e.finishedWork=null,e.finishedLanes=0;var r=e.timeoutHandle;if(r!==-1&&(e.timeoutHandle=-1,xP(r)),lt!==null)for(r=lt.return;r!==null;){var n=r;switch(oh(n),n.tag){case 1:n=n.type.childContextTypes,n!=null&&Sc();break;case 3:vo(),We(Zt),We(At),ph();break;case 5:hh(n);break;case 4:vo();break;case 13:We(Ke);break;case 19:We(Ke);break;case 10:uh(n.type._context);break;case 22:case 23:_h()}r=r.return}if(gt=e,lt=e=ds(e.current,null),Nt=rr=t,ft=0,Ia=null,Sh=Cu=ei=0,Gt=fa=null,Ds!==null){for(t=0;t<Ds.length;t++)if(r=Ds[t],n=r.interleaved,n!==null){r.interleaved=null;var s=n.next,i=r.pending;if(i!==null){var a=i.next;i.next=s,n.next=a}r.pending=n}Ds=null}return e}function aN(e,t){do{var r=lt;try{if(ch(),rc.current=Ac,Rc){for(var n=Xe.memoizedState;n!==null;){var s=n.queue;s!==null&&(s.pending=null),n=n.next}Rc=!1}if(Js=0,pt=dt=Xe=null,ua=!1,Pa=0,Nh.current=null,r===null||r.return===null){ft=1,Ia=t,lt=null;break}e:{var i=e,a=r.return,l=r,c=t;if(t=Nt,l.flags|=32768,c!==null&&typeof c=="object"&&typeof c.then=="function"){var u=c,d=l,f=d.tag;if(!(d.mode&1)&&(f===0||f===11||f===15)){var h=d.alternate;h?(d.updateQueue=h.updateQueue,d.memoizedState=h.memoizedState,d.lanes=h.lanes):(d.updateQueue=null,d.memoizedState=null)}var x=kg(a);if(x!==null){x.flags&=-257,Tg(x,a,l,i,t),x.mode&1&&_g(i,u,t),t=x,c=u;var w=t.updateQueue;if(w===null){var g=new Set;g.add(c),t.updateQueue=g}else w.add(c);break e}else{if(!(t&1)){_g(i,u,t),kh();break e}c=Error($(426))}}else if(He&&l.mode&1){var b=kg(a);if(b!==null){!(b.flags&65536)&&(b.flags|=256),Tg(b,a,l,i,t),ah(yo(c,l));break e}}i=c=yo(c,l),ft!==4&&(ft=2),fa===null?fa=[i]:fa.push(i),i=a;do{switch(i.tag){case 3:i.flags|=65536,t&=-t,i.lanes|=t;var v=Wb(i,c,t);wg(i,v);break e;case 1:l=c;var p=i.type,y=i.stateNode;if(!(i.flags&128)&&(typeof p.getDerivedStateFromError=="function"||y!==null&&typeof y.componentDidCatch=="function"&&(cs===null||!cs.has(y)))){i.flags|=65536,t&=-t,i.lanes|=t;var N=Hb(i,l,t);wg(i,N);break e}}i=i.return}while(i!==null)}uN(r)}catch(j){t=j,lt===r&&r!==null&&(lt=r=r.return);continue}break}while(!0)}function lN(){var e=Ic.current;return Ic.current=Ac,e===null?Ac:e}function kh(){(ft===0||ft===3||ft===2)&&(ft=4),gt===null||!(ei&268435455)&&!(Cu&268435455)||Qn(gt,Nt)}function Oc(e,t){var r=_e;_e|=2;var n=lN();(gt!==e||Nt!==t)&&(hn=null,Qs(e,t));do try{WP();break}catch(s){aN(e,s)}while(!0);if(ch(),_e=r,Ic.current=n,lt!==null)throw Error($(261));return gt=null,Nt=0,ft}function WP(){for(;lt!==null;)cN(lt)}function HP(){for(;lt!==null&&!g2();)cN(lt)}function cN(e){var t=fN(e.alternate,e,rr);e.memoizedProps=e.pendingProps,t===null?uN(e):lt=t,Nh.current=null}function uN(e){var t=e;do{var r=t.alternate;if(e=t.return,t.flags&32768){if(r=FP(r,t),r!==null){r.flags&=32767,lt=r;return}if(e!==null)e.flags|=32768,e.subtreeFlags=0,e.deletions=null;else{ft=6,lt=null;return}}else if(r=LP(r,t,rr),r!==null){lt=r;return}if(t=t.sibling,t!==null){lt=t;return}lt=t=e}while(t!==null);ft===0&&(ft=5)}function As(e,t,r){var n=Oe,s=xr.transition;try{xr.transition=null,Oe=1,qP(e,t,r,n)}finally{xr.transition=s,Oe=n}return null}function qP(e,t,r,n){do Hi();while(ns!==null);if(_e&6)throw Error($(327));r=e.finishedWork;var s=e.finishedLanes;if(r===null)return null;if(e.finishedWork=null,e.finishedLanes=0,r===e.current)throw Error($(177));e.callbackNode=null,e.callbackPriority=0;var i=r.lanes|r.childLanes;if(_2(e,i),e===gt&&(lt=gt=null,Nt=0),!(r.subtreeFlags&2064)&&!(r.flags&2064)||$l||($l=!0,mN(vc,function(){return Hi(),null})),i=(r.flags&15990)!==0,r.subtreeFlags&15990||i){i=xr.transition,xr.transition=null;var a=Oe;Oe=1;var l=_e;_e|=4,Nh.current=null,$P(e,r),sN(r,e),fP(_f),xc=!!Cf,_f=Cf=null,e.current=r,zP(r),v2(),_e=l,Oe=a,xr.transition=i}else e.current=r;if($l&&($l=!1,ns=e,Dc=s),i=e.pendingLanes,i===0&&(cs=null),w2(r.stateNode),Yt(e,it()),t!==null)for(n=e.onRecoverableError,r=0;r<t.length;r++)s=t[r],n(s.value,{componentStack:s.stack,digest:s.digest});if(Mc)throw Mc=!1,e=qf,qf=null,e;return Dc&1&&e.tag!==0&&Hi(),i=e.pendingLanes,i&1?e===Qf?ma++:(ma=0,Qf=e):ma=0,js(),null}function Hi(){if(ns!==null){var e=W1(Dc),t=xr.transition,r=Oe;try{if(xr.transition=null,Oe=16>e?16:e,ns===null)var n=!1;else{if(e=ns,ns=null,Dc=0,_e&6)throw Error($(331));var s=_e;for(_e|=4,Y=e.current;Y!==null;){var i=Y,a=i.child;if(Y.flags&16){var l=i.deletions;if(l!==null){for(var c=0;c<l.length;c++){var u=l[c];for(Y=u;Y!==null;){var d=Y;switch(d.tag){case 0:case 11:case 15:da(8,d,i)}var f=d.child;if(f!==null)f.return=d,Y=f;else for(;Y!==null;){d=Y;var h=d.sibling,x=d.return;if(tN(d),d===u){Y=null;break}if(h!==null){h.return=x,Y=h;break}Y=x}}}var w=i.alternate;if(w!==null){var g=w.child;if(g!==null){w.child=null;do{var b=g.sibling;g.sibling=null,g=b}while(g!==null)}}Y=i}}if(i.subtreeFlags&2064&&a!==null)a.return=i,Y=a;else e:for(;Y!==null;){if(i=Y,i.flags&2048)switch(i.tag){case 0:case 11:case 15:da(9,i,i.return)}var v=i.sibling;if(v!==null){v.return=i.return,Y=v;break e}Y=i.return}}var p=e.current;for(Y=p;Y!==null;){a=Y;var y=a.child;if(a.subtreeFlags&2064&&y!==null)y.return=a,Y=y;else e:for(a=p;Y!==null;){if(l=Y,l.flags&2048)try{switch(l.tag){case 0:case 11:case 15:ju(9,l)}}catch(j){tt(l,l.return,j)}if(l===a){Y=null;break e}var N=l.sibling;if(N!==null){N.return=l.return,Y=N;break e}Y=l.return}}if(_e=s,js(),Jr&&typeof Jr.onPostCommitFiberRoot=="function")try{Jr.onPostCommitFiberRoot(gu,e)}catch{}n=!0}return n}finally{Oe=r,xr.transition=t}}return!1}function zg(e,t,r){t=yo(r,t),t=Wb(e,t,1),e=ls(e,t,1),t=zt(),e!==null&&(il(e,1,t),Yt(e,t))}function tt(e,t,r){if(e.tag===3)zg(e,e,r);else for(;t!==null;){if(t.tag===3){zg(t,e,r);break}else if(t.tag===1){var n=t.stateNode;if(typeof t.type.getDerivedStateFromError=="function"||typeof n.componentDidCatch=="function"&&(cs===null||!cs.has(n))){e=yo(r,e),e=Hb(t,e,1),t=ls(t,e,1),e=zt(),t!==null&&(il(t,1,e),Yt(t,e));break}}t=t.return}}function QP(e,t,r){var n=e.pingCache;n!==null&&n.delete(t),t=zt(),e.pingedLanes|=e.suspendedLanes&r,gt===e&&(Nt&r)===r&&(ft===4||ft===3&&(Nt&130023424)===Nt&&500>it()-jh?Qs(e,0):Sh|=r),Yt(e,t)}function dN(e,t){t===0&&(e.mode&1?(t=Pl,Pl<<=1,!(Pl&130023424)&&(Pl=4194304)):t=1);var r=zt();e=Cn(e,t),e!==null&&(il(e,t,r),Yt(e,r))}function GP(e){var t=e.memoizedState,r=0;t!==null&&(r=t.retryLane),dN(e,r)}function KP(e,t){var r=0;switch(e.tag){case 13:var n=e.stateNode,s=e.memoizedState;s!==null&&(r=s.retryLane);break;case 19:n=e.stateNode;break;default:throw Error($(314))}n!==null&&n.delete(t),dN(e,r)}var fN;fN=function(e,t,r){if(e!==null)if(e.memoizedProps!==t.pendingProps||Zt.current)Kt=!0;else{if(!(e.lanes&r)&&!(t.flags&128))return Kt=!1,OP(e,t,r);Kt=!!(e.flags&131072)}else Kt=!1,He&&t.flags&1048576&&gb(t,_c,t.index);switch(t.lanes=0,t.tag){case 2:var n=t.type;sc(e,t),e=t.pendingProps;var s=ho(t,At.current);Wi(t,r),s=vh(null,t,n,e,s,r);var i=yh();return t.flags|=1,typeof s=="object"&&s!==null&&typeof s.render=="function"&&s.$typeof===void 0?(t.tag=1,t.memoizedState=null,t.updateQueue=null,Xt(n)?(i=!0,jc(t)):i=!1,t.memoizedState=s.state!==null&&s.state!==void 0?s.state:null,fh(t),s.updater=Su,t.stateNode=s,s._reactInternals=t,Df(t,n,e,r),t=Ff(null,t,n,!0,i,r)):(t.tag=0,He&&i&&ih(t),Ft(null,t,s,r),t=t.child),t;case 16:n=t.elementType;e:{switch(sc(e,t),e=t.pendingProps,s=n._init,n=s(n._payload),t.type=n,s=t.tag=XP(n),e=_r(n,e),s){case 0:t=Lf(null,t,n,e,r);break e;case 1:t=Rg(null,t,n,e,r);break e;case 11:t=Eg(null,t,n,e,r);break e;case 14:t=Pg(null,t,n,_r(n.type,e),r);break e}throw Error($(306,n,""))}return t;case 0:return n=t.type,s=t.pendingProps,s=t.elementType===n?s:_r(n,s),Lf(e,t,n,s,r);case 1:return n=t.type,s=t.pendingProps,s=t.elementType===n?s:_r(n,s),Rg(e,t,n,s,r);case 3:e:{if(Kb(t),e===null)throw Error($(387));n=t.pendingProps,i=t.memoizedState,s=i.element,Nb(e,t),Ec(t,n,null,r);var a=t.memoizedState;if(n=a.element,i.isDehydrated)if(i={element:n,isDehydrated:!1,cache:a.cache,pendingSuspenseBoundaries:a.pendingSuspenseBoundaries,transitions:a.transitions},t.updateQueue.baseState=i,t.memoizedState=i,t.flags&256){s=yo(Error($(423)),t),t=Ag(e,t,n,r,s);break e}else if(n!==s){s=yo(Error($(424)),t),t=Ag(e,t,n,r,s);break e}else for(ir=as(t.stateNode.containerInfo.firstChild),or=t,He=!0,Er=null,r=wb(t,null,n,r),t.child=r;r;)r.flags=r.flags&-3|4096,r=r.sibling;else{if(po(),n===s){t=_n(e,t,r);break e}Ft(e,t,n,r)}t=t.child}return t;case 5:return Sb(t),e===null&&Af(t),n=t.type,s=t.pendingProps,i=e!==null?e.memoizedProps:null,a=s.children,kf(n,s)?a=null:i!==null&&kf(n,i)&&(t.flags|=32),Gb(e,t),Ft(e,t,a,r),t.child;case 6:return e===null&&Af(t),null;case 13:return Zb(e,t,r);case 4:return mh(t,t.stateNode.containerInfo),n=t.pendingProps,e===null?t.child=go(t,null,n,r):Ft(e,t,n,r),t.child;case 11:return n=t.type,s=t.pendingProps,s=t.elementType===n?s:_r(n,s),Eg(e,t,n,s,r);case 7:return Ft(e,t,t.pendingProps,r),t.child;case 8:return Ft(e,t,t.pendingProps.children,r),t.child;case 12:return Ft(e,t,t.pendingProps.children,r),t.child;case 10:e:{if(n=t.type._context,s=t.pendingProps,i=t.memoizedProps,a=s.value,$e(kc,n._currentValue),n._currentValue=a,i!==null)if(Fr(i.value,a)){if(i.children===s.children&&!Zt.current){t=_n(e,t,r);break e}}else for(i=t.child,i!==null&&(i.return=t);i!==null;){var l=i.dependencies;if(l!==null){a=i.child;for(var c=l.firstContext;c!==null;){if(c.context===n){if(i.tag===1){c=bn(-1,r&-r),c.tag=2;var u=i.updateQueue;if(u!==null){u=u.shared;var d=u.pending;d===null?c.next=c:(c.next=d.next,d.next=c),u.pending=c}}i.lanes|=r,c=i.alternate,c!==null&&(c.lanes|=r),If(i.return,r,t),l.lanes|=r;break}c=c.next}}else if(i.tag===10)a=i.type===t.type?null:i.child;else if(i.tag===18){if(a=i.return,a===null)throw Error($(341));a.lanes|=r,l=a.alternate,l!==null&&(l.lanes|=r),If(a,r,t),a=i.sibling}else a=i.child;if(a!==null)a.return=i;else for(a=i;a!==null;){if(a===t){a=null;break}if(i=a.sibling,i!==null){i.return=a.return,a=i;break}a=a.return}i=a}Ft(e,t,s.children,r),t=t.child}return t;case 9:return s=t.type,n=t.pendingProps.children,Wi(t,r),s=br(s),n=n(s),t.flags|=1,Ft(e,t,n,r),t.child;case 14:return n=t.type,s=_r(n,t.pendingProps),s=_r(n.type,s),Pg(e,t,n,s,r);case 15:return qb(e,t,t.type,t.pendingProps,r);case 17:return n=t.type,s=t.pendingProps,s=t.elementType===n?s:_r(n,s),sc(e,t),t.tag=1,Xt(n)?(e=!0,jc(t)):e=!1,Wi(t,r),Ub(t,n,s),Df(t,n,s,r),Ff(null,t,n,!0,e,r);case 19:return Xb(e,t,r);case 22:return Qb(e,t,r)}throw Error($(156,t.tag))};function mN(e,t){return $1(e,t)}function ZP(e,t,r,n){this.tag=e,this.key=r,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=n,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function vr(e,t,r,n){return new ZP(e,t,r,n)}function Th(e){return e=e.prototype,!(!e||!e.isReactComponent)}function XP(e){if(typeof e=="function")return Th(e)?1:0;if(e!=null){if(e=e.$typeof,e===Qm)return 11;if(e===Gm)return 14}return 2}function ds(e,t){var r=e.alternate;return r===null?(r=vr(e.tag,t,e.key,e.mode),r.elementType=e.elementType,r.type=e.type,r.stateNode=e.stateNode,r.alternate=e,e.alternate=r):(r.pendingProps=t,r.type=e.type,r.flags=0,r.subtreeFlags=0,r.deletions=null),r.flags=e.flags&14680064,r.childLanes=e.childLanes,r.lanes=e.lanes,r.child=e.child,r.memoizedProps=e.memoizedProps,r.memoizedState=e.memoizedState,r.updateQueue=e.updateQueue,t=e.dependencies,r.dependencies=t===null?null:{lanes:t.lanes,firstContext:t.firstContext},r.sibling=e.sibling,r.index=e.index,r.ref=e.ref,r}function ac(e,t,r,n,s,i){var a=2;if(n=e,typeof e=="function")Th(e)&&(a=1);else if(typeof e=="string")a=5;else e:switch(e){case _i:return Gs(r.children,s,i,t);case qm:a=8,s|=8;break;case sf:return e=vr(12,r,t,s|2),e.elementType=sf,e.lanes=i,e;case of:return e=vr(13,r,t,s),e.elementType=of,e.lanes=i,e;case af:return e=vr(19,r,t,s),e.elementType=af,e.lanes=i,e;case S1:return _u(r,s,i,t);default:if(typeof e=="object"&&e!==null)switch(e.$typeof){case b1:a=10;break e;case N1:a=9;break e;case Qm:a=11;break e;case Gm:a=14;break e;case Wn:a=16,n=null;break e}throw Error($(130,e==null?e:typeof e,""))}return t=vr(a,r,t,s),t.elementType=e,t.type=n,t.lanes=i,t}function Gs(e,t,r,n){return e=vr(7,e,n,t),e.lanes=r,e}function _u(e,t,r,n){return e=vr(22,e,n,t),e.elementType=S1,e.lanes=r,e.stateNode={isHidden:!1},e}function Md(e,t,r){return e=vr(6,e,null,t),e.lanes=r,e}function Dd(e,t,r){return t=vr(4,e.children!==null?e.children:[],e.key,t),t.lanes=r,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function YP(e,t,r,n,s){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=pd(0),this.expirationTimes=pd(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=pd(0),this.identifierPrefix=n,this.onRecoverableError=s,this.mutableSourceEagerHydrationData=null}function Eh(e,t,r,n,s,i,a,l,c){return e=new YP(e,t,r,l,c),t===1?(t=1,i===!0&&(t|=8)):t=0,i=vr(3,null,null,t),e.current=i,i.stateNode=e,i.memoizedState={element:n,isDehydrated:r,cache:null,transitions:null,pendingSuspenseBoundaries:null},fh(i),e}function JP(e,t,r){var n=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$typeof:Ci,key:n==null?null:""+n,children:e,containerInfo:t,implementation:r}}function hN(e){if(!e)return ms;e=e._reactInternals;e:{if(fi(e)!==e||e.tag!==1)throw Error($(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(Xt(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(t!==null);throw Error($(171))}if(e.tag===1){var r=e.type;if(Xt(r))return hb(e,r,t)}return t}function pN(e,t,r,n,s,i,a,l,c){return e=Eh(r,n,!0,e,s,i,a,l,c),e.context=hN(null),r=e.current,n=zt(),s=us(r),i=bn(n,s),i.callback=t??null,ls(r,i,s),e.current.lanes=s,il(e,s,n),Yt(e,n),e}function ku(e,t,r,n){var s=t.current,i=zt(),a=us(s);return r=hN(r),t.context===null?t.context=r:t.pendingContext=r,t=bn(i,a),t.payload={element:e},n=n===void 0?null:n,n!==null&&(t.callback=n),e=ls(s,t,a),e!==null&&(Dr(e,s,a,i),tc(e,s,a)),a}function Lc(e){if(e=e.current,!e.child)return null;switch(e.child.tag){case 5:return e.child.stateNode;default:return e.child.stateNode}}function Bg(e,t){if(e=e.memoizedState,e!==null&&e.dehydrated!==null){var r=e.retryLane;e.retryLane=r!==0&&r<t?r:t}}function Ph(e,t){Bg(e,t),(e=e.alternate)&&Bg(e,t)}function eR(){return null}var gN=typeof reportError=="function"?reportError:function(e){console.error(e)};function Rh(e){this._internalRoot=e}Tu.prototype.render=Rh.prototype.render=function(e){var t=this._internalRoot;if(t===null)throw Error($(409));ku(e,t,null,null)};Tu.prototype.unmount=Rh.prototype.unmount=function(){var e=this._internalRoot;if(e!==null){this._internalRoot=null;var t=e.containerInfo;ti(function(){ku(null,e,null,null)}),t[jn]=null}};function Tu(e){this._internalRoot=e}Tu.prototype.unstable_scheduleHydration=function(e){if(e){var t=Q1();e={blockedOn:null,target:e,priority:t};for(var r=0;r<qn.length&&t!==0&&t<qn[r].priority;r++);qn.splice(r,0,e),r===0&&K1(e)}};function Ah(e){return!(!e||e.nodeType!==1&&e.nodeType!==9&&e.nodeType!==11)}function Eu(e){return!(!e||e.nodeType!==1&&e.nodeType!==9&&e.nodeType!==11&&(e.nodeType!==8||e.nodeValue!==" react-mount-point-unstable "))}function Ug(){}function tR(e,t,r,n,s){if(s){if(typeof n=="function"){var i=n;n=function(){var u=Lc(a);i.call(u)}}var a=pN(t,n,e,0,null,!1,!1,"",Ug);return e._reactRootContainer=a,e[jn]=a.current,Ca(e.nodeType===8?e.parentNode:e),ti(),a}for(;s=e.lastChild;)e.removeChild(s);if(typeof n=="function"){var l=n;n=function(){var u=Lc(c);l.call(u)}}var c=Eh(e,0,!1,null,null,!1,!1,"",Ug);return e._reactRootContainer=c,e[jn]=c.current,Ca(e.nodeType===8?e.parentNode:e),ti(function(){ku(t,c,r,n)}),c}function Pu(e,t,r,n,s){var i=r._reactRootContainer;if(i){var a=i;if(typeof s=="function"){var l=s;s=function(){var c=Lc(a);l.call(c)}}ku(t,a,e,s)}else a=tR(r,t,e,s,n);return Lc(a)}H1=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var r=Yo(t.pendingLanes);r!==0&&(Xm(t,r|1),Yt(t,it()),!(_e&6)&&(xo=it()+500,js()))}break;case 13:ti(function(){var n=Cn(e,1);if(n!==null){var s=zt();Dr(n,e,1,s)}}),Ph(e,1)}};Ym=function(e){if(e.tag===13){var t=Cn(e,134217728);if(t!==null){var r=zt();Dr(t,e,134217728,r)}Ph(e,134217728)}};q1=function(e){if(e.tag===13){var t=us(e),r=Cn(e,t);if(r!==null){var n=zt();Dr(r,e,t,n)}Ph(e,t)}};Q1=function(){return Oe};G1=function(e,t){var r=Oe;try{return Oe=e,t()}finally{Oe=r}};vf=function(e,t,r){switch(t){case"input":if(uf(e,r),t=r.name,r.type==="radio"&&t!=null){for(r=e;r.parentNode;)r=r.parentNode;for(r=r.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<r.length;t++){var n=r[t];if(n!==e&&n.form===e.form){var s=wu(n);if(!s)throw Error($(90));C1(n),uf(n,s)}}}break;case"textarea":k1(e,r);break;case"select":t=r.value,t!=null&&$i(e,!!r.multiple,t,!1)}};M1=Ch;D1=ti;var rR={usingClientEntryPoint:!1,Events:[al,Pi,wu,A1,I1,Ch]},Ho={findFiberByHostInstance:Ms,bundleType:0,version:"18.3.1",rendererPackageName:"react-dom"},nR={bundleType:Ho.bundleType,version:Ho.version,rendererPackageName:Ho.rendererPackageName,rendererConfig:Ho.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:Pn.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return e=F1(e),e===null?null:e.stateNode},findFiberByHostInstance:Ho.findFiberByHostInstance||eR,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.3.1-next-f1338f8080-20240426"};if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__<"u"){var zl=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!zl.isDisabled&&zl.supportsFiber)try{gu=zl.inject(nR),Jr=zl}catch{}}ur.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=rR;ur.createPortal=function(e,t){var r=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null;if(!Ah(t))throw Error($(200));return JP(e,t,null,r)};ur.createRoot=function(e,t){if(!Ah(e))throw Error($(299));var r=!1,n="",s=gN;return t!=null&&(t.unstable_strictMode===!0&&(r=!0),t.identifierPrefix!==void 0&&(n=t.identifierPrefix),t.onRecoverableError!==void 0&&(s=t.onRecoverableError)),t=Eh(e,1,!1,null,null,r,!1,n,s),e[jn]=t.current,Ca(e.nodeType===8?e.parentNode:e),new Rh(t)};ur.findDOMNode=function(e){if(e==null)return null;if(e.nodeType===1)return e;var t=e._reactInternals;if(t===void 0)throw typeof e.render=="function"?Error($(188)):(e=Object.keys(e).join(","),Error($(268,e)));return e=F1(t),e=e===null?null:e.stateNode,e};ur.flushSync=function(e){return ti(e)};ur.hydrate=function(e,t,r){if(!Eu(t))throw Error($(200));return Pu(null,e,t,!0,r)};ur.hydrateRoot=function(e,t,r){if(!Ah(e))throw Error($(405));var n=r!=null&&r.hydratedSources||null,s=!1,i="",a=gN;if(r!=null&&(r.unstable_strictMode===!0&&(s=!0),r.identifierPrefix!==void 0&&(i=r.identifierPrefix),r.onRecoverableError!==void 0&&(a=r.onRecoverableError)),t=pN(t,null,e,1,r??null,s,!1,i,a),e[jn]=t.current,Ca(e),n)for(e=0;e<n.length;e++)r=n[e],s=r._getVersion,s=s(r._source),t.mutableSourceEagerHydrationData==null?t.mutableSourceEagerHydrationData=[r,s]:t.mutableSourceEagerHydrationData.push(r,s);return new Tu(t)};ur.render=function(e,t,r){if(!Eu(t))throw Error($(200));return Pu(null,e,t,!1,r)};ur.unmountComponentAtNode=function(e){if(!Eu(e))throw Error($(40));return e._reactRootContainer?(ti(function(){Pu(null,null,e,!1,function(){e._reactRootContainer=null,e[jn]=null})}),!0):!1};ur.unstable_batchedUpdates=Ch;ur.unstable_renderSubtreeIntoContainer=function(e,t,r,n){if(!Eu(r))throw Error($(200));if(e==null||e._reactInternals===void 0)throw Error($(38));return Pu(e,t,r,!1,n)};ur.version="18.3.1-next-f1338f8080-20240426";function vN(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(vN)}catch(e){console.error(e)}}vN(),v1.exports=ur;var mi=v1.exports;const sR=s1(mi);var yN,Wg=mi;yN=Wg.createRoot,Wg.hydrateRoot;function iR(e,t){if(e instanceof RegExp)return{keys:!1,pattern:e};var r,n,s,i,a=[],l="",c=e.split("/");for(c[0]||c.shift();s=c.shift();)r=s[0],r==="*"?(a.push(r),l+=s[1]==="?"?"(?:/(.*))?":"/(.*)"):r===":"?(n=s.indexOf("?",1),i=s.indexOf(".",1),a.push(s.substring(1,~n?n:~i?i:s.length)),l+=~n&&!~i?"(?:/([^/]+?))?":"/([^/]+?)",~i&&(l+=(~n?"?":"")+"\\"+s.substring(i))):l+="/"+s;return{keys:a,pattern:new RegExp("^"+l+(t?"(?=$|/)":"/?$"),"i")}}var xN={exports:{}},wN={};/**
 * @license React
 * use-sync-external-store-shim.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var wo=m;function oR(e,t){return e===t&&(e!==0||1/e===1/t)||e!==e&&t!==t}var aR=typeof Object.is=="function"?Object.is:oR,lR=wo.useState,cR=wo.useEffect,uR=wo.useLayoutEffect,dR=wo.useDebugValue;function fR(e,t){var r=t(),n=lR({inst:{value:r,getSnapshot:t}}),s=n[0].inst,i=n[1];return uR(function(){s.value=r,s.getSnapshot=t,Od(s)&&i({inst:s})},[e,r,t]),cR(function(){return Od(s)&&i({inst:s}),e(function(){Od(s)&&i({inst:s})})},[e]),dR(r),r}function Od(e){var t=e.getSnapshot;e=e.value;try{var r=t();return!aR(e,r)}catch{return!0}}function mR(e,t){return t()}var hR=typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"?mR:fR;wN.useSyncExternalStore=wo.useSyncExternalStore!==void 0?wo.useSyncExternalStore:hR;xN.exports=wN;var pR=xN.exports;const gR=p1.useInsertionEffect,vR=typeof window<"u"&&typeof window.document<"u"&&typeof window.document.createElement<"u",yR=vR?m.useLayoutEffect:m.useEffect,xR=gR||yR,bN=e=>{const t=m.useRef([e,(...r)=>t[0](...r)]).current;return xR(()=>{t[0]=e}),t[1]},wR="popstate",Ih="pushState",Mh="replaceState",bR="hashchange",Hg=[wR,Ih,Mh,bR],NR=e=>{for(const t of Hg)addEventListener(t,e);return()=>{for(const t of Hg)removeEventListener(t,e)}},NN=(e,t)=>pR.useSyncExternalStore(NR,e,t),SR=()=>location.search,jR=({ssrSearch:e=""}={})=>NN(SR,()=>e),qg=()=>location.pathname,CR=({ssrPath:e}={})=>NN(qg,e?()=>e:qg),_R=(e,{replace:t=!1,state:r=null}={})=>history[t?Mh:Ih](r,"",e),kR=(e={})=>[CR(e),_R],Qg=Symbol.for("wouter_v3");if(typeof history<"u"&&typeof window[Qg]>"u"){for(const e of[Ih,Mh]){const t=history[e];history[e]=function(){const r=t.apply(this,arguments),n=new Event(e);return n.arguments=arguments,dispatchEvent(n),r}}Object.defineProperty(window,Qg,{value:!0})}const TR=(e,t)=>t.toLowerCase().indexOf(e.toLowerCase())?"~"+t:t.slice(e.length)||"/",SN=(e="")=>e==="/"?"":e,ER=(e,t)=>e[0]==="~"?e.slice(1):SN(t)+e,PR=(e="",t)=>TR(Gg(SN(e)),Gg(t)),Gg=e=>{try{return decodeURI(e)}catch{return e}},jN={hook:kR,searchHook:jR,parser:iR,base:"",ssrPath:void 0,ssrSearch:void 0,hrefs:e=>e},CN=m.createContext(jN),cl=()=>m.useContext(CN),_N={},kN=m.createContext(_N),RR=()=>m.useContext(kN),Ru=e=>{const[t,r]=e.hook(e);return[PR(e.base,t),bN((n,s)=>r(ER(n,e.base),s))]},Au=()=>Ru(cl()),TN=(e,t,r,n)=>{const{pattern:s,keys:i}=t instanceof RegExp?{keys:!1,pattern:t}:e(t||"*",n),a=s.exec(r)||[],[l,...c]=a;return l!==void 0?[!0,(()=>{const u=i!==!1?Object.fromEntries(i.map((f,h)=>[f,c[h]])):a.groups;let d={...c};return u&&Object.assign(d,u),d})(),...n?[l]:[]]:[!1,null]},AR=({children:e,...t})=>{var d,f;const r=cl(),n=t.hook?jN:r;let s=n;const[i,a]=((d=t.ssrPath)==null?void 0:d.split("?"))??[];a&&(t.ssrSearch=a,t.ssrPath=i),t.hrefs=t.hrefs??((f=t.hook)==null?void 0:f.hrefs);let l=m.useRef({}),c=l.current,u=c;for(let h in n){const x=h==="base"?n[h]+(t[h]||""):t[h]||n[h];c===u&&x!==u[h]&&(l.current=u={...u}),u[h]=x,x!==n[h]&&(s=u)}return m.createElement(CN.Provider,{value:s,children:e})},Kg=({children:e,component:t},r)=>t?m.createElement(t,{params:r}):typeof e=="function"?e(r):e,IR=e=>{let t=m.useRef(_N),r=t.current;for(const n in e)e[n]!==r[n]&&(r=e);return Object.keys(e).length===0&&(r=e),t.current=r},cn=({path:e,nest:t,match:r,...n})=>{const s=cl(),[i]=Ru(s),[a,l,c]=r??TN(s.parser,e,i,t),u=IR({...RR(),...l});if(!a)return null;const d=c?m.createElement(AR,{base:c},Kg(n,u)):Kg(n,u);return m.createElement(kN.Provider,{value:u,children:d})},rt=m.forwardRef((e,t)=>{const r=cl(),[n,s]=Ru(r),{to:i="",href:a=i,onClick:l,asChild:c,children:u,className:d,replace:f,state:h,...x}=e,w=bN(b=>{b.ctrlKey||b.metaKey||b.altKey||b.shiftKey||b.button!==0||(l==null||l(b),b.defaultPrevented||(b.preventDefault(),s(a,e)))}),g=r.hrefs(a[0]==="~"?a.slice(1):r.base+a,r);return c&&m.isValidElement(u)?m.cloneElement(u,{onClick:w,href:g}):m.createElement("a",{...x,onClick:w,href:g,className:d!=null&&d.call?d(n===a):d,children:u,ref:t})}),EN=e=>Array.isArray(e)?e.flatMap(t=>EN(t&&t.type===m.Fragment?t.props.children:t)):[e],MR=({children:e,location:t})=>{const r=cl(),[n]=Ru(r);for(const s of EN(e)){let i=0;if(m.isValidElement(s)&&(i=TN(r.parser,s.props.path,t||n,s.props.nest))[0])return m.cloneElement(s,{match:i})}return null};var ul=class{constructor(){this.listeners=new Set,this.subscribe=this.subscribe.bind(this)}subscribe(e){return this.listeners.add(e),this.onSubscribe(),()=>{this.listeners.delete(e),this.onUnsubscribe()}}hasListeners(){return this.listeners.size>0}onSubscribe(){}onUnsubscribe(){}},ri=typeof window>"u"||"Deno"in globalThis;function mr(){}function DR(e,t){return typeof e=="function"?e(t):e}function Zf(e){return typeof e=="number"&&e>=0&&e!==1/0}function PN(e,t){return Math.max(e+(t||0)-Date.now(),0)}function qi(e,t){return typeof e=="function"?e(t):e}function Pr(e,t){return typeof e=="function"?e(t):e}function Zg(e,t){const{type:r="all",exact:n,fetchStatus:s,predicate:i,queryKey:a,stale:l}=e;if(a){if(n){if(t.queryHash!==Dh(a,t.options))return!1}else if(!Da(t.queryKey,a))return!1}if(r!=="all"){const c=t.isActive();if(r==="active"&&!c||r==="inactive"&&c)return!1}return!(typeof l=="boolean"&&t.isStale()!==l||s&&s!==t.state.fetchStatus||i&&!i(t))}function Xg(e,t){const{exact:r,status:n,predicate:s,mutationKey:i}=e;if(i){if(!t.options.mutationKey)return!1;if(r){if(Ma(t.options.mutationKey)!==Ma(i))return!1}else if(!Da(t.options.mutationKey,i))return!1}return!(n&&t.state.status!==n||s&&!s(t))}function Dh(e,t){return((t==null?void 0:t.queryKeyHashFn)||Ma)(e)}function Ma(e){return JSON.stringify(e,(t,r)=>Yf(r)?Object.keys(r).sort().reduce((n,s)=>(n[s]=r[s],n),{}):r)}function Da(e,t){return e===t?!0:typeof e!=typeof t?!1:e&&t&&typeof e=="object"&&typeof t=="object"?!Object.keys(t).some(r=>!Da(e[r],t[r])):!1}function RN(e,t){if(e===t)return e;const r=Yg(e)&&Yg(t);if(r||Yf(e)&&Yf(t)){const n=r?e:Object.keys(e),s=n.length,i=r?t:Object.keys(t),a=i.length,l=r?[]:{};let c=0;for(let u=0;u<a;u++){const d=r?u:i[u];(!r&&n.includes(d)||r)&&e[d]===void 0&&t[d]===void 0?(l[d]=void 0,c++):(l[d]=RN(e[d],t[d]),l[d]===e[d]&&e[d]!==void 0&&c++)}return s===a&&c===s?e:l}return t}function Xf(e,t){if(!t||Object.keys(e).length!==Object.keys(t).length)return!1;for(const r in e)if(e[r]!==t[r])return!1;return!0}function Yg(e){return Array.isArray(e)&&e.length===Object.keys(e).length}function Yf(e){if(!Jg(e))return!1;const t=e.constructor;if(t===void 0)return!0;const r=t.prototype;return!(!Jg(r)||!r.hasOwnProperty("isPrototypeOf")||Object.getPrototypeOf(e)!==Object.prototype)}function Jg(e){return Object.prototype.toString.call(e)==="[object Object]"}function OR(e){return new Promise(t=>{setTimeout(t,e)})}function Jf(e,t,r){return typeof r.structuralSharing=="function"?r.structuralSharing(e,t):r.structuralSharing!==!1?RN(e,t):t}function LR(e,t,r=0){const n=[...e,t];return r&&n.length>r?n.slice(1):n}function FR(e,t,r=0){const n=[t,...e];return r&&n.length>r?n.slice(0,-1):n}var Oh=Symbol();function AN(e,t){return!e.queryFn&&(t!=null&&t.initialPromise)?()=>t.initialPromise:!e.queryFn||e.queryFn===Oh?()=>Promise.reject(new Error(`Missing queryFn: '${e.queryHash}'`)):e.queryFn}var $s,Kn,Ji,my,VR=(my=class extends ul{constructor(){super();he(this,$s);he(this,Kn);he(this,Ji);J(this,Ji,t=>{if(!ri&&window.addEventListener){const r=()=>t();return window.addEventListener("visibilitychange",r,!1),()=>{window.removeEventListener("visibilitychange",r)}}})}onSubscribe(){_(this,Kn)||this.setEventListener(_(this,Ji))}onUnsubscribe(){var t;this.hasListeners()||((t=_(this,Kn))==null||t.call(this),J(this,Kn,void 0))}setEventListener(t){var r;J(this,Ji,t),(r=_(this,Kn))==null||r.call(this),J(this,Kn,t(n=>{typeof n=="boolean"?this.setFocused(n):this.onFocus()}))}setFocused(t){_(this,$s)!==t&&(J(this,$s,t),this.onFocus())}onFocus(){const t=this.isFocused();this.listeners.forEach(r=>{r(t)})}isFocused(){var t;return typeof _(this,$s)=="boolean"?_(this,$s):((t=globalThis.document)==null?void 0:t.visibilityState)!=="hidden"}},$s=new WeakMap,Kn=new WeakMap,Ji=new WeakMap,my),Lh=new VR,eo,Zn,to,hy,$R=(hy=class extends ul{constructor(){super();he(this,eo,!0);he(this,Zn);he(this,to);J(this,to,t=>{if(!ri&&window.addEventListener){const r=()=>t(!0),n=()=>t(!1);return window.addEventListener("online",r,!1),window.addEventListener("offline",n,!1),()=>{window.removeEventListener("online",r),window.removeEventListener("offline",n)}}})}onSubscribe(){_(this,Zn)||this.setEventListener(_(this,to))}onUnsubscribe(){var t;this.hasListeners()||((t=_(this,Zn))==null||t.call(this),J(this,Zn,void 0))}setEventListener(t){var r;J(this,to,t),(r=_(this,Zn))==null||r.call(this),J(this,Zn,t(this.setOnline.bind(this)))}setOnline(t){_(this,eo)!==t&&(J(this,eo,t),this.listeners.forEach(n=>{n(t)}))}isOnline(){return _(this,eo)}},eo=new WeakMap,Zn=new WeakMap,to=new WeakMap,hy),Fc=new $R;function em(){let e,t;const r=new Promise((s,i)=>{e=s,t=i});r.status="pending",r.catch(()=>{});function n(s){Object.assign(r,s),delete r.resolve,delete r.reject}return r.resolve=s=>{n({status:"fulfilled",value:s}),e(s)},r.reject=s=>{n({status:"rejected",reason:s}),t(s)},r}function zR(e){return Math.min(1e3*2**e,3e4)}function IN(e){return(e??"online")==="online"?Fc.isOnline():!0}var MN=class extends Error{constructor(e){super("CancelledError"),this.revert=e==null?void 0:e.revert,this.silent=e==null?void 0:e.silent}};function Ld(e){return e instanceof MN}function DN(e){let t=!1,r=0,n=!1,s;const i=em(),a=g=>{var b;n||(h(new MN(g)),(b=e.abort)==null||b.call(e))},l=()=>{t=!0},c=()=>{t=!1},u=()=>Lh.isFocused()&&(e.networkMode==="always"||Fc.isOnline())&&e.canRun(),d=()=>IN(e.networkMode)&&e.canRun(),f=g=>{var b;n||(n=!0,(b=e.onSuccess)==null||b.call(e,g),s==null||s(),i.resolve(g))},h=g=>{var b;n||(n=!0,(b=e.onError)==null||b.call(e,g),s==null||s(),i.reject(g))},x=()=>new Promise(g=>{var b;s=v=>{(n||u())&&g(v)},(b=e.onPause)==null||b.call(e)}).then(()=>{var g;s=void 0,n||(g=e.onContinue)==null||g.call(e)}),w=()=>{if(n)return;let g;const b=r===0?e.initialPromise:void 0;try{g=b??e.fn()}catch(v){g=Promise.reject(v)}Promise.resolve(g).then(f).catch(v=>{var E;if(n)return;const p=e.retry??(ri?0:3),y=e.retryDelay??zR,N=typeof y=="function"?y(r,v):y,j=p===!0||typeof p=="number"&&r<p||typeof p=="function"&&p(r,v);if(t||!j){h(v);return}r++,(E=e.onFail)==null||E.call(e,r,v),OR(N).then(()=>u()?void 0:x()).then(()=>{t?h(v):w()})})};return{promise:i,cancel:a,continue:()=>(s==null||s(),i),cancelRetry:l,continueRetry:c,canStart:d,start:()=>(d()?w():x().then(w),i)}}function BR(){let e=[],t=0,r=l=>{l()},n=l=>{l()},s=l=>setTimeout(l,0);const i=l=>{t?e.push(l):s(()=>{r(l)})},a=()=>{const l=e;e=[],l.length&&s(()=>{n(()=>{l.forEach(c=>{r(c)})})})};return{batch:l=>{let c;t++;try{c=l()}finally{t--,t||a()}return c},batchCalls:l=>(...c)=>{i(()=>{l(...c)})},schedule:i,setNotifyFunction:l=>{r=l},setBatchNotifyFunction:l=>{n=l},setScheduler:l=>{s=l}}}var bt=BR(),zs,py,ON=(py=class{constructor(){he(this,zs)}destroy(){this.clearGcTimeout()}scheduleGc(){this.clearGcTimeout(),Zf(this.gcTime)&&J(this,zs,setTimeout(()=>{this.optionalRemove()},this.gcTime))}updateGcTime(e){this.gcTime=Math.max(this.gcTime||0,e??(ri?1/0:5*60*1e3))}clearGcTimeout(){_(this,zs)&&(clearTimeout(_(this,zs)),J(this,zs,void 0))}},zs=new WeakMap,py),ro,no,fr,Et,el,Bs,kr,fn,gy,UR=(gy=class extends ON{constructor(t){super();he(this,kr);he(this,ro);he(this,no);he(this,fr);he(this,Et);he(this,el);he(this,Bs);J(this,Bs,!1),J(this,el,t.defaultOptions),this.setOptions(t.options),this.observers=[],J(this,fr,t.cache),this.queryKey=t.queryKey,this.queryHash=t.queryHash,J(this,ro,WR(this.options)),this.state=t.state??_(this,ro),this.scheduleGc()}get meta(){return this.options.meta}get promise(){var t;return(t=_(this,Et))==null?void 0:t.promise}setOptions(t){this.options={..._(this,el),...t},this.updateGcTime(this.options.gcTime)}optionalRemove(){!this.observers.length&&this.state.fetchStatus==="idle"&&_(this,fr).remove(this)}setData(t,r){const n=Jf(this.state.data,t,this.options);return Ne(this,kr,fn).call(this,{data:n,type:"success",dataUpdatedAt:r==null?void 0:r.updatedAt,manual:r==null?void 0:r.manual}),n}setState(t,r){Ne(this,kr,fn).call(this,{type:"setState",state:t,setStateOptions:r})}cancel(t){var n,s;const r=(n=_(this,Et))==null?void 0:n.promise;return(s=_(this,Et))==null||s.cancel(t),r?r.then(mr).catch(mr):Promise.resolve()}destroy(){super.destroy(),this.cancel({silent:!0})}reset(){this.destroy(),this.setState(_(this,ro))}isActive(){return this.observers.some(t=>Pr(t.options.enabled,this)!==!1)}isDisabled(){return this.getObserversCount()>0?!this.isActive():this.options.queryFn===Oh||this.state.dataUpdateCount+this.state.errorUpdateCount===0}isStale(){return this.state.isInvalidated?!0:this.getObserversCount()>0?this.observers.some(t=>t.getCurrentResult().isStale):this.state.data===void 0}isStaleByTime(t=0){return this.state.isInvalidated||this.state.data===void 0||!PN(this.state.dataUpdatedAt,t)}onFocus(){var r;const t=this.observers.find(n=>n.shouldFetchOnWindowFocus());t==null||t.refetch({cancelRefetch:!1}),(r=_(this,Et))==null||r.continue()}onOnline(){var r;const t=this.observers.find(n=>n.shouldFetchOnReconnect());t==null||t.refetch({cancelRefetch:!1}),(r=_(this,Et))==null||r.continue()}addObserver(t){this.observers.includes(t)||(this.observers.push(t),this.clearGcTimeout(),_(this,fr).notify({type:"observerAdded",query:this,observer:t}))}removeObserver(t){this.observers.includes(t)&&(this.observers=this.observers.filter(r=>r!==t),this.observers.length||(_(this,Et)&&(_(this,Bs)?_(this,Et).cancel({revert:!0}):_(this,Et).cancelRetry()),this.scheduleGc()),_(this,fr).notify({type:"observerRemoved",query:this,observer:t}))}getObserversCount(){return this.observers.length}invalidate(){this.state.isInvalidated||Ne(this,kr,fn).call(this,{type:"invalidate"})}fetch(t,r){var c,u,d;if(this.state.fetchStatus!=="idle"){if(this.state.data!==void 0&&(r!=null&&r.cancelRefetch))this.cancel({silent:!0});else if(_(this,Et))return _(this,Et).continueRetry(),_(this,Et).promise}if(t&&this.setOptions(t),!this.options.queryFn){const f=this.observers.find(h=>h.options.queryFn);f&&this.setOptions(f.options)}const n=new AbortController,s=f=>{Object.defineProperty(f,"signal",{enumerable:!0,get:()=>(J(this,Bs,!0),n.signal)})},i=()=>{const f=AN(this.options,r),h={queryKey:this.queryKey,meta:this.meta};return s(h),J(this,Bs,!1),this.options.persister?this.options.persister(f,h,this):f(h)},a={fetchOptions:r,options:this.options,queryKey:this.queryKey,state:this.state,fetchFn:i};s(a),(c=this.options.behavior)==null||c.onFetch(a,this),J(this,no,this.state),(this.state.fetchStatus==="idle"||this.state.fetchMeta!==((u=a.fetchOptions)==null?void 0:u.meta))&&Ne(this,kr,fn).call(this,{type:"fetch",meta:(d=a.fetchOptions)==null?void 0:d.meta});const l=f=>{var h,x,w,g;Ld(f)&&f.silent||Ne(this,kr,fn).call(this,{type:"error",error:f}),Ld(f)||((x=(h=_(this,fr).config).onError)==null||x.call(h,f,this),(g=(w=_(this,fr).config).onSettled)==null||g.call(w,this.state.data,f,this)),this.scheduleGc()};return J(this,Et,DN({initialPromise:r==null?void 0:r.initialPromise,fn:a.fetchFn,abort:n.abort.bind(n),onSuccess:f=>{var h,x,w,g;if(f===void 0){l(new Error(`${this.queryHash} data is undefined`));return}try{this.setData(f)}catch(b){l(b);return}(x=(h=_(this,fr).config).onSuccess)==null||x.call(h,f,this),(g=(w=_(this,fr).config).onSettled)==null||g.call(w,f,this.state.error,this),this.scheduleGc()},onError:l,onFail:(f,h)=>{Ne(this,kr,fn).call(this,{type:"failed",failureCount:f,error:h})},onPause:()=>{Ne(this,kr,fn).call(this,{type:"pause"})},onContinue:()=>{Ne(this,kr,fn).call(this,{type:"continue"})},retry:a.options.retry,retryDelay:a.options.retryDelay,networkMode:a.options.networkMode,canRun:()=>!0})),_(this,Et).start()}},ro=new WeakMap,no=new WeakMap,fr=new WeakMap,Et=new WeakMap,el=new WeakMap,Bs=new WeakMap,kr=new WeakSet,fn=function(t){const r=n=>{switch(t.type){case"failed":return{...n,fetchFailureCount:t.failureCount,fetchFailureReason:t.error};case"pause":return{...n,fetchStatus:"paused"};case"continue":return{...n,fetchStatus:"fetching"};case"fetch":return{...n,...LN(n.data,this.options),fetchMeta:t.meta??null};case"success":return{...n,data:t.data,dataUpdateCount:n.dataUpdateCount+1,dataUpdatedAt:t.dataUpdatedAt??Date.now(),error:null,isInvalidated:!1,status:"success",...!t.manual&&{fetchStatus:"idle",fetchFailureCount:0,fetchFailureReason:null}};case"error":const s=t.error;return Ld(s)&&s.revert&&_(this,no)?{..._(this,no),fetchStatus:"idle"}:{...n,error:s,errorUpdateCount:n.errorUpdateCount+1,errorUpdatedAt:Date.now(),fetchFailureCount:n.fetchFailureCount+1,fetchFailureReason:s,fetchStatus:"idle",status:"error"};case"invalidate":return{...n,isInvalidated:!0};case"setState":return{...n,...t.state}}};this.state=r(this.state),bt.batch(()=>{this.observers.forEach(n=>{n.onQueryUpdate()}),_(this,fr).notify({query:this,type:"updated",action:t})})},gy);function LN(e,t){return{fetchFailureCount:0,fetchFailureReason:null,fetchStatus:IN(t.networkMode)?"fetching":"paused",...e===void 0&&{error:null,status:"pending"}}}function WR(e){const t=typeof e.initialData=="function"?e.initialData():e.initialData,r=t!==void 0,n=r?typeof e.initialDataUpdatedAt=="function"?e.initialDataUpdatedAt():e.initialDataUpdatedAt:0;return{data:t,dataUpdateCount:0,dataUpdatedAt:r?n??Date.now():0,error:null,errorUpdateCount:0,errorUpdatedAt:0,fetchFailureCount:0,fetchFailureReason:null,fetchMeta:null,isInvalidated:!1,status:r?"success":"pending",fetchStatus:"idle"}}var qr,vy,HR=(vy=class extends ul{constructor(t={}){super();he(this,qr);this.config=t,J(this,qr,new Map)}build(t,r,n){const s=r.queryKey,i=r.queryHash??Dh(s,r);let a=this.get(i);return a||(a=new UR({cache:this,queryKey:s,queryHash:i,options:t.defaultQueryOptions(r),state:n,defaultOptions:t.getQueryDefaults(s)}),this.add(a)),a}add(t){_(this,qr).has(t.queryHash)||(_(this,qr).set(t.queryHash,t),this.notify({type:"added",query:t}))}remove(t){const r=_(this,qr).get(t.queryHash);r&&(t.destroy(),r===t&&_(this,qr).delete(t.queryHash),this.notify({type:"removed",query:t}))}clear(){bt.batch(()=>{this.getAll().forEach(t=>{this.remove(t)})})}get(t){return _(this,qr).get(t)}getAll(){return[..._(this,qr).values()]}find(t){const r={exact:!0,...t};return this.getAll().find(n=>Zg(r,n))}findAll(t={}){const r=this.getAll();return Object.keys(t).length>0?r.filter(n=>Zg(t,n)):r}notify(t){bt.batch(()=>{this.listeners.forEach(r=>{r(t)})})}onFocus(){bt.batch(()=>{this.getAll().forEach(t=>{t.onFocus()})})}onOnline(){bt.batch(()=>{this.getAll().forEach(t=>{t.onOnline()})})}},qr=new WeakMap,vy),Qr,Dt,Us,Gr,Fn,yy,qR=(yy=class extends ON{constructor(t){super();he(this,Gr);he(this,Qr);he(this,Dt);he(this,Us);this.mutationId=t.mutationId,J(this,Dt,t.mutationCache),J(this,Qr,[]),this.state=t.state||QR(),this.setOptions(t.options),this.scheduleGc()}setOptions(t){this.options=t,this.updateGcTime(this.options.gcTime)}get meta(){return this.options.meta}addObserver(t){_(this,Qr).includes(t)||(_(this,Qr).push(t),this.clearGcTimeout(),_(this,Dt).notify({type:"observerAdded",mutation:this,observer:t}))}removeObserver(t){J(this,Qr,_(this,Qr).filter(r=>r!==t)),this.scheduleGc(),_(this,Dt).notify({type:"observerRemoved",mutation:this,observer:t})}optionalRemove(){_(this,Qr).length||(this.state.status==="pending"?this.scheduleGc():_(this,Dt).remove(this))}continue(){var t;return((t=_(this,Us))==null?void 0:t.continue())??this.execute(this.state.variables)}async execute(t){var s,i,a,l,c,u,d,f,h,x,w,g,b,v,p,y,N,j,E,T;J(this,Us,DN({fn:()=>this.options.mutationFn?this.options.mutationFn(t):Promise.reject(new Error("No mutationFn found")),onFail:(P,C)=>{Ne(this,Gr,Fn).call(this,{type:"failed",failureCount:P,error:C})},onPause:()=>{Ne(this,Gr,Fn).call(this,{type:"pause"})},onContinue:()=>{Ne(this,Gr,Fn).call(this,{type:"continue"})},retry:this.options.retry??0,retryDelay:this.options.retryDelay,networkMode:this.options.networkMode,canRun:()=>_(this,Dt).canRun(this)}));const r=this.state.status==="pending",n=!_(this,Us).canStart();try{if(!r){Ne(this,Gr,Fn).call(this,{type:"pending",variables:t,isPaused:n}),await((i=(s=_(this,Dt).config).onMutate)==null?void 0:i.call(s,t,this));const C=await((l=(a=this.options).onMutate)==null?void 0:l.call(a,t));C!==this.state.context&&Ne(this,Gr,Fn).call(this,{type:"pending",context:C,variables:t,isPaused:n})}const P=await _(this,Us).start();return await((u=(c=_(this,Dt).config).onSuccess)==null?void 0:u.call(c,P,t,this.state.context,this)),await((f=(d=this.options).onSuccess)==null?void 0:f.call(d,P,t,this.state.context)),await((x=(h=_(this,Dt).config).onSettled)==null?void 0:x.call(h,P,null,this.state.variables,this.state.context,this)),await((g=(w=this.options).onSettled)==null?void 0:g.call(w,P,null,t,this.state.context)),Ne(this,Gr,Fn).call(this,{type:"success",data:P}),P}catch(P){try{throw await((v=(b=_(this,Dt).config).onError)==null?void 0:v.call(b,P,t,this.state.context,this)),await((y=(p=this.options).onError)==null?void 0:y.call(p,P,t,this.state.context)),await((j=(N=_(this,Dt).config).onSettled)==null?void 0:j.call(N,void 0,P,this.state.variables,this.state.context,this)),await((T=(E=this.options).onSettled)==null?void 0:T.call(E,void 0,P,t,this.state.context)),P}finally{Ne(this,Gr,Fn).call(this,{type:"error",error:P})}}finally{_(this,Dt).runNext(this)}}},Qr=new WeakMap,Dt=new WeakMap,Us=new WeakMap,Gr=new WeakSet,Fn=function(t){const r=n=>{switch(t.type){case"failed":return{...n,failureCount:t.failureCount,failureReason:t.error};case"pause":return{...n,isPaused:!0};case"continue":return{...n,isPaused:!1};case"pending":return{...n,context:t.context,data:void 0,failureCount:0,failureReason:null,error:null,isPaused:t.isPaused,status:"pending",variables:t.variables,submittedAt:Date.now()};case"success":return{...n,data:t.data,failureCount:0,failureReason:null,error:null,status:"success",isPaused:!1};case"error":return{...n,data:void 0,error:t.error,failureCount:n.failureCount+1,failureReason:t.error,isPaused:!1,status:"error"}}};this.state=r(this.state),bt.batch(()=>{_(this,Qr).forEach(n=>{n.onMutationUpdate(t)}),_(this,Dt).notify({mutation:this,type:"updated",action:t})})},yy);function QR(){return{context:void 0,data:void 0,error:null,failureCount:0,failureReason:null,isPaused:!1,status:"idle",variables:void 0,submittedAt:0}}var tr,tl,xy,GR=(xy=class extends ul{constructor(t={}){super();he(this,tr);he(this,tl);this.config=t,J(this,tr,new Map),J(this,tl,Date.now())}build(t,r,n){const s=new qR({mutationCache:this,mutationId:++jl(this,tl)._,options:t.defaultMutationOptions(r),state:n});return this.add(s),s}add(t){const r=Bl(t),n=_(this,tr).get(r)??[];n.push(t),_(this,tr).set(r,n),this.notify({type:"added",mutation:t})}remove(t){var n;const r=Bl(t);if(_(this,tr).has(r)){const s=(n=_(this,tr).get(r))==null?void 0:n.filter(i=>i!==t);s&&(s.length===0?_(this,tr).delete(r):_(this,tr).set(r,s))}this.notify({type:"removed",mutation:t})}canRun(t){var n;const r=(n=_(this,tr).get(Bl(t)))==null?void 0:n.find(s=>s.state.status==="pending");return!r||r===t}runNext(t){var n;const r=(n=_(this,tr).get(Bl(t)))==null?void 0:n.find(s=>s!==t&&s.state.isPaused);return(r==null?void 0:r.continue())??Promise.resolve()}clear(){bt.batch(()=>{this.getAll().forEach(t=>{this.remove(t)})})}getAll(){return[..._(this,tr).values()].flat()}find(t){const r={exact:!0,...t};return this.getAll().find(n=>Xg(r,n))}findAll(t={}){return this.getAll().filter(r=>Xg(t,r))}notify(t){bt.batch(()=>{this.listeners.forEach(r=>{r(t)})})}resumePausedMutations(){const t=this.getAll().filter(r=>r.state.isPaused);return bt.batch(()=>Promise.all(t.map(r=>r.continue().catch(mr))))}},tr=new WeakMap,tl=new WeakMap,xy);function Bl(e){var t;return((t=e.options.scope)==null?void 0:t.id)??String(e.mutationId)}function ev(e){return{onFetch:(t,r)=>{var d,f,h,x,w;const n=t.options,s=(h=(f=(d=t.fetchOptions)==null?void 0:d.meta)==null?void 0:f.fetchMore)==null?void 0:h.direction,i=((x=t.state.data)==null?void 0:x.pages)||[],a=((w=t.state.data)==null?void 0:w.pageParams)||[];let l={pages:[],pageParams:[]},c=0;const u=async()=>{let g=!1;const b=y=>{Object.defineProperty(y,"signal",{enumerable:!0,get:()=>(t.signal.aborted?g=!0:t.signal.addEventListener("abort",()=>{g=!0}),t.signal)})},v=AN(t.options,t.fetchOptions),p=async(y,N,j)=>{if(g)return Promise.reject();if(N==null&&y.pages.length)return Promise.resolve(y);const E={queryKey:t.queryKey,pageParam:N,direction:j?"backward":"forward",meta:t.options.meta};b(E);const T=await v(E),{maxPages:P}=t.options,C=j?FR:LR;return{pages:C(y.pages,T,P),pageParams:C(y.pageParams,N,P)}};if(s&&i.length){const y=s==="backward",N=y?KR:tv,j={pages:i,pageParams:a},E=N(n,j);l=await p(j,E,y)}else{const y=e??i.length;do{const N=c===0?a[0]??n.initialPageParam:tv(n,l);if(c>0&&N==null)break;l=await p(l,N),c++}while(c<y)}return l};t.options.persister?t.fetchFn=()=>{var g,b;return(b=(g=t.options).persister)==null?void 0:b.call(g,u,{queryKey:t.queryKey,meta:t.options.meta,signal:t.signal},r)}:t.fetchFn=u}}}function tv(e,{pages:t,pageParams:r}){const n=t.length-1;return t.length>0?e.getNextPageParam(t[n],t,r[n],r):void 0}function KR(e,{pages:t,pageParams:r}){var n;return t.length>0?(n=e.getPreviousPageParam)==null?void 0:n.call(e,t[0],t,r[0],r):void 0}var et,Xn,Yn,so,io,Jn,oo,ao,wy,ZR=(wy=class{constructor(e={}){he(this,et);he(this,Xn);he(this,Yn);he(this,so);he(this,io);he(this,Jn);he(this,oo);he(this,ao);J(this,et,e.queryCache||new HR),J(this,Xn,e.mutationCache||new GR),J(this,Yn,e.defaultOptions||{}),J(this,so,new Map),J(this,io,new Map),J(this,Jn,0)}mount(){jl(this,Jn)._++,_(this,Jn)===1&&(J(this,oo,Lh.subscribe(async e=>{e&&(await this.resumePausedMutations(),_(this,et).onFocus())})),J(this,ao,Fc.subscribe(async e=>{e&&(await this.resumePausedMutations(),_(this,et).onOnline())})))}unmount(){var e,t;jl(this,Jn)._--,_(this,Jn)===0&&((e=_(this,oo))==null||e.call(this),J(this,oo,void 0),(t=_(this,ao))==null||t.call(this),J(this,ao,void 0))}isFetching(e){return _(this,et).findAll({...e,fetchStatus:"fetching"}).length}isMutating(e){return _(this,Xn).findAll({...e,status:"pending"}).length}getQueryData(e){var r;const t=this.defaultQueryOptions({queryKey:e});return(r=_(this,et).get(t.queryHash))==null?void 0:r.state.data}ensureQueryData(e){const t=this.getQueryData(e.queryKey);if(t===void 0)return this.fetchQuery(e);{const r=this.defaultQueryOptions(e),n=_(this,et).build(this,r);return e.revalidateIfStale&&n.isStaleByTime(qi(r.staleTime,n))&&this.prefetchQuery(r),Promise.resolve(t)}}getQueriesData(e){return _(this,et).findAll(e).map(({queryKey:t,state:r})=>{const n=r.data;return[t,n]})}setQueryData(e,t,r){const n=this.defaultQueryOptions({queryKey:e}),s=_(this,et).get(n.queryHash),i=s==null?void 0:s.state.data,a=DR(t,i);if(a!==void 0)return _(this,et).build(this,n).setData(a,{...r,manual:!0})}setQueriesData(e,t,r){return bt.batch(()=>_(this,et).findAll(e).map(({queryKey:n})=>[n,this.setQueryData(n,t,r)]))}getQueryState(e){var r;const t=this.defaultQueryOptions({queryKey:e});return(r=_(this,et).get(t.queryHash))==null?void 0:r.state}removeQueries(e){const t=_(this,et);bt.batch(()=>{t.findAll(e).forEach(r=>{t.remove(r)})})}resetQueries(e,t){const r=_(this,et),n={type:"active",...e};return bt.batch(()=>(r.findAll(e).forEach(s=>{s.reset()}),this.refetchQueries(n,t)))}cancelQueries(e={},t={}){const r={revert:!0,...t},n=bt.batch(()=>_(this,et).findAll(e).map(s=>s.cancel(r)));return Promise.all(n).then(mr).catch(mr)}invalidateQueries(e={},t={}){return bt.batch(()=>{if(_(this,et).findAll(e).forEach(n=>{n.invalidate()}),e.refetchType==="none")return Promise.resolve();const r={...e,type:e.refetchType??e.type??"active"};return this.refetchQueries(r,t)})}refetchQueries(e={},t){const r={...t,cancelRefetch:(t==null?void 0:t.cancelRefetch)??!0},n=bt.batch(()=>_(this,et).findAll(e).filter(s=>!s.isDisabled()).map(s=>{let i=s.fetch(void 0,r);return r.throwOnError||(i=i.catch(mr)),s.state.fetchStatus==="paused"?Promise.resolve():i}));return Promise.all(n).then(mr)}fetchQuery(e){const t=this.defaultQueryOptions(e);t.retry===void 0&&(t.retry=!1);const r=_(this,et).build(this,t);return r.isStaleByTime(qi(t.staleTime,r))?r.fetch(t):Promise.resolve(r.state.data)}prefetchQuery(e){return this.fetchQuery(e).then(mr).catch(mr)}fetchInfiniteQuery(e){return e.behavior=ev(e.pages),this.fetchQuery(e)}prefetchInfiniteQuery(e){return this.fetchInfiniteQuery(e).then(mr).catch(mr)}ensureInfiniteQueryData(e){return e.behavior=ev(e.pages),this.ensureQueryData(e)}resumePausedMutations(){return Fc.isOnline()?_(this,Xn).resumePausedMutations():Promise.resolve()}getQueryCache(){return _(this,et)}getMutationCache(){return _(this,Xn)}getDefaultOptions(){return _(this,Yn)}setDefaultOptions(e){J(this,Yn,e)}setQueryDefaults(e,t){_(this,so).set(Ma(e),{queryKey:e,defaultOptions:t})}getQueryDefaults(e){const t=[..._(this,so).values()];let r={};return t.forEach(n=>{Da(e,n.queryKey)&&(r={...r,...n.defaultOptions})}),r}setMutationDefaults(e,t){_(this,io).set(Ma(e),{mutationKey:e,defaultOptions:t})}getMutationDefaults(e){const t=[..._(this,io).values()];let r={};return t.forEach(n=>{Da(e,n.mutationKey)&&(r={...r,...n.defaultOptions})}),r}defaultQueryOptions(e){if(e._defaulted)return e;const t={..._(this,Yn).queries,...this.getQueryDefaults(e.queryKey),...e,_defaulted:!0};return t.queryHash||(t.queryHash=Dh(t.queryKey,t)),t.refetchOnReconnect===void 0&&(t.refetchOnReconnect=t.networkMode!=="always"),t.throwOnError===void 0&&(t.throwOnError=!!t.suspense),!t.networkMode&&t.persister&&(t.networkMode="offlineFirst"),t.enabled!==!0&&t.queryFn===Oh&&(t.enabled=!1),t}defaultMutationOptions(e){return e!=null&&e._defaulted?e:{..._(this,Yn).mutations,...(e==null?void 0:e.mutationKey)&&this.getMutationDefaults(e.mutationKey),...e,_defaulted:!0}}clear(){_(this,et).clear(),_(this,Xn).clear()}},et=new WeakMap,Xn=new WeakMap,Yn=new WeakMap,so=new WeakMap,io=new WeakMap,Jn=new WeakMap,oo=new WeakMap,ao=new WeakMap,wy),qt,Se,rl,Ot,Ws,lo,es,Kr,nl,co,uo,Hs,qs,ts,fo,De,ea,tm,rm,nm,sm,im,om,am,FN,by,XR=(by=class extends ul{constructor(t,r){super();he(this,De);he(this,qt);he(this,Se);he(this,rl);he(this,Ot);he(this,Ws);he(this,lo);he(this,es);he(this,Kr);he(this,nl);he(this,co);he(this,uo);he(this,Hs);he(this,qs);he(this,ts);he(this,fo,new Set);this.options=r,J(this,qt,t),J(this,Kr,null),J(this,es,em()),this.options.experimental_prefetchInRender||_(this,es).reject(new Error("experimental_prefetchInRender feature flag is not enabled")),this.bindMethods(),this.setOptions(r)}bindMethods(){this.refetch=this.refetch.bind(this)}onSubscribe(){this.listeners.size===1&&(_(this,Se).addObserver(this),rv(_(this,Se),this.options)?Ne(this,De,ea).call(this):this.updateResult(),Ne(this,De,sm).call(this))}onUnsubscribe(){this.hasListeners()||this.destroy()}shouldFetchOnReconnect(){return lm(_(this,Se),this.options,this.options.refetchOnReconnect)}shouldFetchOnWindowFocus(){return lm(_(this,Se),this.options,this.options.refetchOnWindowFocus)}destroy(){this.listeners=new Set,Ne(this,De,im).call(this),Ne(this,De,om).call(this),_(this,Se).removeObserver(this)}setOptions(t,r){const n=this.options,s=_(this,Se);if(this.options=_(this,qt).defaultQueryOptions(t),this.options.enabled!==void 0&&typeof this.options.enabled!="boolean"&&typeof this.options.enabled!="function"&&typeof Pr(this.options.enabled,_(this,Se))!="boolean")throw new Error("Expected enabled to be a boolean or a callback that returns a boolean");Ne(this,De,am).call(this),_(this,Se).setOptions(this.options),n._defaulted&&!Xf(this.options,n)&&_(this,qt).getQueryCache().notify({type:"observerOptionsUpdated",query:_(this,Se),observer:this});const i=this.hasListeners();i&&nv(_(this,Se),s,this.options,n)&&Ne(this,De,ea).call(this),this.updateResult(r),i&&(_(this,Se)!==s||Pr(this.options.enabled,_(this,Se))!==Pr(n.enabled,_(this,Se))||qi(this.options.staleTime,_(this,Se))!==qi(n.staleTime,_(this,Se)))&&Ne(this,De,tm).call(this);const a=Ne(this,De,rm).call(this);i&&(_(this,Se)!==s||Pr(this.options.enabled,_(this,Se))!==Pr(n.enabled,_(this,Se))||a!==_(this,ts))&&Ne(this,De,nm).call(this,a)}getOptimisticResult(t){const r=_(this,qt).getQueryCache().build(_(this,qt),t),n=this.createResult(r,t);return JR(this,n)&&(J(this,Ot,n),J(this,lo,this.options),J(this,Ws,_(this,Se).state)),n}getCurrentResult(){return _(this,Ot)}trackResult(t,r){const n={};return Object.keys(t).forEach(s=>{Object.defineProperty(n,s,{configurable:!1,enumerable:!0,get:()=>(this.trackProp(s),r==null||r(s),t[s])})}),n}trackProp(t){_(this,fo).add(t)}getCurrentQuery(){return _(this,Se)}refetch({...t}={}){return this.fetch({...t})}fetchOptimistic(t){const r=_(this,qt).defaultQueryOptions(t),n=_(this,qt).getQueryCache().build(_(this,qt),r);return n.fetch().then(()=>this.createResult(n,r))}fetch(t){return Ne(this,De,ea).call(this,{...t,cancelRefetch:t.cancelRefetch??!0}).then(()=>(this.updateResult(),_(this,Ot)))}createResult(t,r){var P;const n=_(this,Se),s=this.options,i=_(this,Ot),a=_(this,Ws),l=_(this,lo),u=t!==n?t.state:_(this,rl),{state:d}=t;let f={...d},h=!1,x;if(r._optimisticResults){const C=this.hasListeners(),A=!C&&rv(t,r),z=C&&nv(t,n,r,s);(A||z)&&(f={...f,...LN(d.data,t.options)}),r._optimisticResults==="isRestoring"&&(f.fetchStatus="idle")}let{error:w,errorUpdatedAt:g,status:b}=f;if(r.select&&f.data!==void 0)if(i&&f.data===(a==null?void 0:a.data)&&r.select===_(this,nl))x=_(this,co);else try{J(this,nl,r.select),x=r.select(f.data),x=Jf(i==null?void 0:i.data,x,r),J(this,co,x),J(this,Kr,null)}catch(C){J(this,Kr,C)}else x=f.data;if(r.placeholderData!==void 0&&x===void 0&&b==="pending"){let C;if(i!=null&&i.isPlaceholderData&&r.placeholderData===(l==null?void 0:l.placeholderData))C=i.data;else if(C=typeof r.placeholderData=="function"?r.placeholderData((P=_(this,uo))==null?void 0:P.state.data,_(this,uo)):r.placeholderData,r.select&&C!==void 0)try{C=r.select(C),J(this,Kr,null)}catch(A){J(this,Kr,A)}C!==void 0&&(b="success",x=Jf(i==null?void 0:i.data,C,r),h=!0)}_(this,Kr)&&(w=_(this,Kr),x=_(this,co),g=Date.now(),b="error");const v=f.fetchStatus==="fetching",p=b==="pending",y=b==="error",N=p&&v,j=x!==void 0,T={status:b,fetchStatus:f.fetchStatus,isPending:p,isSuccess:b==="success",isError:y,isInitialLoading:N,isLoading:N,data:x,dataUpdatedAt:f.dataUpdatedAt,error:w,errorUpdatedAt:g,failureCount:f.fetchFailureCount,failureReason:f.fetchFailureReason,errorUpdateCount:f.errorUpdateCount,isFetched:f.dataUpdateCount>0||f.errorUpdateCount>0,isFetchedAfterMount:f.dataUpdateCount>u.dataUpdateCount||f.errorUpdateCount>u.errorUpdateCount,isFetching:v,isRefetching:v&&!p,isLoadingError:y&&!j,isPaused:f.fetchStatus==="paused",isPlaceholderData:h,isRefetchError:y&&j,isStale:Fh(t,r),refetch:this.refetch,promise:_(this,es)};if(this.options.experimental_prefetchInRender){const C=O=>{T.status==="error"?O.reject(T.error):T.data!==void 0&&O.resolve(T.data)},A=()=>{const O=J(this,es,T.promise=em());C(O)},z=_(this,es);switch(z.status){case"pending":t.queryHash===n.queryHash&&C(z);break;case"fulfilled":(T.status==="error"||T.data!==z.value)&&A();break;case"rejected":(T.status!=="error"||T.error!==z.reason)&&A();break}}return T}updateResult(t){const r=_(this,Ot),n=this.createResult(_(this,Se),this.options);if(J(this,Ws,_(this,Se).state),J(this,lo,this.options),_(this,Ws).data!==void 0&&J(this,uo,_(this,Se)),Xf(n,r))return;J(this,Ot,n);const s={},i=()=>{if(!r)return!0;const{notifyOnChangeProps:a}=this.options,l=typeof a=="function"?a():a;if(l==="all"||!l&&!_(this,fo).size)return!0;const c=new Set(l??_(this,fo));return this.options.throwOnError&&c.add("error"),Object.keys(_(this,Ot)).some(u=>{const d=u;return _(this,Ot)[d]!==r[d]&&c.has(d)})};(t==null?void 0:t.listeners)!==!1&&i()&&(s.listeners=!0),Ne(this,De,FN).call(this,{...s,...t})}onQueryUpdate(){this.updateResult(),this.hasListeners()&&Ne(this,De,sm).call(this)}},qt=new WeakMap,Se=new WeakMap,rl=new WeakMap,Ot=new WeakMap,Ws=new WeakMap,lo=new WeakMap,es=new WeakMap,Kr=new WeakMap,nl=new WeakMap,co=new WeakMap,uo=new WeakMap,Hs=new WeakMap,qs=new WeakMap,ts=new WeakMap,fo=new WeakMap,De=new WeakSet,ea=function(t){Ne(this,De,am).call(this);let r=_(this,Se).fetch(this.options,t);return t!=null&&t.throwOnError||(r=r.catch(mr)),r},tm=function(){Ne(this,De,im).call(this);const t=qi(this.options.staleTime,_(this,Se));if(ri||_(this,Ot).isStale||!Zf(t))return;const n=PN(_(this,Ot).dataUpdatedAt,t)+1;J(this,Hs,setTimeout(()=>{_(this,Ot).isStale||this.updateResult()},n))},rm=function(){return(typeof this.options.refetchInterval=="function"?this.options.refetchInterval(_(this,Se)):this.options.refetchInterval)??!1},nm=function(t){Ne(this,De,om).call(this),J(this,ts,t),!(ri||Pr(this.options.enabled,_(this,Se))===!1||!Zf(_(this,ts))||_(this,ts)===0)&&J(this,qs,setInterval(()=>{(this.options.refetchIntervalInBackground||Lh.isFocused())&&Ne(this,De,ea).call(this)},_(this,ts)))},sm=function(){Ne(this,De,tm).call(this),Ne(this,De,nm).call(this,Ne(this,De,rm).call(this))},im=function(){_(this,Hs)&&(clearTimeout(_(this,Hs)),J(this,Hs,void 0))},om=function(){_(this,qs)&&(clearInterval(_(this,qs)),J(this,qs,void 0))},am=function(){const t=_(this,qt).getQueryCache().build(_(this,qt),this.options);if(t===_(this,Se))return;const r=_(this,Se);J(this,Se,t),J(this,rl,t.state),this.hasListeners()&&(r==null||r.removeObserver(this),t.addObserver(this))},FN=function(t){bt.batch(()=>{t.listeners&&this.listeners.forEach(r=>{r(_(this,Ot))}),_(this,qt).getQueryCache().notify({query:_(this,Se),type:"observerResultsUpdated"})})},by);function YR(e,t){return Pr(t.enabled,e)!==!1&&e.state.data===void 0&&!(e.state.status==="error"&&t.retryOnMount===!1)}function rv(e,t){return YR(e,t)||e.state.data!==void 0&&lm(e,t,t.refetchOnMount)}function lm(e,t,r){if(Pr(t.enabled,e)!==!1){const n=typeof r=="function"?r(e):r;return n==="always"||n!==!1&&Fh(e,t)}return!1}function nv(e,t,r,n){return(e!==t||Pr(n.enabled,e)===!1)&&(!r.suspense||e.state.status!=="error")&&Fh(e,r)}function Fh(e,t){return Pr(t.enabled,e)!==!1&&e.isStaleByTime(qi(t.staleTime,e))}function JR(e,t){return!Xf(e.getCurrentResult(),t)}var VN=m.createContext(void 0),eA=e=>{const t=m.useContext(VN);if(!t)throw new Error("No QueryClient set, use QueryClientProvider to set one");return t},tA=({client:e,children:t})=>(m.useEffect(()=>(e.mount(),()=>{e.unmount()}),[e]),o.jsx(VN.Provider,{value:e,children:t})),$N=m.createContext(!1),rA=()=>m.useContext($N);$N.Provider;function nA(){let e=!1;return{clearReset:()=>{e=!1},reset:()=>{e=!0},isReset:()=>e}}var sA=m.createContext(nA()),iA=()=>m.useContext(sA);function oA(e,t){return typeof e=="function"?e(...t):!!e}function sv(){}var aA=(e,t)=>{(e.suspense||e.throwOnError||e.experimental_prefetchInRender)&&(t.isReset()||(e.retryOnMount=!1))},lA=e=>{m.useEffect(()=>{e.clearReset()},[e])},cA=({result:e,errorResetBoundary:t,throwOnError:r,query:n})=>e.isError&&!t.isReset()&&!e.isFetching&&n&&oA(r,[e.error,n]),uA=e=>{e.suspense&&(e.staleTime===void 0&&(e.staleTime=1e3),typeof e.gcTime=="number"&&(e.gcTime=Math.max(e.gcTime,1e3)))},dA=(e,t)=>e.isLoading&&e.isFetching&&!t,fA=(e,t)=>(e==null?void 0:e.suspense)&&t.isPending,iv=(e,t,r)=>t.fetchOptimistic(e).catch(()=>{r.clearReset()});function mA(e,t,r){var d,f,h,x,w;const n=eA(),s=rA(),i=iA(),a=n.defaultQueryOptions(e);(f=(d=n.getDefaultOptions().queries)==null?void 0:d._experimental_beforeQuery)==null||f.call(d,a),a._optimisticResults=s?"isRestoring":"optimistic",uA(a),aA(a,i),lA(i);const l=!n.getQueryCache().get(a.queryHash),[c]=m.useState(()=>new t(n,a)),u=c.getOptimisticResult(a);if(m.useSyncExternalStore(m.useCallback(g=>{const b=s?sv:c.subscribe(bt.batchCalls(g));return c.updateResult(),b},[c,s]),()=>c.getCurrentResult(),()=>c.getCurrentResult()),m.useEffect(()=>{c.setOptions(a,{listeners:!1})},[a,c]),fA(a,u))throw iv(a,c,i);if(cA({result:u,errorResetBoundary:i,throwOnError:a.throwOnError,query:n.getQueryCache().get(a.queryHash)}))throw u.error;if((x=(h=n.getDefaultOptions().queries)==null?void 0:h._experimental_afterQuery)==null||x.call(h,a,u),a.experimental_prefetchInRender&&!ri&&dA(u,s)){const g=l?iv(a,c,i):(w=n.getQueryCache().get(a.queryHash))==null?void 0:w.promise;g==null||g.catch(sv).finally(()=>{c.updateResult()})}return a.notifyOnChangeProps?u:c.trackResult(u)}function yr(e,t){return mA(e,XR)}async function zN(e){if(!e.ok){const t=await e.text()||e.statusText;throw new Error(`${e.status}: ${t}`)}}async function BN(e,t,r){const n=await fetch(t,{method:e,headers:r?{"Content-Type":"application/json"}:{},body:r?JSON.stringify(r):void 0,credentials:"include"});return await zN(n),n}const hA=({on401:e})=>async({queryKey:t})=>{const r=await fetch(t[0],{credentials:"include"});return e==="returnNull"&&r.status===401?null:(await zN(r),await r.json())},pA=new ZR({defaultOptions:{queries:{queryFn:hA({on401:"throw"}),refetchInterval:!1,refetchOnWindowFocus:!1,staleTime:1/0,retry:!1},mutations:{retry:!1}}}),gA=1,vA=1e6;let Fd=0;function yA(){return Fd=(Fd+1)%Number.MAX_SAFE_INTEGER,Fd.toString()}const Vd=new Map,ov=e=>{if(Vd.has(e))return;const t=setTimeout(()=>{Vd.delete(e),ha({type:"REMOVE_TOAST",toastId:e})},vA);Vd.set(e,t)},xA=(e,t)=>{switch(t.type){case"ADD_TOAST":return{...e,toasts:[t.toast,...e.toasts].slice(0,gA)};case"UPDATE_TOAST":return{...e,toasts:e.toasts.map(r=>r.id===t.toast.id?{...r,...t.toast}:r)};case"DISMISS_TOAST":{const{toastId:r}=t;return r?ov(r):e.toasts.forEach(n=>{ov(n.id)}),{...e,toasts:e.toasts.map(n=>n.id===r||r===void 0?{...n,open:!1}:n)}}case"REMOVE_TOAST":return t.toastId===void 0?{...e,toasts:[]}:{...e,toasts:e.toasts.filter(r=>r.id!==t.toastId)}}},lc=[];let cc={toasts:[]};function ha(e){cc=xA(cc,e),lc.forEach(t=>{t(cc)})}function wA({...e}){const t=yA(),r=s=>ha({type:"UPDATE_TOAST",toast:{...s,id:t}}),n=()=>ha({type:"DISMISS_TOAST",toastId:t});return ha({type:"ADD_TOAST",toast:{...e,id:t,open:!0,onOpenChange:s=>{s||n()}}}),{id:t,dismiss:n,update:r}}function dl(){const[e,t]=m.useState(cc);return m.useEffect(()=>(lc.push(t),()=>{const r=lc.indexOf(t);r>-1&&lc.splice(r,1)}),[e]),{...e,toast:wA,dismiss:r=>ha({type:"DISMISS_TOAST",toastId:r})}}function K(e,t,{checkForDefaultPrevented:r=!0}={}){return function(s){if(e==null||e(s),r===!1||!s.defaultPrevented)return t==null?void 0:t(s)}}function av(e,t){if(typeof e=="function")return e(t);e!=null&&(e.current=t)}function Iu(...e){return t=>{let r=!1;const n=e.map(s=>{const i=av(s,t);return!r&&typeof i=="function"&&(r=!0),i});if(r)return()=>{for(let s=0;s<n.length;s++){const i=n[s];typeof i=="function"?i():av(e[s],null)}}}}function Re(...e){return m.useCallback(Iu(...e),e)}function bA(e,t){const r=m.createContext(t),n=i=>{const{children:a,...l}=i,c=m.useMemo(()=>l,Object.values(l));return o.jsx(r.Provider,{value:c,children:a})};n.displayName=e+"Provider";function s(i){const a=m.useContext(r);if(a)return a;if(t!==void 0)return t;throw new Error(`\`${i}\` must be used within \`${e}\``)}return[n,s]}function Sr(e,t=[]){let r=[];function n(i,a){const l=m.createContext(a),c=r.length;r=[...r,a];const u=f=>{var v;const{scope:h,children:x,...w}=f,g=((v=h==null?void 0:h[e])==null?void 0:v[c])||l,b=m.useMemo(()=>w,Object.values(w));return o.jsx(g.Provider,{value:b,children:x})};u.displayName=i+"Provider";function d(f,h){var g;const x=((g=h==null?void 0:h[e])==null?void 0:g[c])||l,w=m.useContext(x);if(w)return w;if(a!==void 0)return a;throw new Error(`\`${f}\` must be used within \`${i}\``)}return[u,d]}const s=()=>{const i=r.map(a=>m.createContext(a));return function(l){const c=(l==null?void 0:l[e])||i;return m.useMemo(()=>({[`__scope${e}`]:{...l,[e]:c}}),[l,c])}};return s.scopeName=e,[n,NA(s,...t)]}function NA(...e){const t=e[0];if(e.length===1)return t;const r=()=>{const n=e.map(s=>({useScope:s(),scopeName:s.scopeName}));return function(i){const a=n.reduce((l,{useScope:c,scopeName:u})=>{const f=c(i)[`__scope${u}`];return{...l,...f}},{});return m.useMemo(()=>({[`__scope${t.scopeName}`]:a}),[a])}};return r.scopeName=t.scopeName,r}function ni(e){const t=SA(e),r=m.forwardRef((n,s)=>{const{children:i,...a}=n,l=m.Children.toArray(i),c=l.find(CA);if(c){const u=c.props.children,d=l.map(f=>f===c?m.Children.count(u)>1?m.Children.only(null):m.isValidElement(u)?u.props.children:null:f);return o.jsx(t,{...a,ref:s,children:m.isValidElement(u)?m.cloneElement(u,void 0,d):null})}return o.jsx(t,{...a,ref:s,children:i})});return r.displayName=`${e}.Slot`,r}var UN=ni("Slot");function SA(e){const t=m.forwardRef((r,n)=>{const{children:s,...i}=r;if(m.isValidElement(s)){const a=kA(s),l=_A(i,s.props);return s.type!==m.Fragment&&(l.ref=n?Iu(n,a):a),m.cloneElement(s,l)}return m.Children.count(s)>1?m.Children.only(null):null});return t.displayName=`${e}.SlotClone`,t}var WN=Symbol("radix.slottable");function jA(e){const t=({children:r})=>o.jsx(o.Fragment,{children:r});return t.displayName=`${e}.Slottable`,t.__radixId=WN,t}function CA(e){return m.isValidElement(e)&&typeof e.type=="function"&&"__radixId"in e.type&&e.type.__radixId===WN}function _A(e,t){const r={...t};for(const n in t){const s=e[n],i=t[n];/^on[A-Z]/.test(n)?s&&i?r[n]=(...l)=>{i(...l),s(...l)}:s&&(r[n]=s):n==="style"?r[n]={...s,...i}:n==="className"&&(r[n]=[s,i].filter(Boolean).join(" "))}return{...e,...r}}function kA(e){var n,s;let t=(n=Object.getOwnPropertyDescriptor(e.props,"ref"))==null?void 0:n.get,r=t&&"isReactWarning"in t&&t.isReactWarning;return r?e.ref:(t=(s=Object.getOwnPropertyDescriptor(e,"ref"))==null?void 0:s.get,r=t&&"isReactWarning"in t&&t.isReactWarning,r?e.props.ref:e.props.ref||e.ref)}function Mu(e){const t=e+"CollectionProvider",[r,n]=Sr(t),[s,i]=r(t,{collectionRef:{current:null},itemMap:new Map}),a=g=>{const{scope:b,children:v}=g,p=pe.useRef(null),y=pe.useRef(new Map).current;return o.jsx(s,{scope:b,itemMap:y,collectionRef:p,children:v})};a.displayName=t;const l=e+"CollectionSlot",c=ni(l),u=pe.forwardRef((g,b)=>{const{scope:v,children:p}=g,y=i(l,v),N=Re(b,y.collectionRef);return o.jsx(c,{ref:N,children:p})});u.displayName=l;const d=e+"CollectionItemSlot",f="data-radix-collection-item",h=ni(d),x=pe.forwardRef((g,b)=>{const{scope:v,children:p,...y}=g,N=pe.useRef(null),j=Re(b,N),E=i(d,v);return pe.useEffect(()=>(E.itemMap.set(N,{ref:N,...y}),()=>void E.itemMap.delete(N))),o.jsx(h,{[f]:"",ref:j,children:p})});x.displayName=d;function w(g){const b=i(e+"CollectionConsumer",g);return pe.useCallback(()=>{const p=b.collectionRef.current;if(!p)return[];const y=Array.from(p.querySelectorAll(`[${f}]`));return Array.from(b.itemMap.values()).sort((E,T)=>y.indexOf(E.ref.current)-y.indexOf(T.ref.current))},[b.collectionRef,b.itemMap])}return[{Provider:a,Slot:u,ItemSlot:x},w,n]}var TA=["a","button","div","form","h2","h3","img","input","label","li","nav","ol","p","span","svg","ul"],ce=TA.reduce((e,t)=>{const r=ni(`Primitive.${t}`),n=m.forwardRef((s,i)=>{const{asChild:a,...l}=s,c=a?r:t;return typeof window<"u"&&(window[Symbol.for("radix-ui")]=!0),o.jsx(c,{...l,ref:i})});return n.displayName=`Primitive.${t}`,{...e,[t]:n}},{});function Vh(e,t){e&&mi.flushSync(()=>e.dispatchEvent(t))}function jt(e){const t=m.useRef(e);return m.useEffect(()=>{t.current=e}),m.useMemo(()=>(...r)=>{var n;return(n=t.current)==null?void 0:n.call(t,...r)},[])}function EA(e,t=globalThis==null?void 0:globalThis.document){const r=jt(e);m.useEffect(()=>{const n=s=>{s.key==="Escape"&&r(s)};return t.addEventListener("keydown",n,{capture:!0}),()=>t.removeEventListener("keydown",n,{capture:!0})},[r,t])}var PA="DismissableLayer",cm="dismissableLayer.update",RA="dismissableLayer.pointerDownOutside",AA="dismissableLayer.focusOutside",lv,HN=m.createContext({layers:new Set,layersWithOutsidePointerEventsDisabled:new Set,branches:new Set}),Po=m.forwardRef((e,t)=>{const{disableOutsidePointerEvents:r=!1,onEscapeKeyDown:n,onPointerDownOutside:s,onFocusOutside:i,onInteractOutside:a,onDismiss:l,...c}=e,u=m.useContext(HN),[d,f]=m.useState(null),h=(d==null?void 0:d.ownerDocument)??(globalThis==null?void 0:globalThis.document),[,x]=m.useState({}),w=Re(t,T=>f(T)),g=Array.from(u.layers),[b]=[...u.layersWithOutsidePointerEventsDisabled].slice(-1),v=g.indexOf(b),p=d?g.indexOf(d):-1,y=u.layersWithOutsidePointerEventsDisabled.size>0,N=p>=v,j=MA(T=>{const P=T.target,C=[...u.branches].some(A=>A.contains(P));!N||C||(s==null||s(T),a==null||a(T),T.defaultPrevented||l==null||l())},h),E=DA(T=>{const P=T.target;[...u.branches].some(A=>A.contains(P))||(i==null||i(T),a==null||a(T),T.defaultPrevented||l==null||l())},h);return EA(T=>{p===u.layers.size-1&&(n==null||n(T),!T.defaultPrevented&&l&&(T.preventDefault(),l()))},h),m.useEffect(()=>{if(d)return r&&(u.layersWithOutsidePointerEventsDisabled.size===0&&(lv=h.body.style.pointerEvents,h.body.style.pointerEvents="none"),u.layersWithOutsidePointerEventsDisabled.add(d)),u.layers.add(d),cv(),()=>{r&&u.layersWithOutsidePointerEventsDisabled.size===1&&(h.body.style.pointerEvents=lv)}},[d,h,r,u]),m.useEffect(()=>()=>{d&&(u.layers.delete(d),u.layersWithOutsidePointerEventsDisabled.delete(d),cv())},[d,u]),m.useEffect(()=>{const T=()=>x({});return document.addEventListener(cm,T),()=>document.removeEventListener(cm,T)},[]),o.jsx(ce.div,{...c,ref:w,style:{pointerEvents:y?N?"auto":"none":void 0,...e.style},onFocusCapture:K(e.onFocusCapture,E.onFocusCapture),onBlurCapture:K(e.onBlurCapture,E.onBlurCapture),onPointerDownCapture:K(e.onPointerDownCapture,j.onPointerDownCapture)})});Po.displayName=PA;var IA="DismissableLayerBranch",qN=m.forwardRef((e,t)=>{const r=m.useContext(HN),n=m.useRef(null),s=Re(t,n);return m.useEffect(()=>{const i=n.current;if(i)return r.branches.add(i),()=>{r.branches.delete(i)}},[r.branches]),o.jsx(ce.div,{...e,ref:s})});qN.displayName=IA;function MA(e,t=globalThis==null?void 0:globalThis.document){const r=jt(e),n=m.useRef(!1),s=m.useRef(()=>{});return m.useEffect(()=>{const i=l=>{if(l.target&&!n.current){let c=function(){QN(RA,r,u,{discrete:!0})};const u={originalEvent:l};l.pointerType==="touch"?(t.removeEventListener("click",s.current),s.current=c,t.addEventListener("click",s.current,{once:!0})):c()}else t.removeEventListener("click",s.current);n.current=!1},a=window.setTimeout(()=>{t.addEventListener("pointerdown",i)},0);return()=>{window.clearTimeout(a),t.removeEventListener("pointerdown",i),t.removeEventListener("click",s.current)}},[t,r]),{onPointerDownCapture:()=>n.current=!0}}function DA(e,t=globalThis==null?void 0:globalThis.document){const r=jt(e),n=m.useRef(!1);return m.useEffect(()=>{const s=i=>{i.target&&!n.current&&QN(AA,r,{originalEvent:i},{discrete:!1})};return t.addEventListener("focusin",s),()=>t.removeEventListener("focusin",s)},[t,r]),{onFocusCapture:()=>n.current=!0,onBlurCapture:()=>n.current=!1}}function cv(){const e=new CustomEvent(cm);document.dispatchEvent(e)}function QN(e,t,r,{discrete:n}){const s=r.originalEvent.target,i=new CustomEvent(e,{bubbles:!1,cancelable:!0,detail:r});t&&s.addEventListener(e,t,{once:!0}),n?Vh(s,i):s.dispatchEvent(i)}var OA=Po,LA=qN,ht=globalThis!=null&&globalThis.document?m.useLayoutEffect:()=>{},FA="Portal",fl=m.forwardRef((e,t)=>{var l;const{container:r,...n}=e,[s,i]=m.useState(!1);ht(()=>i(!0),[]);const a=r||s&&((l=globalThis==null?void 0:globalThis.document)==null?void 0:l.body);return a?sR.createPortal(o.jsx(ce.div,{...n,ref:t}),a):null});fl.displayName=FA;function VA(e,t){return m.useReducer((r,n)=>t[r][n]??r,e)}var Br=e=>{const{present:t,children:r}=e,n=$A(t),s=typeof r=="function"?r({present:n.isPresent}):m.Children.only(r),i=Re(n.ref,zA(s));return typeof r=="function"||n.isPresent?m.cloneElement(s,{ref:i}):null};Br.displayName="Presence";function $A(e){const[t,r]=m.useState(),n=m.useRef({}),s=m.useRef(e),i=m.useRef("none"),a=e?"mounted":"unmounted",[l,c]=VA(a,{mounted:{UNMOUNT:"unmounted",ANIMATION_OUT:"unmountSuspended"},unmountSuspended:{MOUNT:"mounted",ANIMATION_END:"unmounted"},unmounted:{MOUNT:"mounted"}});return m.useEffect(()=>{const u=Ul(n.current);i.current=l==="mounted"?u:"none"},[l]),ht(()=>{const u=n.current,d=s.current;if(d!==e){const h=i.current,x=Ul(u);e?c("MOUNT"):x==="none"||(u==null?void 0:u.display)==="none"?c("UNMOUNT"):c(d&&h!==x?"ANIMATION_OUT":"UNMOUNT"),s.current=e}},[e,c]),ht(()=>{if(t){let u;const d=t.ownerDocument.defaultView??window,f=x=>{const g=Ul(n.current).includes(x.animationName);if(x.target===t&&g&&(c("ANIMATION_END"),!s.current)){const b=t.style.animationFillMode;t.style.animationFillMode="forwards",u=d.setTimeout(()=>{t.style.animationFillMode==="forwards"&&(t.style.animationFillMode=b)})}},h=x=>{x.target===t&&(i.current=Ul(n.current))};return t.addEventListener("animationstart",h),t.addEventListener("animationcancel",f),t.addEventListener("animationend",f),()=>{d.clearTimeout(u),t.removeEventListener("animationstart",h),t.removeEventListener("animationcancel",f),t.removeEventListener("animationend",f)}}else c("ANIMATION_END")},[t,c]),{isPresent:["mounted","unmountSuspended"].includes(l),ref:m.useCallback(u=>{u&&(n.current=getComputedStyle(u)),r(u)},[])}}function Ul(e){return(e==null?void 0:e.animationName)||"none"}function zA(e){var n,s;let t=(n=Object.getOwnPropertyDescriptor(e.props,"ref"))==null?void 0:n.get,r=t&&"isReactWarning"in t&&t.isReactWarning;return r?e.ref:(t=(s=Object.getOwnPropertyDescriptor(e,"ref"))==null?void 0:s.get,r=t&&"isReactWarning"in t&&t.isReactWarning,r?e.props.ref:e.props.ref||e.ref)}function si({prop:e,defaultProp:t,onChange:r=()=>{}}){const[n,s]=BA({defaultProp:t,onChange:r}),i=e!==void 0,a=i?e:n,l=jt(r),c=m.useCallback(u=>{if(i){const f=typeof u=="function"?u(e):u;f!==e&&l(f)}else s(u)},[i,e,s,l]);return[a,c]}function BA({defaultProp:e,onChange:t}){const r=m.useState(e),[n]=r,s=m.useRef(n),i=jt(t);return m.useEffect(()=>{s.current!==n&&(i(n),s.current=n)},[n,s,i]),r}var UA="VisuallyHidden",ml=m.forwardRef((e,t)=>o.jsx(ce.span,{...e,ref:t,style:{position:"absolute",border:0,width:1,height:1,padding:0,margin:-1,overflow:"hidden",clip:"rect(0, 0, 0, 0)",whiteSpace:"nowrap",wordWrap:"normal",...e.style}}));ml.displayName=UA;var WA=ml,$h="ToastProvider",[zh,HA,qA]=Mu("Toast"),[GN,E6]=Sr("Toast",[qA]),[QA,Du]=GN($h),KN=e=>{const{__scopeToast:t,label:r="Notification",duration:n=5e3,swipeDirection:s="right",swipeThreshold:i=50,children:a}=e,[l,c]=m.useState(null),[u,d]=m.useState(0),f=m.useRef(!1),h=m.useRef(!1);return r.trim()||console.error(`Invalid prop \`label\` supplied to \`${$h}\`. Expected non-empty \`string\`.`),o.jsx(zh.Provider,{scope:t,children:o.jsx(QA,{scope:t,label:r,duration:n,swipeDirection:s,swipeThreshold:i,toastCount:u,viewport:l,onViewportChange:c,onToastAdd:m.useCallback(()=>d(x=>x+1),[]),onToastRemove:m.useCallback(()=>d(x=>x-1),[]),isFocusedToastEscapeKeyDownRef:f,isClosePausedRef:h,children:a})})};KN.displayName=$h;var ZN="ToastViewport",GA=["F8"],um="toast.viewportPause",dm="toast.viewportResume",XN=m.forwardRef((e,t)=>{const{__scopeToast:r,hotkey:n=GA,label:s="Notifications ({hotkey})",...i}=e,a=Du(ZN,r),l=HA(r),c=m.useRef(null),u=m.useRef(null),d=m.useRef(null),f=m.useRef(null),h=Re(t,f,a.onViewportChange),x=n.join("+").replace(/Key/g,"").replace(/Digit/g,""),w=a.toastCount>0;m.useEffect(()=>{const b=v=>{var y;n.length!==0&&n.every(N=>v[N]||v.code===N)&&((y=f.current)==null||y.focus())};return document.addEventListener("keydown",b),()=>document.removeEventListener("keydown",b)},[n]),m.useEffect(()=>{const b=c.current,v=f.current;if(w&&b&&v){const p=()=>{if(!a.isClosePausedRef.current){const E=new CustomEvent(um);v.dispatchEvent(E),a.isClosePausedRef.current=!0}},y=()=>{if(a.isClosePausedRef.current){const E=new CustomEvent(dm);v.dispatchEvent(E),a.isClosePausedRef.current=!1}},N=E=>{!b.contains(E.relatedTarget)&&y()},j=()=>{b.contains(document.activeElement)||y()};return b.addEventListener("focusin",p),b.addEventListener("focusout",N),b.addEventListener("pointermove",p),b.addEventListener("pointerleave",j),window.addEventListener("blur",p),window.addEventListener("focus",y),()=>{b.removeEventListener("focusin",p),b.removeEventListener("focusout",N),b.removeEventListener("pointermove",p),b.removeEventListener("pointerleave",j),window.removeEventListener("blur",p),window.removeEventListener("focus",y)}}},[w,a.isClosePausedRef]);const g=m.useCallback(({tabbingDirection:b})=>{const p=l().map(y=>{const N=y.ref.current,j=[N,...aI(N)];return b==="forwards"?j:j.reverse()});return(b==="forwards"?p.reverse():p).flat()},[l]);return m.useEffect(()=>{const b=f.current;if(b){const v=p=>{var j,E,T;const y=p.altKey||p.ctrlKey||p.metaKey;if(p.key==="Tab"&&!y){const P=document.activeElement,C=p.shiftKey;if(p.target===b&&C){(j=u.current)==null||j.focus();return}const O=g({tabbingDirection:C?"backwards":"forwards"}),U=O.findIndex(F=>F===P);$d(O.slice(U+1))?p.preventDefault():C?(E=u.current)==null||E.focus():(T=d.current)==null||T.focus()}};return b.addEventListener("keydown",v),()=>b.removeEventListener("keydown",v)}},[l,g]),o.jsxs(LA,{ref:c,role:"region","aria-label":s.replace("{hotkey}",x),tabIndex:-1,style:{pointerEvents:w?void 0:"none"},children:[w&&o.jsx(fm,{ref:u,onFocusFromOutsideViewport:()=>{const b=g({tabbingDirection:"forwards"});$d(b)}}),o.jsx(zh.Slot,{scope:r,children:o.jsx(ce.ol,{tabIndex:-1,...i,ref:h})}),w&&o.jsx(fm,{ref:d,onFocusFromOutsideViewport:()=>{const b=g({tabbingDirection:"backwards"});$d(b)}})]})});XN.displayName=ZN;var YN="ToastFocusProxy",fm=m.forwardRef((e,t)=>{const{__scopeToast:r,onFocusFromOutsideViewport:n,...s}=e,i=Du(YN,r);return o.jsx(ml,{"aria-hidden":!0,tabIndex:0,...s,ref:t,style:{position:"fixed"},onFocus:a=>{var u;const l=a.relatedTarget;!((u=i.viewport)!=null&&u.contains(l))&&n()}})});fm.displayName=YN;var Ou="Toast",KA="toast.swipeStart",ZA="toast.swipeMove",XA="toast.swipeCancel",YA="toast.swipeEnd",JN=m.forwardRef((e,t)=>{const{forceMount:r,open:n,defaultOpen:s,onOpenChange:i,...a}=e,[l=!0,c]=si({prop:n,defaultProp:s,onChange:i});return o.jsx(Br,{present:r||l,children:o.jsx(tI,{open:l,...a,ref:t,onClose:()=>c(!1),onPause:jt(e.onPause),onResume:jt(e.onResume),onSwipeStart:K(e.onSwipeStart,u=>{u.currentTarget.setAttribute("data-swipe","start")}),onSwipeMove:K(e.onSwipeMove,u=>{const{x:d,y:f}=u.detail.delta;u.currentTarget.setAttribute("data-swipe","move"),u.currentTarget.style.setProperty("--radix-toast-swipe-move-x",`${d}px`),u.currentTarget.style.setProperty("--radix-toast-swipe-move-y",`${f}px`)}),onSwipeCancel:K(e.onSwipeCancel,u=>{u.currentTarget.setAttribute("data-swipe","cancel"),u.currentTarget.style.removeProperty("--radix-toast-swipe-move-x"),u.currentTarget.style.removeProperty("--radix-toast-swipe-move-y"),u.currentTarget.style.removeProperty("--radix-toast-swipe-end-x"),u.currentTarget.style.removeProperty("--radix-toast-swipe-end-y")}),onSwipeEnd:K(e.onSwipeEnd,u=>{const{x:d,y:f}=u.detail.delta;u.currentTarget.setAttribute("data-swipe","end"),u.currentTarget.style.removeProperty("--radix-toast-swipe-move-x"),u.currentTarget.style.removeProperty("--radix-toast-swipe-move-y"),u.currentTarget.style.setProperty("--radix-toast-swipe-end-x",`${d}px`),u.currentTarget.style.setProperty("--radix-toast-swipe-end-y",`${f}px`),c(!1)})})})});JN.displayName=Ou;var[JA,eI]=GN(Ou,{onClose(){}}),tI=m.forwardRef((e,t)=>{const{__scopeToast:r,type:n="foreground",duration:s,open:i,onClose:a,onEscapeKeyDown:l,onPause:c,onResume:u,onSwipeStart:d,onSwipeMove:f,onSwipeCancel:h,onSwipeEnd:x,...w}=e,g=Du(Ou,r),[b,v]=m.useState(null),p=Re(t,F=>v(F)),y=m.useRef(null),N=m.useRef(null),j=s||g.duration,E=m.useRef(0),T=m.useRef(j),P=m.useRef(0),{onToastAdd:C,onToastRemove:A}=g,z=jt(()=>{var re;(b==null?void 0:b.contains(document.activeElement))&&((re=g.viewport)==null||re.focus()),a()}),O=m.useCallback(F=>{!F||F===1/0||(window.clearTimeout(P.current),E.current=new Date().getTime(),P.current=window.setTimeout(z,F))},[z]);m.useEffect(()=>{const F=g.viewport;if(F){const re=()=>{O(T.current),u==null||u()},Q=()=>{const oe=new Date().getTime()-E.current;T.current=T.current-oe,window.clearTimeout(P.current),c==null||c()};return F.addEventListener(um,Q),F.addEventListener(dm,re),()=>{F.removeEventListener(um,Q),F.removeEventListener(dm,re)}}},[g.viewport,j,c,u,O]),m.useEffect(()=>{i&&!g.isClosePausedRef.current&&O(j)},[i,j,g.isClosePausedRef,O]),m.useEffect(()=>(C(),()=>A()),[C,A]);const U=m.useMemo(()=>b?oS(b):null,[b]);return g.viewport?o.jsxs(o.Fragment,{children:[U&&o.jsx(rI,{__scopeToast:r,role:"status","aria-live":n==="foreground"?"assertive":"polite","aria-atomic":!0,children:U}),o.jsx(JA,{scope:r,onClose:z,children:mi.createPortal(o.jsx(zh.ItemSlot,{scope:r,children:o.jsx(OA,{asChild:!0,onEscapeKeyDown:K(l,()=>{g.isFocusedToastEscapeKeyDownRef.current||z(),g.isFocusedToastEscapeKeyDownRef.current=!1}),children:o.jsx(ce.li,{role:"status","aria-live":"off","aria-atomic":!0,tabIndex:0,"data-state":i?"open":"closed","data-swipe-direction":g.swipeDirection,...w,ref:p,style:{userSelect:"none",touchAction:"none",...e.style},onKeyDown:K(e.onKeyDown,F=>{F.key==="Escape"&&(l==null||l(F.nativeEvent),F.nativeEvent.defaultPrevented||(g.isFocusedToastEscapeKeyDownRef.current=!0,z()))}),onPointerDown:K(e.onPointerDown,F=>{F.button===0&&(y.current={x:F.clientX,y:F.clientY})}),onPointerMove:K(e.onPointerMove,F=>{if(!y.current)return;const re=F.clientX-y.current.x,Q=F.clientY-y.current.y,oe=!!N.current,I=["left","right"].includes(g.swipeDirection),M=["left","up"].includes(g.swipeDirection)?Math.min:Math.max,W=I?M(0,re):0,se=I?0:M(0,Q),xe=F.pointerType==="touch"?10:2,Je={x:W,y:se},ze={originalEvent:F,delta:Je};oe?(N.current=Je,Wl(ZA,f,ze,{discrete:!1})):uv(Je,g.swipeDirection,xe)?(N.current=Je,Wl(KA,d,ze,{discrete:!1}),F.target.setPointerCapture(F.pointerId)):(Math.abs(re)>xe||Math.abs(Q)>xe)&&(y.current=null)}),onPointerUp:K(e.onPointerUp,F=>{const re=N.current,Q=F.target;if(Q.hasPointerCapture(F.pointerId)&&Q.releasePointerCapture(F.pointerId),N.current=null,y.current=null,re){const oe=F.currentTarget,I={originalEvent:F,delta:re};uv(re,g.swipeDirection,g.swipeThreshold)?Wl(YA,x,I,{discrete:!0}):Wl(XA,h,I,{discrete:!0}),oe.addEventListener("click",M=>M.preventDefault(),{once:!0})}})})})}),g.viewport)})]}):null}),rI=e=>{const{__scopeToast:t,children:r,...n}=e,s=Du(Ou,t),[i,a]=m.useState(!1),[l,c]=m.useState(!1);return iI(()=>a(!0)),m.useEffect(()=>{const u=window.setTimeout(()=>c(!0),1e3);return()=>window.clearTimeout(u)},[]),l?null:o.jsx(fl,{asChild:!0,children:o.jsx(ml,{...n,children:i&&o.jsxs(o.Fragment,{children:[s.label," ",r]})})})},nI="ToastTitle",eS=m.forwardRef((e,t)=>{const{__scopeToast:r,...n}=e;return o.jsx(ce.div,{...n,ref:t})});eS.displayName=nI;var sI="ToastDescription",tS=m.forwardRef((e,t)=>{const{__scopeToast:r,...n}=e;return o.jsx(ce.div,{...n,ref:t})});tS.displayName=sI;var rS="ToastAction",nS=m.forwardRef((e,t)=>{const{altText:r,...n}=e;return r.trim()?o.jsx(iS,{altText:r,asChild:!0,children:o.jsx(Bh,{...n,ref:t})}):(console.error(`Invalid prop \`altText\` supplied to \`${rS}\`. Expected non-empty \`string\`.`),null)});nS.displayName=rS;var sS="ToastClose",Bh=m.forwardRef((e,t)=>{const{__scopeToast:r,...n}=e,s=eI(sS,r);return o.jsx(iS,{asChild:!0,children:o.jsx(ce.button,{type:"button",...n,ref:t,onClick:K(e.onClick,s.onClose)})})});Bh.displayName=sS;var iS=m.forwardRef((e,t)=>{const{__scopeToast:r,altText:n,...s}=e;return o.jsx(ce.div,{"data-radix-toast-announce-exclude":"","data-radix-toast-announce-alt":n||void 0,...s,ref:t})});function oS(e){const t=[];return Array.from(e.childNodes).forEach(n=>{if(n.nodeType===n.TEXT_NODE&&n.textContent&&t.push(n.textContent),oI(n)){const s=n.ariaHidden||n.hidden||n.style.display==="none",i=n.dataset.radixToastAnnounceExclude==="";if(!s)if(i){const a=n.dataset.radixToastAnnounceAlt;a&&t.push(a)}else t.push(...oS(n))}}),t}function Wl(e,t,r,{discrete:n}){const s=r.originalEvent.currentTarget,i=new CustomEvent(e,{bubbles:!0,cancelable:!0,detail:r});t&&s.addEventListener(e,t,{once:!0}),n?Vh(s,i):s.dispatchEvent(i)}var uv=(e,t,r=0)=>{const n=Math.abs(e.x),s=Math.abs(e.y),i=n>s;return t==="left"||t==="right"?i&&n>r:!i&&s>r};function iI(e=()=>{}){const t=jt(e);ht(()=>{let r=0,n=0;return r=window.requestAnimationFrame(()=>n=window.requestAnimationFrame(t)),()=>{window.cancelAnimationFrame(r),window.cancelAnimationFrame(n)}},[t])}function oI(e){return e.nodeType===e.ELEMENT_NODE}function aI(e){const t=[],r=document.createTreeWalker(e,NodeFilter.SHOW_ELEMENT,{acceptNode:n=>{const s=n.tagName==="INPUT"&&n.type==="hidden";return n.disabled||n.hidden||s?NodeFilter.FILTER_SKIP:n.tabIndex>=0?NodeFilter.FILTER_ACCEPT:NodeFilter.FILTER_SKIP}});for(;r.nextNode();)t.push(r.currentNode);return t}function $d(e){const t=document.activeElement;return e.some(r=>r===t?!0:(r.focus(),document.activeElement!==t))}var lI=KN,aS=XN,lS=JN,cS=eS,uS=tS,dS=nS,fS=Bh;function mS(e){var t,r,n="";if(typeof e=="string"||typeof e=="number")n+=e;else if(typeof e=="object")if(Array.isArray(e)){var s=e.length;for(t=0;t<s;t++)e[t]&&(r=mS(e[t]))&&(n&&(n+=" "),n+=r)}else for(r in e)e[r]&&(n&&(n+=" "),n+=r);return n}function hS(){for(var e,t,r=0,n="",s=arguments.length;r<s;r++)(e=arguments[r])&&(t=mS(e))&&(n&&(n+=" "),n+=t);return n}const dv=e=>typeof e=="boolean"?`${e}`:e===0?"0":e,fv=hS,hl=(e,t)=>r=>{var n;if((t==null?void 0:t.variants)==null)return fv(e,r==null?void 0:r.class,r==null?void 0:r.className);const{variants:s,defaultVariants:i}=t,a=Object.keys(s).map(u=>{const d=r==null?void 0:r[u],f=i==null?void 0:i[u];if(d===null)return null;const h=dv(d)||dv(f);return s[u][h]}),l=r&&Object.entries(r).reduce((u,d)=>{let[f,h]=d;return h===void 0||(u[f]=h),u},{}),c=t==null||(n=t.compoundVariants)===null||n===void 0?void 0:n.reduce((u,d)=>{let{class:f,className:h,...x}=d;return Object.entries(x).every(w=>{let[g,b]=w;return Array.isArray(b)?b.includes({...i,...l}[g]):{...i,...l}[g]===b})?[...u,f,h]:u},[]);return fv(e,a,c,r==null?void 0:r.class,r==null?void 0:r.className)};/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const cI=e=>e.replace(/([a-z0-9])([A-Z])/g,"$1-$2").toLowerCase(),pS=(...e)=>e.filter((t,r,n)=>!!t&&n.indexOf(t)===r).join(" ");/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */var uI={xmlns:"http://www.w3.org/2000/svg",width:24,height:24,viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:2,strokeLinecap:"round",strokeLinejoin:"round"};/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const dI=m.forwardRef(({color:e="currentColor",size:t=24,strokeWidth:r=2,absoluteStrokeWidth:n,className:s="",children:i,iconNode:a,...l},c)=>m.createElement("svg",{ref:c,...uI,width:t,height:t,stroke:e,strokeWidth:n?Number(r)*24/Number(t):r,className:pS("lucide",s),...l},[...a.map(([u,d])=>m.createElement(u,d)),...Array.isArray(i)?i:[i]]));/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const de=(e,t)=>{const r=m.forwardRef(({className:n,...s},i)=>m.createElement(dI,{ref:i,iconNode:t,className:pS(`lucide-${cI(e)}`,n),...s}));return r.displayName=`${e}`,r};/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const Oa=de("Activity",[["path",{d:"M22 12h-2.48a2 2 0 0 0-1.93 1.46l-2.35 8.36a.25.25 0 0 1-.48 0L9.24 2.18a.25.25 0 0 0-.48 0l-2.35 8.36A2 2 0 0 1 4.49 12H2",key:"169zse"}]]);/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const fI=de("Apple",[["path",{d:"M12 20.94c1.5 0 2.75 1.06 4 1.06 3 0 6-8 6-12.22A4.91 4.91 0 0 0 17 5c-2.22 0-4 1.44-5 2-1-.56-2.78-2-5-2a4.9 4.9 0 0 0-5 4.78C2 14 5 22 8 22c1.25 0 2.5-1.06 4-1.06Z",key:"3s7exb"}],["path",{d:"M10 2c1 .5 2 2 2 5",key:"fcco2y"}]]);/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const mI=de("ArrowLeft",[["path",{d:"m12 19-7-7 7-7",key:"1l729n"}],["path",{d:"M19 12H5",key:"x3x0zl"}]]);/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const hI=de("ArrowRight",[["path",{d:"M5 12h14",key:"1ays0h"}],["path",{d:"m12 5 7 7-7 7",key:"xquz4c"}]]);/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const pI=de("Award",[["path",{d:"m15.477 12.89 1.515 8.526a.5.5 0 0 1-.81.47l-3.58-2.687a1 1 0 0 0-1.197 0l-3.586 2.686a.5.5 0 0 1-.81-.469l1.514-8.526",key:"1yiouv"}],["circle",{cx:"12",cy:"8",r:"6",key:"1vp47v"}]]);/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const gI=de("Bell",[["path",{d:"M6 8a6 6 0 0 1 12 0c0 7 3 9 3 9H3s3-2 3-9",key:"1qo2s2"}],["path",{d:"M10.3 21a1.94 1.94 0 0 0 3.4 0",key:"qgo35s"}]]);/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const vI=de("Brain",[["path",{d:"M12 5a3 3 0 1 0-5.997.125 4 4 0 0 0-2.526 5.77 4 4 0 0 0 .556 6.588A4 4 0 1 0 12 18Z",key:"l5xja"}],["path",{d:"M12 5a3 3 0 1 1 5.997.125 4 4 0 0 1 2.526 5.77 4 4 0 0 1-.556 6.588A4 4 0 1 1 12 18Z",key:"ep3f8r"}],["path",{d:"M15 13a4.5 4.5 0 0 1-3-4 4.5 4.5 0 0 1-3 4",key:"1p4c4q"}],["path",{d:"M17.599 6.5a3 3 0 0 0 .399-1.375",key:"tmeiqw"}],["path",{d:"M6.003 5.125A3 3 0 0 0 6.401 6.5",key:"105sqy"}],["path",{d:"M3.477 10.896a4 4 0 0 1 .585-.396",key:"ql3yin"}],["path",{d:"M19.938 10.5a4 4 0 0 1 .585.396",key:"1qfode"}],["path",{d:"M6 18a4 4 0 0 1-1.967-.516",key:"2e4loj"}],["path",{d:"M19.967 17.484A4 4 0 0 1 18 18",key:"159ez6"}]]);/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const gS=de("Calendar",[["path",{d:"M8 2v4",key:"1cmpym"}],["path",{d:"M16 2v4",key:"4m81vk"}],["rect",{width:"18",height:"18",x:"3",y:"4",rx:"2",key:"1hopcy"}],["path",{d:"M3 10h18",key:"8toen8"}]]);/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const yI=de("Camera",[["path",{d:"M14.5 4h-5L7 7H4a2 2 0 0 0-2 2v9a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2h-3l-2.5-3z",key:"1tc9qg"}],["circle",{cx:"12",cy:"13",r:"3",key:"1vg3eu"}]]);/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const vS=de("ChartColumn",[["path",{d:"M3 3v16a2 2 0 0 0 2 2h16",key:"c24i48"}],["path",{d:"M18 17V9",key:"2bz60n"}],["path",{d:"M13 17V5",key:"1frdt8"}],["path",{d:"M8 17v-3",key:"17ska0"}]]);/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const Lu=de("Check",[["path",{d:"M20 6 9 17l-5-5",key:"1gmf2c"}]]);/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const yS=de("ChevronDown",[["path",{d:"m6 9 6 6 6-6",key:"qrunsl"}]]);/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const xS=de("ChevronRight",[["path",{d:"m9 18 6-6-6-6",key:"mthhwq"}]]);/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const xI=de("ChevronUp",[["path",{d:"m18 15-6-6-6 6",key:"153udz"}]]);/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const wI=de("CircleAlert",[["circle",{cx:"12",cy:"12",r:"10",key:"1mglay"}],["line",{x1:"12",x2:"12",y1:"8",y2:"12",key:"1pkeuh"}],["line",{x1:"12",x2:"12.01",y1:"16",y2:"16",key:"4dfq90"}]]);/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const mv=de("CircleCheckBig",[["path",{d:"M21.801 10A10 10 0 1 1 17 3.335",key:"yps3ct"}],["path",{d:"m9 11 3 3L22 4",key:"1pflzl"}]]);/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const bI=de("Circle",[["circle",{cx:"12",cy:"12",r:"10",key:"1mglay"}]]);/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const Vc=de("Clock",[["circle",{cx:"12",cy:"12",r:"10",key:"1mglay"}],["polyline",{points:"12 6 12 12 16 14",key:"68esgv"}]]);/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const Ro=de("Dumbbell",[["path",{d:"M14.4 14.4 9.6 9.6",key:"ic80wn"}],["path",{d:"M18.657 21.485a2 2 0 1 1-2.829-2.828l-1.767 1.768a2 2 0 1 1-2.829-2.829l6.364-6.364a2 2 0 1 1 2.829 2.829l-1.768 1.767a2 2 0 1 1 2.828 2.829z",key:"nnl7wr"}],["path",{d:"m21.5 21.5-1.4-1.4",key:"1f1ice"}],["path",{d:"M3.9 3.9 2.5 2.5",key:"1evmna"}],["path",{d:"M6.404 12.768a2 2 0 1 1-2.829-2.829l1.768-1.767a2 2 0 1 1-2.828-2.829l2.828-2.828a2 2 0 1 1 2.829 2.828l1.767-1.768a2 2 0 1 1 2.829 2.829z",key:"yhosts"}]]);/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const NI=de("Filter",[["polygon",{points:"22 3 2 3 10 12.46 10 19 14 21 14 12.46 22 3",key:"1yg77f"}]]);/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const pl=de("Flame",[["path",{d:"M8.5 14.5A2.5 2.5 0 0 0 11 12c0-1.38-.5-2-1-3-1.072-2.143-.224-4.054 2-6 .5 2.5 2 4.9 4 6.5 2 1.6 3 3.5 3 5.5a7 7 0 1 1-14 0c0-1.153.433-2.294 1-3a2.5 2.5 0 0 0 2.5 2.5z",key:"96xj49"}]]);/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const wS=de("Heart",[["path",{d:"M19 14c1.49-1.46 3-3.21 3-5.5A5.5 5.5 0 0 0 16.5 3c-1.76 0-3 .5-4.5 2-1.5-1.5-2.74-2-4.5-2A5.5 5.5 0 0 0 2 8.5c0 2.3 1.5 4.05 3 5.5l7 7Z",key:"c3ymky"}]]);/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const SI=de("Instagram",[["rect",{width:"20",height:"20",x:"2",y:"2",rx:"5",ry:"5",key:"2e1cvw"}],["path",{d:"M16 11.37A4 4 0 1 1 12.63 8 4 4 0 0 1 16 11.37z",key:"9exkf1"}],["line",{x1:"17.5",x2:"17.51",y1:"6.5",y2:"6.5",key:"r4j83e"}]]);/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const hv=de("LoaderCircle",[["path",{d:"M21 12a9 9 0 1 1-6.219-8.56",key:"13zald"}]]);/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const jI=de("Medal",[["path",{d:"M7.21 15 2.66 7.14a2 2 0 0 1 .13-2.2L4.4 2.8A2 2 0 0 1 6 2h12a2 2 0 0 1 1.6.8l1.6 2.14a2 2 0 0 1 .14 2.2L16.79 15",key:"143lza"}],["path",{d:"M11 12 5.12 2.2",key:"qhuxz6"}],["path",{d:"m13 12 5.88-9.8",key:"hbye0f"}],["path",{d:"M8 7h8",key:"i86dvs"}],["circle",{cx:"12",cy:"17",r:"5",key:"qbz8iq"}],["path",{d:"M12 18v-2h-.5",key:"fawc4q"}]]);/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const CI=de("Menu",[["line",{x1:"4",x2:"20",y1:"12",y2:"12",key:"1e0a9i"}],["line",{x1:"4",x2:"20",y1:"6",y2:"6",key:"1owob3"}],["line",{x1:"4",x2:"20",y1:"18",y2:"18",key:"yk5zj1"}]]);/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const mm=de("MessageCircle",[["path",{d:"M7.9 20A9 9 0 1 0 4 16.1L2 22Z",key:"vv11sd"}]]);/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const _I=de("MessageSquare",[["path",{d:"M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z",key:"1lielz"}]]);/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const kI=de("Moon",[["path",{d:"M12 3a6 6 0 0 0 9 9 9 9 0 1 1-9-9Z",key:"a7tn18"}]]);/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const TI=de("Pause",[["rect",{x:"14",y:"4",width:"4",height:"16",rx:"1",key:"zuxfzm"}],["rect",{x:"6",y:"4",width:"4",height:"16",rx:"1",key:"1okwgv"}]]);/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const Fu=de("Play",[["polygon",{points:"6 3 20 12 6 21 6 3",key:"1oa8hb"}]]);/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const Uh=de("Plus",[["path",{d:"M5 12h14",key:"1ays0h"}],["path",{d:"M12 5v14",key:"s699le"}]]);/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const EI=de("Search",[["circle",{cx:"11",cy:"11",r:"8",key:"4ej97u"}],["path",{d:"m21 21-4.3-4.3",key:"1qie3q"}]]);/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const bS=de("Share2",[["circle",{cx:"18",cy:"5",r:"3",key:"gq8acd"}],["circle",{cx:"6",cy:"12",r:"3",key:"w7nqdw"}],["circle",{cx:"18",cy:"19",r:"3",key:"1xt0gg"}],["line",{x1:"8.59",x2:"15.42",y1:"13.51",y2:"17.49",key:"47mynk"}],["line",{x1:"15.41",x2:"8.59",y1:"6.51",y2:"10.49",key:"1n3mei"}]]);/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const PI=de("Square",[["rect",{width:"18",height:"18",x:"3",y:"3",rx:"2",key:"afitv7"}]]);/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const RI=de("Sun",[["circle",{cx:"12",cy:"12",r:"4",key:"4exip2"}],["path",{d:"M12 2v2",key:"tus03m"}],["path",{d:"M12 20v2",key:"1lh1kg"}],["path",{d:"m4.93 4.93 1.41 1.41",key:"149t6j"}],["path",{d:"m17.66 17.66 1.41 1.41",key:"ptbguv"}],["path",{d:"M2 12h2",key:"1t8f8n"}],["path",{d:"M20 12h2",key:"1q8mjw"}],["path",{d:"m6.34 17.66-1.41 1.41",key:"1m8zz5"}],["path",{d:"m19.07 4.93-1.41 1.41",key:"1shlcs"}]]);/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const hs=de("Target",[["circle",{cx:"12",cy:"12",r:"10",key:"1mglay"}],["circle",{cx:"12",cy:"12",r:"6",key:"1vlfrh"}],["circle",{cx:"12",cy:"12",r:"2",key:"1c9p78"}]]);/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const NS=de("Timer",[["line",{x1:"10",x2:"14",y1:"2",y2:"2",key:"14vaq8"}],["line",{x1:"12",x2:"15",y1:"14",y2:"11",key:"17fdiu"}],["circle",{cx:"12",cy:"14",r:"8",key:"1e1u0o"}]]);/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const AI=de("Trash2",[["path",{d:"M3 6h18",key:"d0wm0j"}],["path",{d:"M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6",key:"4alrt4"}],["path",{d:"M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2",key:"v07s0e"}],["line",{x1:"10",x2:"10",y1:"11",y2:"17",key:"1uufr5"}],["line",{x1:"14",x2:"14",y1:"11",y2:"17",key:"xtxkd"}]]);/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const II=de("TrendingDown",[["polyline",{points:"22 17 13.5 8.5 8.5 13.5 2 7",key:"1r2t7k"}],["polyline",{points:"16 17 22 17 22 11",key:"11uiuu"}]]);/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const gl=de("TrendingUp",[["polyline",{points:"22 7 13.5 15.5 8.5 10.5 2 17",key:"126l90"}],["polyline",{points:"16 7 22 7 22 13",key:"kwv8wd"}]]);/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const Ks=de("Trophy",[["path",{d:"M6 9H4.5a2.5 2.5 0 0 1 0-5H6",key:"17hqa7"}],["path",{d:"M18 9h1.5a2.5 2.5 0 0 0 0-5H18",key:"lmptdp"}],["path",{d:"M4 22h16",key:"57wxv0"}],["path",{d:"M10 14.66V17c0 .55-.47.98-.97 1.21C7.85 18.75 7 20.24 7 22",key:"1nw9bq"}],["path",{d:"M14 14.66V17c0 .55.47.98.97 1.21C16.15 18.75 17 20.24 17 22",key:"1np0yb"}],["path",{d:"M18 2H6v7a6 6 0 0 0 12 0V2Z",key:"u46fv3"}]]);/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const MI=de("Twitter",[["path",{d:"M22 4s-.7 2.1-2 3.4c1.6 10-9.4 17.3-18 11.6 2.2.1 4.4-.6 6-2C3 15.5.5 9.6 3 5c2.2 2.6 5.6 4.1 9 4-.9-4.2 4-6.6 7-3.8 1.1 0 3-1.2 3-1.2z",key:"pff0z6"}]]);/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const DI=de("User",[["path",{d:"M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2",key:"975kel"}],["circle",{cx:"12",cy:"7",r:"4",key:"17ys0d"}]]);/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const $c=de("Users",[["path",{d:"M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2",key:"1yyitq"}],["circle",{cx:"9",cy:"7",r:"4",key:"nufk8"}],["path",{d:"M22 21v-2a4 4 0 0 0-3-3.87",key:"kshegd"}],["path",{d:"M16 3.13a4 4 0 0 1 0 7.75",key:"1da9ce"}]]);/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const OI=de("Weight",[["circle",{cx:"12",cy:"5",r:"3",key:"rqqgnr"}],["path",{d:"M6.5 8a2 2 0 0 0-1.905 1.46L2.1 18.5A2 2 0 0 0 4 21h16a2 2 0 0 0 1.925-2.54L19.4 9.5A2 2 0 0 0 17.48 8Z",key:"56o5sh"}]]);/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const SS=de("X",[["path",{d:"M18 6 6 18",key:"1bl5f8"}],["path",{d:"m6 6 12 12",key:"d8bk6v"}]]);/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const LI=de("Youtube",[["path",{d:"M2.5 17a24.12 24.12 0 0 1 0-10 2 2 0 0 1 1.4-1.4 49.56 49.56 0 0 1 16.2 0A2 2 0 0 1 21.5 7a24.12 24.12 0 0 1 0 10 2 2 0 0 1-1.4 1.4 49.55 49.55 0 0 1-16.2 0A2 2 0 0 1 2.5 17",key:"1q2vi4"}],["path",{d:"m10 15 5-3-5-3z",key:"1jp15x"}]]);/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const FI=de("Zap",[["path",{d:"M4 14a1 1 0 0 1-.78-1.63l9.9-10.2a.5.5 0 0 1 .86.46l-1.92 6.02A1 1 0 0 0 13 10h7a1 1 0 0 1 .78 1.63l-9.9 10.2a.5.5 0 0 1-.86-.46l1.92-6.02A1 1 0 0 0 11 14z",key:"1xq2db"}]]),Wh="-",VI=e=>{const t=zI(e),{conflictingClassGroups:r,conflictingClassGroupModifiers:n}=e;return{getClassGroupId:a=>{const l=a.split(Wh);return l[0]===""&&l.length!==1&&l.shift(),jS(l,t)||$I(a)},getConflictingClassGroupIds:(a,l)=>{const c=r[a]||[];return l&&n[a]?[...c,...n[a]]:c}}},jS=(e,t)=>{var a;if(e.length===0)return t.classGroupId;const r=e[0],n=t.nextPart.get(r),s=n?jS(e.slice(1),n):void 0;if(s)return s;if(t.validators.length===0)return;const i=e.join(Wh);return(a=t.validators.find(({validator:l})=>l(i)))==null?void 0:a.classGroupId},pv=/^\[(.+)\]$/,$I=e=>{if(pv.test(e)){const t=pv.exec(e)[1],r=t==null?void 0:t.substring(0,t.indexOf(":"));if(r)return"arbitrary.."+r}},zI=e=>{const{theme:t,prefix:r}=e,n={nextPart:new Map,validators:[]};return UI(Object.entries(e.classGroups),r).forEach(([i,a])=>{hm(a,n,i,t)}),n},hm=(e,t,r,n)=>{e.forEach(s=>{if(typeof s=="string"){const i=s===""?t:gv(t,s);i.classGroupId=r;return}if(typeof s=="function"){if(BI(s)){hm(s(n),t,r,n);return}t.validators.push({validator:s,classGroupId:r});return}Object.entries(s).forEach(([i,a])=>{hm(a,gv(t,i),r,n)})})},gv=(e,t)=>{let r=e;return t.split(Wh).forEach(n=>{r.nextPart.has(n)||r.nextPart.set(n,{nextPart:new Map,validators:[]}),r=r.nextPart.get(n)}),r},BI=e=>e.isThemeGetter,UI=(e,t)=>t?e.map(([r,n])=>{const s=n.map(i=>typeof i=="string"?t+i:typeof i=="object"?Object.fromEntries(Object.entries(i).map(([a,l])=>[t+a,l])):i);return[r,s]}):e,WI=e=>{if(e<1)return{get:()=>{},set:()=>{}};let t=0,r=new Map,n=new Map;const s=(i,a)=>{r.set(i,a),t++,t>e&&(t=0,n=r,r=new Map)};return{get(i){let a=r.get(i);if(a!==void 0)return a;if((a=n.get(i))!==void 0)return s(i,a),a},set(i,a){r.has(i)?r.set(i,a):s(i,a)}}},CS="!",HI=e=>{const{separator:t,experimentalParseClassName:r}=e,n=t.length===1,s=t[0],i=t.length,a=l=>{const c=[];let u=0,d=0,f;for(let b=0;b<l.length;b++){let v=l[b];if(u===0){if(v===s&&(n||l.slice(b,b+i)===t)){c.push(l.slice(d,b)),d=b+i;continue}if(v==="/"){f=b;continue}}v==="["?u++:v==="]"&&u--}const h=c.length===0?l:l.substring(d),x=h.startsWith(CS),w=x?h.substring(1):h,g=f&&f>d?f-d:void 0;return{modifiers:c,hasImportantModifier:x,baseClassName:w,maybePostfixModifierPosition:g}};return r?l=>r({className:l,parseClassName:a}):a},qI=e=>{if(e.length<=1)return e;const t=[];let r=[];return e.forEach(n=>{n[0]==="["?(t.push(...r.sort(),n),r=[]):r.push(n)}),t.push(...r.sort()),t},QI=e=>({cache:WI(e.cacheSize),parseClassName:HI(e),...VI(e)}),GI=/\s+/,KI=(e,t)=>{const{parseClassName:r,getClassGroupId:n,getConflictingClassGroupIds:s}=t,i=[],a=e.trim().split(GI);let l="";for(let c=a.length-1;c>=0;c-=1){const u=a[c],{modifiers:d,hasImportantModifier:f,baseClassName:h,maybePostfixModifierPosition:x}=r(u);let w=!!x,g=n(w?h.substring(0,x):h);if(!g){if(!w){l=u+(l.length>0?" "+l:l);continue}if(g=n(h),!g){l=u+(l.length>0?" "+l:l);continue}w=!1}const b=qI(d).join(":"),v=f?b+CS:b,p=v+g;if(i.includes(p))continue;i.push(p);const y=s(g,w);for(let N=0;N<y.length;++N){const j=y[N];i.push(v+j)}l=u+(l.length>0?" "+l:l)}return l};function ZI(){let e=0,t,r,n="";for(;e<arguments.length;)(t=arguments[e++])&&(r=_S(t))&&(n&&(n+=" "),n+=r);return n}const _S=e=>{if(typeof e=="string")return e;let t,r="";for(let n=0;n<e.length;n++)e[n]&&(t=_S(e[n]))&&(r&&(r+=" "),r+=t);return r};function XI(e,...t){let r,n,s,i=a;function a(c){const u=t.reduce((d,f)=>f(d),e());return r=QI(u),n=r.cache.get,s=r.cache.set,i=l,l(c)}function l(c){const u=n(c);if(u)return u;const d=KI(c,r);return s(c,d),d}return function(){return i(ZI.apply(null,arguments))}}const Be=e=>{const t=r=>r[e]||[];return t.isThemeGetter=!0,t},kS=/^\[(?:([a-z-]+):)?(.+)\]$/i,YI=/^\d+\/\d+$/,JI=new Set(["px","full","screen"]),eM=/^(\d+(\.\d+)?)?(xs|sm|md|lg|xl)$/,tM=/\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\b(calc|min|max|clamp)\(.+\)|^0$/,rM=/^(rgba?|hsla?|hwb|(ok)?(lab|lch))\(.+\)$/,nM=/^(inset_)?-?((\d+)?\.?(\d+)[a-z]+|0)_-?((\d+)?\.?(\d+)[a-z]+|0)/,sM=/^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\(.+\)$/,un=e=>Qi(e)||JI.has(e)||YI.test(e),On=e=>Ao(e,"length",fM),Qi=e=>!!e&&!Number.isNaN(Number(e)),zd=e=>Ao(e,"number",Qi),qo=e=>!!e&&Number.isInteger(Number(e)),iM=e=>e.endsWith("%")&&Qi(e.slice(0,-1)),ye=e=>kS.test(e),Ln=e=>eM.test(e),oM=new Set(["length","size","percentage"]),aM=e=>Ao(e,oM,TS),lM=e=>Ao(e,"position",TS),cM=new Set(["image","url"]),uM=e=>Ao(e,cM,hM),dM=e=>Ao(e,"",mM),Qo=()=>!0,Ao=(e,t,r)=>{const n=kS.exec(e);return n?n[1]?typeof t=="string"?n[1]===t:t.has(n[1]):r(n[2]):!1},fM=e=>tM.test(e)&&!rM.test(e),TS=()=>!1,mM=e=>nM.test(e),hM=e=>sM.test(e),pM=()=>{const e=Be("colors"),t=Be("spacing"),r=Be("blur"),n=Be("brightness"),s=Be("borderColor"),i=Be("borderRadius"),a=Be("borderSpacing"),l=Be("borderWidth"),c=Be("contrast"),u=Be("grayscale"),d=Be("hueRotate"),f=Be("invert"),h=Be("gap"),x=Be("gradientColorStops"),w=Be("gradientColorStopPositions"),g=Be("inset"),b=Be("margin"),v=Be("opacity"),p=Be("padding"),y=Be("saturate"),N=Be("scale"),j=Be("sepia"),E=Be("skew"),T=Be("space"),P=Be("translate"),C=()=>["auto","contain","none"],A=()=>["auto","hidden","clip","visible","scroll"],z=()=>["auto",ye,t],O=()=>[ye,t],U=()=>["",un,On],F=()=>["auto",Qi,ye],re=()=>["bottom","center","left","left-bottom","left-top","right","right-bottom","right-top","top"],Q=()=>["solid","dashed","dotted","double","none"],oe=()=>["normal","multiply","screen","overlay","darken","lighten","color-dodge","color-burn","hard-light","soft-light","difference","exclusion","hue","saturation","color","luminosity"],I=()=>["start","end","center","between","around","evenly","stretch"],M=()=>["","0",ye],W=()=>["auto","avoid","all","avoid-page","page","left","right","column"],se=()=>[Qi,ye];return{cacheSize:500,separator:":",theme:{colors:[Qo],spacing:[un,On],blur:["none","",Ln,ye],brightness:se(),borderColor:[e],borderRadius:["none","","full",Ln,ye],borderSpacing:O(),borderWidth:U(),contrast:se(),grayscale:M(),hueRotate:se(),invert:M(),gap:O(),gradientColorStops:[e],gradientColorStopPositions:[iM,On],inset:z(),margin:z(),opacity:se(),padding:O(),saturate:se(),scale:se(),sepia:M(),skew:se(),space:O(),translate:O()},classGroups:{aspect:[{aspect:["auto","square","video",ye]}],container:["container"],columns:[{columns:[Ln]}],"break-after":[{"break-after":W()}],"break-before":[{"break-before":W()}],"break-inside":[{"break-inside":["auto","avoid","avoid-page","avoid-column"]}],"box-decoration":[{"box-decoration":["slice","clone"]}],box:[{box:["border","content"]}],display:["block","inline-block","inline","flex","inline-flex","table","inline-table","table-caption","table-cell","table-column","table-column-group","table-footer-group","table-header-group","table-row-group","table-row","flow-root","grid","inline-grid","contents","list-item","hidden"],float:[{float:["right","left","none","start","end"]}],clear:[{clear:["left","right","both","none","start","end"]}],isolation:["isolate","isolation-auto"],"object-fit":[{object:["contain","cover","fill","none","scale-down"]}],"object-position":[{object:[...re(),ye]}],overflow:[{overflow:A()}],"overflow-x":[{"overflow-x":A()}],"overflow-y":[{"overflow-y":A()}],overscroll:[{overscroll:C()}],"overscroll-x":[{"overscroll-x":C()}],"overscroll-y":[{"overscroll-y":C()}],position:["static","fixed","absolute","relative","sticky"],inset:[{inset:[g]}],"inset-x":[{"inset-x":[g]}],"inset-y":[{"inset-y":[g]}],start:[{start:[g]}],end:[{end:[g]}],top:[{top:[g]}],right:[{right:[g]}],bottom:[{bottom:[g]}],left:[{left:[g]}],visibility:["visible","invisible","collapse"],z:[{z:["auto",qo,ye]}],basis:[{basis:z()}],"flex-direction":[{flex:["row","row-reverse","col","col-reverse"]}],"flex-wrap":[{flex:["wrap","wrap-reverse","nowrap"]}],flex:[{flex:["1","auto","initial","none",ye]}],grow:[{grow:M()}],shrink:[{shrink:M()}],order:[{order:["first","last","none",qo,ye]}],"grid-cols":[{"grid-cols":[Qo]}],"col-start-end":[{col:["auto",{span:["full",qo,ye]},ye]}],"col-start":[{"col-start":F()}],"col-end":[{"col-end":F()}],"grid-rows":[{"grid-rows":[Qo]}],"row-start-end":[{row:["auto",{span:[qo,ye]},ye]}],"row-start":[{"row-start":F()}],"row-end":[{"row-end":F()}],"grid-flow":[{"grid-flow":["row","col","dense","row-dense","col-dense"]}],"auto-cols":[{"auto-cols":["auto","min","max","fr",ye]}],"auto-rows":[{"auto-rows":["auto","min","max","fr",ye]}],gap:[{gap:[h]}],"gap-x":[{"gap-x":[h]}],"gap-y":[{"gap-y":[h]}],"justify-content":[{justify:["normal",...I()]}],"justify-items":[{"justify-items":["start","end","center","stretch"]}],"justify-self":[{"justify-self":["auto","start","end","center","stretch"]}],"align-content":[{content:["normal",...I(),"baseline"]}],"align-items":[{items:["start","end","center","baseline","stretch"]}],"align-self":[{self:["auto","start","end","center","stretch","baseline"]}],"place-content":[{"place-content":[...I(),"baseline"]}],"place-items":[{"place-items":["start","end","center","baseline","stretch"]}],"place-self":[{"place-self":["auto","start","end","center","stretch"]}],p:[{p:[p]}],px:[{px:[p]}],py:[{py:[p]}],ps:[{ps:[p]}],pe:[{pe:[p]}],pt:[{pt:[p]}],pr:[{pr:[p]}],pb:[{pb:[p]}],pl:[{pl:[p]}],m:[{m:[b]}],mx:[{mx:[b]}],my:[{my:[b]}],ms:[{ms:[b]}],me:[{me:[b]}],mt:[{mt:[b]}],mr:[{mr:[b]}],mb:[{mb:[b]}],ml:[{ml:[b]}],"space-x":[{"space-x":[T]}],"space-x-reverse":["space-x-reverse"],"space-y":[{"space-y":[T]}],"space-y-reverse":["space-y-reverse"],w:[{w:["auto","min","max","fit","svw","lvw","dvw",ye,t]}],"min-w":[{"min-w":[ye,t,"min","max","fit"]}],"max-w":[{"max-w":[ye,t,"none","full","min","max","fit","prose",{screen:[Ln]},Ln]}],h:[{h:[ye,t,"auto","min","max","fit","svh","lvh","dvh"]}],"min-h":[{"min-h":[ye,t,"min","max","fit","svh","lvh","dvh"]}],"max-h":[{"max-h":[ye,t,"min","max","fit","svh","lvh","dvh"]}],size:[{size:[ye,t,"auto","min","max","fit"]}],"font-size":[{text:["base",Ln,On]}],"font-smoothing":["antialiased","subpixel-antialiased"],"font-style":["italic","not-italic"],"font-weight":[{font:["thin","extralight","light","normal","medium","semibold","bold","extrabold","black",zd]}],"font-family":[{font:[Qo]}],"fvn-normal":["normal-nums"],"fvn-ordinal":["ordinal"],"fvn-slashed-zero":["slashed-zero"],"fvn-figure":["lining-nums","oldstyle-nums"],"fvn-spacing":["proportional-nums","tabular-nums"],"fvn-fraction":["diagonal-fractions","stacked-fractions"],tracking:[{tracking:["tighter","tight","normal","wide","wider","widest",ye]}],"line-clamp":[{"line-clamp":["none",Qi,zd]}],leading:[{leading:["none","tight","snug","normal","relaxed","loose",un,ye]}],"list-image":[{"list-image":["none",ye]}],"list-style-type":[{list:["none","disc","decimal",ye]}],"list-style-position":[{list:["inside","outside"]}],"placeholder-color":[{placeholder:[e]}],"placeholder-opacity":[{"placeholder-opacity":[v]}],"text-alignment":[{text:["left","center","right","justify","start","end"]}],"text-color":[{text:[e]}],"text-opacity":[{"text-opacity":[v]}],"text-decoration":["underline","overline","line-through","no-underline"],"text-decoration-style":[{decoration:[...Q(),"wavy"]}],"text-decoration-thickness":[{decoration:["auto","from-font",un,On]}],"underline-offset":[{"underline-offset":["auto",un,ye]}],"text-decoration-color":[{decoration:[e]}],"text-transform":["uppercase","lowercase","capitalize","normal-case"],"text-overflow":["truncate","text-ellipsis","text-clip"],"text-wrap":[{text:["wrap","nowrap","balance","pretty"]}],indent:[{indent:O()}],"vertical-align":[{align:["baseline","top","middle","bottom","text-top","text-bottom","sub","super",ye]}],whitespace:[{whitespace:["normal","nowrap","pre","pre-line","pre-wrap","break-spaces"]}],break:[{break:["normal","words","all","keep"]}],hyphens:[{hyphens:["none","manual","auto"]}],content:[{content:["none",ye]}],"bg-attachment":[{bg:["fixed","local","scroll"]}],"bg-clip":[{"bg-clip":["border","padding","content","text"]}],"bg-opacity":[{"bg-opacity":[v]}],"bg-origin":[{"bg-origin":["border","padding","content"]}],"bg-position":[{bg:[...re(),lM]}],"bg-repeat":[{bg:["no-repeat",{repeat:["","x","y","round","space"]}]}],"bg-size":[{bg:["auto","cover","contain",aM]}],"bg-image":[{bg:["none",{"gradient-to":["t","tr","r","br","b","bl","l","tl"]},uM]}],"bg-color":[{bg:[e]}],"gradient-from-pos":[{from:[w]}],"gradient-via-pos":[{via:[w]}],"gradient-to-pos":[{to:[w]}],"gradient-from":[{from:[x]}],"gradient-via":[{via:[x]}],"gradient-to":[{to:[x]}],rounded:[{rounded:[i]}],"rounded-s":[{"rounded-s":[i]}],"rounded-e":[{"rounded-e":[i]}],"rounded-t":[{"rounded-t":[i]}],"rounded-r":[{"rounded-r":[i]}],"rounded-b":[{"rounded-b":[i]}],"rounded-l":[{"rounded-l":[i]}],"rounded-ss":[{"rounded-ss":[i]}],"rounded-se":[{"rounded-se":[i]}],"rounded-ee":[{"rounded-ee":[i]}],"rounded-es":[{"rounded-es":[i]}],"rounded-tl":[{"rounded-tl":[i]}],"rounded-tr":[{"rounded-tr":[i]}],"rounded-br":[{"rounded-br":[i]}],"rounded-bl":[{"rounded-bl":[i]}],"border-w":[{border:[l]}],"border-w-x":[{"border-x":[l]}],"border-w-y":[{"border-y":[l]}],"border-w-s":[{"border-s":[l]}],"border-w-e":[{"border-e":[l]}],"border-w-t":[{"border-t":[l]}],"border-w-r":[{"border-r":[l]}],"border-w-b":[{"border-b":[l]}],"border-w-l":[{"border-l":[l]}],"border-opacity":[{"border-opacity":[v]}],"border-style":[{border:[...Q(),"hidden"]}],"divide-x":[{"divide-x":[l]}],"divide-x-reverse":["divide-x-reverse"],"divide-y":[{"divide-y":[l]}],"divide-y-reverse":["divide-y-reverse"],"divide-opacity":[{"divide-opacity":[v]}],"divide-style":[{divide:Q()}],"border-color":[{border:[s]}],"border-color-x":[{"border-x":[s]}],"border-color-y":[{"border-y":[s]}],"border-color-s":[{"border-s":[s]}],"border-color-e":[{"border-e":[s]}],"border-color-t":[{"border-t":[s]}],"border-color-r":[{"border-r":[s]}],"border-color-b":[{"border-b":[s]}],"border-color-l":[{"border-l":[s]}],"divide-color":[{divide:[s]}],"outline-style":[{outline:["",...Q()]}],"outline-offset":[{"outline-offset":[un,ye]}],"outline-w":[{outline:[un,On]}],"outline-color":[{outline:[e]}],"ring-w":[{ring:U()}],"ring-w-inset":["ring-inset"],"ring-color":[{ring:[e]}],"ring-opacity":[{"ring-opacity":[v]}],"ring-offset-w":[{"ring-offset":[un,On]}],"ring-offset-color":[{"ring-offset":[e]}],shadow:[{shadow:["","inner","none",Ln,dM]}],"shadow-color":[{shadow:[Qo]}],opacity:[{opacity:[v]}],"mix-blend":[{"mix-blend":[...oe(),"plus-lighter","plus-darker"]}],"bg-blend":[{"bg-blend":oe()}],filter:[{filter:["","none"]}],blur:[{blur:[r]}],brightness:[{brightness:[n]}],contrast:[{contrast:[c]}],"drop-shadow":[{"drop-shadow":["","none",Ln,ye]}],grayscale:[{grayscale:[u]}],"hue-rotate":[{"hue-rotate":[d]}],invert:[{invert:[f]}],saturate:[{saturate:[y]}],sepia:[{sepia:[j]}],"backdrop-filter":[{"backdrop-filter":["","none"]}],"backdrop-blur":[{"backdrop-blur":[r]}],"backdrop-brightness":[{"backdrop-brightness":[n]}],"backdrop-contrast":[{"backdrop-contrast":[c]}],"backdrop-grayscale":[{"backdrop-grayscale":[u]}],"backdrop-hue-rotate":[{"backdrop-hue-rotate":[d]}],"backdrop-invert":[{"backdrop-invert":[f]}],"backdrop-opacity":[{"backdrop-opacity":[v]}],"backdrop-saturate":[{"backdrop-saturate":[y]}],"backdrop-sepia":[{"backdrop-sepia":[j]}],"border-collapse":[{border:["collapse","separate"]}],"border-spacing":[{"border-spacing":[a]}],"border-spacing-x":[{"border-spacing-x":[a]}],"border-spacing-y":[{"border-spacing-y":[a]}],"table-layout":[{table:["auto","fixed"]}],caption:[{caption:["top","bottom"]}],transition:[{transition:["none","all","","colors","opacity","shadow","transform",ye]}],duration:[{duration:se()}],ease:[{ease:["linear","in","out","in-out",ye]}],delay:[{delay:se()}],animate:[{animate:["none","spin","ping","pulse","bounce",ye]}],transform:[{transform:["","gpu","none"]}],scale:[{scale:[N]}],"scale-x":[{"scale-x":[N]}],"scale-y":[{"scale-y":[N]}],rotate:[{rotate:[qo,ye]}],"translate-x":[{"translate-x":[P]}],"translate-y":[{"translate-y":[P]}],"skew-x":[{"skew-x":[E]}],"skew-y":[{"skew-y":[E]}],"transform-origin":[{origin:["center","top","top-right","right","bottom-right","bottom","bottom-left","left","top-left",ye]}],accent:[{accent:["auto",e]}],appearance:[{appearance:["none","auto"]}],cursor:[{cursor:["auto","default","pointer","wait","text","move","help","not-allowed","none","context-menu","progress","cell","crosshair","vertical-text","alias","copy","no-drop","grab","grabbing","all-scroll","col-resize","row-resize","n-resize","e-resize","s-resize","w-resize","ne-resize","nw-resize","se-resize","sw-resize","ew-resize","ns-resize","nesw-resize","nwse-resize","zoom-in","zoom-out",ye]}],"caret-color":[{caret:[e]}],"pointer-events":[{"pointer-events":["none","auto"]}],resize:[{resize:["none","y","x",""]}],"scroll-behavior":[{scroll:["auto","smooth"]}],"scroll-m":[{"scroll-m":O()}],"scroll-mx":[{"scroll-mx":O()}],"scroll-my":[{"scroll-my":O()}],"scroll-ms":[{"scroll-ms":O()}],"scroll-me":[{"scroll-me":O()}],"scroll-mt":[{"scroll-mt":O()}],"scroll-mr":[{"scroll-mr":O()}],"scroll-mb":[{"scroll-mb":O()}],"scroll-ml":[{"scroll-ml":O()}],"scroll-p":[{"scroll-p":O()}],"scroll-px":[{"scroll-px":O()}],"scroll-py":[{"scroll-py":O()}],"scroll-ps":[{"scroll-ps":O()}],"scroll-pe":[{"scroll-pe":O()}],"scroll-pt":[{"scroll-pt":O()}],"scroll-pr":[{"scroll-pr":O()}],"scroll-pb":[{"scroll-pb":O()}],"scroll-pl":[{"scroll-pl":O()}],"snap-align":[{snap:["start","end","center","align-none"]}],"snap-stop":[{snap:["normal","always"]}],"snap-type":[{snap:["none","x","y","both"]}],"snap-strictness":[{snap:["mandatory","proximity"]}],touch:[{touch:["auto","none","manipulation"]}],"touch-x":[{"touch-pan":["x","left","right"]}],"touch-y":[{"touch-pan":["y","up","down"]}],"touch-pz":["touch-pinch-zoom"],select:[{select:["none","text","all","auto"]}],"will-change":[{"will-change":["auto","scroll","contents","transform",ye]}],fill:[{fill:[e,"none"]}],"stroke-w":[{stroke:[un,On,zd]}],stroke:[{stroke:[e,"none"]}],sr:["sr-only","not-sr-only"],"forced-color-adjust":[{"forced-color-adjust":["auto","none"]}]},conflictingClassGroups:{overflow:["overflow-x","overflow-y"],overscroll:["overscroll-x","overscroll-y"],inset:["inset-x","inset-y","start","end","top","right","bottom","left"],"inset-x":["right","left"],"inset-y":["top","bottom"],flex:["basis","grow","shrink"],gap:["gap-x","gap-y"],p:["px","py","ps","pe","pt","pr","pb","pl"],px:["pr","pl"],py:["pt","pb"],m:["mx","my","ms","me","mt","mr","mb","ml"],mx:["mr","ml"],my:["mt","mb"],size:["w","h"],"font-size":["leading"],"fvn-normal":["fvn-ordinal","fvn-slashed-zero","fvn-figure","fvn-spacing","fvn-fraction"],"fvn-ordinal":["fvn-normal"],"fvn-slashed-zero":["fvn-normal"],"fvn-figure":["fvn-normal"],"fvn-spacing":["fvn-normal"],"fvn-fraction":["fvn-normal"],"line-clamp":["display","overflow"],rounded:["rounded-s","rounded-e","rounded-t","rounded-r","rounded-b","rounded-l","rounded-ss","rounded-se","rounded-ee","rounded-es","rounded-tl","rounded-tr","rounded-br","rounded-bl"],"rounded-s":["rounded-ss","rounded-es"],"rounded-e":["rounded-se","rounded-ee"],"rounded-t":["rounded-tl","rounded-tr"],"rounded-r":["rounded-tr","rounded-br"],"rounded-b":["rounded-br","rounded-bl"],"rounded-l":["rounded-tl","rounded-bl"],"border-spacing":["border-spacing-x","border-spacing-y"],"border-w":["border-w-s","border-w-e","border-w-t","border-w-r","border-w-b","border-w-l"],"border-w-x":["border-w-r","border-w-l"],"border-w-y":["border-w-t","border-w-b"],"border-color":["border-color-s","border-color-e","border-color-t","border-color-r","border-color-b","border-color-l"],"border-color-x":["border-color-r","border-color-l"],"border-color-y":["border-color-t","border-color-b"],"scroll-m":["scroll-mx","scroll-my","scroll-ms","scroll-me","scroll-mt","scroll-mr","scroll-mb","scroll-ml"],"scroll-mx":["scroll-mr","scroll-ml"],"scroll-my":["scroll-mt","scroll-mb"],"scroll-p":["scroll-px","scroll-py","scroll-ps","scroll-pe","scroll-pt","scroll-pr","scroll-pb","scroll-pl"],"scroll-px":["scroll-pr","scroll-pl"],"scroll-py":["scroll-pt","scroll-pb"],touch:["touch-x","touch-y","touch-pz"],"touch-x":["touch"],"touch-y":["touch"],"touch-pz":["touch"]},conflictingClassGroupModifiers:{"font-size":["leading"]}}},gM=XI(pM);function me(...e){return gM(hS(e))}const vM=lI,ES=m.forwardRef(({className:e,...t},r)=>o.jsx(aS,{ref:r,className:me("fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]",e),...t}));ES.displayName=aS.displayName;const yM=hl("group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full",{variants:{variant:{default:"border bg-background text-foreground",destructive:"destructive group border-destructive bg-destructive text-destructive-foreground"}},defaultVariants:{variant:"default"}}),PS=m.forwardRef(({className:e,variant:t,...r},n)=>o.jsx(lS,{ref:n,className:me(yM({variant:t}),e),...r}));PS.displayName=lS.displayName;const xM=m.forwardRef(({className:e,...t},r)=>o.jsx(dS,{ref:r,className:me("inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive",e),...t}));xM.displayName=dS.displayName;const RS=m.forwardRef(({className:e,...t},r)=>o.jsx(fS,{ref:r,className:me("absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600",e),"toast-close":"",...t,children:o.jsx(SS,{className:"h-4 w-4"})}));RS.displayName=fS.displayName;const AS=m.forwardRef(({className:e,...t},r)=>o.jsx(cS,{ref:r,className:me("text-sm font-semibold",e),...t}));AS.displayName=cS.displayName;const IS=m.forwardRef(({className:e,...t},r)=>o.jsx(uS,{ref:r,className:me("text-sm opacity-90",e),...t}));IS.displayName=uS.displayName;function wM(){const{toasts:e}=dl();return o.jsxs(vM,{children:[e.map(function({id:t,title:r,description:n,action:s,...i}){return o.jsxs(PS,{...i,children:[o.jsxs("div",{className:"grid gap-1",children:[r&&o.jsx(AS,{children:r}),n&&o.jsx(IS,{children:n})]}),s,o.jsx(RS,{})]},t)}),o.jsx(ES,{})]})}var bM=p1[" useId ".trim().toString()]||(()=>{}),NM=0;function tn(e){const[t,r]=m.useState(bM());return ht(()=>{r(n=>n??String(NM++))},[e]),t?`radix-${t}`:""}const SM=["top","right","bottom","left"],ps=Math.min,sr=Math.max,zc=Math.round,Hl=Math.floor,rn=e=>({x:e,y:e}),jM={left:"right",right:"left",bottom:"top",top:"bottom"},CM={start:"end",end:"start"};function pm(e,t,r){return sr(e,ps(t,r))}function kn(e,t){return typeof e=="function"?e(t):e}function Tn(e){return e.split("-")[0]}function Io(e){return e.split("-")[1]}function Hh(e){return e==="x"?"y":"x"}function qh(e){return e==="y"?"height":"width"}function gs(e){return["top","bottom"].includes(Tn(e))?"y":"x"}function Qh(e){return Hh(gs(e))}function _M(e,t,r){r===void 0&&(r=!1);const n=Io(e),s=Qh(e),i=qh(s);let a=s==="x"?n===(r?"end":"start")?"right":"left":n==="start"?"bottom":"top";return t.reference[i]>t.floating[i]&&(a=Bc(a)),[a,Bc(a)]}function kM(e){const t=Bc(e);return[gm(e),t,gm(t)]}function gm(e){return e.replace(/start|end/g,t=>CM[t])}function TM(e,t,r){const n=["left","right"],s=["right","left"],i=["top","bottom"],a=["bottom","top"];switch(e){case"top":case"bottom":return r?t?s:n:t?n:s;case"left":case"right":return t?i:a;default:return[]}}function EM(e,t,r,n){const s=Io(e);let i=TM(Tn(e),r==="start",n);return s&&(i=i.map(a=>a+"-"+s),t&&(i=i.concat(i.map(gm)))),i}function Bc(e){return e.replace(/left|right|bottom|top/g,t=>jM[t])}function PM(e){return{top:0,right:0,bottom:0,left:0,...e}}function MS(e){return typeof e!="number"?PM(e):{top:e,right:e,bottom:e,left:e}}function Uc(e){const{x:t,y:r,width:n,height:s}=e;return{width:n,height:s,top:r,left:t,right:t+n,bottom:r+s,x:t,y:r}}function vv(e,t,r){let{reference:n,floating:s}=e;const i=gs(t),a=Qh(t),l=qh(a),c=Tn(t),u=i==="y",d=n.x+n.width/2-s.width/2,f=n.y+n.height/2-s.height/2,h=n[l]/2-s[l]/2;let x;switch(c){case"top":x={x:d,y:n.y-s.height};break;case"bottom":x={x:d,y:n.y+n.height};break;case"right":x={x:n.x+n.width,y:f};break;case"left":x={x:n.x-s.width,y:f};break;default:x={x:n.x,y:n.y}}switch(Io(t)){case"start":x[a]-=h*(r&&u?-1:1);break;case"end":x[a]+=h*(r&&u?-1:1);break}return x}const RM=async(e,t,r)=>{const{placement:n="bottom",strategy:s="absolute",middleware:i=[],platform:a}=r,l=i.filter(Boolean),c=await(a.isRTL==null?void 0:a.isRTL(t));let u=await a.getElementRects({reference:e,floating:t,strategy:s}),{x:d,y:f}=vv(u,n,c),h=n,x={},w=0;for(let g=0;g<l.length;g++){const{name:b,fn:v}=l[g],{x:p,y,data:N,reset:j}=await v({x:d,y:f,initialPlacement:n,placement:h,strategy:s,middlewareData:x,rects:u,platform:a,elements:{reference:e,floating:t}});d=p??d,f=y??f,x={...x,[b]:{...x[b],...N}},j&&w<=50&&(w++,typeof j=="object"&&(j.placement&&(h=j.placement),j.rects&&(u=j.rects===!0?await a.getElementRects({reference:e,floating:t,strategy:s}):j.rects),{x:d,y:f}=vv(u,h,c)),g=-1)}return{x:d,y:f,placement:h,strategy:s,middlewareData:x}};async function La(e,t){var r;t===void 0&&(t={});const{x:n,y:s,platform:i,rects:a,elements:l,strategy:c}=e,{boundary:u="clippingAncestors",rootBoundary:d="viewport",elementContext:f="floating",altBoundary:h=!1,padding:x=0}=kn(t,e),w=MS(x),b=l[h?f==="floating"?"reference":"floating":f],v=Uc(await i.getClippingRect({element:(r=await(i.isElement==null?void 0:i.isElement(b)))==null||r?b:b.contextElement||await(i.getDocumentElement==null?void 0:i.getDocumentElement(l.floating)),boundary:u,rootBoundary:d,strategy:c})),p=f==="floating"?{x:n,y:s,width:a.floating.width,height:a.floating.height}:a.reference,y=await(i.getOffsetParent==null?void 0:i.getOffsetParent(l.floating)),N=await(i.isElement==null?void 0:i.isElement(y))?await(i.getScale==null?void 0:i.getScale(y))||{x:1,y:1}:{x:1,y:1},j=Uc(i.convertOffsetParentRelativeRectToViewportRelativeRect?await i.convertOffsetParentRelativeRectToViewportRelativeRect({elements:l,rect:p,offsetParent:y,strategy:c}):p);return{top:(v.top-j.top+w.top)/N.y,bottom:(j.bottom-v.bottom+w.bottom)/N.y,left:(v.left-j.left+w.left)/N.x,right:(j.right-v.right+w.right)/N.x}}const AM=e=>({name:"arrow",options:e,async fn(t){const{x:r,y:n,placement:s,rects:i,platform:a,elements:l,middlewareData:c}=t,{element:u,padding:d=0}=kn(e,t)||{};if(u==null)return{};const f=MS(d),h={x:r,y:n},x=Qh(s),w=qh(x),g=await a.getDimensions(u),b=x==="y",v=b?"top":"left",p=b?"bottom":"right",y=b?"clientHeight":"clientWidth",N=i.reference[w]+i.reference[x]-h[x]-i.floating[w],j=h[x]-i.reference[x],E=await(a.getOffsetParent==null?void 0:a.getOffsetParent(u));let T=E?E[y]:0;(!T||!await(a.isElement==null?void 0:a.isElement(E)))&&(T=l.floating[y]||i.floating[w]);const P=N/2-j/2,C=T/2-g[w]/2-1,A=ps(f[v],C),z=ps(f[p],C),O=A,U=T-g[w]-z,F=T/2-g[w]/2+P,re=pm(O,F,U),Q=!c.arrow&&Io(s)!=null&&F!==re&&i.reference[w]/2-(F<O?A:z)-g[w]/2<0,oe=Q?F<O?F-O:F-U:0;return{[x]:h[x]+oe,data:{[x]:re,centerOffset:F-re-oe,...Q&&{alignmentOffset:oe}},reset:Q}}}),IM=function(e){return e===void 0&&(e={}),{name:"flip",options:e,async fn(t){var r,n;const{placement:s,middlewareData:i,rects:a,initialPlacement:l,platform:c,elements:u}=t,{mainAxis:d=!0,crossAxis:f=!0,fallbackPlacements:h,fallbackStrategy:x="bestFit",fallbackAxisSideDirection:w="none",flipAlignment:g=!0,...b}=kn(e,t);if((r=i.arrow)!=null&&r.alignmentOffset)return{};const v=Tn(s),p=gs(l),y=Tn(l)===l,N=await(c.isRTL==null?void 0:c.isRTL(u.floating)),j=h||(y||!g?[Bc(l)]:kM(l)),E=w!=="none";!h&&E&&j.push(...EM(l,g,w,N));const T=[l,...j],P=await La(t,b),C=[];let A=((n=i.flip)==null?void 0:n.overflows)||[];if(d&&C.push(P[v]),f){const F=_M(s,a,N);C.push(P[F[0]],P[F[1]])}if(A=[...A,{placement:s,overflows:C}],!C.every(F=>F<=0)){var z,O;const F=(((z=i.flip)==null?void 0:z.index)||0)+1,re=T[F];if(re)return{data:{index:F,overflows:A},reset:{placement:re}};let Q=(O=A.filter(oe=>oe.overflows[0]<=0).sort((oe,I)=>oe.overflows[1]-I.overflows[1])[0])==null?void 0:O.placement;if(!Q)switch(x){case"bestFit":{var U;const oe=(U=A.filter(I=>{if(E){const M=gs(I.placement);return M===p||M==="y"}return!0}).map(I=>[I.placement,I.overflows.filter(M=>M>0).reduce((M,W)=>M+W,0)]).sort((I,M)=>I[1]-M[1])[0])==null?void 0:U[0];oe&&(Q=oe);break}case"initialPlacement":Q=l;break}if(s!==Q)return{reset:{placement:Q}}}return{}}}};function yv(e,t){return{top:e.top-t.height,right:e.right-t.width,bottom:e.bottom-t.height,left:e.left-t.width}}function xv(e){return SM.some(t=>e[t]>=0)}const MM=function(e){return e===void 0&&(e={}),{name:"hide",options:e,async fn(t){const{rects:r}=t,{strategy:n="referenceHidden",...s}=kn(e,t);switch(n){case"referenceHidden":{const i=await La(t,{...s,elementContext:"reference"}),a=yv(i,r.reference);return{data:{referenceHiddenOffsets:a,referenceHidden:xv(a)}}}case"escaped":{const i=await La(t,{...s,altBoundary:!0}),a=yv(i,r.floating);return{data:{escapedOffsets:a,escaped:xv(a)}}}default:return{}}}}};async function DM(e,t){const{placement:r,platform:n,elements:s}=e,i=await(n.isRTL==null?void 0:n.isRTL(s.floating)),a=Tn(r),l=Io(r),c=gs(r)==="y",u=["left","top"].includes(a)?-1:1,d=i&&c?-1:1,f=kn(t,e);let{mainAxis:h,crossAxis:x,alignmentAxis:w}=typeof f=="number"?{mainAxis:f,crossAxis:0,alignmentAxis:null}:{mainAxis:f.mainAxis||0,crossAxis:f.crossAxis||0,alignmentAxis:f.alignmentAxis};return l&&typeof w=="number"&&(x=l==="end"?w*-1:w),c?{x:x*d,y:h*u}:{x:h*u,y:x*d}}const OM=function(e){return e===void 0&&(e=0),{name:"offset",options:e,async fn(t){var r,n;const{x:s,y:i,placement:a,middlewareData:l}=t,c=await DM(t,e);return a===((r=l.offset)==null?void 0:r.placement)&&(n=l.arrow)!=null&&n.alignmentOffset?{}:{x:s+c.x,y:i+c.y,data:{...c,placement:a}}}}},LM=function(e){return e===void 0&&(e={}),{name:"shift",options:e,async fn(t){const{x:r,y:n,placement:s}=t,{mainAxis:i=!0,crossAxis:a=!1,limiter:l={fn:b=>{let{x:v,y:p}=b;return{x:v,y:p}}},...c}=kn(e,t),u={x:r,y:n},d=await La(t,c),f=gs(Tn(s)),h=Hh(f);let x=u[h],w=u[f];if(i){const b=h==="y"?"top":"left",v=h==="y"?"bottom":"right",p=x+d[b],y=x-d[v];x=pm(p,x,y)}if(a){const b=f==="y"?"top":"left",v=f==="y"?"bottom":"right",p=w+d[b],y=w-d[v];w=pm(p,w,y)}const g=l.fn({...t,[h]:x,[f]:w});return{...g,data:{x:g.x-r,y:g.y-n,enabled:{[h]:i,[f]:a}}}}}},FM=function(e){return e===void 0&&(e={}),{options:e,fn(t){const{x:r,y:n,placement:s,rects:i,middlewareData:a}=t,{offset:l=0,mainAxis:c=!0,crossAxis:u=!0}=kn(e,t),d={x:r,y:n},f=gs(s),h=Hh(f);let x=d[h],w=d[f];const g=kn(l,t),b=typeof g=="number"?{mainAxis:g,crossAxis:0}:{mainAxis:0,crossAxis:0,...g};if(c){const y=h==="y"?"height":"width",N=i.reference[h]-i.floating[y]+b.mainAxis,j=i.reference[h]+i.reference[y]-b.mainAxis;x<N?x=N:x>j&&(x=j)}if(u){var v,p;const y=h==="y"?"width":"height",N=["top","left"].includes(Tn(s)),j=i.reference[f]-i.floating[y]+(N&&((v=a.offset)==null?void 0:v[f])||0)+(N?0:b.crossAxis),E=i.reference[f]+i.reference[y]+(N?0:((p=a.offset)==null?void 0:p[f])||0)-(N?b.crossAxis:0);w<j?w=j:w>E&&(w=E)}return{[h]:x,[f]:w}}}},VM=function(e){return e===void 0&&(e={}),{name:"size",options:e,async fn(t){var r,n;const{placement:s,rects:i,platform:a,elements:l}=t,{apply:c=()=>{},...u}=kn(e,t),d=await La(t,u),f=Tn(s),h=Io(s),x=gs(s)==="y",{width:w,height:g}=i.floating;let b,v;f==="top"||f==="bottom"?(b=f,v=h===(await(a.isRTL==null?void 0:a.isRTL(l.floating))?"start":"end")?"left":"right"):(v=f,b=h==="end"?"top":"bottom");const p=g-d.top-d.bottom,y=w-d.left-d.right,N=ps(g-d[b],p),j=ps(w-d[v],y),E=!t.middlewareData.shift;let T=N,P=j;if((r=t.middlewareData.shift)!=null&&r.enabled.x&&(P=y),(n=t.middlewareData.shift)!=null&&n.enabled.y&&(T=p),E&&!h){const A=sr(d.left,0),z=sr(d.right,0),O=sr(d.top,0),U=sr(d.bottom,0);x?P=w-2*(A!==0||z!==0?A+z:sr(d.left,d.right)):T=g-2*(O!==0||U!==0?O+U:sr(d.top,d.bottom))}await c({...t,availableWidth:P,availableHeight:T});const C=await a.getDimensions(l.floating);return w!==C.width||g!==C.height?{reset:{rects:!0}}:{}}}};function Vu(){return typeof window<"u"}function Mo(e){return DS(e)?(e.nodeName||"").toLowerCase():"#document"}function ar(e){var t;return(e==null||(t=e.ownerDocument)==null?void 0:t.defaultView)||window}function ln(e){var t;return(t=(DS(e)?e.ownerDocument:e.document)||window.document)==null?void 0:t.documentElement}function DS(e){return Vu()?e instanceof Node||e instanceof ar(e).Node:!1}function Vr(e){return Vu()?e instanceof Element||e instanceof ar(e).Element:!1}function sn(e){return Vu()?e instanceof HTMLElement||e instanceof ar(e).HTMLElement:!1}function wv(e){return!Vu()||typeof ShadowRoot>"u"?!1:e instanceof ShadowRoot||e instanceof ar(e).ShadowRoot}function vl(e){const{overflow:t,overflowX:r,overflowY:n,display:s}=$r(e);return/auto|scroll|overlay|hidden|clip/.test(t+n+r)&&!["inline","contents"].includes(s)}function $M(e){return["table","td","th"].includes(Mo(e))}function $u(e){return[":popover-open",":modal"].some(t=>{try{return e.matches(t)}catch{return!1}})}function Gh(e){const t=Kh(),r=Vr(e)?$r(e):e;return["transform","translate","scale","rotate","perspective"].some(n=>r[n]?r[n]!=="none":!1)||(r.containerType?r.containerType!=="normal":!1)||!t&&(r.backdropFilter?r.backdropFilter!=="none":!1)||!t&&(r.filter?r.filter!=="none":!1)||["transform","translate","scale","rotate","perspective","filter"].some(n=>(r.willChange||"").includes(n))||["paint","layout","strict","content"].some(n=>(r.contain||"").includes(n))}function zM(e){let t=vs(e);for(;sn(t)&&!bo(t);){if(Gh(t))return t;if($u(t))return null;t=vs(t)}return null}function Kh(){return typeof CSS>"u"||!CSS.supports?!1:CSS.supports("-webkit-backdrop-filter","none")}function bo(e){return["html","body","#document"].includes(Mo(e))}function $r(e){return ar(e).getComputedStyle(e)}function zu(e){return Vr(e)?{scrollLeft:e.scrollLeft,scrollTop:e.scrollTop}:{scrollLeft:e.scrollX,scrollTop:e.scrollY}}function vs(e){if(Mo(e)==="html")return e;const t=e.assignedSlot||e.parentNode||wv(e)&&e.host||ln(e);return wv(t)?t.host:t}function OS(e){const t=vs(e);return bo(t)?e.ownerDocument?e.ownerDocument.body:e.body:sn(t)&&vl(t)?t:OS(t)}function Fa(e,t,r){var n;t===void 0&&(t=[]),r===void 0&&(r=!0);const s=OS(e),i=s===((n=e.ownerDocument)==null?void 0:n.body),a=ar(s);if(i){const l=vm(a);return t.concat(a,a.visualViewport||[],vl(s)?s:[],l&&r?Fa(l):[])}return t.concat(s,Fa(s,[],r))}function vm(e){return e.parent&&Object.getPrototypeOf(e.parent)?e.frameElement:null}function LS(e){const t=$r(e);let r=parseFloat(t.width)||0,n=parseFloat(t.height)||0;const s=sn(e),i=s?e.offsetWidth:r,a=s?e.offsetHeight:n,l=zc(r)!==i||zc(n)!==a;return l&&(r=i,n=a),{width:r,height:n,$:l}}function Zh(e){return Vr(e)?e:e.contextElement}function Gi(e){const t=Zh(e);if(!sn(t))return rn(1);const r=t.getBoundingClientRect(),{width:n,height:s,$:i}=LS(t);let a=(i?zc(r.width):r.width)/n,l=(i?zc(r.height):r.height)/s;return(!a||!Number.isFinite(a))&&(a=1),(!l||!Number.isFinite(l))&&(l=1),{x:a,y:l}}const BM=rn(0);function FS(e){const t=ar(e);return!Kh()||!t.visualViewport?BM:{x:t.visualViewport.offsetLeft,y:t.visualViewport.offsetTop}}function UM(e,t,r){return t===void 0&&(t=!1),!r||t&&r!==ar(e)?!1:t}function ii(e,t,r,n){t===void 0&&(t=!1),r===void 0&&(r=!1);const s=e.getBoundingClientRect(),i=Zh(e);let a=rn(1);t&&(n?Vr(n)&&(a=Gi(n)):a=Gi(e));const l=UM(i,r,n)?FS(i):rn(0);let c=(s.left+l.x)/a.x,u=(s.top+l.y)/a.y,d=s.width/a.x,f=s.height/a.y;if(i){const h=ar(i),x=n&&Vr(n)?ar(n):n;let w=h,g=vm(w);for(;g&&n&&x!==w;){const b=Gi(g),v=g.getBoundingClientRect(),p=$r(g),y=v.left+(g.clientLeft+parseFloat(p.paddingLeft))*b.x,N=v.top+(g.clientTop+parseFloat(p.paddingTop))*b.y;c*=b.x,u*=b.y,d*=b.x,f*=b.y,c+=y,u+=N,w=ar(g),g=vm(w)}}return Uc({width:d,height:f,x:c,y:u})}function Xh(e,t){const r=zu(e).scrollLeft;return t?t.left+r:ii(ln(e)).left+r}function VS(e,t,r){r===void 0&&(r=!1);const n=e.getBoundingClientRect(),s=n.left+t.scrollLeft-(r?0:Xh(e,n)),i=n.top+t.scrollTop;return{x:s,y:i}}function WM(e){let{elements:t,rect:r,offsetParent:n,strategy:s}=e;const i=s==="fixed",a=ln(n),l=t?$u(t.floating):!1;if(n===a||l&&i)return r;let c={scrollLeft:0,scrollTop:0},u=rn(1);const d=rn(0),f=sn(n);if((f||!f&&!i)&&((Mo(n)!=="body"||vl(a))&&(c=zu(n)),sn(n))){const x=ii(n);u=Gi(n),d.x=x.x+n.clientLeft,d.y=x.y+n.clientTop}const h=a&&!f&&!i?VS(a,c,!0):rn(0);return{width:r.width*u.x,height:r.height*u.y,x:r.x*u.x-c.scrollLeft*u.x+d.x+h.x,y:r.y*u.y-c.scrollTop*u.y+d.y+h.y}}function HM(e){return Array.from(e.getClientRects())}function qM(e){const t=ln(e),r=zu(e),n=e.ownerDocument.body,s=sr(t.scrollWidth,t.clientWidth,n.scrollWidth,n.clientWidth),i=sr(t.scrollHeight,t.clientHeight,n.scrollHeight,n.clientHeight);let a=-r.scrollLeft+Xh(e);const l=-r.scrollTop;return $r(n).direction==="rtl"&&(a+=sr(t.clientWidth,n.clientWidth)-s),{width:s,height:i,x:a,y:l}}function QM(e,t){const r=ar(e),n=ln(e),s=r.visualViewport;let i=n.clientWidth,a=n.clientHeight,l=0,c=0;if(s){i=s.width,a=s.height;const u=Kh();(!u||u&&t==="fixed")&&(l=s.offsetLeft,c=s.offsetTop)}return{width:i,height:a,x:l,y:c}}function GM(e,t){const r=ii(e,!0,t==="fixed"),n=r.top+e.clientTop,s=r.left+e.clientLeft,i=sn(e)?Gi(e):rn(1),a=e.clientWidth*i.x,l=e.clientHeight*i.y,c=s*i.x,u=n*i.y;return{width:a,height:l,x:c,y:u}}function bv(e,t,r){let n;if(t==="viewport")n=QM(e,r);else if(t==="document")n=qM(ln(e));else if(Vr(t))n=GM(t,r);else{const s=FS(e);n={x:t.x-s.x,y:t.y-s.y,width:t.width,height:t.height}}return Uc(n)}function $S(e,t){const r=vs(e);return r===t||!Vr(r)||bo(r)?!1:$r(r).position==="fixed"||$S(r,t)}function KM(e,t){const r=t.get(e);if(r)return r;let n=Fa(e,[],!1).filter(l=>Vr(l)&&Mo(l)!=="body"),s=null;const i=$r(e).position==="fixed";let a=i?vs(e):e;for(;Vr(a)&&!bo(a);){const l=$r(a),c=Gh(a);!c&&l.position==="fixed"&&(s=null),(i?!c&&!s:!c&&l.position==="static"&&!!s&&["absolute","fixed"].includes(s.position)||vl(a)&&!c&&$S(e,a))?n=n.filter(d=>d!==a):s=l,a=vs(a)}return t.set(e,n),n}function ZM(e){let{element:t,boundary:r,rootBoundary:n,strategy:s}=e;const a=[...r==="clippingAncestors"?$u(t)?[]:KM(t,this._c):[].concat(r),n],l=a[0],c=a.reduce((u,d)=>{const f=bv(t,d,s);return u.top=sr(f.top,u.top),u.right=ps(f.right,u.right),u.bottom=ps(f.bottom,u.bottom),u.left=sr(f.left,u.left),u},bv(t,l,s));return{width:c.right-c.left,height:c.bottom-c.top,x:c.left,y:c.top}}function XM(e){const{width:t,height:r}=LS(e);return{width:t,height:r}}function YM(e,t,r){const n=sn(t),s=ln(t),i=r==="fixed",a=ii(e,!0,i,t);let l={scrollLeft:0,scrollTop:0};const c=rn(0);if(n||!n&&!i)if((Mo(t)!=="body"||vl(s))&&(l=zu(t)),n){const h=ii(t,!0,i,t);c.x=h.x+t.clientLeft,c.y=h.y+t.clientTop}else s&&(c.x=Xh(s));const u=s&&!n&&!i?VS(s,l):rn(0),d=a.left+l.scrollLeft-c.x-u.x,f=a.top+l.scrollTop-c.y-u.y;return{x:d,y:f,width:a.width,height:a.height}}function Bd(e){return $r(e).position==="static"}function Nv(e,t){if(!sn(e)||$r(e).position==="fixed")return null;if(t)return t(e);let r=e.offsetParent;return ln(e)===r&&(r=r.ownerDocument.body),r}function zS(e,t){const r=ar(e);if($u(e))return r;if(!sn(e)){let s=vs(e);for(;s&&!bo(s);){if(Vr(s)&&!Bd(s))return s;s=vs(s)}return r}let n=Nv(e,t);for(;n&&$M(n)&&Bd(n);)n=Nv(n,t);return n&&bo(n)&&Bd(n)&&!Gh(n)?r:n||zM(e)||r}const JM=async function(e){const t=this.getOffsetParent||zS,r=this.getDimensions,n=await r(e.floating);return{reference:YM(e.reference,await t(e.floating),e.strategy),floating:{x:0,y:0,width:n.width,height:n.height}}};function e4(e){return $r(e).direction==="rtl"}const t4={convertOffsetParentRelativeRectToViewportRelativeRect:WM,getDocumentElement:ln,getClippingRect:ZM,getOffsetParent:zS,getElementRects:JM,getClientRects:HM,getDimensions:XM,getScale:Gi,isElement:Vr,isRTL:e4};function BS(e,t){return e.x===t.x&&e.y===t.y&&e.width===t.width&&e.height===t.height}function r4(e,t){let r=null,n;const s=ln(e);function i(){var l;clearTimeout(n),(l=r)==null||l.disconnect(),r=null}function a(l,c){l===void 0&&(l=!1),c===void 0&&(c=1),i();const u=e.getBoundingClientRect(),{left:d,top:f,width:h,height:x}=u;if(l||t(),!h||!x)return;const w=Hl(f),g=Hl(s.clientWidth-(d+h)),b=Hl(s.clientHeight-(f+x)),v=Hl(d),y={rootMargin:-w+"px "+-g+"px "+-b+"px "+-v+"px",threshold:sr(0,ps(1,c))||1};let N=!0;function j(E){const T=E[0].intersectionRatio;if(T!==c){if(!N)return a();T?a(!1,T):n=setTimeout(()=>{a(!1,1e-7)},1e3)}T===1&&!BS(u,e.getBoundingClientRect())&&a(),N=!1}try{r=new IntersectionObserver(j,{...y,root:s.ownerDocument})}catch{r=new IntersectionObserver(j,y)}r.observe(e)}return a(!0),i}function n4(e,t,r,n){n===void 0&&(n={});const{ancestorScroll:s=!0,ancestorResize:i=!0,elementResize:a=typeof ResizeObserver=="function",layoutShift:l=typeof IntersectionObserver=="function",animationFrame:c=!1}=n,u=Zh(e),d=s||i?[...u?Fa(u):[],...Fa(t)]:[];d.forEach(v=>{s&&v.addEventListener("scroll",r,{passive:!0}),i&&v.addEventListener("resize",r)});const f=u&&l?r4(u,r):null;let h=-1,x=null;a&&(x=new ResizeObserver(v=>{let[p]=v;p&&p.target===u&&x&&(x.unobserve(t),cancelAnimationFrame(h),h=requestAnimationFrame(()=>{var y;(y=x)==null||y.observe(t)})),r()}),u&&!c&&x.observe(u),x.observe(t));let w,g=c?ii(e):null;c&&b();function b(){const v=ii(e);g&&!BS(g,v)&&r(),g=v,w=requestAnimationFrame(b)}return r(),()=>{var v;d.forEach(p=>{s&&p.removeEventListener("scroll",r),i&&p.removeEventListener("resize",r)}),f==null||f(),(v=x)==null||v.disconnect(),x=null,c&&cancelAnimationFrame(w)}}const s4=OM,i4=LM,o4=IM,a4=VM,l4=MM,Sv=AM,c4=FM,u4=(e,t,r)=>{const n=new Map,s={platform:t4,...r},i={...s.platform,_c:n};return RM(e,t,{...s,platform:i})};var uc=typeof document<"u"?m.useLayoutEffect:m.useEffect;function Wc(e,t){if(e===t)return!0;if(typeof e!=typeof t)return!1;if(typeof e=="function"&&e.toString()===t.toString())return!0;let r,n,s;if(e&&t&&typeof e=="object"){if(Array.isArray(e)){if(r=e.length,r!==t.length)return!1;for(n=r;n--!==0;)if(!Wc(e[n],t[n]))return!1;return!0}if(s=Object.keys(e),r=s.length,r!==Object.keys(t).length)return!1;for(n=r;n--!==0;)if(!{}.hasOwnProperty.call(t,s[n]))return!1;for(n=r;n--!==0;){const i=s[n];if(!(i==="_owner"&&e.$typeof)&&!Wc(e[i],t[i]))return!1}return!0}return e!==e&&t!==t}function US(e){return typeof window>"u"?1:(e.ownerDocument.defaultView||window).devicePixelRatio||1}function jv(e,t){const r=US(e);return Math.round(t*r)/r}function Ud(e){const t=m.useRef(e);return uc(()=>{t.current=e}),t}function d4(e){e===void 0&&(e={});const{placement:t="bottom",strategy:r="absolute",middleware:n=[],platform:s,elements:{reference:i,floating:a}={},transform:l=!0,whileElementsMounted:c,open:u}=e,[d,f]=m.useState({x:0,y:0,strategy:r,placement:t,middlewareData:{},isPositioned:!1}),[h,x]=m.useState(n);Wc(h,n)||x(n);const[w,g]=m.useState(null),[b,v]=m.useState(null),p=m.useCallback(I=>{I!==E.current&&(E.current=I,g(I))},[]),y=m.useCallback(I=>{I!==T.current&&(T.current=I,v(I))},[]),N=i||w,j=a||b,E=m.useRef(null),T=m.useRef(null),P=m.useRef(d),C=c!=null,A=Ud(c),z=Ud(s),O=Ud(u),U=m.useCallback(()=>{if(!E.current||!T.current)return;const I={placement:t,strategy:r,middleware:h};z.current&&(I.platform=z.current),u4(E.current,T.current,I).then(M=>{const W={...M,isPositioned:O.current!==!1};F.current&&!Wc(P.current,W)&&(P.current=W,mi.flushSync(()=>{f(W)}))})},[h,t,r,z,O]);uc(()=>{u===!1&&P.current.isPositioned&&(P.current.isPositioned=!1,f(I=>({...I,isPositioned:!1})))},[u]);const F=m.useRef(!1);uc(()=>(F.current=!0,()=>{F.current=!1}),[]),uc(()=>{if(N&&(E.current=N),j&&(T.current=j),N&&j){if(A.current)return A.current(N,j,U);U()}},[N,j,U,A,C]);const re=m.useMemo(()=>({reference:E,floating:T,setReference:p,setFloating:y}),[p,y]),Q=m.useMemo(()=>({reference:N,floating:j}),[N,j]),oe=m.useMemo(()=>{const I={position:r,left:0,top:0};if(!Q.floating)return I;const M=jv(Q.floating,d.x),W=jv(Q.floating,d.y);return l?{...I,transform:"translate("+M+"px, "+W+"px)",...US(Q.floating)>=1.5&&{willChange:"transform"}}:{position:r,left:M,top:W}},[r,l,Q.floating,d.x,d.y]);return m.useMemo(()=>({...d,update:U,refs:re,elements:Q,floatingStyles:oe}),[d,U,re,Q,oe])}const f4=e=>{function t(r){return{}.hasOwnProperty.call(r,"current")}return{name:"arrow",options:e,fn(r){const{element:n,padding:s}=typeof e=="function"?e(r):e;return n&&t(n)?n.current!=null?Sv({element:n.current,padding:s}).fn(r):{}:n?Sv({element:n,padding:s}).fn(r):{}}}},m4=(e,t)=>({...s4(e),options:[e,t]}),h4=(e,t)=>({...i4(e),options:[e,t]}),p4=(e,t)=>({...c4(e),options:[e,t]}),g4=(e,t)=>({...o4(e),options:[e,t]}),v4=(e,t)=>({...a4(e),options:[e,t]}),y4=(e,t)=>({...l4(e),options:[e,t]}),x4=(e,t)=>({...f4(e),options:[e,t]});var w4="Arrow",WS=m.forwardRef((e,t)=>{const{children:r,width:n=10,height:s=5,...i}=e;return o.jsx(ce.svg,{...i,ref:t,width:n,height:s,viewBox:"0 0 30 10",preserveAspectRatio:"none",children:e.asChild?r:o.jsx("polygon",{points:"0,0 30,0 15,10"})})});WS.displayName=w4;var b4=WS;function N4(e){const[t,r]=m.useState(void 0);return ht(()=>{if(e){r({width:e.offsetWidth,height:e.offsetHeight});const n=new ResizeObserver(s=>{if(!Array.isArray(s)||!s.length)return;const i=s[0];let a,l;if("borderBoxSize"in i){const c=i.borderBoxSize,u=Array.isArray(c)?c[0]:c;a=u.inlineSize,l=u.blockSize}else a=e.offsetWidth,l=e.offsetHeight;r({width:a,height:l})});return n.observe(e,{box:"border-box"}),()=>n.unobserve(e)}else r(void 0)},[e]),t}var Yh="Popper",[HS,Do]=Sr(Yh),[S4,qS]=HS(Yh),QS=e=>{const{__scopePopper:t,children:r}=e,[n,s]=m.useState(null);return o.jsx(S4,{scope:t,anchor:n,onAnchorChange:s,children:r})};QS.displayName=Yh;var GS="PopperAnchor",KS=m.forwardRef((e,t)=>{const{__scopePopper:r,virtualRef:n,...s}=e,i=qS(GS,r),a=m.useRef(null),l=Re(t,a);return m.useEffect(()=>{i.onAnchorChange((n==null?void 0:n.current)||a.current)}),n?null:o.jsx(ce.div,{...s,ref:l})});KS.displayName=GS;var Jh="PopperContent",[j4,C4]=HS(Jh),ZS=m.forwardRef((e,t)=>{var ne,Ae,Ie,ke,Te,Pe;const{__scopePopper:r,side:n="bottom",sideOffset:s=0,align:i="center",alignOffset:a=0,arrowPadding:l=0,avoidCollisions:c=!0,collisionBoundary:u=[],collisionPadding:d=0,sticky:f="partial",hideWhenDetached:h=!1,updatePositionStrategy:x="optimized",onPlaced:w,...g}=e,b=qS(Jh,r),[v,p]=m.useState(null),y=Re(t,Mt=>p(Mt)),[N,j]=m.useState(null),E=N4(N),T=(E==null?void 0:E.width)??0,P=(E==null?void 0:E.height)??0,C=n+(i!=="center"?"-"+i:""),A=typeof d=="number"?d:{top:0,right:0,bottom:0,left:0,...d},z=Array.isArray(u)?u:[u],O=z.length>0,U={padding:A,boundary:z.filter(k4),altBoundary:O},{refs:F,floatingStyles:re,placement:Q,isPositioned:oe,middlewareData:I}=d4({strategy:"fixed",placement:C,whileElementsMounted:(...Mt)=>n4(...Mt,{animationFrame:x==="always"}),elements:{reference:b.anchor},middleware:[m4({mainAxis:s+P,alignmentAxis:a}),c&&h4({mainAxis:!0,crossAxis:!1,limiter:f==="partial"?p4():void 0,...U}),c&&g4({...U}),v4({...U,apply:({elements:Mt,rects:er,availableWidth:Es,availableHeight:In})=>{const{width:Mn,height:od}=er.reference,vi=Mt.floating.style;vi.setProperty("--radix-popper-available-width",`${Es}px`),vi.setProperty("--radix-popper-available-height",`${In}px`),vi.setProperty("--radix-popper-anchor-width",`${Mn}px`),vi.setProperty("--radix-popper-anchor-height",`${od}px`)}}),N&&x4({element:N,padding:l}),T4({arrowWidth:T,arrowHeight:P}),h&&y4({strategy:"referenceHidden",...U})]}),[M,W]=JS(Q),se=jt(w);ht(()=>{oe&&(se==null||se())},[oe,se]);const xe=(ne=I.arrow)==null?void 0:ne.x,Je=(Ae=I.arrow)==null?void 0:Ae.y,ze=((Ie=I.arrow)==null?void 0:Ie.centerOffset)!==0,[Ct,qe]=m.useState();return ht(()=>{v&&qe(window.getComputedStyle(v).zIndex)},[v]),o.jsx("div",{ref:F.setFloating,"data-radix-popper-content-wrapper":"",style:{...re,transform:oe?re.transform:"translate(0, -200%)",minWidth:"max-content",zIndex:Ct,"--radix-popper-transform-origin":[(ke=I.transformOrigin)==null?void 0:ke.x,(Te=I.transformOrigin)==null?void 0:Te.y].join(" "),...((Pe=I.hide)==null?void 0:Pe.referenceHidden)&&{visibility:"hidden",pointerEvents:"none"}},dir:e.dir,children:o.jsx(j4,{scope:r,placedSide:M,onArrowChange:j,arrowX:xe,arrowY:Je,shouldHideArrow:ze,children:o.jsx(ce.div,{"data-side":M,"data-align":W,...g,ref:y,style:{...g.style,animation:oe?void 0:"none"}})})})});ZS.displayName=Jh;var XS="PopperArrow",_4={top:"bottom",right:"left",bottom:"top",left:"right"},YS=m.forwardRef(function(t,r){const{__scopePopper:n,...s}=t,i=C4(XS,n),a=_4[i.placedSide];return o.jsx("span",{ref:i.onArrowChange,style:{position:"absolute",left:i.arrowX,top:i.arrowY,[a]:0,transformOrigin:{top:"",right:"0 0",bottom:"center 0",left:"100% 0"}[i.placedSide],transform:{top:"translateY(100%)",right:"translateY(50%) rotate(90deg) translateX(-50%)",bottom:"rotate(180deg)",left:"translateY(50%) rotate(-90deg) translateX(50%)"}[i.placedSide],visibility:i.shouldHideArrow?"hidden":void 0},children:o.jsx(b4,{...s,ref:r,style:{...s.style,display:"block"}})})});YS.displayName=XS;function k4(e){return e!==null}var T4=e=>({name:"transformOrigin",options:e,fn(t){var b,v,p;const{placement:r,rects:n,middlewareData:s}=t,a=((b=s.arrow)==null?void 0:b.centerOffset)!==0,l=a?0:e.arrowWidth,c=a?0:e.arrowHeight,[u,d]=JS(r),f={start:"0%",center:"50%",end:"100%"}[d],h=(((v=s.arrow)==null?void 0:v.x)??0)+l/2,x=(((p=s.arrow)==null?void 0:p.y)??0)+c/2;let w="",g="";return u==="bottom"?(w=a?f:`${h}px`,g=`${-c}px`):u==="top"?(w=a?f:`${h}px`,g=`${n.floating.height+c}px`):u==="right"?(w=`${-c}px`,g=a?f:`${x}px`):u==="left"&&(w=`${n.floating.width+c}px`,g=a?f:`${x}px`),{data:{x:w,y:g}}}});function JS(e){const[t,r="center"]=e.split("-");return[t,r]}var ej=QS,ep=KS,tp=ZS,rp=YS,[Bu,P6]=Sr("Tooltip",[Do]),np=Do(),tj="TooltipProvider",E4=700,Cv="tooltip.open",[P4,rj]=Bu(tj),nj=e=>{const{__scopeTooltip:t,delayDuration:r=E4,skipDelayDuration:n=300,disableHoverableContent:s=!1,children:i}=e,a=m.useRef(!0),l=m.useRef(!1),c=m.useRef(0);return m.useEffect(()=>{const u=c.current;return()=>window.clearTimeout(u)},[]),o.jsx(P4,{scope:t,isOpenDelayedRef:a,delayDuration:r,onOpen:m.useCallback(()=>{window.clearTimeout(c.current),a.current=!1},[]),onClose:m.useCallback(()=>{window.clearTimeout(c.current),c.current=window.setTimeout(()=>a.current=!0,n)},[n]),isPointerInTransitRef:l,onPointerInTransitChange:m.useCallback(u=>{l.current=u},[]),disableHoverableContent:s,children:i})};nj.displayName=tj;var sj="Tooltip",[R6,Uu]=Bu(sj),ym="TooltipTrigger",R4=m.forwardRef((e,t)=>{const{__scopeTooltip:r,...n}=e,s=Uu(ym,r),i=rj(ym,r),a=np(r),l=m.useRef(null),c=Re(t,l,s.onTriggerChange),u=m.useRef(!1),d=m.useRef(!1),f=m.useCallback(()=>u.current=!1,[]);return m.useEffect(()=>()=>document.removeEventListener("pointerup",f),[f]),o.jsx(ep,{asChild:!0,...a,children:o.jsx(ce.button,{"aria-describedby":s.open?s.contentId:void 0,"data-state":s.stateAttribute,...n,ref:c,onPointerMove:K(e.onPointerMove,h=>{h.pointerType!=="touch"&&!d.current&&!i.isPointerInTransitRef.current&&(s.onTriggerEnter(),d.current=!0)}),onPointerLeave:K(e.onPointerLeave,()=>{s.onTriggerLeave(),d.current=!1}),onPointerDown:K(e.onPointerDown,()=>{s.open&&s.onClose(),u.current=!0,document.addEventListener("pointerup",f,{once:!0})}),onFocus:K(e.onFocus,()=>{u.current||s.onOpen()}),onBlur:K(e.onBlur,s.onClose),onClick:K(e.onClick,s.onClose)})})});R4.displayName=ym;var A4="TooltipPortal",[A6,I4]=Bu(A4,{forceMount:void 0}),No="TooltipContent",ij=m.forwardRef((e,t)=>{const r=I4(No,e.__scopeTooltip),{forceMount:n=r.forceMount,side:s="top",...i}=e,a=Uu(No,e.__scopeTooltip);return o.jsx(Br,{present:n||a.open,children:a.disableHoverableContent?o.jsx(oj,{side:s,...i,ref:t}):o.jsx(M4,{side:s,...i,ref:t})})}),M4=m.forwardRef((e,t)=>{const r=Uu(No,e.__scopeTooltip),n=rj(No,e.__scopeTooltip),s=m.useRef(null),i=Re(t,s),[a,l]=m.useState(null),{trigger:c,onClose:u}=r,d=s.current,{onPointerInTransitChange:f}=n,h=m.useCallback(()=>{l(null),f(!1)},[f]),x=m.useCallback((w,g)=>{const b=w.currentTarget,v={x:w.clientX,y:w.clientY},p=V4(v,b.getBoundingClientRect()),y=$4(v,p),N=z4(g.getBoundingClientRect()),j=U4([...y,...N]);l(j),f(!0)},[f]);return m.useEffect(()=>()=>h(),[h]),m.useEffect(()=>{if(c&&d){const w=b=>x(b,d),g=b=>x(b,c);return c.addEventListener("pointerleave",w),d.addEventListener("pointerleave",g),()=>{c.removeEventListener("pointerleave",w),d.removeEventListener("pointerleave",g)}}},[c,d,x,h]),m.useEffect(()=>{if(a){const w=g=>{const b=g.target,v={x:g.clientX,y:g.clientY},p=(c==null?void 0:c.contains(b))||(d==null?void 0:d.contains(b)),y=!B4(v,a);p?h():y&&(h(),u())};return document.addEventListener("pointermove",w),()=>document.removeEventListener("pointermove",w)}},[c,d,a,u,h]),o.jsx(oj,{...e,ref:i})}),[D4,O4]=Bu(sj,{isInside:!1}),L4=jA("TooltipContent"),oj=m.forwardRef((e,t)=>{const{__scopeTooltip:r,children:n,"aria-label":s,onEscapeKeyDown:i,onPointerDownOutside:a,...l}=e,c=Uu(No,r),u=np(r),{onClose:d}=c;return m.useEffect(()=>(document.addEventListener(Cv,d),()=>document.removeEventListener(Cv,d)),[d]),m.useEffect(()=>{if(c.trigger){const f=h=>{const x=h.target;x!=null&&x.contains(c.trigger)&&d()};return window.addEventListener("scroll",f,{capture:!0}),()=>window.removeEventListener("scroll",f,{capture:!0})}},[c.trigger,d]),o.jsx(Po,{asChild:!0,disableOutsidePointerEvents:!1,onEscapeKeyDown:i,onPointerDownOutside:a,onFocusOutside:f=>f.preventDefault(),onDismiss:d,children:o.jsxs(tp,{"data-state":c.stateAttribute,...u,...l,ref:t,style:{...l.style,"--radix-tooltip-content-transform-origin":"var(--radix-popper-transform-origin)","--radix-tooltip-content-available-width":"var(--radix-popper-available-width)","--radix-tooltip-content-available-height":"var(--radix-popper-available-height)","--radix-tooltip-trigger-width":"var(--radix-popper-anchor-width)","--radix-tooltip-trigger-height":"var(--radix-popper-anchor-height)"},children:[o.jsx(L4,{children:n}),o.jsx(D4,{scope:r,isInside:!0,children:o.jsx(WA,{id:c.contentId,role:"tooltip",children:s||n})})]})})});ij.displayName=No;var aj="TooltipArrow",F4=m.forwardRef((e,t)=>{const{__scopeTooltip:r,...n}=e,s=np(r);return O4(aj,r).isInside?null:o.jsx(rp,{...s,...n,ref:t})});F4.displayName=aj;function V4(e,t){const r=Math.abs(t.top-e.y),n=Math.abs(t.bottom-e.y),s=Math.abs(t.right-e.x),i=Math.abs(t.left-e.x);switch(Math.min(r,n,s,i)){case i:return"left";case s:return"right";case r:return"top";case n:return"bottom";default:throw new Error("unreachable")}}function $4(e,t,r=5){const n=[];switch(t){case"top":n.push({x:e.x-r,y:e.y+r},{x:e.x+r,y:e.y+r});break;case"bottom":n.push({x:e.x-r,y:e.y-r},{x:e.x+r,y:e.y-r});break;case"left":n.push({x:e.x+r,y:e.y-r},{x:e.x+r,y:e.y+r});break;case"right":n.push({x:e.x-r,y:e.y-r},{x:e.x-r,y:e.y+r});break}return n}function z4(e){const{top:t,right:r,bottom:n,left:s}=e;return[{x:s,y:t},{x:r,y:t},{x:r,y:n},{x:s,y:n}]}function B4(e,t){const{x:r,y:n}=e;let s=!1;for(let i=0,a=t.length-1;i<t.length;a=i++){const l=t[i].x,c=t[i].y,u=t[a].x,d=t[a].y;c>n!=d>n&&r<(u-l)*(n-c)/(d-c)+l&&(s=!s)}return s}function U4(e){const t=e.slice();return t.sort((r,n)=>r.x<n.x?-1:r.x>n.x?1:r.y<n.y?-1:r.y>n.y?1:0),W4(t)}function W4(e){if(e.length<=1)return e.slice();const t=[];for(let n=0;n<e.length;n++){const s=e[n];for(;t.length>=2;){const i=t[t.length-1],a=t[t.length-2];if((i.x-a.x)*(s.y-a.y)>=(i.y-a.y)*(s.x-a.x))t.pop();else break}t.push(s)}t.pop();const r=[];for(let n=e.length-1;n>=0;n--){const s=e[n];for(;r.length>=2;){const i=r[r.length-1],a=r[r.length-2];if((i.x-a.x)*(s.y-a.y)>=(i.y-a.y)*(s.x-a.x))r.pop();else break}r.push(s)}return r.pop(),t.length===1&&r.length===1&&t[0].x===r[0].x&&t[0].y===r[0].y?t:t.concat(r)}var H4=nj,lj=ij;const q4=H4,Q4=m.forwardRef(({className:e,sideOffset:t=4,...r},n)=>o.jsx(lj,{ref:n,sideOffset:t,className:me("z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]",e),...r}));Q4.displayName=lj.displayName;const cj=m.createContext(void 0);function G4({children:e}){const[t,r]=m.useState(()=>{const i=localStorage.getItem("fitforge-theme");return i||(window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light")});m.useEffect(()=>{const i=window.document.documentElement;i.classList.remove("light","dark"),i.classList.add(t),localStorage.setItem("fitforge-theme",t)},[t]);const s={theme:t,setTheme:r,toggleTheme:()=>{r(t==="light"?"dark":"light")}};return o.jsx(cj.Provider,{value:s,children:e})}const K4=()=>{const e=m.useContext(cj);if(e===void 0)throw new Error("useTheme must be used within a ThemeProvider");return e},uj=m.createContext(void 0);function Z4({children:e}){const[t,r]=m.useState(null),[n,s]=m.useState(null),[i,a]=m.useState(!0);m.useEffect(()=>{l()},[]);const l=async()=>{try{const f=await fetch("/api/auth/me");if(f.ok){const h=await f.json();r(h),s("auto-login")}else console.error("Failed to auto-login as Ender")}catch(f){console.error("Failed to fetch current user:",f)}finally{a(!1)}},d={user:t,token:n,login:(f,h)=>{s(f),r(h),localStorage.setItem("fitforge-token",f)},logout:()=>{s(null),r(null),localStorage.removeItem("fitforge-token")},isLoading:i};return o.jsx(uj.Provider,{value:d,children:e})}const Rn=()=>{const e=m.useContext(uj);if(e===void 0)throw new Error("useAuth must be used within an AuthProvider");return e},dj=m.createContext(void 0);function X4({children:e}){const[t,r]=m.useState(null),n=m.useCallback((w,g)=>{const b={sessionId:`session_${Date.now()}`,startTime:new Date,currentExerciseIndex:0,exercises:g.map(v=>({exerciseId:v.id,exerciseName:v.name,sets:[],completed:!1,restTimeRemaining:v.restTime})),status:"in_progress",totalVolume:0,estimatedCalories:0,workoutType:w};r(b),localStorage.setItem("activeWorkoutSession",JSON.stringify(b))},[]),s=m.useCallback(()=>{if(t){const w={...t,status:"paused"};r(w),localStorage.setItem("activeWorkoutSession",JSON.stringify(w))}},[t]),i=m.useCallback(()=>{if(t){const w={...t,status:"in_progress"};r(w),localStorage.setItem("activeWorkoutSession",JSON.stringify(w))}},[t]),a=m.useCallback(()=>{if(t){const w={...t,status:"completed",endTime:new Date};r(w),console.log("Saving workout session:",w),localStorage.removeItem("activeWorkoutSession")}},[t]),l=m.useCallback((w,g,b)=>{if(!t)return;const v=t.exercises[t.currentExerciseIndex],p=w*g,y={weight:w,reps:g,equipment:b,timestamp:new Date,setNumber:v.sets.length+1,volume:p},N={...t};N.exercises[t.currentExerciseIndex].sets.push(y),N.totalVolume+=p,N.estimatedCalories+=Math.round(p*.1),r(N),localStorage.setItem("activeWorkoutSession",JSON.stringify(N))},[t]),c=m.useCallback(()=>{if(!t)return;const w={...t};w.exercises[t.currentExerciseIndex].completed=!0,r(w),localStorage.setItem("activeWorkoutSession",JSON.stringify(w))},[t]),u=m.useCallback(()=>{if(!t||t.currentExerciseIndex>=t.exercises.length-1)return;const w={...t,currentExerciseIndex:t.currentExerciseIndex+1};r(w),localStorage.setItem("activeWorkoutSession",JSON.stringify(w))},[t]),d=m.useCallback(()=>{if(!t||t.currentExerciseIndex<=0)return;const w={...t,currentExerciseIndex:t.currentExerciseIndex-1};r(w),localStorage.setItem("activeWorkoutSession",JSON.stringify(w))},[t]),f=m.useCallback(w=>{if(!t)return;const g={...t};g.exercises[t.currentExerciseIndex].restTimeRemaining=w,r(g)},[t]),h=m.useCallback(()=>{if(!t)return{totalSets:0,totalVolume:0,estimatedCalories:0,duration:0,averageRestTime:0};const w=t.exercises.reduce((p,y)=>p+y.sets.length,0),g=t.endTime?t.endTime.getTime()-t.startTime.getTime():Date.now()-t.startTime.getTime(),b=t.exercises.filter(p=>p.completed),v=b.length>0?b.reduce((p,y)=>p+y.restTimeRemaining,0)/b.length:0;return{totalSets:w,totalVolume:t.totalVolume,estimatedCalories:t.estimatedCalories,duration:g,averageRestTime:v}},[t]),x=m.useCallback(()=>{const w=localStorage.getItem("activeWorkoutSession");if(w)try{const g=JSON.parse(w);g.startTime=new Date(g.startTime),g.endTime&&(g.endTime=new Date(g.endTime)),g.exercises.forEach(b=>{b.sets.forEach(v=>{v.timestamp=new Date(v.timestamp)})}),r(g)}catch(g){console.error("Failed to recover workout session:",g),localStorage.removeItem("activeWorkoutSession")}},[]);return pe.useEffect(()=>{x()},[x]),o.jsx(dj.Provider,{value:{session:t,startWorkout:n,pauseWorkout:s,resumeWorkout:i,endWorkout:a,logSet:l,completeExercise:c,nextExercise:u,previousExercise:d,updateRestTimer:f,calculateSessionStats:h},children:e})}function fj(){const e=m.useContext(dj);if(e===void 0)throw new Error("useWorkoutSession must be used within a WorkoutSessionProvider");return e}const Y4=hl("inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0",{variants:{variant:{default:"bg-primary text-primary-foreground hover:bg-primary/90",destructive:"bg-destructive text-destructive-foreground hover:bg-destructive/90",outline:"border border-input bg-background hover:bg-accent hover:text-accent-foreground",secondary:"bg-secondary text-secondary-foreground hover:bg-secondary/80",ghost:"hover:bg-accent hover:text-accent-foreground",link:"text-primary underline-offset-4 hover:underline"},size:{default:"h-10 px-4 py-2",sm:"h-9 rounded-md px-3",lg:"h-11 rounded-md px-8",icon:"h-10 w-10"}},defaultVariants:{variant:"default",size:"default"}}),ae=m.forwardRef(({className:e,variant:t,size:r,asChild:n=!1,...s},i)=>{const a=n?UN:"button";return o.jsx(a,{className:me(Y4({variant:t,size:r,className:e})),ref:i,...s})});ae.displayName="Button";var J4=m.createContext(void 0);function Wu(e){const t=m.useContext(J4);return e||t||"ltr"}var Wd=0;function sp(){m.useEffect(()=>{const e=document.querySelectorAll("[data-radix-focus-guard]");return document.body.insertAdjacentElement("afterbegin",e[0]??_v()),document.body.insertAdjacentElement("beforeend",e[1]??_v()),Wd++,()=>{Wd===1&&document.querySelectorAll("[data-radix-focus-guard]").forEach(t=>t.remove()),Wd--}},[])}function _v(){const e=document.createElement("span");return e.setAttribute("data-radix-focus-guard",""),e.tabIndex=0,e.style.outline="none",e.style.opacity="0",e.style.position="fixed",e.style.pointerEvents="none",e}var Hd="focusScope.autoFocusOnMount",qd="focusScope.autoFocusOnUnmount",kv={bubbles:!1,cancelable:!0},eD="FocusScope",Hu=m.forwardRef((e,t)=>{const{loop:r=!1,trapped:n=!1,onMountAutoFocus:s,onUnmountAutoFocus:i,...a}=e,[l,c]=m.useState(null),u=jt(s),d=jt(i),f=m.useRef(null),h=Re(t,g=>c(g)),x=m.useRef({paused:!1,pause(){this.paused=!0},resume(){this.paused=!1}}).current;m.useEffect(()=>{if(n){let g=function(y){if(x.paused||!l)return;const N=y.target;l.contains(N)?f.current=N:Vn(f.current,{select:!0})},b=function(y){if(x.paused||!l)return;const N=y.relatedTarget;N!==null&&(l.contains(N)||Vn(f.current,{select:!0}))},v=function(y){if(document.activeElement===document.body)for(const j of y)j.removedNodes.length>0&&Vn(l)};document.addEventListener("focusin",g),document.addEventListener("focusout",b);const p=new MutationObserver(v);return l&&p.observe(l,{childList:!0,subtree:!0}),()=>{document.removeEventListener("focusin",g),document.removeEventListener("focusout",b),p.disconnect()}}},[n,l,x.paused]),m.useEffect(()=>{if(l){Ev.add(x);const g=document.activeElement;if(!l.contains(g)){const v=new CustomEvent(Hd,kv);l.addEventListener(Hd,u),l.dispatchEvent(v),v.defaultPrevented||(tD(oD(mj(l)),{select:!0}),document.activeElement===g&&Vn(l))}return()=>{l.removeEventListener(Hd,u),setTimeout(()=>{const v=new CustomEvent(qd,kv);l.addEventListener(qd,d),l.dispatchEvent(v),v.defaultPrevented||Vn(g??document.body,{select:!0}),l.removeEventListener(qd,d),Ev.remove(x)},0)}}},[l,u,d,x]);const w=m.useCallback(g=>{if(!r&&!n||x.paused)return;const b=g.key==="Tab"&&!g.altKey&&!g.ctrlKey&&!g.metaKey,v=document.activeElement;if(b&&v){const p=g.currentTarget,[y,N]=rD(p);y&&N?!g.shiftKey&&v===N?(g.preventDefault(),r&&Vn(y,{select:!0})):g.shiftKey&&v===y&&(g.preventDefault(),r&&Vn(N,{select:!0})):v===p&&g.preventDefault()}},[r,n,x.paused]);return o.jsx(ce.div,{tabIndex:-1,...a,ref:h,onKeyDown:w})});Hu.displayName=eD;function tD(e,{select:t=!1}={}){const r=document.activeElement;for(const n of e)if(Vn(n,{select:t}),document.activeElement!==r)return}function rD(e){const t=mj(e),r=Tv(t,e),n=Tv(t.reverse(),e);return[r,n]}function mj(e){const t=[],r=document.createTreeWalker(e,NodeFilter.SHOW_ELEMENT,{acceptNode:n=>{const s=n.tagName==="INPUT"&&n.type==="hidden";return n.disabled||n.hidden||s?NodeFilter.FILTER_SKIP:n.tabIndex>=0?NodeFilter.FILTER_ACCEPT:NodeFilter.FILTER_SKIP}});for(;r.nextNode();)t.push(r.currentNode);return t}function Tv(e,t){for(const r of e)if(!nD(r,{upTo:t}))return r}function nD(e,{upTo:t}){if(getComputedStyle(e).visibility==="hidden")return!0;for(;e;){if(t!==void 0&&e===t)return!1;if(getComputedStyle(e).display==="none")return!0;e=e.parentElement}return!1}function sD(e){return e instanceof HTMLInputElement&&"select"in e}function Vn(e,{select:t=!1}={}){if(e&&e.focus){const r=document.activeElement;e.focus({preventScroll:!0}),e!==r&&sD(e)&&t&&e.select()}}var Ev=iD();function iD(){let e=[];return{add(t){const r=e[0];t!==r&&(r==null||r.pause()),e=Pv(e,t),e.unshift(t)},remove(t){var r;e=Pv(e,t),(r=e[0])==null||r.resume()}}}function Pv(e,t){const r=[...e],n=r.indexOf(t);return n!==-1&&r.splice(n,1),r}function oD(e){return e.filter(t=>t.tagName!=="A")}var Qd="rovingFocusGroup.onEntryFocus",aD={bubbles:!1,cancelable:!0},qu="RovingFocusGroup",[xm,hj,lD]=Mu(qu),[cD,Qu]=Sr(qu,[lD]),[uD,dD]=cD(qu),pj=m.forwardRef((e,t)=>o.jsx(xm.Provider,{scope:e.__scopeRovingFocusGroup,children:o.jsx(xm.Slot,{scope:e.__scopeRovingFocusGroup,children:o.jsx(fD,{...e,ref:t})})}));pj.displayName=qu;var fD=m.forwardRef((e,t)=>{const{__scopeRovingFocusGroup:r,orientation:n,loop:s=!1,dir:i,currentTabStopId:a,defaultCurrentTabStopId:l,onCurrentTabStopIdChange:c,onEntryFocus:u,preventScrollOnEntryFocus:d=!1,...f}=e,h=m.useRef(null),x=Re(t,h),w=Wu(i),[g=null,b]=si({prop:a,defaultProp:l,onChange:c}),[v,p]=m.useState(!1),y=jt(u),N=hj(r),j=m.useRef(!1),[E,T]=m.useState(0);return m.useEffect(()=>{const P=h.current;if(P)return P.addEventListener(Qd,y),()=>P.removeEventListener(Qd,y)},[y]),o.jsx(uD,{scope:r,orientation:n,dir:w,loop:s,currentTabStopId:g,onItemFocus:m.useCallback(P=>b(P),[b]),onItemShiftTab:m.useCallback(()=>p(!0),[]),onFocusableItemAdd:m.useCallback(()=>T(P=>P+1),[]),onFocusableItemRemove:m.useCallback(()=>T(P=>P-1),[]),children:o.jsx(ce.div,{tabIndex:v||E===0?-1:0,"data-orientation":n,...f,ref:x,style:{outline:"none",...e.style},onMouseDown:K(e.onMouseDown,()=>{j.current=!0}),onFocus:K(e.onFocus,P=>{const C=!j.current;if(P.target===P.currentTarget&&C&&!v){const A=new CustomEvent(Qd,aD);if(P.currentTarget.dispatchEvent(A),!A.defaultPrevented){const z=N().filter(Q=>Q.focusable),O=z.find(Q=>Q.active),U=z.find(Q=>Q.id===g),re=[O,U,...z].filter(Boolean).map(Q=>Q.ref.current);yj(re,d)}}j.current=!1}),onBlur:K(e.onBlur,()=>p(!1))})})}),gj="RovingFocusGroupItem",vj=m.forwardRef((e,t)=>{const{__scopeRovingFocusGroup:r,focusable:n=!0,active:s=!1,tabStopId:i,...a}=e,l=tn(),c=i||l,u=dD(gj,r),d=u.currentTabStopId===c,f=hj(r),{onFocusableItemAdd:h,onFocusableItemRemove:x}=u;return m.useEffect(()=>{if(n)return h(),()=>x()},[n,h,x]),o.jsx(xm.ItemSlot,{scope:r,id:c,focusable:n,active:s,children:o.jsx(ce.span,{tabIndex:d?0:-1,"data-orientation":u.orientation,...a,ref:t,onMouseDown:K(e.onMouseDown,w=>{n?u.onItemFocus(c):w.preventDefault()}),onFocus:K(e.onFocus,()=>u.onItemFocus(c)),onKeyDown:K(e.onKeyDown,w=>{if(w.key==="Tab"&&w.shiftKey){u.onItemShiftTab();return}if(w.target!==w.currentTarget)return;const g=pD(w,u.orientation,u.dir);if(g!==void 0){if(w.metaKey||w.ctrlKey||w.altKey||w.shiftKey)return;w.preventDefault();let v=f().filter(p=>p.focusable).map(p=>p.ref.current);if(g==="last")v.reverse();else if(g==="prev"||g==="next"){g==="prev"&&v.reverse();const p=v.indexOf(w.currentTarget);v=u.loop?gD(v,p+1):v.slice(p+1)}setTimeout(()=>yj(v))}})})})});vj.displayName=gj;var mD={ArrowLeft:"prev",ArrowUp:"prev",ArrowRight:"next",ArrowDown:"next",PageUp:"first",Home:"first",PageDown:"last",End:"last"};function hD(e,t){return t!=="rtl"?e:e==="ArrowLeft"?"ArrowRight":e==="ArrowRight"?"ArrowLeft":e}function pD(e,t,r){const n=hD(e.key,r);if(!(t==="vertical"&&["ArrowLeft","ArrowRight"].includes(n))&&!(t==="horizontal"&&["ArrowUp","ArrowDown"].includes(n)))return mD[n]}function yj(e,t=!1){const r=document.activeElement;for(const n of e)if(n===r||(n.focus({preventScroll:t}),document.activeElement!==r))return}function gD(e,t){return e.map((r,n)=>e[(t+n)%e.length])}var xj=pj,wj=vj,vD=function(e){if(typeof document>"u")return null;var t=Array.isArray(e)?e[0]:e;return t.ownerDocument.body},xi=new WeakMap,ql=new WeakMap,Ql={},Gd=0,bj=function(e){return e&&(e.host||bj(e.parentNode))},yD=function(e,t){return t.map(function(r){if(e.contains(r))return r;var n=bj(r);return n&&e.contains(n)?n:(console.error("aria-hidden",r,"in not contained inside",e,". Doing nothing"),null)}).filter(function(r){return!!r})},xD=function(e,t,r,n){var s=yD(t,Array.isArray(e)?e:[e]);Ql[r]||(Ql[r]=new WeakMap);var i=Ql[r],a=[],l=new Set,c=new Set(s),u=function(f){!f||l.has(f)||(l.add(f),u(f.parentNode))};s.forEach(u);var d=function(f){!f||c.has(f)||Array.prototype.forEach.call(f.children,function(h){if(l.has(h))d(h);else try{var x=h.getAttribute(n),w=x!==null&&x!=="false",g=(xi.get(h)||0)+1,b=(i.get(h)||0)+1;xi.set(h,g),i.set(h,b),a.push(h),g===1&&w&&ql.set(h,!0),b===1&&h.setAttribute(r,"true"),w||h.setAttribute(n,"true")}catch(v){console.error("aria-hidden: cannot operate on ",h,v)}})};return d(t),l.clear(),Gd++,function(){a.forEach(function(f){var h=xi.get(f)-1,x=i.get(f)-1;xi.set(f,h),i.set(f,x),h||(ql.has(f)||f.removeAttribute(n),ql.delete(f)),x||f.removeAttribute(r)}),Gd--,Gd||(xi=new WeakMap,xi=new WeakMap,ql=new WeakMap,Ql={})}},ip=function(e,t,r){r===void 0&&(r="data-aria-hidden");var n=Array.from(Array.isArray(e)?e:[e]),s=vD(e);return s?(n.push.apply(n,Array.from(s.querySelectorAll("[aria-live]"))),xD(n,s,r,"aria-hidden")):function(){return null}},Xr=function(){return Xr=Object.assign||function(t){for(var r,n=1,s=arguments.length;n<s;n++){r=arguments[n];for(var i in r)Object.prototype.hasOwnProperty.call(r,i)&&(t[i]=r[i])}return t},Xr.apply(this,arguments)};function Nj(e,t){var r={};for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&t.indexOf(n)<0&&(r[n]=e[n]);if(e!=null&&typeof Object.getOwnPropertySymbols=="function")for(var s=0,n=Object.getOwnPropertySymbols(e);s<n.length;s++)t.indexOf(n[s])<0&&Object.prototype.propertyIsEnumerable.call(e,n[s])&&(r[n[s]]=e[n[s]]);return r}function wD(e,t,r){if(r||arguments.length===2)for(var n=0,s=t.length,i;n<s;n++)(i||!(n in t))&&(i||(i=Array.prototype.slice.call(t,0,n)),i[n]=t[n]);return e.concat(i||Array.prototype.slice.call(t))}var dc="right-scroll-bar-position",fc="width-before-scroll-bar",bD="with-scroll-bars-hidden",ND="--removed-body-scroll-bar-size";function Kd(e,t){return typeof e=="function"?e(t):e&&(e.current=t),e}function SD(e,t){var r=m.useState(function(){return{value:e,callback:t,facade:{get current(){return r.value},set current(n){var s=r.value;s!==n&&(r.value=n,r.callback(n,s))}}}})[0];return r.callback=t,r.facade}var jD=typeof window<"u"?m.useLayoutEffect:m.useEffect,Rv=new WeakMap;function CD(e,t){var r=SD(null,function(n){return e.forEach(function(s){return Kd(s,n)})});return jD(function(){var n=Rv.get(r);if(n){var s=new Set(n),i=new Set(e),a=r.current;s.forEach(function(l){i.has(l)||Kd(l,null)}),i.forEach(function(l){s.has(l)||Kd(l,a)})}Rv.set(r,e)},[e]),r}function _D(e){return e}function kD(e,t){t===void 0&&(t=_D);var r=[],n=!1,s={read:function(){if(n)throw new Error("Sidecar: could not `read` from an `assigned` medium. `read` could be used only with `useMedium`.");return r.length?r[r.length-1]:e},useMedium:function(i){var a=t(i,n);return r.push(a),function(){r=r.filter(function(l){return l!==a})}},assignSyncMedium:function(i){for(n=!0;r.length;){var a=r;r=[],a.forEach(i)}r={push:function(l){return i(l)},filter:function(){return r}}},assignMedium:function(i){n=!0;var a=[];if(r.length){var l=r;r=[],l.forEach(i),a=r}var c=function(){var d=a;a=[],d.forEach(i)},u=function(){return Promise.resolve().then(c)};u(),r={push:function(d){a.push(d),u()},filter:function(d){return a=a.filter(d),r}}}};return s}function TD(e){e===void 0&&(e={});var t=kD(null);return t.options=Xr({async:!0,ssr:!1},e),t}var Sj=function(e){var t=e.sideCar,r=Nj(e,["sideCar"]);if(!t)throw new Error("Sidecar: please provide `sideCar` property to import the right car");var n=t.read();if(!n)throw new Error("Sidecar medium not found");return m.createElement(n,Xr({},r))};Sj.isSideCarExport=!0;function ED(e,t){return e.useMedium(t),Sj}var jj=TD(),Zd=function(){},Gu=m.forwardRef(function(e,t){var r=m.useRef(null),n=m.useState({onScrollCapture:Zd,onWheelCapture:Zd,onTouchMoveCapture:Zd}),s=n[0],i=n[1],a=e.forwardProps,l=e.children,c=e.className,u=e.removeScrollBar,d=e.enabled,f=e.shards,h=e.sideCar,x=e.noIsolation,w=e.inert,g=e.allowPinchZoom,b=e.as,v=b===void 0?"div":b,p=e.gapMode,y=Nj(e,["forwardProps","children","className","removeScrollBar","enabled","shards","sideCar","noIsolation","inert","allowPinchZoom","as","gapMode"]),N=h,j=CD([r,t]),E=Xr(Xr({},y),s);return m.createElement(m.Fragment,null,d&&m.createElement(N,{sideCar:jj,removeScrollBar:u,shards:f,noIsolation:x,inert:w,setCallbacks:i,allowPinchZoom:!!g,lockRef:r,gapMode:p}),a?m.cloneElement(m.Children.only(l),Xr(Xr({},E),{ref:j})):m.createElement(v,Xr({},E,{className:c,ref:j}),l))});Gu.defaultProps={enabled:!0,removeScrollBar:!0,inert:!1};Gu.classNames={fullWidth:fc,zeroRight:dc};var PD=function(){if(typeof __webpack_nonce__<"u")return __webpack_nonce__};function RD(){if(!document)return null;var e=document.createElement("style");e.type="text/css";var t=PD();return t&&e.setAttribute("nonce",t),e}function AD(e,t){e.styleSheet?e.styleSheet.cssText=t:e.appendChild(document.createTextNode(t))}function ID(e){var t=document.head||document.getElementsByTagName("head")[0];t.appendChild(e)}var MD=function(){var e=0,t=null;return{add:function(r){e==0&&(t=RD())&&(AD(t,r),ID(t)),e++},remove:function(){e--,!e&&t&&(t.parentNode&&t.parentNode.removeChild(t),t=null)}}},DD=function(){var e=MD();return function(t,r){m.useEffect(function(){return e.add(t),function(){e.remove()}},[t&&r])}},Cj=function(){var e=DD(),t=function(r){var n=r.styles,s=r.dynamic;return e(n,s),null};return t},OD={left:0,top:0,right:0,gap:0},Xd=function(e){return parseInt(e||"",10)||0},LD=function(e){var t=window.getComputedStyle(document.body),r=t[e==="padding"?"paddingLeft":"marginLeft"],n=t[e==="padding"?"paddingTop":"marginTop"],s=t[e==="padding"?"paddingRight":"marginRight"];return[Xd(r),Xd(n),Xd(s)]},FD=function(e){if(e===void 0&&(e="margin"),typeof window>"u")return OD;var t=LD(e),r=document.documentElement.clientWidth,n=window.innerWidth;return{left:t[0],top:t[1],right:t[2],gap:Math.max(0,n-r+t[2]-t[0])}},VD=Cj(),Ki="data-scroll-locked",$D=function(e,t,r,n){var s=e.left,i=e.top,a=e.right,l=e.gap;return r===void 0&&(r="margin"),`
  .`.concat(bD,` {
   overflow: hidden `).concat(n,`;
   padding-right: `).concat(l,"px ").concat(n,`;
  }
  body[`).concat(Ki,`] {
    overflow: hidden `).concat(n,`;
    overscroll-behavior: contain;
    `).concat([t&&"position: relative ".concat(n,";"),r==="margin"&&`
    padding-left: `.concat(s,`px;
    padding-top: `).concat(i,`px;
    padding-right: `).concat(a,`px;
    margin-left:0;
    margin-top:0;
    margin-right: `).concat(l,"px ").concat(n,`;
    `),r==="padding"&&"padding-right: ".concat(l,"px ").concat(n,";")].filter(Boolean).join(""),`
  }
  
  .`).concat(dc,` {
    right: `).concat(l,"px ").concat(n,`;
  }
  
  .`).concat(fc,` {
    margin-right: `).concat(l,"px ").concat(n,`;
  }
  
  .`).concat(dc," .").concat(dc,` {
    right: 0 `).concat(n,`;
  }
  
  .`).concat(fc," .").concat(fc,` {
    margin-right: 0 `).concat(n,`;
  }
  
  body[`).concat(Ki,`] {
    `).concat(ND,": ").concat(l,`px;
  }
`)},Av=function(){var e=parseInt(document.body.getAttribute(Ki)||"0",10);return isFinite(e)?e:0},zD=function(){m.useEffect(function(){return document.body.setAttribute(Ki,(Av()+1).toString()),function(){var e=Av()-1;e<=0?document.body.removeAttribute(Ki):document.body.setAttribute(Ki,e.toString())}},[])},BD=function(e){var t=e.noRelative,r=e.noImportant,n=e.gapMode,s=n===void 0?"margin":n;zD();var i=m.useMemo(function(){return FD(s)},[s]);return m.createElement(VD,{styles:$D(i,!t,s,r?"":"!important")})},wm=!1;if(typeof window<"u")try{var Gl=Object.defineProperty({},"passive",{get:function(){return wm=!0,!0}});window.addEventListener("test",Gl,Gl),window.removeEventListener("test",Gl,Gl)}catch{wm=!1}var wi=wm?{passive:!1}:!1,UD=function(e){return e.tagName==="TEXTAREA"},_j=function(e,t){if(!(e instanceof Element))return!1;var r=window.getComputedStyle(e);return r[t]!=="hidden"&&!(r.overflowY===r.overflowX&&!UD(e)&&r[t]==="visible")},WD=function(e){return _j(e,"overflowY")},HD=function(e){return _j(e,"overflowX")},Iv=function(e,t){var r=t.ownerDocument,n=t;do{typeof ShadowRoot<"u"&&n instanceof ShadowRoot&&(n=n.host);var s=kj(e,n);if(s){var i=Tj(e,n),a=i[1],l=i[2];if(a>l)return!0}n=n.parentNode}while(n&&n!==r.body);return!1},qD=function(e){var t=e.scrollTop,r=e.scrollHeight,n=e.clientHeight;return[t,r,n]},QD=function(e){var t=e.scrollLeft,r=e.scrollWidth,n=e.clientWidth;return[t,r,n]},kj=function(e,t){return e==="v"?WD(t):HD(t)},Tj=function(e,t){return e==="v"?qD(t):QD(t)},GD=function(e,t){return e==="h"&&t==="rtl"?-1:1},KD=function(e,t,r,n,s){var i=GD(e,window.getComputedStyle(t).direction),a=i*n,l=r.target,c=t.contains(l),u=!1,d=a>0,f=0,h=0;do{var x=Tj(e,l),w=x[0],g=x[1],b=x[2],v=g-b-i*w;(w||v)&&kj(e,l)&&(f+=v,h+=w),l instanceof ShadowRoot?l=l.host:l=l.parentNode}while(!c&&l!==document.body||c&&(t.contains(l)||t===l));return(d&&(Math.abs(f)<1||!s)||!d&&(Math.abs(h)<1||!s))&&(u=!0),u},Kl=function(e){return"changedTouches"in e?[e.changedTouches[0].clientX,e.changedTouches[0].clientY]:[0,0]},Mv=function(e){return[e.deltaX,e.deltaY]},Dv=function(e){return e&&"current"in e?e.current:e},ZD=function(e,t){return e[0]===t[0]&&e[1]===t[1]},XD=function(e){return`
  .block-interactivity-`.concat(e,` {pointer-events: none;}
  .allow-interactivity-`).concat(e,` {pointer-events: all;}
`)},YD=0,bi=[];function JD(e){var t=m.useRef([]),r=m.useRef([0,0]),n=m.useRef(),s=m.useState(YD++)[0],i=m.useState(Cj)[0],a=m.useRef(e);m.useEffect(function(){a.current=e},[e]),m.useEffect(function(){if(e.inert){document.body.classList.add("block-interactivity-".concat(s));var g=wD([e.lockRef.current],(e.shards||[]).map(Dv),!0).filter(Boolean);return g.forEach(function(b){return b.classList.add("allow-interactivity-".concat(s))}),function(){document.body.classList.remove("block-interactivity-".concat(s)),g.forEach(function(b){return b.classList.remove("allow-interactivity-".concat(s))})}}},[e.inert,e.lockRef.current,e.shards]);var l=m.useCallback(function(g,b){if("touches"in g&&g.touches.length===2||g.type==="wheel"&&g.ctrlKey)return!a.current.allowPinchZoom;var v=Kl(g),p=r.current,y="deltaX"in g?g.deltaX:p[0]-v[0],N="deltaY"in g?g.deltaY:p[1]-v[1],j,E=g.target,T=Math.abs(y)>Math.abs(N)?"h":"v";if("touches"in g&&T==="h"&&E.type==="range")return!1;var P=Iv(T,E);if(!P)return!0;if(P?j=T:(j=T==="v"?"h":"v",P=Iv(T,E)),!P)return!1;if(!n.current&&"changedTouches"in g&&(y||N)&&(n.current=j),!j)return!0;var C=n.current||j;return KD(C,b,g,C==="h"?y:N,!0)},[]),c=m.useCallback(function(g){var b=g;if(!(!bi.length||bi[bi.length-1]!==i)){var v="deltaY"in b?Mv(b):Kl(b),p=t.current.filter(function(j){return j.name===b.type&&(j.target===b.target||b.target===j.shadowParent)&&ZD(j.delta,v)})[0];if(p&&p.should){b.cancelable&&b.preventDefault();return}if(!p){var y=(a.current.shards||[]).map(Dv).filter(Boolean).filter(function(j){return j.contains(b.target)}),N=y.length>0?l(b,y[0]):!a.current.noIsolation;N&&b.cancelable&&b.preventDefault()}}},[]),u=m.useCallback(function(g,b,v,p){var y={name:g,delta:b,target:v,should:p,shadowParent:eO(v)};t.current.push(y),setTimeout(function(){t.current=t.current.filter(function(N){return N!==y})},1)},[]),d=m.useCallback(function(g){r.current=Kl(g),n.current=void 0},[]),f=m.useCallback(function(g){u(g.type,Mv(g),g.target,l(g,e.lockRef.current))},[]),h=m.useCallback(function(g){u(g.type,Kl(g),g.target,l(g,e.lockRef.current))},[]);m.useEffect(function(){return bi.push(i),e.setCallbacks({onScrollCapture:f,onWheelCapture:f,onTouchMoveCapture:h}),document.addEventListener("wheel",c,wi),document.addEventListener("touchmove",c,wi),document.addEventListener("touchstart",d,wi),function(){bi=bi.filter(function(g){return g!==i}),document.removeEventListener("wheel",c,wi),document.removeEventListener("touchmove",c,wi),document.removeEventListener("touchstart",d,wi)}},[]);var x=e.removeScrollBar,w=e.inert;return m.createElement(m.Fragment,null,w?m.createElement(i,{styles:XD(s)}):null,x?m.createElement(BD,{gapMode:e.gapMode}):null)}function eO(e){for(var t=null;e!==null;)e instanceof ShadowRoot&&(t=e.host,e=e.host),e=e.parentNode;return t}const tO=ED(jj,JD);var Ku=m.forwardRef(function(e,t){return m.createElement(Gu,Xr({},e,{ref:t,sideCar:tO}))});Ku.classNames=Gu.classNames;var bm=["Enter"," "],rO=["ArrowDown","PageUp","Home"],Ej=["ArrowUp","PageDown","End"],nO=[...rO,...Ej],sO={ltr:[...bm,"ArrowRight"],rtl:[...bm,"ArrowLeft"]},iO={ltr:["ArrowLeft"],rtl:["ArrowRight"]},yl="Menu",[Va,oO,aO]=Mu(yl),[hi,Pj]=Sr(yl,[aO,Do,Qu]),Zu=Do(),Rj=Qu(),[lO,pi]=hi(yl),[cO,xl]=hi(yl),Aj=e=>{const{__scopeMenu:t,open:r=!1,children:n,dir:s,onOpenChange:i,modal:a=!0}=e,l=Zu(t),[c,u]=m.useState(null),d=m.useRef(!1),f=jt(i),h=Wu(s);return m.useEffect(()=>{const x=()=>{d.current=!0,document.addEventListener("pointerdown",w,{capture:!0,once:!0}),document.addEventListener("pointermove",w,{capture:!0,once:!0})},w=()=>d.current=!1;return document.addEventListener("keydown",x,{capture:!0}),()=>{document.removeEventListener("keydown",x,{capture:!0}),document.removeEventListener("pointerdown",w,{capture:!0}),document.removeEventListener("pointermove",w,{capture:!0})}},[]),o.jsx(ej,{...l,children:o.jsx(lO,{scope:t,open:r,onOpenChange:f,content:c,onContentChange:u,children:o.jsx(cO,{scope:t,onClose:m.useCallback(()=>f(!1),[f]),isUsingKeyboardRef:d,dir:h,modal:a,children:n})})})};Aj.displayName=yl;var uO="MenuAnchor",op=m.forwardRef((e,t)=>{const{__scopeMenu:r,...n}=e,s=Zu(r);return o.jsx(ep,{...s,...n,ref:t})});op.displayName=uO;var ap="MenuPortal",[dO,Ij]=hi(ap,{forceMount:void 0}),Mj=e=>{const{__scopeMenu:t,forceMount:r,children:n,container:s}=e,i=pi(ap,t);return o.jsx(dO,{scope:t,forceMount:r,children:o.jsx(Br,{present:r||i.open,children:o.jsx(fl,{asChild:!0,container:s,children:n})})})};Mj.displayName=ap;var wr="MenuContent",[fO,lp]=hi(wr),Dj=m.forwardRef((e,t)=>{const r=Ij(wr,e.__scopeMenu),{forceMount:n=r.forceMount,...s}=e,i=pi(wr,e.__scopeMenu),a=xl(wr,e.__scopeMenu);return o.jsx(Va.Provider,{scope:e.__scopeMenu,children:o.jsx(Br,{present:n||i.open,children:o.jsx(Va.Slot,{scope:e.__scopeMenu,children:a.modal?o.jsx(mO,{...s,ref:t}):o.jsx(hO,{...s,ref:t})})})})}),mO=m.forwardRef((e,t)=>{const r=pi(wr,e.__scopeMenu),n=m.useRef(null),s=Re(t,n);return m.useEffect(()=>{const i=n.current;if(i)return ip(i)},[]),o.jsx(cp,{...e,ref:s,trapFocus:r.open,disableOutsidePointerEvents:r.open,disableOutsideScroll:!0,onFocusOutside:K(e.onFocusOutside,i=>i.preventDefault(),{checkForDefaultPrevented:!1}),onDismiss:()=>r.onOpenChange(!1)})}),hO=m.forwardRef((e,t)=>{const r=pi(wr,e.__scopeMenu);return o.jsx(cp,{...e,ref:t,trapFocus:!1,disableOutsidePointerEvents:!1,disableOutsideScroll:!1,onDismiss:()=>r.onOpenChange(!1)})}),pO=ni("MenuContent.ScrollLock"),cp=m.forwardRef((e,t)=>{const{__scopeMenu:r,loop:n=!1,trapFocus:s,onOpenAutoFocus:i,onCloseAutoFocus:a,disableOutsidePointerEvents:l,onEntryFocus:c,onEscapeKeyDown:u,onPointerDownOutside:d,onFocusOutside:f,onInteractOutside:h,onDismiss:x,disableOutsideScroll:w,...g}=e,b=pi(wr,r),v=xl(wr,r),p=Zu(r),y=Rj(r),N=oO(r),[j,E]=m.useState(null),T=m.useRef(null),P=Re(t,T,b.onContentChange),C=m.useRef(0),A=m.useRef(""),z=m.useRef(0),O=m.useRef(null),U=m.useRef("right"),F=m.useRef(0),re=w?Ku:m.Fragment,Q=w?{as:pO,allowPinchZoom:!0}:void 0,oe=M=>{var ne,Ae;const W=A.current+M,se=N().filter(Ie=>!Ie.disabled),xe=document.activeElement,Je=(ne=se.find(Ie=>Ie.ref.current===xe))==null?void 0:ne.textValue,ze=se.map(Ie=>Ie.textValue),Ct=kO(ze,W,Je),qe=(Ae=se.find(Ie=>Ie.textValue===Ct))==null?void 0:Ae.ref.current;(function Ie(ke){A.current=ke,window.clearTimeout(C.current),ke!==""&&(C.current=window.setTimeout(()=>Ie(""),1e3))})(W),qe&&setTimeout(()=>qe.focus())};m.useEffect(()=>()=>window.clearTimeout(C.current),[]),sp();const I=m.useCallback(M=>{var se,xe;return U.current===((se=O.current)==null?void 0:se.side)&&EO(M,(xe=O.current)==null?void 0:xe.area)},[]);return o.jsx(fO,{scope:r,searchRef:A,onItemEnter:m.useCallback(M=>{I(M)&&M.preventDefault()},[I]),onItemLeave:m.useCallback(M=>{var W;I(M)||((W=T.current)==null||W.focus(),E(null))},[I]),onTriggerLeave:m.useCallback(M=>{I(M)&&M.preventDefault()},[I]),pointerGraceTimerRef:z,onPointerGraceIntentChange:m.useCallback(M=>{O.current=M},[]),children:o.jsx(re,{...Q,children:o.jsx(Hu,{asChild:!0,trapped:s,onMountAutoFocus:K(i,M=>{var W;M.preventDefault(),(W=T.current)==null||W.focus({preventScroll:!0})}),onUnmountAutoFocus:a,children:o.jsx(Po,{asChild:!0,disableOutsidePointerEvents:l,onEscapeKeyDown:u,onPointerDownOutside:d,onFocusOutside:f,onInteractOutside:h,onDismiss:x,children:o.jsx(xj,{asChild:!0,...y,dir:v.dir,orientation:"vertical",loop:n,currentTabStopId:j,onCurrentTabStopIdChange:E,onEntryFocus:K(c,M=>{v.isUsingKeyboardRef.current||M.preventDefault()}),preventScrollOnEntryFocus:!0,children:o.jsx(tp,{role:"menu","aria-orientation":"vertical","data-state":Xj(b.open),"data-radix-menu-content":"",dir:v.dir,...p,...g,ref:P,style:{outline:"none",...g.style},onKeyDown:K(g.onKeyDown,M=>{const se=M.target.closest("[data-radix-menu-content]")===M.currentTarget,xe=M.ctrlKey||M.altKey||M.metaKey,Je=M.key.length===1;se&&(M.key==="Tab"&&M.preventDefault(),!xe&&Je&&oe(M.key));const ze=T.current;if(M.target!==ze||!nO.includes(M.key))return;M.preventDefault();const qe=N().filter(ne=>!ne.disabled).map(ne=>ne.ref.current);Ej.includes(M.key)&&qe.reverse(),CO(qe)}),onBlur:K(e.onBlur,M=>{M.currentTarget.contains(M.target)||(window.clearTimeout(C.current),A.current="")}),onPointerMove:K(e.onPointerMove,$a(M=>{const W=M.target,se=F.current!==M.clientX;if(M.currentTarget.contains(W)&&se){const xe=M.clientX>F.current?"right":"left";U.current=xe,F.current=M.clientX}}))})})})})})})});Dj.displayName=wr;var gO="MenuGroup",up=m.forwardRef((e,t)=>{const{__scopeMenu:r,...n}=e;return o.jsx(ce.div,{role:"group",...n,ref:t})});up.displayName=gO;var vO="MenuLabel",Oj=m.forwardRef((e,t)=>{const{__scopeMenu:r,...n}=e;return o.jsx(ce.div,{...n,ref:t})});Oj.displayName=vO;var Hc="MenuItem",Ov="menu.itemSelect",Xu=m.forwardRef((e,t)=>{const{disabled:r=!1,onSelect:n,...s}=e,i=m.useRef(null),a=xl(Hc,e.__scopeMenu),l=lp(Hc,e.__scopeMenu),c=Re(t,i),u=m.useRef(!1),d=()=>{const f=i.current;if(!r&&f){const h=new CustomEvent(Ov,{bubbles:!0,cancelable:!0});f.addEventListener(Ov,x=>n==null?void 0:n(x),{once:!0}),Vh(f,h),h.defaultPrevented?u.current=!1:a.onClose()}};return o.jsx(Lj,{...s,ref:c,disabled:r,onClick:K(e.onClick,d),onPointerDown:f=>{var h;(h=e.onPointerDown)==null||h.call(e,f),u.current=!0},onPointerUp:K(e.onPointerUp,f=>{var h;u.current||(h=f.currentTarget)==null||h.click()}),onKeyDown:K(e.onKeyDown,f=>{const h=l.searchRef.current!=="";r||h&&f.key===" "||bm.includes(f.key)&&(f.currentTarget.click(),f.preventDefault())})})});Xu.displayName=Hc;var Lj=m.forwardRef((e,t)=>{const{__scopeMenu:r,disabled:n=!1,textValue:s,...i}=e,a=lp(Hc,r),l=Rj(r),c=m.useRef(null),u=Re(t,c),[d,f]=m.useState(!1),[h,x]=m.useState("");return m.useEffect(()=>{const w=c.current;w&&x((w.textContent??"").trim())},[i.children]),o.jsx(Va.ItemSlot,{scope:r,disabled:n,textValue:s??h,children:o.jsx(wj,{asChild:!0,...l,focusable:!n,children:o.jsx(ce.div,{role:"menuitem","data-highlighted":d?"":void 0,"aria-disabled":n||void 0,"data-disabled":n?"":void 0,...i,ref:u,onPointerMove:K(e.onPointerMove,$a(w=>{n?a.onItemLeave(w):(a.onItemEnter(w),w.defaultPrevented||w.currentTarget.focus({preventScroll:!0}))})),onPointerLeave:K(e.onPointerLeave,$a(w=>a.onItemLeave(w))),onFocus:K(e.onFocus,()=>f(!0)),onBlur:K(e.onBlur,()=>f(!1))})})})}),yO="MenuCheckboxItem",Fj=m.forwardRef((e,t)=>{const{checked:r=!1,onCheckedChange:n,...s}=e;return o.jsx(Uj,{scope:e.__scopeMenu,checked:r,children:o.jsx(Xu,{role:"menuitemcheckbox","aria-checked":qc(r)?"mixed":r,...s,ref:t,"data-state":fp(r),onSelect:K(s.onSelect,()=>n==null?void 0:n(qc(r)?!0:!r),{checkForDefaultPrevented:!1})})})});Fj.displayName=yO;var Vj="MenuRadioGroup",[xO,wO]=hi(Vj,{value:void 0,onValueChange:()=>{}}),$j=m.forwardRef((e,t)=>{const{value:r,onValueChange:n,...s}=e,i=jt(n);return o.jsx(xO,{scope:e.__scopeMenu,value:r,onValueChange:i,children:o.jsx(up,{...s,ref:t})})});$j.displayName=Vj;var zj="MenuRadioItem",Bj=m.forwardRef((e,t)=>{const{value:r,...n}=e,s=wO(zj,e.__scopeMenu),i=r===s.value;return o.jsx(Uj,{scope:e.__scopeMenu,checked:i,children:o.jsx(Xu,{role:"menuitemradio","aria-checked":i,...n,ref:t,"data-state":fp(i),onSelect:K(n.onSelect,()=>{var a;return(a=s.onValueChange)==null?void 0:a.call(s,r)},{checkForDefaultPrevented:!1})})})});Bj.displayName=zj;var dp="MenuItemIndicator",[Uj,bO]=hi(dp,{checked:!1}),Wj=m.forwardRef((e,t)=>{const{__scopeMenu:r,forceMount:n,...s}=e,i=bO(dp,r);return o.jsx(Br,{present:n||qc(i.checked)||i.checked===!0,children:o.jsx(ce.span,{...s,ref:t,"data-state":fp(i.checked)})})});Wj.displayName=dp;var NO="MenuSeparator",Hj=m.forwardRef((e,t)=>{const{__scopeMenu:r,...n}=e;return o.jsx(ce.div,{role:"separator","aria-orientation":"horizontal",...n,ref:t})});Hj.displayName=NO;var SO="MenuArrow",qj=m.forwardRef((e,t)=>{const{__scopeMenu:r,...n}=e,s=Zu(r);return o.jsx(rp,{...s,...n,ref:t})});qj.displayName=SO;var jO="MenuSub",[I6,Qj]=hi(jO),ta="MenuSubTrigger",Gj=m.forwardRef((e,t)=>{const r=pi(ta,e.__scopeMenu),n=xl(ta,e.__scopeMenu),s=Qj(ta,e.__scopeMenu),i=lp(ta,e.__scopeMenu),a=m.useRef(null),{pointerGraceTimerRef:l,onPointerGraceIntentChange:c}=i,u={__scopeMenu:e.__scopeMenu},d=m.useCallback(()=>{a.current&&window.clearTimeout(a.current),a.current=null},[]);return m.useEffect(()=>d,[d]),m.useEffect(()=>{const f=l.current;return()=>{window.clearTimeout(f),c(null)}},[l,c]),o.jsx(op,{asChild:!0,...u,children:o.jsx(Lj,{id:s.triggerId,"aria-haspopup":"menu","aria-expanded":r.open,"aria-controls":s.contentId,"data-state":Xj(r.open),...e,ref:Iu(t,s.onTriggerChange),onClick:f=>{var h;(h=e.onClick)==null||h.call(e,f),!(e.disabled||f.defaultPrevented)&&(f.currentTarget.focus(),r.open||r.onOpenChange(!0))},onPointerMove:K(e.onPointerMove,$a(f=>{i.onItemEnter(f),!f.defaultPrevented&&!e.disabled&&!r.open&&!a.current&&(i.onPointerGraceIntentChange(null),a.current=window.setTimeout(()=>{r.onOpenChange(!0),d()},100))})),onPointerLeave:K(e.onPointerLeave,$a(f=>{var x,w;d();const h=(x=r.content)==null?void 0:x.getBoundingClientRect();if(h){const g=(w=r.content)==null?void 0:w.dataset.side,b=g==="right",v=b?-5:5,p=h[b?"left":"right"],y=h[b?"right":"left"];i.onPointerGraceIntentChange({area:[{x:f.clientX+v,y:f.clientY},{x:p,y:h.top},{x:y,y:h.top},{x:y,y:h.bottom},{x:p,y:h.bottom}],side:g}),window.clearTimeout(l.current),l.current=window.setTimeout(()=>i.onPointerGraceIntentChange(null),300)}else{if(i.onTriggerLeave(f),f.defaultPrevented)return;i.onPointerGraceIntentChange(null)}})),onKeyDown:K(e.onKeyDown,f=>{var x;const h=i.searchRef.current!=="";e.disabled||h&&f.key===" "||sO[n.dir].includes(f.key)&&(r.onOpenChange(!0),(x=r.content)==null||x.focus(),f.preventDefault())})})})});Gj.displayName=ta;var Kj="MenuSubContent",Zj=m.forwardRef((e,t)=>{const r=Ij(wr,e.__scopeMenu),{forceMount:n=r.forceMount,...s}=e,i=pi(wr,e.__scopeMenu),a=xl(wr,e.__scopeMenu),l=Qj(Kj,e.__scopeMenu),c=m.useRef(null),u=Re(t,c);return o.jsx(Va.Provider,{scope:e.__scopeMenu,children:o.jsx(Br,{present:n||i.open,children:o.jsx(Va.Slot,{scope:e.__scopeMenu,children:o.jsx(cp,{id:l.contentId,"aria-labelledby":l.triggerId,...s,ref:u,align:"start",side:a.dir==="rtl"?"left":"right",disableOutsidePointerEvents:!1,disableOutsideScroll:!1,trapFocus:!1,onOpenAutoFocus:d=>{var f;a.isUsingKeyboardRef.current&&((f=c.current)==null||f.focus()),d.preventDefault()},onCloseAutoFocus:d=>d.preventDefault(),onFocusOutside:K(e.onFocusOutside,d=>{d.target!==l.trigger&&i.onOpenChange(!1)}),onEscapeKeyDown:K(e.onEscapeKeyDown,d=>{a.onClose(),d.preventDefault()}),onKeyDown:K(e.onKeyDown,d=>{var x;const f=d.currentTarget.contains(d.target),h=iO[a.dir].includes(d.key);f&&h&&(i.onOpenChange(!1),(x=l.trigger)==null||x.focus(),d.preventDefault())})})})})})});Zj.displayName=Kj;function Xj(e){return e?"open":"closed"}function qc(e){return e==="indeterminate"}function fp(e){return qc(e)?"indeterminate":e?"checked":"unchecked"}function CO(e){const t=document.activeElement;for(const r of e)if(r===t||(r.focus(),document.activeElement!==t))return}function _O(e,t){return e.map((r,n)=>e[(t+n)%e.length])}function kO(e,t,r){const s=t.length>1&&Array.from(t).every(u=>u===t[0])?t[0]:t,i=r?e.indexOf(r):-1;let a=_O(e,Math.max(i,0));s.length===1&&(a=a.filter(u=>u!==r));const c=a.find(u=>u.toLowerCase().startsWith(s.toLowerCase()));return c!==r?c:void 0}function TO(e,t){const{x:r,y:n}=e;let s=!1;for(let i=0,a=t.length-1;i<t.length;a=i++){const l=t[i].x,c=t[i].y,u=t[a].x,d=t[a].y;c>n!=d>n&&r<(u-l)*(n-c)/(d-c)+l&&(s=!s)}return s}function EO(e,t){if(!t)return!1;const r={x:e.clientX,y:e.clientY};return TO(r,t)}function $a(e){return t=>t.pointerType==="mouse"?e(t):void 0}var PO=Aj,RO=op,AO=Mj,IO=Dj,MO=up,DO=Oj,OO=Xu,LO=Fj,FO=$j,VO=Bj,$O=Wj,zO=Hj,BO=qj,UO=Gj,WO=Zj,mp="DropdownMenu",[HO,M6]=Sr(mp,[Pj]),Ht=Pj(),[qO,Yj]=HO(mp),Jj=e=>{const{__scopeDropdownMenu:t,children:r,dir:n,open:s,defaultOpen:i,onOpenChange:a,modal:l=!0}=e,c=Ht(t),u=m.useRef(null),[d=!1,f]=si({prop:s,defaultProp:i,onChange:a});return o.jsx(qO,{scope:t,triggerId:tn(),triggerRef:u,contentId:tn(),open:d,onOpenChange:f,onOpenToggle:m.useCallback(()=>f(h=>!h),[f]),modal:l,children:o.jsx(PO,{...c,open:d,onOpenChange:f,dir:n,modal:l,children:r})})};Jj.displayName=mp;var eC="DropdownMenuTrigger",tC=m.forwardRef((e,t)=>{const{__scopeDropdownMenu:r,disabled:n=!1,...s}=e,i=Yj(eC,r),a=Ht(r);return o.jsx(RO,{asChild:!0,...a,children:o.jsx(ce.button,{type:"button",id:i.triggerId,"aria-haspopup":"menu","aria-expanded":i.open,"aria-controls":i.open?i.contentId:void 0,"data-state":i.open?"open":"closed","data-disabled":n?"":void 0,disabled:n,...s,ref:Iu(t,i.triggerRef),onPointerDown:K(e.onPointerDown,l=>{!n&&l.button===0&&l.ctrlKey===!1&&(i.onOpenToggle(),i.open||l.preventDefault())}),onKeyDown:K(e.onKeyDown,l=>{n||(["Enter"," "].includes(l.key)&&i.onOpenToggle(),l.key==="ArrowDown"&&i.onOpenChange(!0),["Enter"," ","ArrowDown"].includes(l.key)&&l.preventDefault())})})})});tC.displayName=eC;var QO="DropdownMenuPortal",rC=e=>{const{__scopeDropdownMenu:t,...r}=e,n=Ht(t);return o.jsx(AO,{...n,...r})};rC.displayName=QO;var nC="DropdownMenuContent",sC=m.forwardRef((e,t)=>{const{__scopeDropdownMenu:r,...n}=e,s=Yj(nC,r),i=Ht(r),a=m.useRef(!1);return o.jsx(IO,{id:s.contentId,"aria-labelledby":s.triggerId,...i,...n,ref:t,onCloseAutoFocus:K(e.onCloseAutoFocus,l=>{var c;a.current||(c=s.triggerRef.current)==null||c.focus(),a.current=!1,l.preventDefault()}),onInteractOutside:K(e.onInteractOutside,l=>{const c=l.detail.originalEvent,u=c.button===0&&c.ctrlKey===!0,d=c.button===2||u;(!s.modal||d)&&(a.current=!0)}),style:{...e.style,"--radix-dropdown-menu-content-transform-origin":"var(--radix-popper-transform-origin)","--radix-dropdown-menu-content-available-width":"var(--radix-popper-available-width)","--radix-dropdown-menu-content-available-height":"var(--radix-popper-available-height)","--radix-dropdown-menu-trigger-width":"var(--radix-popper-anchor-width)","--radix-dropdown-menu-trigger-height":"var(--radix-popper-anchor-height)"}})});sC.displayName=nC;var GO="DropdownMenuGroup",KO=m.forwardRef((e,t)=>{const{__scopeDropdownMenu:r,...n}=e,s=Ht(r);return o.jsx(MO,{...s,...n,ref:t})});KO.displayName=GO;var ZO="DropdownMenuLabel",iC=m.forwardRef((e,t)=>{const{__scopeDropdownMenu:r,...n}=e,s=Ht(r);return o.jsx(DO,{...s,...n,ref:t})});iC.displayName=ZO;var XO="DropdownMenuItem",oC=m.forwardRef((e,t)=>{const{__scopeDropdownMenu:r,...n}=e,s=Ht(r);return o.jsx(OO,{...s,...n,ref:t})});oC.displayName=XO;var YO="DropdownMenuCheckboxItem",aC=m.forwardRef((e,t)=>{const{__scopeDropdownMenu:r,...n}=e,s=Ht(r);return o.jsx(LO,{...s,...n,ref:t})});aC.displayName=YO;var JO="DropdownMenuRadioGroup",eL=m.forwardRef((e,t)=>{const{__scopeDropdownMenu:r,...n}=e,s=Ht(r);return o.jsx(FO,{...s,...n,ref:t})});eL.displayName=JO;var tL="DropdownMenuRadioItem",lC=m.forwardRef((e,t)=>{const{__scopeDropdownMenu:r,...n}=e,s=Ht(r);return o.jsx(VO,{...s,...n,ref:t})});lC.displayName=tL;var rL="DropdownMenuItemIndicator",cC=m.forwardRef((e,t)=>{const{__scopeDropdownMenu:r,...n}=e,s=Ht(r);return o.jsx($O,{...s,...n,ref:t})});cC.displayName=rL;var nL="DropdownMenuSeparator",uC=m.forwardRef((e,t)=>{const{__scopeDropdownMenu:r,...n}=e,s=Ht(r);return o.jsx(zO,{...s,...n,ref:t})});uC.displayName=nL;var sL="DropdownMenuArrow",iL=m.forwardRef((e,t)=>{const{__scopeDropdownMenu:r,...n}=e,s=Ht(r);return o.jsx(BO,{...s,...n,ref:t})});iL.displayName=sL;var oL="DropdownMenuSubTrigger",dC=m.forwardRef((e,t)=>{const{__scopeDropdownMenu:r,...n}=e,s=Ht(r);return o.jsx(UO,{...s,...n,ref:t})});dC.displayName=oL;var aL="DropdownMenuSubContent",fC=m.forwardRef((e,t)=>{const{__scopeDropdownMenu:r,...n}=e,s=Ht(r);return o.jsx(WO,{...s,...n,ref:t,style:{...e.style,"--radix-dropdown-menu-content-transform-origin":"var(--radix-popper-transform-origin)","--radix-dropdown-menu-content-available-width":"var(--radix-popper-available-width)","--radix-dropdown-menu-content-available-height":"var(--radix-popper-available-height)","--radix-dropdown-menu-trigger-width":"var(--radix-popper-anchor-width)","--radix-dropdown-menu-trigger-height":"var(--radix-popper-anchor-height)"}})});fC.displayName=aL;var lL=Jj,cL=tC,uL=rC,mC=sC,hC=iC,pC=oC,gC=aC,vC=lC,yC=cC,xC=uC,wC=dC,bC=fC;const dL=lL,fL=cL,mL=m.forwardRef(({className:e,inset:t,children:r,...n},s)=>o.jsxs(wC,{ref:s,className:me("flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0",t&&"pl-8",e),...n,children:[r,o.jsx(xS,{className:"ml-auto"})]}));mL.displayName=wC.displayName;const hL=m.forwardRef(({className:e,...t},r)=>o.jsx(bC,{ref:r,className:me("z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]",e),...t}));hL.displayName=bC.displayName;const NC=m.forwardRef(({className:e,sideOffset:t=4,...r},n)=>o.jsx(uL,{children:o.jsx(mC,{ref:n,sideOffset:t,className:me("z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]",e),...r})}));NC.displayName=mC.displayName;const Nm=m.forwardRef(({className:e,inset:t,...r},n)=>o.jsx(pC,{ref:n,className:me("relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0",t&&"pl-8",e),...r}));Nm.displayName=pC.displayName;const pL=m.forwardRef(({className:e,children:t,checked:r,...n},s)=>o.jsxs(gC,{ref:s,className:me("relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",e),checked:r,...n,children:[o.jsx("span",{className:"absolute left-2 flex h-3.5 w-3.5 items-center justify-center",children:o.jsx(yC,{children:o.jsx(Lu,{className:"h-4 w-4"})})}),t]}));pL.displayName=gC.displayName;const gL=m.forwardRef(({className:e,children:t,...r},n)=>o.jsxs(vC,{ref:n,className:me("relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",e),...r,children:[o.jsx("span",{className:"absolute left-2 flex h-3.5 w-3.5 items-center justify-center",children:o.jsx(yC,{children:o.jsx(bI,{className:"h-2 w-2 fill-current"})})}),t]}));gL.displayName=vC.displayName;const vL=m.forwardRef(({className:e,inset:t,...r},n)=>o.jsx(hC,{ref:n,className:me("px-2 py-1.5 text-sm font-semibold",t&&"pl-8",e),...r}));vL.displayName=hC.displayName;const Sm=m.forwardRef(({className:e,...t},r)=>o.jsx(xC,{ref:r,className:me("-mx-1 my-1 h-px bg-muted",e),...t}));Sm.displayName=xC.displayName;var hp="Dialog",[SC,D6]=Sr(hp),[yL,Ur]=SC(hp),jC=e=>{const{__scopeDialog:t,children:r,open:n,defaultOpen:s,onOpenChange:i,modal:a=!0}=e,l=m.useRef(null),c=m.useRef(null),[u=!1,d]=si({prop:n,defaultProp:s,onChange:i});return o.jsx(yL,{scope:t,triggerRef:l,contentRef:c,contentId:tn(),titleId:tn(),descriptionId:tn(),open:u,onOpenChange:d,onOpenToggle:m.useCallback(()=>d(f=>!f),[d]),modal:a,children:r})};jC.displayName=hp;var CC="DialogTrigger",_C=m.forwardRef((e,t)=>{const{__scopeDialog:r,...n}=e,s=Ur(CC,r),i=Re(t,s.triggerRef);return o.jsx(ce.button,{type:"button","aria-haspopup":"dialog","aria-expanded":s.open,"aria-controls":s.contentId,"data-state":vp(s.open),...n,ref:i,onClick:K(e.onClick,s.onOpenToggle)})});_C.displayName=CC;var pp="DialogPortal",[xL,kC]=SC(pp,{forceMount:void 0}),TC=e=>{const{__scopeDialog:t,forceMount:r,children:n,container:s}=e,i=Ur(pp,t);return o.jsx(xL,{scope:t,forceMount:r,children:m.Children.map(n,a=>o.jsx(Br,{present:r||i.open,children:o.jsx(fl,{asChild:!0,container:s,children:a})}))})};TC.displayName=pp;var Qc="DialogOverlay",EC=m.forwardRef((e,t)=>{const r=kC(Qc,e.__scopeDialog),{forceMount:n=r.forceMount,...s}=e,i=Ur(Qc,e.__scopeDialog);return i.modal?o.jsx(Br,{present:n||i.open,children:o.jsx(bL,{...s,ref:t})}):null});EC.displayName=Qc;var wL=ni("DialogOverlay.RemoveScroll"),bL=m.forwardRef((e,t)=>{const{__scopeDialog:r,...n}=e,s=Ur(Qc,r);return o.jsx(Ku,{as:wL,allowPinchZoom:!0,shards:[s.contentRef],children:o.jsx(ce.div,{"data-state":vp(s.open),...n,ref:t,style:{pointerEvents:"auto",...n.style}})})}),oi="DialogContent",PC=m.forwardRef((e,t)=>{const r=kC(oi,e.__scopeDialog),{forceMount:n=r.forceMount,...s}=e,i=Ur(oi,e.__scopeDialog);return o.jsx(Br,{present:n||i.open,children:i.modal?o.jsx(NL,{...s,ref:t}):o.jsx(SL,{...s,ref:t})})});PC.displayName=oi;var NL=m.forwardRef((e,t)=>{const r=Ur(oi,e.__scopeDialog),n=m.useRef(null),s=Re(t,r.contentRef,n);return m.useEffect(()=>{const i=n.current;if(i)return ip(i)},[]),o.jsx(RC,{...e,ref:s,trapFocus:r.open,disableOutsidePointerEvents:!0,onCloseAutoFocus:K(e.onCloseAutoFocus,i=>{var a;i.preventDefault(),(a=r.triggerRef.current)==null||a.focus()}),onPointerDownOutside:K(e.onPointerDownOutside,i=>{const a=i.detail.originalEvent,l=a.button===0&&a.ctrlKey===!0;(a.button===2||l)&&i.preventDefault()}),onFocusOutside:K(e.onFocusOutside,i=>i.preventDefault())})}),SL=m.forwardRef((e,t)=>{const r=Ur(oi,e.__scopeDialog),n=m.useRef(!1),s=m.useRef(!1);return o.jsx(RC,{...e,ref:t,trapFocus:!1,disableOutsidePointerEvents:!1,onCloseAutoFocus:i=>{var a,l;(a=e.onCloseAutoFocus)==null||a.call(e,i),i.defaultPrevented||(n.current||(l=r.triggerRef.current)==null||l.focus(),i.preventDefault()),n.current=!1,s.current=!1},onInteractOutside:i=>{var c,u;(c=e.onInteractOutside)==null||c.call(e,i),i.defaultPrevented||(n.current=!0,i.detail.originalEvent.type==="pointerdown"&&(s.current=!0));const a=i.target;((u=r.triggerRef.current)==null?void 0:u.contains(a))&&i.preventDefault(),i.detail.originalEvent.type==="focusin"&&s.current&&i.preventDefault()}})}),RC=m.forwardRef((e,t)=>{const{__scopeDialog:r,trapFocus:n,onOpenAutoFocus:s,onCloseAutoFocus:i,...a}=e,l=Ur(oi,r),c=m.useRef(null),u=Re(t,c);return sp(),o.jsxs(o.Fragment,{children:[o.jsx(Hu,{asChild:!0,loop:!0,trapped:n,onMountAutoFocus:s,onUnmountAutoFocus:i,children:o.jsx(Po,{role:"dialog",id:l.contentId,"aria-describedby":l.descriptionId,"aria-labelledby":l.titleId,"data-state":vp(l.open),...a,ref:u,onDismiss:()=>l.onOpenChange(!1)})}),o.jsxs(o.Fragment,{children:[o.jsx(jL,{titleId:l.titleId}),o.jsx(_L,{contentRef:c,descriptionId:l.descriptionId})]})]})}),gp="DialogTitle",AC=m.forwardRef((e,t)=>{const{__scopeDialog:r,...n}=e,s=Ur(gp,r);return o.jsx(ce.h2,{id:s.titleId,...n,ref:t})});AC.displayName=gp;var IC="DialogDescription",MC=m.forwardRef((e,t)=>{const{__scopeDialog:r,...n}=e,s=Ur(IC,r);return o.jsx(ce.p,{id:s.descriptionId,...n,ref:t})});MC.displayName=IC;var DC="DialogClose",OC=m.forwardRef((e,t)=>{const{__scopeDialog:r,...n}=e,s=Ur(DC,r);return o.jsx(ce.button,{type:"button",...n,ref:t,onClick:K(e.onClick,()=>s.onOpenChange(!1))})});OC.displayName=DC;function vp(e){return e?"open":"closed"}var LC="DialogTitleWarning",[O6,FC]=bA(LC,{contentName:oi,titleName:gp,docsSlug:"dialog"}),jL=({titleId:e})=>{const t=FC(LC),r=`\`${t.contentName}\` requires a \`${t.titleName}\` for the component to be accessible for screen reader users.

If you want to hide the \`${t.titleName}\`, you can wrap it with our VisuallyHidden component.

For more information, see https://radix-ui.com/primitives/docs/components/${t.docsSlug}`;return m.useEffect(()=>{e&&(document.getElementById(e)||console.error(r))},[r,e]),null},CL="DialogDescriptionWarning",_L=({contentRef:e,descriptionId:t})=>{const n=`Warning: Missing \`Description\` or \`aria-describedby={undefined}\` for {${FC(CL).contentName}}.`;return m.useEffect(()=>{var i;const s=(i=e.current)==null?void 0:i.getAttribute("aria-describedby");t&&s&&(document.getElementById(t)||console.warn(n))},[n,e,t]),null},kL=jC,TL=_C,EL=TC,VC=EC,$C=PC,zC=AC,BC=MC,PL=OC;const RL=kL,AL=TL,IL=EL,UC=m.forwardRef(({className:e,...t},r)=>o.jsx(VC,{className:me("fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",e),...t,ref:r}));UC.displayName=VC.displayName;const ML=hl("fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500",{variants:{side:{top:"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top",bottom:"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom",left:"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm",right:"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm"}},defaultVariants:{side:"right"}}),WC=m.forwardRef(({side:e="right",className:t,children:r,...n},s)=>o.jsxs(IL,{children:[o.jsx(UC,{}),o.jsxs($C,{ref:s,className:me(ML({side:e}),t),...n,children:[r,o.jsxs(PL,{className:"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary",children:[o.jsx(SS,{className:"h-4 w-4"}),o.jsx("span",{className:"sr-only",children:"Close"})]})]})]}));WC.displayName=$C.displayName;const DL=m.forwardRef(({className:e,...t},r)=>o.jsx(zC,{ref:r,className:me("text-lg font-semibold text-foreground",e),...t}));DL.displayName=zC.displayName;const OL=m.forwardRef(({className:e,...t},r)=>o.jsx(BC,{ref:r,className:me("text-sm text-muted-foreground",e),...t}));OL.displayName=BC.displayName;function LL(){const{theme:e,toggleTheme:t}=K4(),{user:r,logout:n}=Rn(),[s]=Au(),[i,a]=m.useState(!1),l=[{path:"/dashboard",label:"Dashboard"},{path:"/workouts",label:"Workouts"},{path:"/start-workout",label:"Start Workout"},{path:"/progress",label:"Progress"},{path:"/community",label:"Community"}],c=d=>s===d,u=()=>o.jsx("div",{className:"w-8 h-8 gradient-bg rounded-full flex items-center justify-center",children:o.jsx("span",{className:"text-white text-sm font-semibold",children:r?`${r.firstName[0]}${r.lastName[0]}`:"U"})});return o.jsx("nav",{className:"bg-background/80 backdrop-blur-lg border-b border-border sticky top-0 z-50",children:o.jsx("div",{className:"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8",children:o.jsxs("div",{className:"flex justify-between items-center h-16",children:[o.jsxs(rt,{href:"/",className:"flex items-center space-x-2 hover:opacity-80 transition-opacity",children:[o.jsx("div",{className:"w-8 h-8 gradient-bg rounded-lg flex items-center justify-center",children:o.jsx(Ro,{className:"w-4 h-4 text-white"})}),o.jsx("span",{className:"text-xl font-bold",children:"FitForge"})]}),r&&o.jsx("div",{className:"hidden md:flex space-x-6",children:l.map(d=>o.jsx(rt,{href:d.path,className:`px-3 py-2 rounded-lg text-sm font-medium transition-colors duration-200 ${c(d.path)?"text-primary bg-primary/10":"text-muted-foreground hover:text-primary hover:bg-primary/5"}`,children:d.label},d.path))}),o.jsxs("div",{className:"flex items-center space-x-3",children:[r&&o.jsxs(o.Fragment,{children:[o.jsx(ae,{variant:"ghost",size:"icon",className:"hidden md:flex",children:o.jsx(gI,{className:"h-5 w-5"})}),o.jsxs(RL,{open:i,onOpenChange:a,children:[o.jsx(AL,{asChild:!0,children:o.jsx(ae,{variant:"ghost",size:"icon",className:"md:hidden",children:o.jsx(CI,{className:"h-5 w-5"})})}),o.jsx(WC,{side:"right",className:"w-[300px]",children:o.jsx("div",{className:"flex flex-col space-y-4 mt-6",children:l.map(d=>o.jsx(rt,{href:d.path,onClick:()=>a(!1),className:`px-3 py-2 rounded-lg text-sm font-medium transition-colors duration-200 ${c(d.path)?"text-primary bg-primary/10":"text-muted-foreground hover:text-primary hover:bg-primary/5"}`,children:d.label},d.path))})})]})]}),o.jsx(ae,{variant:"ghost",size:"icon",onClick:t,children:e==="dark"?o.jsx(RI,{className:"h-5 w-5"}):o.jsx(kI,{className:"h-5 w-5"})}),r?o.jsxs(dL,{children:[o.jsx(fL,{asChild:!0,children:o.jsx(ae,{variant:"ghost",size:"icon",children:o.jsx(u,{})})}),o.jsxs(NC,{align:"end",className:"w-56",children:[o.jsxs("div",{className:"px-2 py-1.5",children:[o.jsxs("p",{className:"text-sm font-medium",children:[r.firstName," ",r.lastName]}),o.jsx("p",{className:"text-xs text-muted-foreground",children:r.email})]}),o.jsx(Sm,{}),o.jsx(Nm,{asChild:!0,children:o.jsxs(rt,{href:"/profile",className:"w-full",children:[o.jsx(DI,{className:"mr-2 h-4 w-4"}),"Profile"]})}),o.jsx(Sm,{}),o.jsx(Nm,{onClick:n,className:"text-destructive",children:"Logout"})]})]}):o.jsxs("div",{className:"flex items-center space-x-2",children:[o.jsx(rt,{href:"/auth",children:o.jsx(ae,{variant:"ghost",size:"sm",children:"Sign In"})}),o.jsx(rt,{href:"/auth",children:o.jsx(ae,{size:"sm",className:"gradient-bg",children:"Get Started"})})]})]})]})})})}const ie=m.forwardRef(({className:e,...t},r)=>o.jsx("div",{ref:r,className:me("rounded-lg border bg-card text-card-foreground shadow-sm",e),...t}));ie.displayName="Card";const Le=m.forwardRef(({className:e,...t},r)=>o.jsx("div",{ref:r,className:me("flex flex-col space-y-1.5 p-6",e),...t}));Le.displayName="CardHeader";const Fe=m.forwardRef(({className:e,...t},r)=>o.jsx("div",{ref:r,className:me("text-2xl font-semibold leading-none tracking-tight",e),...t}));Fe.displayName="CardTitle";const jm=m.forwardRef(({className:e,...t},r)=>o.jsx("div",{ref:r,className:me("text-sm text-muted-foreground",e),...t}));jm.displayName="CardDescription";const le=m.forwardRef(({className:e,...t},r)=>o.jsx("div",{ref:r,className:me("p-6 pt-0",e),...t}));le.displayName="CardContent";const FL=m.forwardRef(({className:e,...t},r)=>o.jsx("div",{ref:r,className:me("flex items-center p-6 pt-0",e),...t}));FL.displayName="CardFooter";const Qt=m.forwardRef(({className:e,type:t,...r},n)=>o.jsx("input",{type:t,className:me("flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm",e),ref:n,...r}));Qt.displayName="Input";var VL="Label",HC=m.forwardRef((e,t)=>o.jsx(ce.label,{...e,ref:t,onMouseDown:r=>{var s;r.target.closest("button, input, select, textarea")||((s=e.onMouseDown)==null||s.call(e,r),!r.defaultPrevented&&r.detail>1&&r.preventDefault())}}));HC.displayName=VL;var qC=HC;const $L=hl("text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"),yn=m.forwardRef(({className:e,...t},r)=>o.jsx(qC,{ref:r,className:me($L(),e),...t}));yn.displayName=qC.displayName;const zL=hl("inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2",{variants:{variant:{default:"border-transparent bg-primary text-primary-foreground hover:bg-primary/80",secondary:"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80",destructive:"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80",outline:"text-foreground"}},defaultVariants:{variant:"default"}});function Or({className:e,variant:t,...r}){return o.jsx("div",{className:me(zL({variant:t}),e),...r})}var yp="Progress",xp=100,[BL,L6]=Sr(yp),[UL,WL]=BL(yp),QC=m.forwardRef((e,t)=>{const{__scopeProgress:r,value:n=null,max:s,getValueLabel:i=HL,...a}=e;(s||s===0)&&!Lv(s)&&console.error(qL(`${s}`,"Progress"));const l=Lv(s)?s:xp;n!==null&&!Fv(n,l)&&console.error(QL(`${n}`,"Progress"));const c=Fv(n,l)?n:null,u=Gc(c)?i(c,l):void 0;return o.jsx(UL,{scope:r,value:c,max:l,children:o.jsx(ce.div,{"aria-valuemax":l,"aria-valuemin":0,"aria-valuenow":Gc(c)?c:void 0,"aria-valuetext":u,role:"progressbar","data-state":ZC(c,l),"data-value":c??void 0,"data-max":l,...a,ref:t})})});QC.displayName=yp;var GC="ProgressIndicator",KC=m.forwardRef((e,t)=>{const{__scopeProgress:r,...n}=e,s=WL(GC,r);return o.jsx(ce.div,{"data-state":ZC(s.value,s.max),"data-value":s.value??void 0,"data-max":s.max,...n,ref:t})});KC.displayName=GC;function HL(e,t){return`${Math.round(e/t*100)}%`}function ZC(e,t){return e==null?"indeterminate":e===t?"complete":"loading"}function Gc(e){return typeof e=="number"}function Lv(e){return Gc(e)&&!isNaN(e)&&e>0}function Fv(e,t){return Gc(e)&&!isNaN(e)&&e<=t&&e>=0}function qL(e,t){return`Invalid prop \`max\` of value \`${e}\` supplied to \`${t}\`. Only numbers greater than 0 are valid max values. Defaulting to \`${xp}\`.`}function QL(e,t){return`Invalid prop \`value\` of value \`${e}\` supplied to \`${t}\`. The \`value\` prop must be:
  - a positive number
  - less than the value passed to \`max\` (or ${xp} if no \`max\` prop is set)
  - \`null\` or \`undefined\` if the progress is indeterminate.

Defaulting to \`null\`.`}var XC=QC,GL=KC;const Nn=m.forwardRef(({className:e,value:t,...r},n)=>o.jsx(XC,{ref:n,className:me("relative h-4 w-full overflow-hidden rounded-full bg-secondary",e),...r,children:o.jsx(GL,{className:"h-full w-full flex-1 bg-primary transition-all",style:{transform:`translateX(-${100-(t||0)}%)`}})}));Nn.displayName=XC.displayName;function KL(){const{toast:e}=dl(),[,t]=Au(),{session:r,logSet:n,completeExercise:s,nextExercise:i,endWorkout:a,calculateSessionStats:l}=fj(),[c,u]=m.useState({weight:0,reps:0}),[d,f]=m.useState(!1),[h,x]=m.useState(0),[w,g]=m.useState(0);m.useEffect(()=>{r||t("/workouts")},[r,t]),m.useEffect(()=>{if((r==null?void 0:r.status)==="in_progress"){const C=setInterval(()=>{g(Date.now()-r.startTime.getTime())},1e3);return()=>clearInterval(C)}},[r==null?void 0:r.status,r==null?void 0:r.startTime]),m.useEffect(()=>{if(d&&h>0){const C=setInterval(()=>{x(A=>A<=1?(f(!1),e({title:"Rest Complete!",description:"Ready for your next set"}),0):A-1)},1e3);return()=>clearInterval(C)}},[d,h,e]);const b=()=>{if(!r||c.reps<=0)return;const C=r.exercises[r.currentExerciseIndex];n(c.weight,c.reps,"Default Equipment"),u({weight:0,reps:0});const A=p(C.exerciseName);A>0&&(x(A),f(!0)),e({title:"Set Logged!",description:`${c.reps} reps @ ${c.weight}lbs - Volume: ${c.weight*c.reps}`})},v=()=>{r&&(s(),r.currentExerciseIndex<r.exercises.length-1?(i(),e({title:"Exercise Complete!",description:"Moving to next exercise"})):(a(),e({title:"Workout Complete! 🎉",description:"Outstanding work!"})),f(!1),x(0))},p=C=>({Planks:30,"Spider Planks":60,"Bench Situps":90,"Hanging Knee Raises":120,"Shoulder Shrugs":150,"T Row":180,"Incline Hammer Curl":210,"Neutral Grip Pull-ups":240,"Bent Over Rows":270,"Bench Press":540,"TRX Reverse Flys":570,"Tricep Extension":600,"TRX Pushup":90,"Incline Bench Press":120,"Shoulder Press":150,Dips:180,"Goblet Squats":90,"Dead Lifts":120,"Calf Raises":60,"Glute Bridges":90,"Kettlebell Swings":120})[C]||60,y=C=>{const A=Math.floor(C/1e3),z=Math.floor(A/60),O=A%60;return`${z}:${O.toString().padStart(2,"0")}`},N=C=>({Abs:"Ender's Core Workout",BackBiceps:"Ender's Pull Day",ChestTriceps:"Ender's Push Day",Legs:"Ender's Leg Day"})[C]||C,j=C=>({Planks:"Beginner","Spider Planks":"Intermediate","Bench Situps":"Intermediate","Hanging Knee Raises":"Intermediate","Shoulder Shrugs":"Beginner","T Row":"Intermediate","Incline Hammer Curl":"Beginner","Neutral Grip Pull-ups":"Intermediate","Bent Over Rows":"Intermediate","Bench Press":"Intermediate","TRX Reverse Flys":"Intermediate","Tricep Extension":"Beginner","TRX Pushup":"Intermediate","Incline Bench Press":"Intermediate","Shoulder Press":"Intermediate",Dips:"Intermediate","Goblet Squats":"Beginner","Dead Lifts":"Advanced","Calf Raises":"Beginner","Glute Bridges":"Beginner","Kettlebell Swings":"Intermediate"})[C]||"Intermediate";if(!r)return o.jsx("div",{className:"min-h-screen bg-background flex items-center justify-center p-4",children:o.jsx(ie,{className:"w-full max-w-md text-center",children:o.jsxs(le,{className:"p-6",children:[o.jsx("p",{className:"text-muted-foreground mb-4",children:"No active workout session found."}),o.jsxs(ae,{onClick:()=>t("/workouts"),children:[o.jsx(mI,{className:"w-4 h-4 mr-2"}),"Back to Workouts"]})]})})});const E=r.exercises[r.currentExerciseIndex],T=r.currentExerciseIndex/r.exercises.length*100,P=l();return r.status==="completed"?o.jsx("div",{className:"min-h-screen bg-background flex items-center justify-center p-4",children:o.jsxs(ie,{className:"w-full max-w-md",children:[o.jsxs(Le,{className:"text-center",children:[o.jsx(Ks,{className:"w-12 h-12 mx-auto text-yellow-500 mb-4"}),o.jsx(Fe,{className:"text-2xl",children:"Workout Complete!"}),o.jsx("p",{className:"text-muted-foreground",children:"Outstanding work! 💪"})]}),o.jsxs(le,{className:"space-y-4",children:[o.jsxs("div",{className:"grid grid-cols-2 gap-4",children:[o.jsxs("div",{className:"text-center p-4 bg-muted/30 rounded-lg",children:[o.jsx("div",{className:"text-2xl font-bold text-primary",children:P.totalVolume}),o.jsx("div",{className:"text-sm text-muted-foreground",children:"Total Volume (lbs)"})]}),o.jsxs("div",{className:"text-center p-4 bg-muted/30 rounded-lg",children:[o.jsx("div",{className:"text-2xl font-bold text-accent",children:P.estimatedCalories}),o.jsx("div",{className:"text-sm text-muted-foreground",children:"Calories Burned"})]}),o.jsxs("div",{className:"text-center p-4 bg-muted/30 rounded-lg",children:[o.jsx("div",{className:"text-2xl font-bold text-secondary",children:y(P.duration)}),o.jsx("div",{className:"text-sm text-muted-foreground",children:"Duration"})]}),o.jsxs("div",{className:"text-center p-4 bg-muted/30 rounded-lg",children:[o.jsx("div",{className:"text-2xl font-bold text-orange-500",children:P.totalSets}),o.jsx("div",{className:"text-sm text-muted-foreground",children:"Total Sets"})]})]}),o.jsx(ae,{onClick:()=>t("/workouts"),className:"w-full",children:"Back to Workouts"})]})]})}):o.jsx("div",{className:"min-h-screen bg-background p-4",children:o.jsxs("div",{className:"max-w-2xl mx-auto space-y-6",children:[o.jsx(ie,{children:o.jsxs(Le,{children:[o.jsxs("div",{className:"flex items-center justify-between",children:[o.jsxs("div",{children:[o.jsx(Fe,{className:"text-xl",children:N(r.workoutType)}),o.jsxs("p",{className:"text-sm text-muted-foreground",children:["Exercise ",r.currentExerciseIndex+1," of ",r.exercises.length]})]}),o.jsxs("div",{className:"text-right",children:[o.jsx("div",{className:"text-lg font-bold",children:y(w)}),o.jsx("div",{className:"text-sm text-muted-foreground",children:"Duration"})]})]}),o.jsx(Nn,{value:T,className:"mt-4"})]})}),o.jsxs(ie,{children:[o.jsx(Le,{children:o.jsxs("div",{className:"flex items-center justify-between",children:[o.jsx(Fe,{className:"text-2xl",children:E.exerciseName}),o.jsx(Or,{className:"bg-primary/10 text-primary",children:j(E.exerciseName)})]})}),o.jsxs(le,{className:"space-y-6",children:[o.jsxs("div",{className:"space-y-4",children:[o.jsxs("h3",{className:"font-semibold",children:["Log Set #",E.sets.length+1]}),o.jsxs("div",{className:"grid grid-cols-2 gap-4",children:[o.jsxs("div",{children:[o.jsx(yn,{htmlFor:"weight",children:"Weight (lbs)"}),o.jsx(Qt,{id:"weight",type:"number",value:c.weight||"",onChange:C=>u(A=>({...A,weight:Number(C.target.value)})),placeholder:"0"})]}),o.jsxs("div",{children:[o.jsx(yn,{htmlFor:"reps",children:"Reps"}),o.jsx(Qt,{id:"reps",type:"number",value:c.reps||"",onChange:C=>u(A=>({...A,reps:Number(C.target.value)})),placeholder:"0"})]})]}),c.weight>0&&c.reps>0&&o.jsxs("div",{className:"p-3 bg-muted/30 rounded-lg",children:[o.jsxs("div",{className:"text-sm font-medium",children:["Set Volume: ",c.weight*c.reps," lbs"]}),o.jsxs("div",{className:"text-sm text-muted-foreground",children:["Est. Calories: ",Math.round(c.weight*c.reps*.1)]})]}),o.jsxs(ae,{onClick:b,disabled:c.reps<=0||d,className:"w-full gradient-bg",children:[o.jsx(Lu,{className:"w-4 h-4 mr-2"}),"Log Set"]})]}),d&&o.jsx(ie,{className:"bg-accent/10 border-accent",children:o.jsxs(le,{className:"p-4 text-center",children:[o.jsx(NS,{className:"w-8 h-8 mx-auto text-accent mb-2"}),o.jsxs("div",{className:"text-2xl font-bold text-accent",children:[h,"s"]}),o.jsx("div",{className:"text-sm text-muted-foreground",children:"Rest Time Remaining"})]})}),E.sets.length>0&&o.jsxs("div",{className:"space-y-2",children:[o.jsx("h4",{className:"font-semibold",children:"Previous Sets"}),o.jsx("div",{className:"space-y-2",children:E.sets.map((C,A)=>o.jsxs("div",{className:"flex justify-between items-center p-2 bg-muted/30 rounded",children:[o.jsxs("span",{className:"text-sm",children:["Set ",C.setNumber,": ",C.reps," reps @ ",C.weight,"lbs"]}),o.jsxs("span",{className:"text-sm text-muted-foreground",children:["Vol: ",C.volume]})]},A))})]}),o.jsx("div",{className:"flex gap-3",children:o.jsx(ae,{onClick:v,disabled:E.sets.length===0,className:"flex-1",variant:"outline",children:r.currentExerciseIndex===r.exercises.length-1?o.jsxs(o.Fragment,{children:[o.jsx(PI,{className:"w-4 h-4 mr-2"}),"Finish Workout"]}):o.jsxs(o.Fragment,{children:[o.jsx(xS,{className:"w-4 h-4 mr-2"}),"Next Exercise"]})})})]})]}),o.jsx(ie,{children:o.jsx(le,{className:"p-4",children:o.jsxs("div",{className:"grid grid-cols-3 gap-4 text-center",children:[o.jsxs("div",{children:[o.jsx("div",{className:"text-lg font-bold text-primary",children:r.totalVolume}),o.jsx("div",{className:"text-xs text-muted-foreground",children:"Total Volume"})]}),o.jsxs("div",{children:[o.jsx("div",{className:"text-lg font-bold text-accent",children:r.estimatedCalories}),o.jsx("div",{className:"text-xs text-muted-foreground",children:"Calories"})]}),o.jsxs("div",{children:[o.jsx("div",{className:"text-lg font-bold text-secondary",children:r.exercises.reduce((C,A)=>C+A.sets.length,0)}),o.jsx("div",{className:"text-xs text-muted-foreground",children:"Sets"})]})]})})})]})})}function Vv(e,[t,r]){return Math.min(r,Math.max(t,e))}function ZL(e){const t=m.useRef({value:e,previous:e});return m.useMemo(()=>(t.current.value!==e&&(t.current.previous=t.current.value,t.current.value=e),t.current.previous),[e])}var XL=[" ","Enter","ArrowUp","ArrowDown"],YL=[" ","Enter"],wl="Select",[Yu,Ju,JL]=Mu(wl),[Oo,F6]=Sr(wl,[JL,Do]),ed=Do(),[eF,Cs]=Oo(wl),[tF,rF]=Oo(wl),YC=e=>{const{__scopeSelect:t,children:r,open:n,defaultOpen:s,onOpenChange:i,value:a,defaultValue:l,onValueChange:c,dir:u,name:d,autoComplete:f,disabled:h,required:x,form:w}=e,g=ed(t),[b,v]=m.useState(null),[p,y]=m.useState(null),[N,j]=m.useState(!1),E=Wu(u),[T=!1,P]=si({prop:n,defaultProp:s,onChange:i}),[C,A]=si({prop:a,defaultProp:l,onChange:c}),z=m.useRef(null),O=b?w||!!b.closest("form"):!0,[U,F]=m.useState(new Set),re=Array.from(U).map(Q=>Q.props.value).join(";");return o.jsx(ej,{...g,children:o.jsxs(eF,{required:x,scope:t,trigger:b,onTriggerChange:v,valueNode:p,onValueNodeChange:y,valueNodeHasChildren:N,onValueNodeHasChildrenChange:j,contentId:tn(),value:C,onValueChange:A,open:T,onOpenChange:P,dir:E,triggerPointerDownPosRef:z,disabled:h,children:[o.jsx(Yu.Provider,{scope:t,children:o.jsx(tF,{scope:e.__scopeSelect,onNativeOptionAdd:m.useCallback(Q=>{F(oe=>new Set(oe).add(Q))},[]),onNativeOptionRemove:m.useCallback(Q=>{F(oe=>{const I=new Set(oe);return I.delete(Q),I})},[]),children:r})}),O?o.jsxs(S_,{"aria-hidden":!0,required:x,tabIndex:-1,name:d,autoComplete:f,value:C,onChange:Q=>A(Q.target.value),disabled:h,form:w,children:[C===void 0?o.jsx("option",{value:""}):null,Array.from(U)]},re):null]})})};YC.displayName=wl;var JC="SelectTrigger",e_=m.forwardRef((e,t)=>{const{__scopeSelect:r,disabled:n=!1,...s}=e,i=ed(r),a=Cs(JC,r),l=a.disabled||n,c=Re(t,a.onTriggerChange),u=Ju(r),d=m.useRef("touch"),[f,h,x]=j_(g=>{const b=u().filter(y=>!y.disabled),v=b.find(y=>y.value===a.value),p=C_(b,g,v);p!==void 0&&a.onValueChange(p.value)}),w=g=>{l||(a.onOpenChange(!0),x()),g&&(a.triggerPointerDownPosRef.current={x:Math.round(g.pageX),y:Math.round(g.pageY)})};return o.jsx(ep,{asChild:!0,...i,children:o.jsx(ce.button,{type:"button",role:"combobox","aria-controls":a.contentId,"aria-expanded":a.open,"aria-required":a.required,"aria-autocomplete":"none",dir:a.dir,"data-state":a.open?"open":"closed",disabled:l,"data-disabled":l?"":void 0,"data-placeholder":N_(a.value)?"":void 0,...s,ref:c,onClick:K(s.onClick,g=>{g.currentTarget.focus(),d.current!=="mouse"&&w(g)}),onPointerDown:K(s.onPointerDown,g=>{d.current=g.pointerType;const b=g.target;b.hasPointerCapture(g.pointerId)&&b.releasePointerCapture(g.pointerId),g.button===0&&g.ctrlKey===!1&&g.pointerType==="mouse"&&(w(g),g.preventDefault())}),onKeyDown:K(s.onKeyDown,g=>{const b=f.current!=="";!(g.ctrlKey||g.altKey||g.metaKey)&&g.key.length===1&&h(g.key),!(b&&g.key===" ")&&XL.includes(g.key)&&(w(),g.preventDefault())})})})});e_.displayName=JC;var t_="SelectValue",r_=m.forwardRef((e,t)=>{const{__scopeSelect:r,className:n,style:s,children:i,placeholder:a="",...l}=e,c=Cs(t_,r),{onValueNodeHasChildrenChange:u}=c,d=i!==void 0,f=Re(t,c.onValueNodeChange);return ht(()=>{u(d)},[u,d]),o.jsx(ce.span,{...l,ref:f,style:{pointerEvents:"none"},children:N_(c.value)?o.jsx(o.Fragment,{children:a}):i})});r_.displayName=t_;var nF="SelectIcon",n_=m.forwardRef((e,t)=>{const{__scopeSelect:r,children:n,...s}=e;return o.jsx(ce.span,{"aria-hidden":!0,...s,ref:t,children:n||"▼"})});n_.displayName=nF;var sF="SelectPortal",s_=e=>o.jsx(fl,{asChild:!0,...e});s_.displayName=sF;var ai="SelectContent",i_=m.forwardRef((e,t)=>{const r=Cs(ai,e.__scopeSelect),[n,s]=m.useState();if(ht(()=>{s(new DocumentFragment)},[]),!r.open){const i=n;return i?mi.createPortal(o.jsx(o_,{scope:e.__scopeSelect,children:o.jsx(Yu.Slot,{scope:e.__scopeSelect,children:o.jsx("div",{children:e.children})})}),i):null}return o.jsx(a_,{...e,ref:t})});i_.displayName=ai;var Cr=10,[o_,_s]=Oo(ai),iF="SelectContentImpl",oF=ni("SelectContent.RemoveScroll"),a_=m.forwardRef((e,t)=>{const{__scopeSelect:r,position:n="item-aligned",onCloseAutoFocus:s,onEscapeKeyDown:i,onPointerDownOutside:a,side:l,sideOffset:c,align:u,alignOffset:d,arrowPadding:f,collisionBoundary:h,collisionPadding:x,sticky:w,hideWhenDetached:g,avoidCollisions:b,...v}=e,p=Cs(ai,r),[y,N]=m.useState(null),[j,E]=m.useState(null),T=Re(t,ne=>N(ne)),[P,C]=m.useState(null),[A,z]=m.useState(null),O=Ju(r),[U,F]=m.useState(!1),re=m.useRef(!1);m.useEffect(()=>{if(y)return ip(y)},[y]),sp();const Q=m.useCallback(ne=>{const[Ae,...Ie]=O().map(Pe=>Pe.ref.current),[ke]=Ie.slice(-1),Te=document.activeElement;for(const Pe of ne)if(Pe===Te||(Pe==null||Pe.scrollIntoView({block:"nearest"}),Pe===Ae&&j&&(j.scrollTop=0),Pe===ke&&j&&(j.scrollTop=j.scrollHeight),Pe==null||Pe.focus(),document.activeElement!==Te))return},[O,j]),oe=m.useCallback(()=>Q([P,y]),[Q,P,y]);m.useEffect(()=>{U&&oe()},[U,oe]);const{onOpenChange:I,triggerPointerDownPosRef:M}=p;m.useEffect(()=>{if(y){let ne={x:0,y:0};const Ae=ke=>{var Te,Pe;ne={x:Math.abs(Math.round(ke.pageX)-(((Te=M.current)==null?void 0:Te.x)??0)),y:Math.abs(Math.round(ke.pageY)-(((Pe=M.current)==null?void 0:Pe.y)??0))}},Ie=ke=>{ne.x<=10&&ne.y<=10?ke.preventDefault():y.contains(ke.target)||I(!1),document.removeEventListener("pointermove",Ae),M.current=null};return M.current!==null&&(document.addEventListener("pointermove",Ae),document.addEventListener("pointerup",Ie,{capture:!0,once:!0})),()=>{document.removeEventListener("pointermove",Ae),document.removeEventListener("pointerup",Ie,{capture:!0})}}},[y,I,M]),m.useEffect(()=>{const ne=()=>I(!1);return window.addEventListener("blur",ne),window.addEventListener("resize",ne),()=>{window.removeEventListener("blur",ne),window.removeEventListener("resize",ne)}},[I]);const[W,se]=j_(ne=>{const Ae=O().filter(Te=>!Te.disabled),Ie=Ae.find(Te=>Te.ref.current===document.activeElement),ke=C_(Ae,ne,Ie);ke&&setTimeout(()=>ke.ref.current.focus())}),xe=m.useCallback((ne,Ae,Ie)=>{const ke=!re.current&&!Ie;(p.value!==void 0&&p.value===Ae||ke)&&(C(ne),ke&&(re.current=!0))},[p.value]),Je=m.useCallback(()=>y==null?void 0:y.focus(),[y]),ze=m.useCallback((ne,Ae,Ie)=>{const ke=!re.current&&!Ie;(p.value!==void 0&&p.value===Ae||ke)&&z(ne)},[p.value]),Ct=n==="popper"?Cm:l_,qe=Ct===Cm?{side:l,sideOffset:c,align:u,alignOffset:d,arrowPadding:f,collisionBoundary:h,collisionPadding:x,sticky:w,hideWhenDetached:g,avoidCollisions:b}:{};return o.jsx(o_,{scope:r,content:y,viewport:j,onViewportChange:E,itemRefCallback:xe,selectedItem:P,onItemLeave:Je,itemTextRefCallback:ze,focusSelectedItem:oe,selectedItemText:A,position:n,isPositioned:U,searchRef:W,children:o.jsx(Ku,{as:oF,allowPinchZoom:!0,children:o.jsx(Hu,{asChild:!0,trapped:p.open,onMountAutoFocus:ne=>{ne.preventDefault()},onUnmountAutoFocus:K(s,ne=>{var Ae;(Ae=p.trigger)==null||Ae.focus({preventScroll:!0}),ne.preventDefault()}),children:o.jsx(Po,{asChild:!0,disableOutsidePointerEvents:!0,onEscapeKeyDown:i,onPointerDownOutside:a,onFocusOutside:ne=>ne.preventDefault(),onDismiss:()=>p.onOpenChange(!1),children:o.jsx(Ct,{role:"listbox",id:p.contentId,"data-state":p.open?"open":"closed",dir:p.dir,onContextMenu:ne=>ne.preventDefault(),...v,...qe,onPlaced:()=>F(!0),ref:T,style:{display:"flex",flexDirection:"column",outline:"none",...v.style},onKeyDown:K(v.onKeyDown,ne=>{const Ae=ne.ctrlKey||ne.altKey||ne.metaKey;if(ne.key==="Tab"&&ne.preventDefault(),!Ae&&ne.key.length===1&&se(ne.key),["ArrowUp","ArrowDown","Home","End"].includes(ne.key)){let ke=O().filter(Te=>!Te.disabled).map(Te=>Te.ref.current);if(["ArrowUp","End"].includes(ne.key)&&(ke=ke.slice().reverse()),["ArrowUp","ArrowDown"].includes(ne.key)){const Te=ne.target,Pe=ke.indexOf(Te);ke=ke.slice(Pe+1)}setTimeout(()=>Q(ke)),ne.preventDefault()}})})})})})})});a_.displayName=iF;var aF="SelectItemAlignedPosition",l_=m.forwardRef((e,t)=>{const{__scopeSelect:r,onPlaced:n,...s}=e,i=Cs(ai,r),a=_s(ai,r),[l,c]=m.useState(null),[u,d]=m.useState(null),f=Re(t,T=>d(T)),h=Ju(r),x=m.useRef(!1),w=m.useRef(!0),{viewport:g,selectedItem:b,selectedItemText:v,focusSelectedItem:p}=a,y=m.useCallback(()=>{if(i.trigger&&i.valueNode&&l&&u&&g&&b&&v){const T=i.trigger.getBoundingClientRect(),P=u.getBoundingClientRect(),C=i.valueNode.getBoundingClientRect(),A=v.getBoundingClientRect();if(i.dir!=="rtl"){const Te=A.left-P.left,Pe=C.left-Te,Mt=T.left-Pe,er=T.width+Mt,Es=Math.max(er,P.width),In=window.innerWidth-Cr,Mn=Vv(Pe,[Cr,Math.max(Cr,In-Es)]);l.style.minWidth=er+"px",l.style.left=Mn+"px"}else{const Te=P.right-A.right,Pe=window.innerWidth-C.right-Te,Mt=window.innerWidth-T.right-Pe,er=T.width+Mt,Es=Math.max(er,P.width),In=window.innerWidth-Cr,Mn=Vv(Pe,[Cr,Math.max(Cr,In-Es)]);l.style.minWidth=er+"px",l.style.right=Mn+"px"}const z=h(),O=window.innerHeight-Cr*2,U=g.scrollHeight,F=window.getComputedStyle(u),re=parseInt(F.borderTopWidth,10),Q=parseInt(F.paddingTop,10),oe=parseInt(F.borderBottomWidth,10),I=parseInt(F.paddingBottom,10),M=re+Q+U+I+oe,W=Math.min(b.offsetHeight*5,M),se=window.getComputedStyle(g),xe=parseInt(se.paddingTop,10),Je=parseInt(se.paddingBottom,10),ze=T.top+T.height/2-Cr,Ct=O-ze,qe=b.offsetHeight/2,ne=b.offsetTop+qe,Ae=re+Q+ne,Ie=M-Ae;if(Ae<=ze){const Te=z.length>0&&b===z[z.length-1].ref.current;l.style.bottom="0px";const Pe=u.clientHeight-g.offsetTop-g.offsetHeight,Mt=Math.max(Ct,qe+(Te?Je:0)+Pe+oe),er=Ae+Mt;l.style.height=er+"px"}else{const Te=z.length>0&&b===z[0].ref.current;l.style.top="0px";const Mt=Math.max(ze,re+g.offsetTop+(Te?xe:0)+qe)+Ie;l.style.height=Mt+"px",g.scrollTop=Ae-ze+g.offsetTop}l.style.margin=`${Cr}px 0`,l.style.minHeight=W+"px",l.style.maxHeight=O+"px",n==null||n(),requestAnimationFrame(()=>x.current=!0)}},[h,i.trigger,i.valueNode,l,u,g,b,v,i.dir,n]);ht(()=>y(),[y]);const[N,j]=m.useState();ht(()=>{u&&j(window.getComputedStyle(u).zIndex)},[u]);const E=m.useCallback(T=>{T&&w.current===!0&&(y(),p==null||p(),w.current=!1)},[y,p]);return o.jsx(cF,{scope:r,contentWrapper:l,shouldExpandOnScrollRef:x,onScrollButtonChange:E,children:o.jsx("div",{ref:c,style:{display:"flex",flexDirection:"column",position:"fixed",zIndex:N},children:o.jsx(ce.div,{...s,ref:f,style:{boxSizing:"border-box",maxHeight:"100%",...s.style}})})})});l_.displayName=aF;var lF="SelectPopperPosition",Cm=m.forwardRef((e,t)=>{const{__scopeSelect:r,align:n="start",collisionPadding:s=Cr,...i}=e,a=ed(r);return o.jsx(tp,{...a,...i,ref:t,align:n,collisionPadding:s,style:{boxSizing:"border-box",...i.style,"--radix-select-content-transform-origin":"var(--radix-popper-transform-origin)","--radix-select-content-available-width":"var(--radix-popper-available-width)","--radix-select-content-available-height":"var(--radix-popper-available-height)","--radix-select-trigger-width":"var(--radix-popper-anchor-width)","--radix-select-trigger-height":"var(--radix-popper-anchor-height)"}})});Cm.displayName=lF;var[cF,wp]=Oo(ai,{}),_m="SelectViewport",c_=m.forwardRef((e,t)=>{const{__scopeSelect:r,nonce:n,...s}=e,i=_s(_m,r),a=wp(_m,r),l=Re(t,i.onViewportChange),c=m.useRef(0);return o.jsxs(o.Fragment,{children:[o.jsx("style",{dangerouslySetInnerHTML:{__html:"[data-radix-select-viewport]{scrollbar-width:none;-ms-overflow-style:none;-webkit-overflow-scrolling:touch;}[data-radix-select-viewport]::-webkit-scrollbar{display:none}"},nonce:n}),o.jsx(Yu.Slot,{scope:r,children:o.jsx(ce.div,{"data-radix-select-viewport":"",role:"presentation",...s,ref:l,style:{position:"relative",flex:1,overflow:"hidden auto",...s.style},onScroll:K(s.onScroll,u=>{const d=u.currentTarget,{contentWrapper:f,shouldExpandOnScrollRef:h}=a;if(h!=null&&h.current&&f){const x=Math.abs(c.current-d.scrollTop);if(x>0){const w=window.innerHeight-Cr*2,g=parseFloat(f.style.minHeight),b=parseFloat(f.style.height),v=Math.max(g,b);if(v<w){const p=v+x,y=Math.min(w,p),N=p-y;f.style.height=y+"px",f.style.bottom==="0px"&&(d.scrollTop=N>0?N:0,f.style.justifyContent="flex-end")}}}c.current=d.scrollTop})})})]})});c_.displayName=_m;var u_="SelectGroup",[uF,dF]=Oo(u_),fF=m.forwardRef((e,t)=>{const{__scopeSelect:r,...n}=e,s=tn();return o.jsx(uF,{scope:r,id:s,children:o.jsx(ce.div,{role:"group","aria-labelledby":s,...n,ref:t})})});fF.displayName=u_;var d_="SelectLabel",f_=m.forwardRef((e,t)=>{const{__scopeSelect:r,...n}=e,s=dF(d_,r);return o.jsx(ce.div,{id:s.id,...n,ref:t})});f_.displayName=d_;var Kc="SelectItem",[mF,m_]=Oo(Kc),h_=m.forwardRef((e,t)=>{const{__scopeSelect:r,value:n,disabled:s=!1,textValue:i,...a}=e,l=Cs(Kc,r),c=_s(Kc,r),u=l.value===n,[d,f]=m.useState(i??""),[h,x]=m.useState(!1),w=Re(t,p=>{var y;return(y=c.itemRefCallback)==null?void 0:y.call(c,p,n,s)}),g=tn(),b=m.useRef("touch"),v=()=>{s||(l.onValueChange(n),l.onOpenChange(!1))};if(n==="")throw new Error("A <Select.Item /> must have a value prop that is not an empty string. This is because the Select value can be set to an empty string to clear the selection and show the placeholder.");return o.jsx(mF,{scope:r,value:n,disabled:s,textId:g,isSelected:u,onItemTextChange:m.useCallback(p=>{f(y=>y||((p==null?void 0:p.textContent)??"").trim())},[]),children:o.jsx(Yu.ItemSlot,{scope:r,value:n,disabled:s,textValue:d,children:o.jsx(ce.div,{role:"option","aria-labelledby":g,"data-highlighted":h?"":void 0,"aria-selected":u&&h,"data-state":u?"checked":"unchecked","aria-disabled":s||void 0,"data-disabled":s?"":void 0,tabIndex:s?void 0:-1,...a,ref:w,onFocus:K(a.onFocus,()=>x(!0)),onBlur:K(a.onBlur,()=>x(!1)),onClick:K(a.onClick,()=>{b.current!=="mouse"&&v()}),onPointerUp:K(a.onPointerUp,()=>{b.current==="mouse"&&v()}),onPointerDown:K(a.onPointerDown,p=>{b.current=p.pointerType}),onPointerMove:K(a.onPointerMove,p=>{var y;b.current=p.pointerType,s?(y=c.onItemLeave)==null||y.call(c):b.current==="mouse"&&p.currentTarget.focus({preventScroll:!0})}),onPointerLeave:K(a.onPointerLeave,p=>{var y;p.currentTarget===document.activeElement&&((y=c.onItemLeave)==null||y.call(c))}),onKeyDown:K(a.onKeyDown,p=>{var N;((N=c.searchRef)==null?void 0:N.current)!==""&&p.key===" "||(YL.includes(p.key)&&v(),p.key===" "&&p.preventDefault())})})})})});h_.displayName=Kc;var ra="SelectItemText",p_=m.forwardRef((e,t)=>{const{__scopeSelect:r,className:n,style:s,...i}=e,a=Cs(ra,r),l=_s(ra,r),c=m_(ra,r),u=rF(ra,r),[d,f]=m.useState(null),h=Re(t,v=>f(v),c.onItemTextChange,v=>{var p;return(p=l.itemTextRefCallback)==null?void 0:p.call(l,v,c.value,c.disabled)}),x=d==null?void 0:d.textContent,w=m.useMemo(()=>o.jsx("option",{value:c.value,disabled:c.disabled,children:x},c.value),[c.disabled,c.value,x]),{onNativeOptionAdd:g,onNativeOptionRemove:b}=u;return ht(()=>(g(w),()=>b(w)),[g,b,w]),o.jsxs(o.Fragment,{children:[o.jsx(ce.span,{id:c.textId,...i,ref:h}),c.isSelected&&a.valueNode&&!a.valueNodeHasChildren?mi.createPortal(i.children,a.valueNode):null]})});p_.displayName=ra;var g_="SelectItemIndicator",v_=m.forwardRef((e,t)=>{const{__scopeSelect:r,...n}=e;return m_(g_,r).isSelected?o.jsx(ce.span,{"aria-hidden":!0,...n,ref:t}):null});v_.displayName=g_;var km="SelectScrollUpButton",y_=m.forwardRef((e,t)=>{const r=_s(km,e.__scopeSelect),n=wp(km,e.__scopeSelect),[s,i]=m.useState(!1),a=Re(t,n.onScrollButtonChange);return ht(()=>{if(r.viewport&&r.isPositioned){let l=function(){const u=c.scrollTop>0;i(u)};const c=r.viewport;return l(),c.addEventListener("scroll",l),()=>c.removeEventListener("scroll",l)}},[r.viewport,r.isPositioned]),s?o.jsx(w_,{...e,ref:a,onAutoScroll:()=>{const{viewport:l,selectedItem:c}=r;l&&c&&(l.scrollTop=l.scrollTop-c.offsetHeight)}}):null});y_.displayName=km;var Tm="SelectScrollDownButton",x_=m.forwardRef((e,t)=>{const r=_s(Tm,e.__scopeSelect),n=wp(Tm,e.__scopeSelect),[s,i]=m.useState(!1),a=Re(t,n.onScrollButtonChange);return ht(()=>{if(r.viewport&&r.isPositioned){let l=function(){const u=c.scrollHeight-c.clientHeight,d=Math.ceil(c.scrollTop)<u;i(d)};const c=r.viewport;return l(),c.addEventListener("scroll",l),()=>c.removeEventListener("scroll",l)}},[r.viewport,r.isPositioned]),s?o.jsx(w_,{...e,ref:a,onAutoScroll:()=>{const{viewport:l,selectedItem:c}=r;l&&c&&(l.scrollTop=l.scrollTop+c.offsetHeight)}}):null});x_.displayName=Tm;var w_=m.forwardRef((e,t)=>{const{__scopeSelect:r,onAutoScroll:n,...s}=e,i=_s("SelectScrollButton",r),a=m.useRef(null),l=Ju(r),c=m.useCallback(()=>{a.current!==null&&(window.clearInterval(a.current),a.current=null)},[]);return m.useEffect(()=>()=>c(),[c]),ht(()=>{var d;const u=l().find(f=>f.ref.current===document.activeElement);(d=u==null?void 0:u.ref.current)==null||d.scrollIntoView({block:"nearest"})},[l]),o.jsx(ce.div,{"aria-hidden":!0,...s,ref:t,style:{flexShrink:0,...s.style},onPointerDown:K(s.onPointerDown,()=>{a.current===null&&(a.current=window.setInterval(n,50))}),onPointerMove:K(s.onPointerMove,()=>{var u;(u=i.onItemLeave)==null||u.call(i),a.current===null&&(a.current=window.setInterval(n,50))}),onPointerLeave:K(s.onPointerLeave,()=>{c()})})}),hF="SelectSeparator",b_=m.forwardRef((e,t)=>{const{__scopeSelect:r,...n}=e;return o.jsx(ce.div,{"aria-hidden":!0,...n,ref:t})});b_.displayName=hF;var Em="SelectArrow",pF=m.forwardRef((e,t)=>{const{__scopeSelect:r,...n}=e,s=ed(r),i=Cs(Em,r),a=_s(Em,r);return i.open&&a.position==="popper"?o.jsx(rp,{...s,...n,ref:t}):null});pF.displayName=Em;function N_(e){return e===""||e===void 0}var S_=m.forwardRef((e,t)=>{const{value:r,...n}=e,s=m.useRef(null),i=Re(t,s),a=ZL(r);return m.useEffect(()=>{const l=s.current,c=window.HTMLSelectElement.prototype,d=Object.getOwnPropertyDescriptor(c,"value").set;if(a!==r&&d){const f=new Event("change",{bubbles:!0});d.call(l,r),l.dispatchEvent(f)}},[a,r]),o.jsx(ml,{asChild:!0,children:o.jsx("select",{...n,ref:i,defaultValue:r})})});S_.displayName="BubbleSelect";function j_(e){const t=jt(e),r=m.useRef(""),n=m.useRef(0),s=m.useCallback(a=>{const l=r.current+a;t(l),function c(u){r.current=u,window.clearTimeout(n.current),u!==""&&(n.current=window.setTimeout(()=>c(""),1e3))}(l)},[t]),i=m.useCallback(()=>{r.current="",window.clearTimeout(n.current)},[]);return m.useEffect(()=>()=>window.clearTimeout(n.current),[]),[r,s,i]}function C_(e,t,r){const s=t.length>1&&Array.from(t).every(u=>u===t[0])?t[0]:t,i=r?e.indexOf(r):-1;let a=gF(e,Math.max(i,0));s.length===1&&(a=a.filter(u=>u!==r));const c=a.find(u=>u.textValue.toLowerCase().startsWith(s.toLowerCase()));return c!==r?c:void 0}function gF(e,t){return e.map((r,n)=>e[(t+n)%e.length])}var vF=YC,__=e_,yF=r_,xF=n_,wF=s_,k_=i_,bF=c_,T_=f_,E_=h_,NF=p_,SF=v_,P_=y_,R_=x_,A_=b_;const Li=vF,Fi=yF,Ls=m.forwardRef(({className:e,children:t,...r},n)=>o.jsxs(__,{ref:n,className:me("flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1",e),...r,children:[t,o.jsx(xF,{asChild:!0,children:o.jsx(yS,{className:"h-4 w-4 opacity-50"})})]}));Ls.displayName=__.displayName;const I_=m.forwardRef(({className:e,...t},r)=>o.jsx(P_,{ref:r,className:me("flex cursor-default items-center justify-center py-1",e),...t,children:o.jsx(xI,{className:"h-4 w-4"})}));I_.displayName=P_.displayName;const M_=m.forwardRef(({className:e,...t},r)=>o.jsx(R_,{ref:r,className:me("flex cursor-default items-center justify-center py-1",e),...t,children:o.jsx(yS,{className:"h-4 w-4"})}));M_.displayName=R_.displayName;const Fs=m.forwardRef(({className:e,children:t,position:r="popper",...n},s)=>o.jsx(wF,{children:o.jsxs(k_,{ref:s,className:me("relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]",r==="popper"&&"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",e),position:r,...n,children:[o.jsx(I_,{}),o.jsx(bF,{className:me("p-1",r==="popper"&&"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]"),children:t}),o.jsx(M_,{})]})}));Fs.displayName=k_.displayName;const jF=m.forwardRef(({className:e,...t},r)=>o.jsx(T_,{ref:r,className:me("py-1.5 pl-8 pr-2 text-sm font-semibold",e),...t}));jF.displayName=T_.displayName;const Pt=m.forwardRef(({className:e,children:t,...r},n)=>o.jsxs(E_,{ref:n,className:me("relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",e),...r,children:[o.jsx("span",{className:"absolute left-2 flex h-3.5 w-3.5 items-center justify-center",children:o.jsx(SF,{children:o.jsx(Lu,{className:"h-4 w-4"})})}),o.jsx(NF,{children:t})]}));Pt.displayName=E_.displayName;const CF=m.forwardRef(({className:e,...t},r)=>o.jsx(A_,{ref:r,className:me("-mx-1 my-1 h-px bg-muted",e),...t}));CF.displayName=A_.displayName;const _F={Push:"ChestTriceps",Pull:"BackBiceps",Legs:"Legs",Core:"Abs"};function kF(){const{toast:e}=dl(),[t,r]=m.useState([]),[n,s]=m.useState(!0),[i,a]=m.useState(""),[l,c]=m.useState(""),[u,d]=m.useState(""),[f,h]=m.useState(null),[x,w]=m.useState(""),[g,b]=m.useState(""),[v,p]=m.useState([]);m.useState(new Date),m.useState({}),m.useEffect(()=>{(async()=>{try{const A=await fetch("/api/exercises");if(A.ok){const z=await A.json();r(z)}else e({title:"Error loading exercises",description:"Could not fetch exercise database",variant:"destructive"})}catch(A){console.error("Error fetching exercises:",A),e({title:"Error loading exercises",description:"Could not connect to exercise database",variant:"destructive"})}finally{s(!1)}})()},[e]);const y=t.filter(C=>!(i&&C.workoutType!==_F[i]||l&&C.equipmentType!==l||u&&C.category!==u));[...new Set(y.map(C=>C.equipmentType))],[...new Set(t.map(C=>C.workoutType))],[...new Set(t.map(C=>C.category))],m.useEffect(()=>{if(f){const C=v.filter(A=>A.exerciseId===f.id);if(C.length>0){const A=C[C.length-1];setGhostWeight(A.weight.toString()),setGhostReps(A.reps.toString())}else setGhostWeight(""),setGhostReps("")}},[f,v]);const N=()=>{if(!f||!l||!x||!g){e({title:"Missing Information",description:"Please select exercise, equipment, weight, and reps",variant:"destructive"});return}const C=parseFloat(x),A=parseInt(g);if(isNaN(C)||isNaN(A)||C<=0||A<=0){e({title:"Invalid Input",description:"Weight and reps must be positive numbers",variant:"destructive"});return}const z={id:`${Date.now()}-${Math.random()}`,exerciseId:f.id,exerciseName:f.name,equipment:l,weight:C,reps:A,timestamp:new Date,volume:C*A};p(O=>[...O,z]),w(""),b(""),e({title:"Set Logged!",description:`${f.name}: ${A} reps @ ${C}lbs (${z.volume} volume)`})},j=C=>{p(A=>A.filter(z=>z.id!==C)),e({title:"Set Deleted",description:"Set removed from workout"})},E=()=>{a(""),setSelectedMuscleGroup(""),d(""),h(null),c(""),w(""),b("")},T=v.reduce((C,A)=>C+A.volume,0),P=[...new Set(v.map(C=>C.exerciseName))].length;return o.jsx("div",{className:"min-h-screen bg-background p-4",children:o.jsxs("div",{className:"max-w-6xl mx-auto space-y-6",children:[o.jsx(ie,{children:o.jsxs(Le,{children:[o.jsx(Fe,{className:"text-2xl",children:"Freeform Workout Logger"}),o.jsx("p",{className:"text-muted-foreground",children:"Log your sets in real-time with filtered exercise selection"})]})}),o.jsxs("div",{className:"grid lg:grid-cols-2 gap-6",children:[o.jsxs("div",{className:"space-y-6",children:[o.jsxs(ie,{children:[o.jsx(Le,{children:o.jsx(Fe,{className:"text-lg",children:"Exercise Filters"})}),o.jsxs(le,{className:"space-y-4",children:[o.jsxs("div",{children:[o.jsx(yn,{children:"Workout Type"}),o.jsxs(Li,{value:i,onValueChange:a,children:[o.jsx(Ls,{children:o.jsx(Fi,{placeholder:"Select workout type"})}),o.jsxs(Fs,{children:[o.jsxs(Pt,{value:"Push",children:["Push (",mockExercises.filter(C=>C.workoutType==="Push").length," exercises)"]}),o.jsxs(Pt,{value:"Pull",children:["Pull (",mockExercises.filter(C=>C.workoutType==="Pull").length," exercises)"]}),o.jsxs(Pt,{value:"Legs",children:["Legs (",mockExercises.filter(C=>C.workoutType==="Legs").length," exercises)"]}),o.jsxs(Pt,{value:"Core",children:["Core (",mockExercises.filter(C=>C.workoutType==="Core").length," exercises)"]})]})]})]}),i&&o.jsxs("div",{children:[o.jsx(yn,{children:"Primary Muscle Focus"}),o.jsxs(Li,{value:selectedMuscleGroup,onValueChange:setSelectedMuscleGroup,children:[o.jsx(Ls,{children:o.jsx(Fi,{placeholder:"Select primary muscle"})}),o.jsx(Fs,{children:availableMuscleGroups.map(C=>{const A=mockExercises.filter(z=>z.workoutType===i&&z.primaryMuscleGroup===C).length;return o.jsxs(Pt,{value:C,children:[C," (",A," exercise",A!==1?"s":"",")"]},C)})})]})]}),selectedMuscleGroup&&o.jsxs("div",{children:[o.jsx(yn,{children:"Exercise Type"}),o.jsxs(Li,{value:u,onValueChange:d,children:[o.jsx(Ls,{children:o.jsx(Fi,{placeholder:"Select exercise type"})}),o.jsx(Fs,{children:["Compound","Isolation"].map(C=>{const A=mockExercises.filter(z=>z.workoutType===i&&z.primaryMuscleGroup===selectedMuscleGroup&&z.exerciseType===C).length;return o.jsxs(Pt,{value:C,children:[C," (",A," exercise",A!==1?"s":"",")"]},C)})})]})]}),o.jsx(ae,{onClick:E,variant:"outline",className:"w-full",children:"Reset Filters"})]})]}),o.jsxs(ie,{children:[o.jsxs(Le,{children:[o.jsx(Fe,{className:"text-lg",children:"Select Exercise"}),o.jsxs("p",{className:"text-sm text-muted-foreground",children:[y.length," exercise",y.length!==1?"s":"",i||selectedMuscleGroup||u?" match your filters":" available"]})]}),o.jsx(le,{children:y.length>0?o.jsx("div",{className:"space-y-2 max-h-96 overflow-y-auto",children:y.map(C=>o.jsxs("div",{className:`p-3 border rounded-lg cursor-pointer transition-colors ${(f==null?void 0:f.id)===C.id?"border-primary bg-primary/10":"border-border hover:border-primary/50"}`,onClick:()=>{h(C),c("")},children:[o.jsxs("div",{className:"flex items-center justify-between",children:[o.jsx("h4",{className:"font-medium",children:C.name}),o.jsxs("div",{className:"flex gap-2",children:[o.jsx(Or,{variant:"outline",className:"text-xs",children:C.workoutType}),o.jsx(Or,{variant:"outline",className:"text-xs",children:C.primaryMuscleGroup}),o.jsx(Or,{variant:"outline",className:"text-xs",children:C.exerciseType})]})]}),o.jsxs("p",{className:"text-sm text-muted-foreground mt-1",children:["Equipment: ",C.equipment.join(", ")]})]},C.id))}):o.jsxs("div",{className:"text-center py-8 text-muted-foreground",children:[o.jsx(Ro,{className:"w-12 h-12 mx-auto mb-4 opacity-50"}),o.jsx("p",{children:"No exercises match your current filters."}),o.jsx("p",{className:"text-sm",children:"Try adjusting your selections above."})]})})]}),f&&o.jsxs(ie,{children:[o.jsx(Le,{children:o.jsxs(Fe,{className:"text-lg",children:["Equipment for ",f.name]})}),o.jsx(le,{children:o.jsxs(Li,{value:l,onValueChange:c,children:[o.jsx(Ls,{children:o.jsx(Fi,{placeholder:"Select equipment"})}),o.jsx(Fs,{children:f.equipment.map(C=>o.jsx(Pt,{value:C,children:C},C))})]})})]})]}),o.jsxs("div",{className:"space-y-6",children:[f&&l&&o.jsxs(ie,{children:[o.jsxs(Le,{children:[o.jsx(Fe,{className:"text-lg",children:"Log Set"}),o.jsxs("p",{className:"text-sm text-muted-foreground",children:[f.name," with ",l]})]}),o.jsxs(le,{className:"space-y-4",children:[o.jsxs("div",{className:"grid grid-cols-2 gap-4",children:[o.jsxs("div",{children:[o.jsx(yn,{htmlFor:"weight",children:"Weight (lbs)"}),o.jsx(Qt,{id:"weight",type:"number",value:x,onChange:C=>w(C.target.value),placeholder:ghostWeight||"0",className:ghostWeight?"placeholder:text-gray-400":""})]}),o.jsxs("div",{children:[o.jsx(yn,{htmlFor:"reps",children:"Reps"}),o.jsx(Qt,{id:"reps",type:"number",value:g,onChange:C=>b(C.target.value),placeholder:ghostReps||"0",className:ghostReps?"placeholder:text-gray-400":""})]})]}),x&&g&&o.jsx("div",{className:"p-3 bg-muted/30 rounded-lg",children:o.jsxs("div",{className:"text-sm font-medium",children:["Set Volume: ",parseFloat(x)*parseInt(g)||0," lbs"]})}),o.jsxs(ae,{onClick:N,className:"w-full gradient-bg",children:[o.jsx(Lu,{className:"w-4 h-4 mr-2"}),"Log Set"]})]})]}),o.jsxs(ie,{children:[o.jsx(Le,{children:o.jsx(Fe,{className:"text-lg",children:"Session Summary"})}),o.jsx(le,{children:o.jsxs("div",{className:"grid grid-cols-3 gap-4 text-center",children:[o.jsxs("div",{children:[o.jsx("div",{className:"text-2xl font-bold text-primary",children:v.length}),o.jsx("div",{className:"text-sm text-muted-foreground",children:"Total Sets"})]}),o.jsxs("div",{children:[o.jsx("div",{className:"text-2xl font-bold text-accent",children:P}),o.jsx("div",{className:"text-sm text-muted-foreground",children:"Exercises"})]}),o.jsxs("div",{children:[o.jsx("div",{className:"text-2xl font-bold text-secondary",children:T}),o.jsx("div",{className:"text-sm text-muted-foreground",children:"Total Volume"})]})]})})]}),v.length>0&&o.jsxs(ie,{children:[o.jsx(Le,{children:o.jsx(Fe,{className:"text-lg",children:"Logged Sets"})}),o.jsx(le,{children:o.jsx("div",{className:"space-y-2 max-h-96 overflow-y-auto",children:v.map((C,A)=>o.jsxs("div",{className:"flex items-center justify-between p-3 bg-muted/30 rounded-lg",children:[o.jsxs("div",{className:"flex-1",children:[o.jsx("div",{className:"font-medium",children:C.exerciseName}),o.jsxs("div",{className:"text-sm text-muted-foreground",children:[C.reps," reps @ ",C.weight,"lbs with ",C.equipment]})]}),o.jsxs("div",{className:"flex items-center gap-2",children:[o.jsxs("span",{className:"text-sm font-medium",children:[C.volume," vol"]}),o.jsx(ae,{onClick:()=>j(C.id),variant:"ghost",size:"sm",className:"text-destructive hover:text-destructive",children:o.jsx(AI,{className:"w-4 h-4"})})]})]},C.id))})})]})]})]})]})})}function TF(){return o.jsx("div",{className:"min-h-screen w-full flex items-center justify-center bg-gray-50",children:o.jsx(ie,{className:"w-full max-w-md mx-4",children:o.jsxs(le,{className:"pt-6",children:[o.jsxs("div",{className:"flex mb-4 gap-2",children:[o.jsx(wI,{className:"h-8 w-8 text-red-500"}),o.jsx("h1",{className:"text-2xl font-bold text-gray-900",children:"404 Page Not Found"})]}),o.jsx("p",{className:"mt-4 text-sm text-gray-600",children:"Did you forget to add the page to the router?"})]})})})}function EF(){const{user:e}=Rn();return o.jsxs("section",{className:"relative overflow-hidden min-h-[80vh] flex items-center",children:[o.jsxs("div",{className:"absolute inset-0 z-0",children:[o.jsx("img",{src:"https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?ixlib=rb-4.0.3&auto=format&fit=crop&w=2070&h=1000",alt:"Modern fitness gym with equipment",className:"w-full h-full object-cover"}),o.jsx("div",{className:"absolute inset-0 bg-gradient-to-r from-background/90 via-background/60 to-background/30 dark:from-dark/90 dark:via-dark/60 dark:to-dark/30"})]}),o.jsx("div",{className:"relative z-10 max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-24",children:o.jsxs("div",{className:"grid lg:grid-cols-2 gap-12 items-center",children:[o.jsxs("div",{className:"animate-slide-up",children:[o.jsxs("h1",{className:"text-5xl lg:text-6xl font-bold text-foreground mb-6",children:["Transform Your"," ",o.jsx("span",{className:"text-gradient",children:"Fitness Journey"})]}),o.jsx("p",{className:"text-xl text-muted-foreground mb-8 leading-relaxed",children:"Experience the future of fitness with AI-powered workouts, real-time form analysis, and personalized training that adapts to your goals."}),o.jsx("div",{className:"flex flex-col sm:flex-row gap-4",children:e?o.jsxs(o.Fragment,{children:[o.jsx(rt,{href:"/dashboard",children:o.jsx(ae,{className:"btn-primary",children:"View Dashboard"})}),o.jsx(rt,{href:"/workouts",children:o.jsx(ae,{variant:"outline",className:"btn-secondary",children:"Browse Workouts"})})]}):o.jsxs(o.Fragment,{children:[o.jsx(rt,{href:"/auth",children:o.jsx(ae,{className:"btn-primary",children:"Start Your Journey"})}),o.jsx(ae,{variant:"outline",className:"btn-secondary",children:"Watch Demo"})]})})]}),e&&o.jsx(ie,{className:"glass-effect animate-fade-in",children:o.jsxs(le,{className:"p-8",children:[o.jsx("h3",{className:"text-2xl font-bold mb-6",children:"Today's Progress"}),o.jsxs("div",{className:"grid grid-cols-2 gap-6",children:[o.jsxs("div",{className:"text-center",children:[o.jsxs("div",{className:"w-16 h-16 mx-auto mb-2 relative",children:[o.jsxs("svg",{className:"w-16 h-16 progress-ring",children:[o.jsx("circle",{cx:"32",cy:"32",r:"28",stroke:"currentColor",strokeWidth:"4",fill:"none",className:"text-muted opacity-30"}),o.jsx("circle",{cx:"32",cy:"32",r:"28",stroke:"hsl(var(--primary))",strokeWidth:"4",fill:"none",strokeDasharray:"175.9",strokeDashoffset:"52.8",strokeLinecap:"round"})]}),o.jsx("div",{className:"absolute inset-0 flex items-center justify-center",children:o.jsx("span",{className:"text-foreground font-bold",children:"70%"})})]}),o.jsx("p",{className:"font-medium",children:"Workout Goal"})]}),o.jsxs("div",{className:"text-center",children:[o.jsxs("div",{className:"w-16 h-16 mx-auto mb-2 relative",children:[o.jsxs("svg",{className:"w-16 h-16 progress-ring",children:[o.jsx("circle",{cx:"32",cy:"32",r:"28",stroke:"currentColor",strokeWidth:"4",fill:"none",className:"text-muted opacity-30"}),o.jsx("circle",{cx:"32",cy:"32",r:"28",stroke:"hsl(var(--accent))",strokeWidth:"4",fill:"none",strokeDasharray:"175.9",strokeDashoffset:"35.2",strokeLinecap:"round"})]}),o.jsx("div",{className:"absolute inset-0 flex items-center justify-center",children:o.jsx("span",{className:"text-foreground font-bold",children:"80%"})})]}),o.jsx("p",{className:"font-medium",children:"Calorie Goal"})]})]})]})})]})})]})}function D_(){const e=[{day:"Mon",value:16},{day:"Tue",value:24},{day:"Wed",value:20},{day:"Thu",value:32},{day:"Fri",value:28},{day:"Sat",value:24},{day:"Sun",value:30}],t={calories:{consumed:1847,target:2200},protein:{consumed:125,target:150},carbs:{consumed:220,target:275}},r=[{icon:gl,title:"Workout Recommendation",description:"Based on your recovery metrics, focus on upper body strength training today.",color:"text-primary bg-primary/10"},{icon:hs,title:"Injury Prevention",description:"Your left shoulder shows tension. Consider mobility work.",color:"text-accent bg-accent/10"},{icon:gS,title:"Recovery Status",description:"Sleep quality: 85%. Ready for high-intensity training.",color:"text-secondary bg-secondary/10"}];return o.jsxs("section",{className:"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16",children:[o.jsxs("div",{className:"text-center mb-12",children:[o.jsx("h2",{className:"text-4xl font-bold mb-4",children:"Your Fitness Command Center"}),o.jsx("p",{className:"text-xl text-muted-foreground",children:"Real-time insights, AI-powered recommendations, and seamless tracking"})]}),o.jsxs("div",{className:"grid lg:grid-cols-3 gap-8",children:[o.jsxs(ie,{className:"card-hover",children:[o.jsxs(Le,{className:"flex flex-row items-center justify-between space-y-0 pb-2",children:[o.jsx(Fe,{className:"text-xl",children:"Workout Analytics"}),o.jsx("div",{className:"w-12 h-12 bg-primary/10 rounded-xl flex items-center justify-center",children:o.jsx(vS,{className:"w-6 h-6 text-primary"})})]}),o.jsxs(le,{children:[o.jsx("div",{className:"h-32 mb-6 flex items-end justify-between gap-2",children:e.map((n,s)=>o.jsxs("div",{className:"flex flex-col items-center gap-1",children:[o.jsx("div",{className:"bg-gradient-to-t from-primary to-primary/50 rounded-t w-8",style:{height:`${n.value*2}px`}}),o.jsx("span",{className:"text-xs text-muted-foreground",children:n.day})]},s))}),o.jsxs("div",{className:"grid grid-cols-2 gap-4",children:[o.jsxs("div",{children:[o.jsx("p",{className:"text-3xl font-bold text-primary",children:"12"}),o.jsx("p",{className:"text-sm text-muted-foreground",children:"Workouts This Week"})]}),o.jsxs("div",{children:[o.jsx("p",{className:"text-3xl font-bold text-accent",children:"8.5"}),o.jsx("p",{className:"text-sm text-muted-foreground",children:"Avg Intensity"})]})]})]})]}),o.jsxs(ie,{className:"card-hover",children:[o.jsxs(Le,{className:"flex flex-row items-center justify-between space-y-0 pb-2",children:[o.jsx(Fe,{className:"text-xl",children:"Nutrition Today"}),o.jsx("div",{className:"w-12 h-12 bg-accent/10 rounded-xl flex items-center justify-center",children:o.jsx(fI,{className:"w-6 h-6 text-accent"})})]}),o.jsxs(le,{className:"space-y-4",children:[o.jsxs("div",{children:[o.jsxs("div",{className:"flex justify-between mb-2",children:[o.jsx("span",{className:"text-sm font-medium",children:"Calories"}),o.jsxs("span",{className:"text-sm text-muted-foreground",children:[t.calories.consumed," / ",t.calories.target]})]}),o.jsx(Nn,{value:t.calories.consumed/t.calories.target*100,className:"h-2"})]}),o.jsxs("div",{children:[o.jsxs("div",{className:"flex justify-between mb-2",children:[o.jsx("span",{className:"text-sm font-medium",children:"Protein"}),o.jsxs("span",{className:"text-sm text-muted-foreground",children:[t.protein.consumed,"g / ",t.protein.target,"g"]})]}),o.jsx(Nn,{value:t.protein.consumed/t.protein.target*100,className:"h-2"})]}),o.jsxs("div",{children:[o.jsxs("div",{className:"flex justify-between mb-2",children:[o.jsx("span",{className:"text-sm font-medium",children:"Carbs"}),o.jsxs("span",{className:"text-sm text-muted-foreground",children:[t.carbs.consumed,"g / ",t.carbs.target,"g"]})]}),o.jsx(Nn,{value:t.carbs.consumed/t.carbs.target*100,className:"h-2"})]})]})]}),o.jsxs(ie,{className:"card-hover",children:[o.jsxs(Le,{className:"flex flex-row items-center justify-between space-y-0 pb-2",children:[o.jsx(Fe,{className:"text-xl",children:"AI Insights"}),o.jsx("div",{className:"w-12 h-12 bg-secondary/10 rounded-xl flex items-center justify-center",children:o.jsx(vI,{className:"w-6 h-6 text-secondary"})})]}),o.jsx(le,{className:"space-y-4",children:r.map((n,s)=>o.jsxs("div",{className:`p-4 ${n.color} rounded-xl`,children:[o.jsxs("div",{className:"flex items-center mb-2",children:[o.jsx(n.icon,{className:"w-4 h-4 mr-2"}),o.jsx("span",{className:"font-semibold text-sm",children:n.title})]}),o.jsx("p",{className:"text-sm text-muted-foreground",children:n.description})]},s))})]})]})]})}function O_(){const[e,t]=m.useState(""),[r,n]=m.useState("all"),[s,i]=m.useState("all"),{data:a=[],isLoading:l}=yr({queryKey:["/api/workouts"]}),c=a.filter(f=>{var g;const h=f.name.toLowerCase().includes(e.toLowerCase())||((g=f.description)==null?void 0:g.toLowerCase().includes(e.toLowerCase()))||f.category.toLowerCase().includes(e.toLowerCase()),x=r==="all"||f.difficulty===r,w=s==="all"||s==="15-30"&&f.duration>=15&&f.duration<=30||s==="30-45"&&f.duration>=30&&f.duration<=45||s==="45+"&&f.duration>=45;return h&&x&&w}),u=f=>{switch(f){case"beginner":return"bg-accent/10 text-accent";case"intermediate":return"bg-primary/10 text-primary";case"advanced":return"bg-secondary/10 text-secondary";default:return"bg-muted/10 text-muted-foreground"}},d=f=>f.charAt(0).toUpperCase()+f.slice(1);return l?o.jsx("section",{className:"bg-muted/30 py-16",children:o.jsxs("div",{className:"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8",children:[o.jsxs("div",{className:"text-center mb-12",children:[o.jsx("h2",{className:"text-4xl font-bold mb-4",children:"Discover Your Perfect Workout"}),o.jsx("p",{className:"text-xl text-muted-foreground",children:"AI-curated exercises tailored to your goals and equipment"})]}),o.jsx("div",{className:"grid md:grid-cols-2 lg:grid-cols-3 gap-8",children:[...Array(6)].map((f,h)=>o.jsxs(ie,{className:"overflow-hidden",children:[o.jsx("div",{className:"w-full h-48 bg-muted animate-pulse"}),o.jsxs(le,{className:"p-6",children:[o.jsx("div",{className:"h-4 bg-muted rounded animate-pulse mb-4"}),o.jsx("div",{className:"h-3 bg-muted rounded animate-pulse mb-2"}),o.jsx("div",{className:"h-3 bg-muted rounded animate-pulse w-2/3"})]})]},h))})]})}):o.jsx("section",{className:"bg-muted/30 py-16",children:o.jsxs("div",{className:"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8",children:[o.jsxs("div",{className:"text-center mb-12",children:[o.jsx("h2",{className:"text-4xl font-bold mb-4",children:"Discover Your Perfect Workout"}),o.jsx("p",{className:"text-xl text-muted-foreground",children:"AI-curated exercises tailored to your goals and equipment"})]}),o.jsx(ie,{className:"p-6 mb-8",children:o.jsxs("div",{className:"flex flex-col lg:flex-row gap-4",children:[o.jsxs("div",{className:"flex-1 relative",children:[o.jsx(EI,{className:"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground w-4 h-4"}),o.jsx(Qt,{type:"text",placeholder:"Search workouts, exercises, muscle groups...",value:e,onChange:f=>t(f.target.value),className:"pl-10"})]}),o.jsxs("div",{className:"flex gap-3",children:[o.jsxs(Li,{value:r,onValueChange:n,children:[o.jsx(Ls,{className:"w-[140px]",children:o.jsx(Fi,{placeholder:"All Levels"})}),o.jsxs(Fs,{children:[o.jsx(Pt,{value:"all",children:"All Levels"}),o.jsx(Pt,{value:"beginner",children:"Beginner"}),o.jsx(Pt,{value:"intermediate",children:"Intermediate"}),o.jsx(Pt,{value:"advanced",children:"Advanced"})]})]}),o.jsxs(Li,{value:s,onValueChange:i,children:[o.jsx(Ls,{className:"w-[150px]",children:o.jsx(Fi,{placeholder:"Any Duration"})}),o.jsxs(Fs,{children:[o.jsx(Pt,{value:"all",children:"Any Duration"}),o.jsx(Pt,{value:"15-30",children:"15-30 min"}),o.jsx(Pt,{value:"30-45",children:"30-45 min"}),o.jsx(Pt,{value:"45+",children:"45+ min"})]})]}),o.jsxs(ae,{className:"gradient-bg",children:[o.jsx(NI,{className:"w-4 h-4 mr-2"}),"Filter"]})]})]})}),o.jsx("div",{className:"grid md:grid-cols-2 lg:grid-cols-3 gap-8",children:c.map(f=>{var h;return o.jsxs(ie,{className:"overflow-hidden card-hover",children:[o.jsx("img",{src:f.imageUrl||"https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=300",alt:f.name,className:"w-full h-48 object-cover"}),o.jsxs(le,{className:"p-6",children:[o.jsxs("div",{className:"flex items-center justify-between mb-4",children:[o.jsx("h3",{className:"text-xl font-bold",children:f.name}),o.jsx(Or,{className:u(f.difficulty),children:d(f.difficulty)})]}),o.jsx("p",{className:"text-muted-foreground mb-4 line-clamp-2",children:f.description}),o.jsx("div",{className:"flex items-center justify-between mb-4",children:o.jsxs("div",{className:"flex items-center space-x-4 text-sm text-muted-foreground",children:[o.jsxs("span",{className:"flex items-center",children:[o.jsx(Vc,{className:"w-4 h-4 mr-1"}),f.duration," min"]}),o.jsxs("span",{className:"flex items-center",children:[o.jsx(pl,{className:"w-4 h-4 mr-1"}),f.calories," cal"]}),o.jsxs("span",{className:"flex items-center",children:[o.jsx(Ro,{className:"w-4 h-4 mr-1"}),(h=f.equipment)!=null&&h.length?"Equipment":"Bodyweight"]})]})}),o.jsxs(ae,{className:"w-full gradient-bg",children:[o.jsx(Fu,{className:"w-4 h-4 mr-2"}),"Start Workout"]})]})]},f.id)})}),c.length===0&&o.jsxs("div",{className:"text-center py-12",children:[o.jsx("p",{className:"text-xl text-muted-foreground",children:"No workouts found matching your criteria."}),o.jsx(ae,{onClick:()=>{t(""),n("all"),i("all")},variant:"outline",className:"mt-4",children:"Clear Filters"})]}),c.length>0&&o.jsx("div",{className:"text-center mt-12",children:o.jsx(ae,{variant:"outline",className:"btn-secondary",children:"View All Workouts"})})]})})}function PF(){const[e,t]=m.useState(!1),[r,n]=m.useState(8),[s,i]=m.useState(92),[a,l]=m.useState(3);m.useEffect(()=>{if(!e)return;const d=setInterval(()=>{Math.random()>.7&&n(f=>Math.min(f+1,12)),i(f=>{const h=(Math.random()-.5)*4;return Math.max(85,Math.min(98,f+h))})},3e3);return()=>clearInterval(d)},[e]);const c=s>=90?"text-accent":s>=80?"text-primary":"text-orange-500",u=[{label:"Range of Motion",status:"Excellent",icon:mv,color:"text-accent bg-accent/10"},{label:"Tempo",status:"Perfect",icon:Vc,color:"text-primary bg-primary/10"},{label:"Balance",status:"Good",icon:$c,color:"text-secondary bg-secondary/10"}];return o.jsxs("section",{className:"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16",children:[o.jsxs("div",{className:"text-center mb-12",children:[o.jsx("h2",{className:"text-4xl font-bold mb-4",children:"Real-Time Form Analysis"}),o.jsx("p",{className:"text-xl text-muted-foreground",children:"AI-powered motion capture ensures perfect technique every rep"})]}),o.jsxs("div",{className:"grid lg:grid-cols-2 gap-12 items-center",children:[o.jsxs("div",{className:"relative",children:[o.jsxs("div",{className:"bg-background border rounded-2xl overflow-hidden aspect-video relative",children:[o.jsx("img",{src:"https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450",alt:"AI form analysis in action",className:"w-full h-full object-cover"}),o.jsxs("div",{className:"absolute inset-0 pointer-events-none",children:[o.jsx("div",{className:"absolute top-1/4 left-1/2 w-3 h-3 bg-accent rounded-full animate-pulse"}),o.jsx("div",{className:"absolute top-1/3 left-1/2 w-3 h-3 bg-accent rounded-full animate-pulse",style:{transform:"translate(-20px, 10px)"}}),o.jsx("div",{className:"absolute top-1/3 left-1/2 w-3 h-3 bg-accent rounded-full animate-pulse",style:{transform:"translate(20px, 10px)"}}),o.jsxs("div",{className:"absolute bottom-4 left-4 bg-background/90 backdrop-blur-sm rounded-xl p-4 border",children:[o.jsxs("div",{className:"flex items-center mb-2",children:[o.jsx(mv,{className:"w-4 h-4 text-accent mr-2"}),o.jsx("span",{className:"font-semibold",children:"Good Form!"})]}),o.jsx("p",{className:"text-sm text-muted-foreground",children:"Keep your core engaged and maintain straight back"})]}),o.jsxs("div",{className:"absolute top-4 right-4 bg-primary/90 backdrop-blur-sm rounded-xl p-4 text-center text-white",children:[o.jsx("div",{className:"text-3xl font-bold",children:r}),o.jsx("div",{className:"text-sm opacity-80",children:"REPS"})]})]})]}),o.jsxs("div",{className:"flex justify-center mt-6 space-x-4",children:[o.jsx(ae,{size:"icon",className:`w-12 h-12 rounded-full ${e?"bg-destructive":"bg-primary"}`,onClick:()=>t(!e),children:e?o.jsx(TI,{className:"w-5 h-5"}):o.jsx(Fu,{className:"w-5 h-5"})}),o.jsx(ae,{variant:"outline",size:"icon",className:"w-12 h-12 rounded-full",children:o.jsx(yI,{className:"w-5 h-5"})})]})]}),o.jsxs("div",{className:"space-y-6",children:[o.jsxs(ie,{children:[o.jsx(Le,{children:o.jsx(Fe,{className:"text-2xl",children:"Current Set Metrics"})}),o.jsxs(le,{children:[o.jsxs("div",{className:"grid grid-cols-2 gap-6 mb-6",children:[o.jsxs("div",{className:"text-center",children:[o.jsx("div",{className:"text-4xl font-bold text-primary mb-2",children:a}),o.jsx("div",{className:"text-muted-foreground",children:"Current Set"})]}),o.jsxs("div",{className:"text-center",children:[o.jsx("div",{className:"text-4xl font-bold text-accent mb-2",children:"12"}),o.jsx("div",{className:"text-muted-foreground",children:"Target Reps"})]})]}),o.jsxs("div",{className:"mb-6",children:[o.jsxs("div",{className:"flex justify-between items-center mb-2",children:[o.jsx("span",{className:"font-semibold",children:"Form Score"}),o.jsxs("span",{className:`text-2xl font-bold ${c}`,children:[Math.round(s),"%"]})]}),o.jsx(Nn,{value:s,className:"h-3"})]}),o.jsx("div",{className:"space-y-4",children:u.map((d,f)=>o.jsxs("div",{className:`flex items-center justify-between p-3 ${d.color} rounded-xl`,children:[o.jsxs("div",{className:"flex items-center",children:[o.jsx(d.icon,{className:"w-5 h-5 mr-3"}),o.jsx("span",{className:"font-medium",children:d.label})]}),o.jsx(Or,{variant:"secondary",children:d.status})]},f))})]})]}),o.jsxs(ie,{children:[o.jsx(Le,{children:o.jsx(Fe,{children:"Quick Actions"})}),o.jsx(le,{children:o.jsxs("div",{className:"grid grid-cols-2 gap-3",children:[o.jsxs(ae,{variant:"outline",className:"flex items-center",children:[o.jsx(Uh,{className:"w-4 h-4 mr-2"}),"Add Weight"]}),o.jsxs(ae,{variant:"outline",className:"flex items-center",children:[o.jsx(Vc,{className:"w-4 h-4 mr-2"}),"Rest Timer"]}),o.jsxs(ae,{variant:"outline",className:"flex items-center",children:[o.jsx(_I,{className:"w-4 h-4 mr-2"}),"Add Note"]}),o.jsxs(ae,{variant:"outline",className:"flex items-center",children:[o.jsx(bS,{className:"w-4 h-4 mr-2"}),"Share"]})]})})]})]})]})]})}function L_(){const e=[{icon:Ks,title:"Personal Record",description:"New bench press PR: 225 lbs",date:"2 days ago",color:"text-primary bg-primary/10"},{icon:pl,title:"Streak Master",description:"30-day workout streak achieved!",date:"1 week ago",color:"text-accent bg-accent/10"},{icon:jI,title:"Form Expert",description:"Perfect form score for 10 workouts",date:"2 weeks ago",color:"text-secondary bg-secondary/10"}],t=[{label:"Muscle Gained",value:"+3.2kg",color:"text-primary bg-primary/10"},{label:"Body Fat Lost",value:"-2.1%",color:"text-accent bg-accent/10"},{label:"Strength Increase",value:"+18%",color:"text-secondary bg-secondary/10"}];return o.jsx("section",{className:"bg-muted/30 py-16",children:o.jsxs("div",{className:"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8",children:[o.jsxs("div",{className:"text-center mb-12",children:[o.jsx("h2",{className:"text-4xl font-bold mb-4",children:"Track Your Evolution"}),o.jsx("p",{className:"text-xl text-muted-foreground",children:"Comprehensive analytics powered by machine learning predictions"})]}),o.jsxs("div",{className:"grid lg:grid-cols-3 gap-8",children:[o.jsxs(ie,{className:"lg:col-span-2",children:[o.jsxs(Le,{className:"flex flex-row items-center justify-between space-y-0 pb-2",children:[o.jsx(Fe,{className:"text-2xl",children:"Body Composition Trends"}),o.jsxs("div",{className:"flex space-x-2",children:[o.jsx(ae,{size:"sm",className:"bg-primary text-white",children:"1M"}),o.jsx(ae,{size:"sm",variant:"outline",children:"3M"}),o.jsx(ae,{size:"sm",variant:"outline",children:"1Y"})]})]}),o.jsxs(le,{children:[o.jsxs("div",{className:"h-64 relative mb-6",children:[o.jsxs("svg",{className:"w-full h-full",viewBox:"0 0 400 200",children:[o.jsx("defs",{children:o.jsx("pattern",{id:"grid",width:"40",height:"20",patternUnits:"userSpaceOnUse",children:o.jsx("path",{d:"M 40 0 L 0 0 0 20",fill:"none",stroke:"hsl(var(--border))",strokeWidth:"1"})})}),o.jsx("rect",{width:"100%",height:"100%",fill:"url(#grid)"}),o.jsx("polyline",{fill:"none",stroke:"hsl(var(--primary))",strokeWidth:"3",points:"20,160 80,155 140,150 200,145 260,140 320,135 380,130"}),o.jsx("polyline",{fill:"none",stroke:"hsl(var(--accent))",strokeWidth:"3",points:"20,120 80,125 140,120 200,115 260,110 320,105 380,100"}),o.jsx("circle",{cx:"380",cy:"130",r:"4",fill:"hsl(var(--primary))"}),o.jsx("circle",{cx:"380",cy:"100",r:"4",fill:"hsl(var(--accent))"})]}),o.jsxs("div",{className:"absolute bottom-0 left-0 flex space-x-6",children:[o.jsxs("div",{className:"flex items-center",children:[o.jsx("div",{className:"w-4 h-4 bg-primary rounded mr-2"}),o.jsx("span",{className:"text-sm text-muted-foreground",children:"Muscle Mass"})]}),o.jsxs("div",{className:"flex items-center",children:[o.jsx("div",{className:"w-4 h-4 bg-accent rounded mr-2"}),o.jsx("span",{className:"text-sm text-muted-foreground",children:"Body Fat %"})]})]})]}),o.jsx("div",{className:"grid grid-cols-3 gap-6",children:t.map((r,n)=>o.jsxs("div",{className:`text-center p-4 ${r.color} rounded-xl`,children:[o.jsx("div",{className:"text-2xl font-bold mb-1",children:r.value}),o.jsx("div",{className:"text-sm text-muted-foreground",children:r.label})]},n))})]})]}),o.jsxs(ie,{children:[o.jsx(Le,{children:o.jsx(Fe,{className:"text-2xl",children:"Recent Achievements"})}),o.jsxs(le,{className:"space-y-6",children:[e.map((r,n)=>o.jsxs("div",{className:"flex items-start space-x-4",children:[o.jsx("div",{className:`w-12 h-12 ${r.color} rounded-xl flex items-center justify-center flex-shrink-0`,children:o.jsx(r.icon,{className:"w-5 h-5"})}),o.jsxs("div",{className:"flex-1",children:[o.jsx("h4",{className:"font-semibold mb-1",children:r.title}),o.jsx("p",{className:"text-sm text-muted-foreground mb-2",children:r.description}),o.jsx("span",{className:"text-xs text-muted-foreground",children:r.date})]})]},n)),o.jsx(ae,{variant:"outline",className:"w-full mt-6",children:"View All Achievements"})]})]})]})]})})}var bp="Avatar",[RF,V6]=Sr(bp),[AF,F_]=RF(bp),V_=m.forwardRef((e,t)=>{const{__scopeAvatar:r,...n}=e,[s,i]=m.useState("idle");return o.jsx(AF,{scope:r,imageLoadingStatus:s,onImageLoadingStatusChange:i,children:o.jsx(ce.span,{...n,ref:t})})});V_.displayName=bp;var $_="AvatarImage",z_=m.forwardRef((e,t)=>{const{__scopeAvatar:r,src:n,onLoadingStatusChange:s=()=>{},...i}=e,a=F_($_,r),l=IF(n,i),c=jt(u=>{s(u),a.onImageLoadingStatusChange(u)});return ht(()=>{l!=="idle"&&c(l)},[l,c]),l==="loaded"?o.jsx(ce.img,{...i,ref:t,src:n}):null});z_.displayName=$_;var B_="AvatarFallback",U_=m.forwardRef((e,t)=>{const{__scopeAvatar:r,delayMs:n,...s}=e,i=F_(B_,r),[a,l]=m.useState(n===void 0);return m.useEffect(()=>{if(n!==void 0){const c=window.setTimeout(()=>l(!0),n);return()=>window.clearTimeout(c)}},[n]),a&&i.imageLoadingStatus!=="loaded"?o.jsx(ce.span,{...s,ref:t}):null});U_.displayName=B_;function $v(e,t){return e?t?(e.src!==t&&(e.src=t),e.complete&&e.naturalWidth>0?"loaded":"loading"):"error":"idle"}function IF(e,{referrerPolicy:t,crossOrigin:r}){const n=DF(),s=m.useRef(null),i=n?(s.current||(s.current=new window.Image),s.current):null,[a,l]=m.useState(()=>$v(i,e));return ht(()=>{l($v(i,e))},[i,e]),ht(()=>{const c=f=>()=>{l(f)};if(!i)return;const u=c("loaded"),d=c("error");return i.addEventListener("load",u),i.addEventListener("error",d),t&&(i.referrerPolicy=t),typeof r=="string"&&(i.crossOrigin=r),()=>{i.removeEventListener("load",u),i.removeEventListener("error",d)}},[i,r,t]),a}function MF(){return()=>{}}function DF(){return m.useSyncExternalStore(MF,()=>!0,()=>!1)}var W_=V_,H_=z_,q_=U_;const Zc=m.forwardRef(({className:e,...t},r)=>o.jsx(W_,{ref:r,className:me("relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full",e),...t}));Zc.displayName=W_.displayName;const OF=m.forwardRef(({className:e,...t},r)=>o.jsx(H_,{ref:r,className:me("aspect-square h-full w-full",e),...t}));OF.displayName=H_.displayName;const Xc=m.forwardRef(({className:e,...t},r)=>o.jsx(q_,{ref:r,className:me("flex h-full w-full items-center justify-center rounded-full bg-muted",e),...t}));Xc.displayName=q_.displayName;function Q_(){const[e,t]=m.useState(new Set),r=[{id:1,name:"January Cardio Blitz",description:"Complete 20 cardio sessions this month. Win exclusive NFT badges!",participants:12847,progress:16,target:20,timeLeft:"3 days left",color:"primary"},{id:2,name:"Mindful Movement",description:"Practice yoga or mobility work for 10 minutes daily for 30 days.",participants:8432,progress:7,target:30,timeLeft:"2 weeks left",color:"accent"}],n=[{id:1,user:{name:"Sarah Anderson",initials:"SA"},time:"2 hours ago",content:"Just crushed a new deadlift PR! 💪 The AI form analysis helped me perfect my technique. Thanks FitForge! #PersonalRecord #Strength",image:"https://images.unsplash.com/photo-1581009146145-b5ef050c2e1e?ixlib=rb-4.0.3&auto=format&fit=crop&w=500&h=300",likes:24,comments:8},{id:2,user:{name:"Mike Johnson",initials:"MJ"},time:"5 hours ago",content:"Week 4 of the mindful movement challenge complete! 🧘‍♂️ The progress tracking keeps me motivated every day.",likes:18,comments:5,challenge:{name:"Mindful Movement",completed:28,total:30,progress:93.3}}],s=i=>{t(a=>{const l=new Set(a);return l.has(i)?l.delete(i):l.add(i),l})};return o.jsxs("section",{className:"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16",children:[o.jsxs("div",{className:"text-center mb-12",children:[o.jsx("h2",{className:"text-4xl font-bold mb-4",children:"Join the FitForge Community"}),o.jsx("p",{className:"text-xl text-muted-foreground",children:"Connect, compete, and celebrate with fitness enthusiasts worldwide"})]}),o.jsxs("div",{className:"grid lg:grid-cols-2 gap-8",children:[o.jsxs(ie,{children:[o.jsxs(Le,{className:"flex flex-row items-center justify-between space-y-0 pb-2",children:[o.jsx(Fe,{className:"text-2xl",children:"Active Challenges"}),o.jsx(ae,{variant:"ghost",className:"text-primary font-semibold",children:"View All"})]}),o.jsx(le,{className:"space-y-6",children:r.map(i=>o.jsx(ie,{className:"border hover:shadow-md transition-all duration-300",children:o.jsxs(le,{className:"p-6",children:[o.jsxs("div",{className:"flex items-center justify-between mb-4",children:[o.jsx("h4",{className:"font-bold",children:i.name}),o.jsx(Or,{className:i.color==="primary"?"bg-primary/10 text-primary":i.color==="accent"?"bg-accent/10 text-accent":"bg-secondary/10 text-secondary",children:i.timeLeft})]}),o.jsx("p",{className:"text-sm text-muted-foreground mb-4",children:i.description}),o.jsxs("div",{className:"flex items-center justify-between mb-4",children:[o.jsxs("div",{className:"flex items-center",children:[o.jsx($c,{className:"w-4 h-4 mr-2 text-muted-foreground"}),o.jsx("span",{className:"text-2xl font-bold text-primary mr-1",children:i.participants.toLocaleString()}),o.jsx("span",{className:"text-sm text-muted-foreground",children:"participants"})]}),o.jsxs("div",{className:"text-right",children:[o.jsx("div",{className:"text-sm text-muted-foreground",children:"Your Progress"}),o.jsxs("div",{className:"text-lg font-bold",children:[i.progress,"/",i.target]})]})]}),o.jsx(Nn,{value:i.progress/i.target*100,className:"mb-4"}),o.jsx(ae,{className:`w-full ${i.progress>0?"gradient-bg":"btn-secondary"}`,children:i.progress>0?"Continue Challenge":"Join Challenge"})]})},i.id))})]}),o.jsxs(ie,{children:[o.jsxs(Le,{className:"flex flex-row items-center justify-between space-y-0 pb-2",children:[o.jsx(Fe,{className:"text-2xl",children:"Community Feed"}),o.jsx(ae,{variant:"ghost",className:"text-primary font-semibold",children:"Post Update"})]}),o.jsxs(le,{className:"space-y-6",children:[n.map(i=>o.jsxs("div",{className:"border-b border-border pb-6 last:border-b-0",children:[o.jsxs("div",{className:"flex items-center mb-4",children:[o.jsx(Zc,{className:"mr-3",children:o.jsx(Xc,{className:"bg-primary text-white font-semibold",children:i.user.initials})}),o.jsxs("div",{children:[o.jsx("h4",{className:"font-semibold",children:i.user.name}),o.jsx("span",{className:"text-sm text-muted-foreground",children:i.time})]})]}),o.jsx("p",{className:"text-foreground mb-4",children:i.content}),i.image&&o.jsx("img",{src:i.image,alt:"Workout achievement",className:"w-full h-48 object-cover rounded-xl mb-4"}),i.challenge&&o.jsx("div",{className:"bg-gradient-to-r from-accent/10 to-secondary/10 rounded-xl p-4 mb-4",children:o.jsxs("div",{className:"flex items-center justify-between",children:[o.jsxs("div",{children:[o.jsxs("div",{className:"text-2xl font-bold text-accent",children:[i.challenge.completed,"/",i.challenge.total]}),o.jsx("div",{className:"text-sm text-muted-foreground",children:"Days Completed"})]}),o.jsx("div",{className:"w-16 h-16",children:o.jsxs("svg",{className:"w-16 h-16 progress-ring",children:[o.jsx("circle",{cx:"32",cy:"32",r:"28",stroke:"hsl(var(--accent) / 0.3)",strokeWidth:"4",fill:"none"}),o.jsx("circle",{cx:"32",cy:"32",r:"28",stroke:"hsl(var(--accent))",strokeWidth:"4",fill:"none",strokeDasharray:"175.9",strokeDashoffset:175.9*(1-i.challenge.progress/100),strokeLinecap:"round"})]})})]})}),o.jsxs("div",{className:"flex items-center space-x-6 text-sm text-muted-foreground",children:[o.jsxs(ae,{variant:"ghost",size:"sm",onClick:()=>s(i.id),className:`p-0 h-auto ${e.has(i.id)?"text-red-500":""}`,children:[o.jsx(wS,{className:`w-4 h-4 mr-1 ${e.has(i.id)?"fill-current":""}`}),i.likes+(e.has(i.id)?1:0)]}),o.jsxs(ae,{variant:"ghost",size:"sm",className:"p-0 h-auto",children:[o.jsx(mm,{className:"w-4 h-4 mr-1"}),i.comments]}),o.jsxs(ae,{variant:"ghost",size:"sm",className:"p-0 h-auto",children:[o.jsx(bS,{className:"w-4 h-4 mr-1"}),"Share"]})]})]},i.id)),o.jsx(ae,{variant:"outline",className:"w-full",children:"Load More Posts"})]})]})]})]})}function LF(){return o.jsx("footer",{className:"bg-dark text-white py-16",children:o.jsxs("div",{className:"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8",children:[o.jsxs("div",{className:"grid md:grid-cols-2 lg:grid-cols-4 gap-8",children:[o.jsxs("div",{children:[o.jsxs("div",{className:"flex items-center space-x-2 mb-6",children:[o.jsx("div",{className:"w-8 h-8 gradient-bg rounded-lg flex items-center justify-center",children:o.jsx(Ro,{className:"w-4 h-4 text-white"})}),o.jsx("span",{className:"text-xl font-bold",children:"FitForge"})]}),o.jsx("p",{className:"text-gray-400 mb-6",children:"The ultimate AI-powered fitness ecosystem that revolutionizes how you train, compete, and achieve your goals."}),o.jsxs("div",{className:"flex space-x-4",children:[o.jsx(ae,{variant:"ghost",size:"icon",className:"w-10 h-10 bg-gray-800 hover:bg-primary",children:o.jsx(MI,{className:"w-4 h-4"})}),o.jsx(ae,{variant:"ghost",size:"icon",className:"w-10 h-10 bg-gray-800 hover:bg-primary",children:o.jsx(SI,{className:"w-4 h-4"})}),o.jsx(ae,{variant:"ghost",size:"icon",className:"w-10 h-10 bg-gray-800 hover:bg-primary",children:o.jsx(LI,{className:"w-4 h-4"})})]})]}),o.jsxs("div",{children:[o.jsx("h4",{className:"font-bold text-lg mb-6",children:"Platform"}),o.jsxs("ul",{className:"space-y-3 text-gray-400",children:[o.jsx("li",{children:o.jsx(rt,{href:"/workouts",className:"hover:text-white transition-colors duration-200",children:"Workouts"})}),o.jsx("li",{children:o.jsx(rt,{href:"/nutrition",className:"hover:text-white transition-colors duration-200",children:"Nutrition"})}),o.jsx("li",{children:o.jsx(rt,{href:"/progress",className:"hover:text-white transition-colors duration-200",children:"Progress Tracking"})}),o.jsx("li",{children:o.jsx(rt,{href:"/ai-analysis",className:"hover:text-white transition-colors duration-200",children:"AI Analysis"})}),o.jsx("li",{children:o.jsx(rt,{href:"/community",className:"hover:text-white transition-colors duration-200",children:"Community"})})]})]}),o.jsxs("div",{children:[o.jsx("h4",{className:"font-bold text-lg mb-6",children:"Support"}),o.jsxs("ul",{className:"space-y-3 text-gray-400",children:[o.jsx("li",{children:o.jsx(rt,{href:"/help",className:"hover:text-white transition-colors duration-200",children:"Help Center"})}),o.jsx("li",{children:o.jsx(rt,{href:"/contact",className:"hover:text-white transition-colors duration-200",children:"Contact Us"})}),o.jsx("li",{children:o.jsx(rt,{href:"/privacy",className:"hover:text-white transition-colors duration-200",children:"Privacy Policy"})}),o.jsx("li",{children:o.jsx(rt,{href:"/terms",className:"hover:text-white transition-colors duration-200",children:"Terms of Service"})}),o.jsx("li",{children:o.jsx(rt,{href:"/api",className:"hover:text-white transition-colors duration-200",children:"API Documentation"})})]})]}),o.jsxs("div",{children:[o.jsx("h4",{className:"font-bold text-lg mb-6",children:"Stay Updated"}),o.jsx("p",{className:"text-gray-400 mb-4",children:"Get the latest features and fitness tips delivered to your inbox."}),o.jsxs("div",{className:"flex",children:[o.jsx(Qt,{type:"email",placeholder:"Enter your email",className:"flex-1 bg-gray-800 border-gray-700 rounded-l-lg rounded-r-none focus:ring-primary"}),o.jsx(ae,{className:"gradient-bg rounded-l-none rounded-r-lg px-4",children:o.jsx(hI,{className:"w-4 h-4"})})]})]})]}),o.jsx("div",{className:"border-t border-gray-800 mt-12 pt-8 text-center text-gray-400",children:o.jsx("p",{children:"© 2024 FitForge. All rights reserved. Built with passion for fitness excellence."})})]})})}function FF(){return o.jsxs("div",{className:"min-h-screen",children:[o.jsx(EF,{}),o.jsx(D_,{}),o.jsx(O_,{}),o.jsx(PF,{}),o.jsx(L_,{}),o.jsx(Q_,{}),o.jsx(LF,{})]})}var Np="Tabs",[VF,$6]=Sr(Np,[Qu]),G_=Qu(),[$F,Sp]=VF(Np),K_=m.forwardRef((e,t)=>{const{__scopeTabs:r,value:n,onValueChange:s,defaultValue:i,orientation:a="horizontal",dir:l,activationMode:c="automatic",...u}=e,d=Wu(l),[f,h]=si({prop:n,onChange:s,defaultProp:i});return o.jsx($F,{scope:r,baseId:tn(),value:f,onValueChange:h,orientation:a,dir:d,activationMode:c,children:o.jsx(ce.div,{dir:d,"data-orientation":a,...u,ref:t})})});K_.displayName=Np;var Z_="TabsList",X_=m.forwardRef((e,t)=>{const{__scopeTabs:r,loop:n=!0,...s}=e,i=Sp(Z_,r),a=G_(r);return o.jsx(xj,{asChild:!0,...a,orientation:i.orientation,dir:i.dir,loop:n,children:o.jsx(ce.div,{role:"tablist","aria-orientation":i.orientation,...s,ref:t})})});X_.displayName=Z_;var Y_="TabsTrigger",J_=m.forwardRef((e,t)=>{const{__scopeTabs:r,value:n,disabled:s=!1,...i}=e,a=Sp(Y_,r),l=G_(r),c=rk(a.baseId,n),u=nk(a.baseId,n),d=n===a.value;return o.jsx(wj,{asChild:!0,...l,focusable:!s,active:d,children:o.jsx(ce.button,{type:"button",role:"tab","aria-selected":d,"aria-controls":u,"data-state":d?"active":"inactive","data-disabled":s?"":void 0,disabled:s,id:c,...i,ref:t,onMouseDown:K(e.onMouseDown,f=>{!s&&f.button===0&&f.ctrlKey===!1?a.onValueChange(n):f.preventDefault()}),onKeyDown:K(e.onKeyDown,f=>{[" ","Enter"].includes(f.key)&&a.onValueChange(n)}),onFocus:K(e.onFocus,()=>{const f=a.activationMode!=="manual";!d&&!s&&f&&a.onValueChange(n)})})})});J_.displayName=Y_;var ek="TabsContent",tk=m.forwardRef((e,t)=>{const{__scopeTabs:r,value:n,forceMount:s,children:i,...a}=e,l=Sp(ek,r),c=rk(l.baseId,n),u=nk(l.baseId,n),d=n===l.value,f=m.useRef(d);return m.useEffect(()=>{const h=requestAnimationFrame(()=>f.current=!1);return()=>cancelAnimationFrame(h)},[]),o.jsx(Br,{present:s||d,children:({present:h})=>o.jsx(ce.div,{"data-state":d?"active":"inactive","data-orientation":l.orientation,role:"tabpanel","aria-labelledby":c,hidden:!h,id:u,tabIndex:0,...a,ref:t,style:{...e.style,animationDuration:f.current?"0s":void 0},children:h&&i})})});tk.displayName=ek;function rk(e,t){return`${e}-trigger-${t}`}function nk(e,t){return`${e}-content-${t}`}var zF=K_,sk=X_,ik=J_,ok=tk;const BF=zF,ak=m.forwardRef(({className:e,...t},r)=>o.jsx(sk,{ref:r,className:me("inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground",e),...t}));ak.displayName=sk.displayName;const Pm=m.forwardRef(({className:e,...t},r)=>o.jsx(ik,{ref:r,className:me("inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm",e),...t}));Pm.displayName=ik.displayName;const Rm=m.forwardRef(({className:e,...t},r)=>o.jsx(ok,{ref:r,className:me("mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2",e),...t}));Rm.displayName=ok.displayName;var bl=e=>e.type==="checkbox",Vs=e=>e instanceof Date,Vt=e=>e==null;const lk=e=>typeof e=="object";var ot=e=>!Vt(e)&&!Array.isArray(e)&&lk(e)&&!Vs(e),ck=e=>ot(e)&&e.target?bl(e.target)?e.target.checked:e.target.value:e,UF=e=>e.substring(0,e.search(/\.\d+(\.|$)/))||e,uk=(e,t)=>e.has(UF(t)),WF=e=>{const t=e.constructor&&e.constructor.prototype;return ot(t)&&t.hasOwnProperty("isPrototypeOf")},jp=typeof window<"u"&&typeof window.HTMLElement<"u"&&typeof document<"u";function yt(e){let t;const r=Array.isArray(e),n=typeof FileList<"u"?e instanceof FileList:!1;if(e instanceof Date)t=new Date(e);else if(e instanceof Set)t=new Set(e);else if(!(jp&&(e instanceof Blob||n))&&(r||ot(e)))if(t=r?[]:{},!r&&!WF(e))t=e;else for(const s in e)e.hasOwnProperty(s)&&(t[s]=yt(e[s]));else return e;return t}var td=e=>Array.isArray(e)?e.filter(Boolean):[],st=e=>e===void 0,q=(e,t,r)=>{if(!t||!ot(e))return r;const n=td(t.split(/[,[\].]+?/)).reduce((s,i)=>Vt(s)?s:s[i],e);return st(n)||n===e?st(e[t])?r:e[t]:n},nr=e=>typeof e=="boolean",Cp=e=>/^\w*$/.test(e),dk=e=>td(e.replace(/["|']|\]/g,"").split(/\.|\[/)),Me=(e,t,r)=>{let n=-1;const s=Cp(t)?[t]:dk(t),i=s.length,a=i-1;for(;++n<i;){const l=s[n];let c=r;if(n!==a){const u=e[l];c=ot(u)||Array.isArray(u)?u:isNaN(+s[n+1])?{}:[]}if(l==="__proto__"||l==="constructor"||l==="prototype")return;e[l]=c,e=e[l]}};const Yc={BLUR:"blur",FOCUS_OUT:"focusout",CHANGE:"change"},Rr={onBlur:"onBlur",onChange:"onChange",onSubmit:"onSubmit",onTouched:"onTouched",all:"all"},dn={max:"max",min:"min",maxLength:"maxLength",minLength:"minLength",pattern:"pattern",required:"required",validate:"validate"},fk=pe.createContext(null),rd=()=>pe.useContext(fk),HF=e=>{const{children:t,...r}=e;return pe.createElement(fk.Provider,{value:r},t)};var mk=(e,t,r,n=!0)=>{const s={defaultValues:t._defaultValues};for(const i in e)Object.defineProperty(s,i,{get:()=>{const a=i;return t._proxyFormState[a]!==Rr.all&&(t._proxyFormState[a]=!n||Rr.all),r&&(r[a]=!0),e[a]}});return s};function qF(e){const t=rd(),{control:r=t.control,disabled:n,name:s,exact:i}=e||{},[a,l]=pe.useState(r._formState),c=pe.useRef({isDirty:!1,isLoading:!1,dirtyFields:!1,touchedFields:!1,validatingFields:!1,isValidating:!1,isValid:!1,errors:!1}),u=pe.useRef(s);return u.current=s,pe.useEffect(()=>r._subscribe({name:u.current,formState:c.current,exact:i,callback:d=>{!n&&l({...r._formState,...d})}}),[r,n,i]),pe.useEffect(()=>{c.current.isValid&&r._setValid(!0)},[r]),pe.useMemo(()=>mk(a,r,c.current,!1),[a,r])}var Yr=e=>typeof e=="string",hk=(e,t,r,n,s)=>Yr(e)?(n&&t.watch.add(e),q(r,e,s)):Array.isArray(e)?e.map(i=>(n&&t.watch.add(i),q(r,i))):(n&&(t.watchAll=!0),r);function QF(e){const t=rd(),{control:r=t.control,name:n,defaultValue:s,disabled:i,exact:a}=e||{},l=pe.useRef(n),c=pe.useRef(s);l.current=n,pe.useEffect(()=>r._subscribe({name:l.current,formState:{values:!0},exact:a,callback:f=>!i&&d(hk(l.current,r._names,f.values||r._formValues,!1,c.current))}),[r,i,a]);const[u,d]=pe.useState(r._getWatch(n,s));return pe.useEffect(()=>r._removeUnmounted()),u}function GF(e){const t=rd(),{name:r,disabled:n,control:s=t.control,shouldUnregister:i}=e,a=uk(s._names.array,r),l=QF({control:s,name:r,defaultValue:q(s._formValues,r,q(s._defaultValues,r,e.defaultValue)),exact:!0}),c=qF({control:s,name:r,exact:!0}),u=pe.useRef(e),d=pe.useRef(s.register(r,{...e.rules,value:l,...nr(e.disabled)?{disabled:e.disabled}:{}})),f=pe.useMemo(()=>Object.defineProperties({},{invalid:{enumerable:!0,get:()=>!!q(c.errors,r)},isDirty:{enumerable:!0,get:()=>!!q(c.dirtyFields,r)},isTouched:{enumerable:!0,get:()=>!!q(c.touchedFields,r)},isValidating:{enumerable:!0,get:()=>!!q(c.validatingFields,r)},error:{enumerable:!0,get:()=>q(c.errors,r)}}),[c,r]),h=pe.useCallback(b=>d.current.onChange({target:{value:ck(b),name:r},type:Yc.CHANGE}),[r]),x=pe.useCallback(()=>d.current.onBlur({target:{value:q(s._formValues,r),name:r},type:Yc.BLUR}),[r,s._formValues]),w=pe.useCallback(b=>{const v=q(s._fields,r);v&&b&&(v._f.ref={focus:()=>b.focus(),select:()=>b.select(),setCustomValidity:p=>b.setCustomValidity(p),reportValidity:()=>b.reportValidity()})},[s._fields,r]),g=pe.useMemo(()=>({name:r,value:l,...nr(n)||c.disabled?{disabled:c.disabled||n}:{},onChange:h,onBlur:x,ref:w}),[r,n,c.disabled,h,x,w,l]);return pe.useEffect(()=>{const b=s._options.shouldUnregister||i;s.register(r,{...u.current.rules,...nr(u.current.disabled)?{disabled:u.current.disabled}:{}});const v=(p,y)=>{const N=q(s._fields,p);N&&N._f&&(N._f.mount=y)};if(v(r,!0),b){const p=yt(q(s._options.defaultValues,r));Me(s._defaultValues,r,p),st(q(s._formValues,r))&&Me(s._formValues,r,p)}return!a&&s.register(r),()=>{(a?b&&!s._state.action:b)?s.unregister(r):v(r,!1)}},[r,s,a,i]),pe.useEffect(()=>{s._setDisabledField({disabled:n,name:r})},[n,r,s]),pe.useMemo(()=>({field:g,formState:c,fieldState:f}),[g,c,f])}const KF=e=>e.render(GF(e));var pk=(e,t,r,n,s)=>t?{...r[e],types:{...r[e]&&r[e].types?r[e].types:{},[n]:s||!0}}:{},pa=e=>Array.isArray(e)?e:[e],zv=()=>{let e=[];return{get observers(){return e},next:s=>{for(const i of e)i.next&&i.next(s)},subscribe:s=>(e.push(s),{unsubscribe:()=>{e=e.filter(i=>i!==s)}}),unsubscribe:()=>{e=[]}}},Am=e=>Vt(e)||!lk(e);function Gn(e,t){if(Am(e)||Am(t))return e===t;if(Vs(e)&&Vs(t))return e.getTime()===t.getTime();const r=Object.keys(e),n=Object.keys(t);if(r.length!==n.length)return!1;for(const s of r){const i=e[s];if(!n.includes(s))return!1;if(s!=="ref"){const a=t[s];if(Vs(i)&&Vs(a)||ot(i)&&ot(a)||Array.isArray(i)&&Array.isArray(a)?!Gn(i,a):i!==a)return!1}}return!0}var Lt=e=>ot(e)&&!Object.keys(e).length,_p=e=>e.type==="file",Ar=e=>typeof e=="function",Jc=e=>{if(!jp)return!1;const t=e?e.ownerDocument:0;return e instanceof(t&&t.defaultView?t.defaultView.HTMLElement:HTMLElement)},gk=e=>e.type==="select-multiple",kp=e=>e.type==="radio",ZF=e=>kp(e)||bl(e),Yd=e=>Jc(e)&&e.isConnected;function XF(e,t){const r=t.slice(0,-1).length;let n=0;for(;n<r;)e=st(e)?n++:e[t[n++]];return e}function YF(e){for(const t in e)if(e.hasOwnProperty(t)&&!st(e[t]))return!1;return!0}function ut(e,t){const r=Array.isArray(t)?t:Cp(t)?[t]:dk(t),n=r.length===1?e:XF(e,r),s=r.length-1,i=r[s];return n&&delete n[i],s!==0&&(ot(n)&&Lt(n)||Array.isArray(n)&&YF(n))&&ut(e,r.slice(0,-1)),e}var vk=e=>{for(const t in e)if(Ar(e[t]))return!0;return!1};function eu(e,t={}){const r=Array.isArray(e);if(ot(e)||r)for(const n in e)Array.isArray(e[n])||ot(e[n])&&!vk(e[n])?(t[n]=Array.isArray(e[n])?[]:{},eu(e[n],t[n])):Vt(e[n])||(t[n]=!0);return t}function yk(e,t,r){const n=Array.isArray(e);if(ot(e)||n)for(const s in e)Array.isArray(e[s])||ot(e[s])&&!vk(e[s])?st(t)||Am(r[s])?r[s]=Array.isArray(e[s])?eu(e[s],[]):{...eu(e[s])}:yk(e[s],Vt(t)?{}:t[s],r[s]):r[s]=!Gn(e[s],t[s]);return r}var Go=(e,t)=>yk(e,t,eu(t));const Bv={value:!1,isValid:!1},Uv={value:!0,isValid:!0};var xk=e=>{if(Array.isArray(e)){if(e.length>1){const t=e.filter(r=>r&&r.checked&&!r.disabled).map(r=>r.value);return{value:t,isValid:!!t.length}}return e[0].checked&&!e[0].disabled?e[0].attributes&&!st(e[0].attributes.value)?st(e[0].value)||e[0].value===""?Uv:{value:e[0].value,isValid:!0}:Uv:Bv}return Bv},wk=(e,{valueAsNumber:t,valueAsDate:r,setValueAs:n})=>st(e)?e:t?e===""?NaN:e&&+e:r&&Yr(e)?new Date(e):n?n(e):e;const Wv={isValid:!1,value:null};var bk=e=>Array.isArray(e)?e.reduce((t,r)=>r&&r.checked&&!r.disabled?{isValid:!0,value:r.value}:t,Wv):Wv;function Hv(e){const t=e.ref;return _p(t)?t.files:kp(t)?bk(e.refs).value:gk(t)?[...t.selectedOptions].map(({value:r})=>r):bl(t)?xk(e.refs).value:wk(st(t.value)?e.ref.value:t.value,e)}var JF=(e,t,r,n)=>{const s={};for(const i of e){const a=q(t,i);a&&Me(s,i,a._f)}return{criteriaMode:r,names:[...e],fields:s,shouldUseNativeValidation:n}},tu=e=>e instanceof RegExp,Ko=e=>st(e)?e:tu(e)?e.source:ot(e)?tu(e.value)?e.value.source:e.value:e,qv=e=>({isOnSubmit:!e||e===Rr.onSubmit,isOnBlur:e===Rr.onBlur,isOnChange:e===Rr.onChange,isOnAll:e===Rr.all,isOnTouch:e===Rr.onTouched});const Qv="AsyncFunction";var e3=e=>!!e&&!!e.validate&&!!(Ar(e.validate)&&e.validate.constructor.name===Qv||ot(e.validate)&&Object.values(e.validate).find(t=>t.constructor.name===Qv)),t3=e=>e.mount&&(e.required||e.min||e.max||e.maxLength||e.minLength||e.pattern||e.validate),Gv=(e,t,r)=>!r&&(t.watchAll||t.watch.has(e)||[...t.watch].some(n=>e.startsWith(n)&&/^\.\w+/.test(e.slice(n.length))));const ga=(e,t,r,n)=>{for(const s of r||Object.keys(e)){const i=q(e,s);if(i){const{_f:a,...l}=i;if(a){if(a.refs&&a.refs[0]&&t(a.refs[0],s)&&!n)return!0;if(a.ref&&t(a.ref,a.name)&&!n)return!0;if(ga(l,t))break}else if(ot(l)&&ga(l,t))break}}};function Kv(e,t,r){const n=q(e,r);if(n||Cp(r))return{error:n,name:r};const s=r.split(".");for(;s.length;){const i=s.join("."),a=q(t,i),l=q(e,i);if(a&&!Array.isArray(a)&&r!==i)return{name:r};if(l&&l.type)return{name:i,error:l};s.pop()}return{name:r}}var r3=(e,t,r,n)=>{r(e);const{name:s,...i}=e;return Lt(i)||Object.keys(i).length>=Object.keys(t).length||Object.keys(i).find(a=>t[a]===(!n||Rr.all))},n3=(e,t,r)=>!e||!t||e===t||pa(e).some(n=>n&&(r?n===t:n.startsWith(t)||t.startsWith(n))),s3=(e,t,r,n,s)=>s.isOnAll?!1:!r&&s.isOnTouch?!(t||e):(r?n.isOnBlur:s.isOnBlur)?!e:(r?n.isOnChange:s.isOnChange)?e:!0,i3=(e,t)=>!td(q(e,t)).length&&ut(e,t),o3=(e,t,r)=>{const n=pa(q(e,r));return Me(n,"root",t[r]),Me(e,r,n),e},mc=e=>Yr(e);function Zv(e,t,r="validate"){if(mc(e)||Array.isArray(e)&&e.every(mc)||nr(e)&&!e)return{type:r,message:mc(e)?e:"",ref:t}}var Ni=e=>ot(e)&&!tu(e)?e:{value:e,message:""},Xv=async(e,t,r,n,s,i)=>{const{ref:a,refs:l,required:c,maxLength:u,minLength:d,min:f,max:h,pattern:x,validate:w,name:g,valueAsNumber:b,mount:v}=e._f,p=q(r,g);if(!v||t.has(g))return{};const y=l?l[0]:a,N=O=>{s&&y.reportValidity&&(y.setCustomValidity(nr(O)?"":O||""),y.reportValidity())},j={},E=kp(a),T=bl(a),P=E||T,C=(b||_p(a))&&st(a.value)&&st(p)||Jc(a)&&a.value===""||p===""||Array.isArray(p)&&!p.length,A=pk.bind(null,g,n,j),z=(O,U,F,re=dn.maxLength,Q=dn.minLength)=>{const oe=O?U:F;j[g]={type:O?re:Q,message:oe,ref:a,...A(O?re:Q,oe)}};if(i?!Array.isArray(p)||!p.length:c&&(!P&&(C||Vt(p))||nr(p)&&!p||T&&!xk(l).isValid||E&&!bk(l).isValid)){const{value:O,message:U}=mc(c)?{value:!!c,message:c}:Ni(c);if(O&&(j[g]={type:dn.required,message:U,ref:y,...A(dn.required,U)},!n))return N(U),j}if(!C&&(!Vt(f)||!Vt(h))){let O,U;const F=Ni(h),re=Ni(f);if(!Vt(p)&&!isNaN(p)){const Q=a.valueAsNumber||p&&+p;Vt(F.value)||(O=Q>F.value),Vt(re.value)||(U=Q<re.value)}else{const Q=a.valueAsDate||new Date(p),oe=W=>new Date(new Date().toDateString()+" "+W),I=a.type=="time",M=a.type=="week";Yr(F.value)&&p&&(O=I?oe(p)>oe(F.value):M?p>F.value:Q>new Date(F.value)),Yr(re.value)&&p&&(U=I?oe(p)<oe(re.value):M?p<re.value:Q<new Date(re.value))}if((O||U)&&(z(!!O,F.message,re.message,dn.max,dn.min),!n))return N(j[g].message),j}if((u||d)&&!C&&(Yr(p)||i&&Array.isArray(p))){const O=Ni(u),U=Ni(d),F=!Vt(O.value)&&p.length>+O.value,re=!Vt(U.value)&&p.length<+U.value;if((F||re)&&(z(F,O.message,U.message),!n))return N(j[g].message),j}if(x&&!C&&Yr(p)){const{value:O,message:U}=Ni(x);if(tu(O)&&!p.match(O)&&(j[g]={type:dn.pattern,message:U,ref:a,...A(dn.pattern,U)},!n))return N(U),j}if(w){if(Ar(w)){const O=await w(p,r),U=Zv(O,y);if(U&&(j[g]={...U,...A(dn.validate,U.message)},!n))return N(U.message),j}else if(ot(w)){let O={};for(const U in w){if(!Lt(O)&&!n)break;const F=Zv(await w[U](p,r),y,U);F&&(O={...F,...A(U,F.message)},N(F.message),n&&(j[g]=O))}if(!Lt(O)&&(j[g]={ref:y,...O},!n))return j}}return N(!0),j};const a3={mode:Rr.onSubmit,reValidateMode:Rr.onChange,shouldFocusError:!0};function l3(e={}){let t={...a3,...e},r={submitCount:0,isDirty:!1,isLoading:Ar(t.defaultValues),isValidating:!1,isSubmitted:!1,isSubmitting:!1,isSubmitSuccessful:!1,isValid:!1,touchedFields:{},dirtyFields:{},validatingFields:{},errors:t.errors||{},disabled:t.disabled||!1};const n={};let s=ot(t.defaultValues)||ot(t.values)?yt(t.values||t.defaultValues)||{}:{},i=t.shouldUnregister?{}:yt(s),a={action:!1,mount:!1,watch:!1},l={mount:new Set,disabled:new Set,unMount:new Set,array:new Set,watch:new Set},c,u=0;const d={isDirty:!1,dirtyFields:!1,validatingFields:!1,touchedFields:!1,isValidating:!1,isValid:!1,errors:!1};let f={...d};const h={array:zv(),state:zv()},x=qv(t.mode),w=qv(t.reValidateMode),g=t.criteriaMode===Rr.all,b=S=>R=>{clearTimeout(u),u=setTimeout(S,R)},v=async S=>{if(!t.disabled&&(d.isValid||f.isValid||S)){const R=t.resolver?Lt((await C()).errors):await z(n,!0);R!==r.isValid&&h.state.next({isValid:R})}},p=(S,R)=>{!t.disabled&&(d.isValidating||d.validatingFields||f.isValidating||f.validatingFields)&&((S||Array.from(l.mount)).forEach(D=>{D&&(R?Me(r.validatingFields,D,R):ut(r.validatingFields,D))}),h.state.next({validatingFields:r.validatingFields,isValidating:!Lt(r.validatingFields)}))},y=(S,R=[],D,X,H=!0,B=!0)=>{if(X&&D&&!t.disabled){if(a.action=!0,B&&Array.isArray(q(n,S))){const ee=D(q(n,S),X.argA,X.argB);H&&Me(n,S,ee)}if(B&&Array.isArray(q(r.errors,S))){const ee=D(q(r.errors,S),X.argA,X.argB);H&&Me(r.errors,S,ee),i3(r.errors,S)}if((d.touchedFields||f.touchedFields)&&B&&Array.isArray(q(r.touchedFields,S))){const ee=D(q(r.touchedFields,S),X.argA,X.argB);H&&Me(r.touchedFields,S,ee)}(d.dirtyFields||f.dirtyFields)&&(r.dirtyFields=Go(s,i)),h.state.next({name:S,isDirty:U(S,R),dirtyFields:r.dirtyFields,errors:r.errors,isValid:r.isValid})}else Me(i,S,R)},N=(S,R)=>{Me(r.errors,S,R),h.state.next({errors:r.errors})},j=S=>{r.errors=S,h.state.next({errors:r.errors,isValid:!1})},E=(S,R,D,X)=>{const H=q(n,S);if(H){const B=q(i,S,st(D)?q(s,S):D);st(B)||X&&X.defaultChecked||R?Me(i,S,R?B:Hv(H._f)):Q(S,B),a.mount&&v()}},T=(S,R,D,X,H)=>{let B=!1,ee=!1;const Ee={name:S};if(!t.disabled){if(!D||X){(d.isDirty||f.isDirty)&&(ee=r.isDirty,r.isDirty=Ee.isDirty=U(),B=ee!==Ee.isDirty);const at=Gn(q(s,S),R);ee=!!q(r.dirtyFields,S),at?ut(r.dirtyFields,S):Me(r.dirtyFields,S,!0),Ee.dirtyFields=r.dirtyFields,B=B||(d.dirtyFields||f.dirtyFields)&&ee!==!at}if(D){const at=q(r.touchedFields,S);at||(Me(r.touchedFields,S,D),Ee.touchedFields=r.touchedFields,B=B||(d.touchedFields||f.touchedFields)&&at!==D)}B&&H&&h.state.next(Ee)}return B?Ee:{}},P=(S,R,D,X)=>{const H=q(r.errors,S),B=(d.isValid||f.isValid)&&nr(R)&&r.isValid!==R;if(t.delayError&&D?(c=b(()=>N(S,D)),c(t.delayError)):(clearTimeout(u),c=null,D?Me(r.errors,S,D):ut(r.errors,S)),(D?!Gn(H,D):H)||!Lt(X)||B){const ee={...X,...B&&nr(R)?{isValid:R}:{},errors:r.errors,name:S};r={...r,...ee},h.state.next(ee)}},C=async S=>{p(S,!0);const R=await t.resolver(i,t.context,JF(S||l.mount,n,t.criteriaMode,t.shouldUseNativeValidation));return p(S),R},A=async S=>{const{errors:R}=await C(S);if(S)for(const D of S){const X=q(R,D);X?Me(r.errors,D,X):ut(r.errors,D)}else r.errors=R;return R},z=async(S,R,D={valid:!0})=>{for(const X in S){const H=S[X];if(H){const{_f:B,...ee}=H;if(B){const Ee=l.array.has(B.name),at=H._f&&e3(H._f);at&&d.validatingFields&&p([X],!0);const _t=await Xv(H,l.disabled,i,g,t.shouldUseNativeValidation&&!R,Ee);if(at&&d.validatingFields&&p([X]),_t[B.name]&&(D.valid=!1,R))break;!R&&(q(_t,B.name)?Ee?o3(r.errors,_t,B.name):Me(r.errors,B.name,_t[B.name]):ut(r.errors,B.name))}!Lt(ee)&&await z(ee,R,D)}}return D.valid},O=()=>{for(const S of l.unMount){const R=q(n,S);R&&(R._f.refs?R._f.refs.every(D=>!Yd(D)):!Yd(R._f.ref))&&Ie(S)}l.unMount=new Set},U=(S,R)=>!t.disabled&&(S&&R&&Me(i,S,R),!Gn(xe(),s)),F=(S,R,D)=>hk(S,l,{...a.mount?i:st(R)?s:Yr(S)?{[S]:R}:R},D,R),re=S=>td(q(a.mount?i:s,S,t.shouldUnregister?q(s,S,[]):[])),Q=(S,R,D={})=>{const X=q(n,S);let H=R;if(X){const B=X._f;B&&(!B.disabled&&Me(i,S,wk(R,B)),H=Jc(B.ref)&&Vt(R)?"":R,gk(B.ref)?[...B.ref.options].forEach(ee=>ee.selected=H.includes(ee.value)):B.refs?bl(B.ref)?B.refs.length>1?B.refs.forEach(ee=>(!ee.defaultChecked||!ee.disabled)&&(ee.checked=Array.isArray(H)?!!H.find(Ee=>Ee===ee.value):H===ee.value)):B.refs[0]&&(B.refs[0].checked=!!H):B.refs.forEach(ee=>ee.checked=ee.value===H):_p(B.ref)?B.ref.value="":(B.ref.value=H,B.ref.type||h.state.next({name:S,values:yt(i)})))}(D.shouldDirty||D.shouldTouch)&&T(S,H,D.shouldTouch,D.shouldDirty,!0),D.shouldValidate&&se(S)},oe=(S,R,D)=>{for(const X in R){const H=R[X],B=`${S}.${X}`,ee=q(n,B);(l.array.has(S)||ot(H)||ee&&!ee._f)&&!Vs(H)?oe(B,H,D):Q(B,H,D)}},I=(S,R,D={})=>{const X=q(n,S),H=l.array.has(S),B=yt(R);Me(i,S,B),H?(h.array.next({name:S,values:yt(i)}),(d.isDirty||d.dirtyFields||f.isDirty||f.dirtyFields)&&D.shouldDirty&&h.state.next({name:S,dirtyFields:Go(s,i),isDirty:U(S,B)})):X&&!X._f&&!Vt(B)?oe(S,B,D):Q(S,B,D),Gv(S,l)&&h.state.next({...r}),h.state.next({name:a.mount?S:void 0,values:yt(i)})},M=async S=>{a.mount=!0;const R=S.target;let D=R.name,X=!0;const H=q(n,D),B=ee=>{X=Number.isNaN(ee)||Vs(ee)&&isNaN(ee.getTime())||Gn(ee,q(i,D,ee))};if(H){let ee,Ee;const at=R.type?Hv(H._f):ck(S),_t=S.type===Yc.BLUR||S.type===Yc.FOCUS_OUT,kE=!t3(H._f)&&!t.resolver&&!q(r.errors,D)&&!H._f.deps||s3(_t,q(r.touchedFields,D),r.isSubmitted,w,x),ad=Gv(D,l,_t);Me(i,D,at),_t?(H._f.onBlur&&H._f.onBlur(S),c&&c(0)):H._f.onChange&&H._f.onChange(S);const ld=T(D,at,_t),TE=!Lt(ld)||ad;if(!_t&&h.state.next({name:D,type:S.type,values:yt(i)}),kE)return(d.isValid||f.isValid)&&(t.mode==="onBlur"?_t&&v():_t||v()),TE&&h.state.next({name:D,...ad?{}:ld});if(!_t&&ad&&h.state.next({...r}),t.resolver){const{errors:Ip}=await C([D]);if(B(at),X){const EE=Kv(r.errors,n,D),Mp=Kv(Ip,n,EE.name||D);ee=Mp.error,D=Mp.name,Ee=Lt(Ip)}}else p([D],!0),ee=(await Xv(H,l.disabled,i,g,t.shouldUseNativeValidation))[D],p([D]),B(at),X&&(ee?Ee=!1:(d.isValid||f.isValid)&&(Ee=await z(n,!0)));X&&(H._f.deps&&se(H._f.deps),P(D,Ee,ee,ld))}},W=(S,R)=>{if(q(r.errors,R)&&S.focus)return S.focus(),1},se=async(S,R={})=>{let D,X;const H=pa(S);if(t.resolver){const B=await A(st(S)?S:H);D=Lt(B),X=S?!H.some(ee=>q(B,ee)):D}else S?(X=(await Promise.all(H.map(async B=>{const ee=q(n,B);return await z(ee&&ee._f?{[B]:ee}:ee)}))).every(Boolean),!(!X&&!r.isValid)&&v()):X=D=await z(n);return h.state.next({...!Yr(S)||(d.isValid||f.isValid)&&D!==r.isValid?{}:{name:S},...t.resolver||!S?{isValid:D}:{},errors:r.errors}),R.shouldFocus&&!X&&ga(n,W,S?H:l.mount),X},xe=S=>{const R={...a.mount?i:s};return st(S)?R:Yr(S)?q(R,S):S.map(D=>q(R,D))},Je=(S,R)=>({invalid:!!q((R||r).errors,S),isDirty:!!q((R||r).dirtyFields,S),error:q((R||r).errors,S),isValidating:!!q(r.validatingFields,S),isTouched:!!q((R||r).touchedFields,S)}),ze=S=>{S&&pa(S).forEach(R=>ut(r.errors,R)),h.state.next({errors:S?r.errors:{}})},Ct=(S,R,D)=>{const X=(q(n,S,{_f:{}})._f||{}).ref,H=q(r.errors,S)||{},{ref:B,message:ee,type:Ee,...at}=H;Me(r.errors,S,{...at,...R,ref:X}),h.state.next({name:S,errors:r.errors,isValid:!1}),D&&D.shouldFocus&&X&&X.focus&&X.focus()},qe=(S,R)=>Ar(S)?h.state.subscribe({next:D=>S(F(void 0,R),D)}):F(S,R,!0),ne=S=>h.state.subscribe({next:R=>{n3(S.name,R.name,S.exact)&&r3(R,S.formState||d,vi,S.reRenderRoot)&&S.callback({values:{...i},...r,...R})}}).unsubscribe,Ae=S=>(a.mount=!0,f={...f,...S.formState},ne({...S,formState:f})),Ie=(S,R={})=>{for(const D of S?pa(S):l.mount)l.mount.delete(D),l.array.delete(D),R.keepValue||(ut(n,D),ut(i,D)),!R.keepError&&ut(r.errors,D),!R.keepDirty&&ut(r.dirtyFields,D),!R.keepTouched&&ut(r.touchedFields,D),!R.keepIsValidating&&ut(r.validatingFields,D),!t.shouldUnregister&&!R.keepDefaultValue&&ut(s,D);h.state.next({values:yt(i)}),h.state.next({...r,...R.keepDirty?{isDirty:U()}:{}}),!R.keepIsValid&&v()},ke=({disabled:S,name:R})=>{(nr(S)&&a.mount||S||l.disabled.has(R))&&(S?l.disabled.add(R):l.disabled.delete(R))},Te=(S,R={})=>{let D=q(n,S);const X=nr(R.disabled)||nr(t.disabled);return Me(n,S,{...D||{},_f:{...D&&D._f?D._f:{ref:{name:S}},name:S,mount:!0,...R}}),l.mount.add(S),D?ke({disabled:nr(R.disabled)?R.disabled:t.disabled,name:S}):E(S,!0,R.value),{...X?{disabled:R.disabled||t.disabled}:{},...t.progressive?{required:!!R.required,min:Ko(R.min),max:Ko(R.max),minLength:Ko(R.minLength),maxLength:Ko(R.maxLength),pattern:Ko(R.pattern)}:{},name:S,onChange:M,onBlur:M,ref:H=>{if(H){Te(S,R),D=q(n,S);const B=st(H.value)&&H.querySelectorAll&&H.querySelectorAll("input,select,textarea")[0]||H,ee=ZF(B),Ee=D._f.refs||[];if(ee?Ee.find(at=>at===B):B===D._f.ref)return;Me(n,S,{_f:{...D._f,...ee?{refs:[...Ee.filter(Yd),B,...Array.isArray(q(s,S))?[{}]:[]],ref:{type:B.type,name:S}}:{ref:B}}}),E(S,!1,void 0,B)}else D=q(n,S,{}),D._f&&(D._f.mount=!1),(t.shouldUnregister||R.shouldUnregister)&&!(uk(l.array,S)&&a.action)&&l.unMount.add(S)}}},Pe=()=>t.shouldFocusError&&ga(n,W,l.mount),Mt=S=>{nr(S)&&(h.state.next({disabled:S}),ga(n,(R,D)=>{const X=q(n,D);X&&(R.disabled=X._f.disabled||S,Array.isArray(X._f.refs)&&X._f.refs.forEach(H=>{H.disabled=X._f.disabled||S}))},0,!1))},er=(S,R)=>async D=>{let X;D&&(D.preventDefault&&D.preventDefault(),D.persist&&D.persist());let H=yt(i);if(h.state.next({isSubmitting:!0}),t.resolver){const{errors:B,values:ee}=await C();r.errors=B,H=ee}else await z(n);if(l.disabled.size)for(const B of l.disabled)Me(H,B,void 0);if(ut(r.errors,"root"),Lt(r.errors)){h.state.next({errors:{}});try{await S(H,D)}catch(B){X=B}}else R&&await R({...r.errors},D),Pe(),setTimeout(Pe);if(h.state.next({isSubmitted:!0,isSubmitting:!1,isSubmitSuccessful:Lt(r.errors)&&!X,submitCount:r.submitCount+1,errors:r.errors}),X)throw X},Es=(S,R={})=>{q(n,S)&&(st(R.defaultValue)?I(S,yt(q(s,S))):(I(S,R.defaultValue),Me(s,S,yt(R.defaultValue))),R.keepTouched||ut(r.touchedFields,S),R.keepDirty||(ut(r.dirtyFields,S),r.isDirty=R.defaultValue?U(S,yt(q(s,S))):U()),R.keepError||(ut(r.errors,S),d.isValid&&v()),h.state.next({...r}))},In=(S,R={})=>{const D=S?yt(S):s,X=yt(D),H=Lt(S),B=H?s:X;if(R.keepDefaultValues||(s=D),!R.keepValues){if(R.keepDirtyValues){const ee=new Set([...l.mount,...Object.keys(Go(s,i))]);for(const Ee of Array.from(ee))q(r.dirtyFields,Ee)?Me(B,Ee,q(i,Ee)):I(Ee,q(B,Ee))}else{if(jp&&st(S))for(const ee of l.mount){const Ee=q(n,ee);if(Ee&&Ee._f){const at=Array.isArray(Ee._f.refs)?Ee._f.refs[0]:Ee._f.ref;if(Jc(at)){const _t=at.closest("form");if(_t){_t.reset();break}}}}for(const ee of l.mount)I(ee,q(B,ee))}i=yt(B),h.array.next({values:{...B}}),h.state.next({values:{...B}})}l={mount:R.keepDirtyValues?l.mount:new Set,unMount:new Set,array:new Set,disabled:new Set,watch:new Set,watchAll:!1,focus:""},a.mount=!d.isValid||!!R.keepIsValid||!!R.keepDirtyValues,a.watch=!!t.shouldUnregister,h.state.next({submitCount:R.keepSubmitCount?r.submitCount:0,isDirty:H?!1:R.keepDirty?r.isDirty:!!(R.keepDefaultValues&&!Gn(S,s)),isSubmitted:R.keepIsSubmitted?r.isSubmitted:!1,dirtyFields:H?{}:R.keepDirtyValues?R.keepDefaultValues&&i?Go(s,i):r.dirtyFields:R.keepDefaultValues&&S?Go(s,S):R.keepDirty?r.dirtyFields:{},touchedFields:R.keepTouched?r.touchedFields:{},errors:R.keepErrors?r.errors:{},isSubmitSuccessful:R.keepIsSubmitSuccessful?r.isSubmitSuccessful:!1,isSubmitting:!1})},Mn=(S,R)=>In(Ar(S)?S(i):S,R),od=(S,R={})=>{const D=q(n,S),X=D&&D._f;if(X){const H=X.refs?X.refs[0]:X.ref;H.focus&&(H.focus(),R.shouldSelect&&Ar(H.select)&&H.select())}},vi=S=>{r={...r,...S}},Ap={control:{register:Te,unregister:Ie,getFieldState:Je,handleSubmit:er,setError:Ct,_subscribe:ne,_runSchema:C,_getWatch:F,_getDirty:U,_setValid:v,_setFieldArray:y,_setDisabledField:ke,_setErrors:j,_getFieldArray:re,_reset:In,_resetDefaultValues:()=>Ar(t.defaultValues)&&t.defaultValues().then(S=>{Mn(S,t.resetOptions),h.state.next({isLoading:!1})}),_removeUnmounted:O,_disableForm:Mt,_subjects:h,_proxyFormState:d,get _fields(){return n},get _formValues(){return i},get _state(){return a},set _state(S){a=S},get _defaultValues(){return s},get _names(){return l},set _names(S){l=S},get _formState(){return r},get _options(){return t},set _options(S){t={...t,...S}}},subscribe:Ae,trigger:se,register:Te,handleSubmit:er,watch:qe,setValue:I,getValues:xe,reset:Mn,resetField:Es,clearErrors:ze,unregister:Ie,setError:Ct,setFocus:od,getFieldState:Je};return{...Ap,formControl:Ap}}function Yv(e={}){const t=pe.useRef(void 0),r=pe.useRef(void 0),[n,s]=pe.useState({isDirty:!1,isValidating:!1,isLoading:Ar(e.defaultValues),isSubmitted:!1,isSubmitting:!1,isSubmitSuccessful:!1,isValid:!1,submitCount:0,dirtyFields:{},touchedFields:{},validatingFields:{},errors:e.errors||{},disabled:e.disabled||!1,defaultValues:Ar(e.defaultValues)?void 0:e.defaultValues});t.current||(t.current={...e.formControl?e.formControl:l3(e),formState:n},e.formControl&&e.defaultValues&&!Ar(e.defaultValues)&&e.formControl.reset(e.defaultValues,e.resetOptions));const i=t.current.control;return i._options=e,pe.useLayoutEffect(()=>i._subscribe({formState:i._proxyFormState,callback:()=>s({...i._formState}),reRenderRoot:!0}),[i]),pe.useEffect(()=>i._disableForm(e.disabled),[i,e.disabled]),pe.useEffect(()=>{if(i._proxyFormState.isDirty){const a=i._getDirty();a!==n.isDirty&&i._subjects.state.next({isDirty:a})}},[i,n.isDirty]),pe.useEffect(()=>{e.values&&!Gn(e.values,r.current)?(i._reset(e.values,i._options.resetOptions),r.current=e.values,s(a=>({...a}))):i._resetDefaultValues()},[e.values,i]),pe.useEffect(()=>{e.errors&&!Lt(e.errors)&&i._setErrors(e.errors)},[e.errors,i]),pe.useEffect(()=>{i._state.mount||(i._setValid(),i._state.mount=!0),i._state.watch&&(i._state.watch=!1,i._subjects.state.next({...i._formState})),i._removeUnmounted()}),pe.useEffect(()=>{e.shouldUnregister&&i._subjects.state.next({values:i._getWatch()})},[e.shouldUnregister,i]),t.current.formState=mk(n,i),t.current}const Jv=(e,t,r)=>{if(e&&"reportValidity"in e){const n=q(r,t);e.setCustomValidity(n&&n.message||""),e.reportValidity()}},Nk=(e,t)=>{for(const r in t.fields){const n=t.fields[r];n&&n.ref&&"reportValidity"in n.ref?Jv(n.ref,r,e):n.refs&&n.refs.forEach(s=>Jv(s,r,e))}},c3=(e,t)=>{t.shouldUseNativeValidation&&Nk(e,t);const r={};for(const n in e){const s=q(t.fields,n),i=Object.assign(e[n]||{},{ref:s&&s.ref});if(u3(t.names||Object.keys(e),n)){const a=Object.assign({},q(r,n));Me(a,"root",i),Me(r,n,a)}else Me(r,n,i)}return r},u3=(e,t)=>e.some(r=>r.startsWith(t+"."));var d3=function(e,t){for(var r={};e.length;){var n=e[0],s=n.code,i=n.message,a=n.path.join(".");if(!r[a])if("unionErrors"in n){var l=n.unionErrors[0].errors[0];r[a]={message:l.message,type:l.code}}else r[a]={message:i,type:s};if("unionErrors"in n&&n.unionErrors.forEach(function(d){return d.errors.forEach(function(f){return e.push(f)})}),t){var c=r[a].types,u=c&&c[n.code];r[a]=pk(a,t,r,s,u?[].concat(u,n.message):n.message)}e.shift()}return r},ey=function(e,t,r){return r===void 0&&(r={}),function(n,s,i){try{return Promise.resolve(function(a,l){try{var c=Promise.resolve(e[r.mode==="sync"?"parse":"parseAsync"](n,t)).then(function(u){return i.shouldUseNativeValidation&&Nk({},i),{errors:{},values:r.raw?n:u}})}catch(u){return l(u)}return c&&c.then?c.then(void 0,l):c}(0,function(a){if(function(l){return Array.isArray(l==null?void 0:l.errors)}(a))return{values:{},errors:c3(d3(a.errors,!i.shouldUseNativeValidation&&i.criteriaMode==="all"),i)};throw a}))}catch(a){return Promise.reject(a)}}};const ty=HF,Sk=m.createContext({}),Ps=({...e})=>o.jsx(Sk.Provider,{value:{name:e.name},children:o.jsx(KF,{...e})}),nd=()=>{const e=m.useContext(Sk),t=m.useContext(jk),{getFieldState:r,formState:n}=rd(),s=r(e.name,n);if(!e)throw new Error("useFormField should be used within <FormField>");const{id:i}=t;return{id:i,name:e.name,formItemId:`${i}-form-item`,formDescriptionId:`${i}-form-item-description`,formMessageId:`${i}-form-item-message`,...s}},jk=m.createContext({}),$n=m.forwardRef(({className:e,...t},r)=>{const n=m.useId();return o.jsx(jk.Provider,{value:{id:n},children:o.jsx("div",{ref:r,className:me("space-y-2",e),...t})})});$n.displayName="FormItem";const zn=m.forwardRef(({className:e,...t},r)=>{const{error:n,formItemId:s}=nd();return o.jsx(yn,{ref:r,className:me(n&&"text-destructive",e),htmlFor:s,...t})});zn.displayName="FormLabel";const Bn=m.forwardRef(({...e},t)=>{const{error:r,formItemId:n,formDescriptionId:s,formMessageId:i}=nd();return o.jsx(UN,{ref:t,id:n,"aria-describedby":r?`${s} ${i}`:`${s}`,"aria-invalid":!!r,...e})});Bn.displayName="FormControl";const f3=m.forwardRef(({className:e,...t},r)=>{const{formDescriptionId:n}=nd();return o.jsx("p",{ref:r,id:n,className:me("text-sm text-muted-foreground",e),...t})});f3.displayName="FormDescription";const Un=m.forwardRef(({className:e,children:t,...r},n)=>{const{error:s,formMessageId:i}=nd(),a=s?String((s==null?void 0:s.message)??""):t;return a?o.jsx("p",{ref:n,id:i,className:me("text-sm font-medium text-destructive",e),...r,children:a}):null});Un.displayName="FormMessage";async function m3(e){return(await BN("POST","/api/auth/register",e)).json()}async function h3(e){return(await BN("POST","/api/auth/login",e)).json()}const L=Symbol.for("drizzle:entityKind");function wt(e,t){if(!e||typeof e!="object")return!1;if(e instanceof t)return!0;if(!Object.prototype.hasOwnProperty.call(t,L))throw new Error(`Class "${t.name??"<unknown>"}" doesn't look like a Drizzle entity. If this is incorrect and the class is provided by Drizzle, please report this as a bug.`);let r=Object.getPrototypeOf(e).constructor;if(r)for(;r;){if(L in r&&r[L]===t[L])return!0;r=Object.getPrototypeOf(r)}return!1}var Ny;Ny=L;class So{constructor(t,r){k(this,"name");k(this,"keyAsName");k(this,"primary");k(this,"notNull");k(this,"default");k(this,"defaultFn");k(this,"onUpdateFn");k(this,"hasDefault");k(this,"isUnique");k(this,"uniqueName");k(this,"uniqueType");k(this,"dataType");k(this,"columnType");k(this,"enumValues");k(this,"generated");k(this,"generatedIdentity");k(this,"config");this.table=t,this.config=r,this.name=r.name,this.keyAsName=r.keyAsName,this.notNull=r.notNull,this.default=r.default,this.defaultFn=r.defaultFn,this.onUpdateFn=r.onUpdateFn,this.hasDefault=r.hasDefault,this.primary=r.primaryKey,this.isUnique=r.isUnique,this.uniqueName=r.uniqueName,this.uniqueType=r.uniqueType,this.dataType=r.dataType,this.columnType=r.columnType,this.generated=r.generated,this.generatedIdentity=r.generatedIdentity}mapFromDriverValue(t){return t}mapToDriverValue(t){return t}shouldDisableInsert(){return this.config.generated!==void 0&&this.config.generated.type!=="byDefault"}}k(So,Ny,"Column");var Sy;Sy=L;class Ck{constructor(t,r,n){k(this,"config");k(this,"$default",this.$defaultFn);k(this,"$onUpdate",this.$onUpdateFn);this.config={name:t,keyAsName:t==="",notNull:!1,default:void 0,hasDefault:!1,primaryKey:!1,isUnique:!1,uniqueName:void 0,uniqueType:void 0,dataType:r,columnType:n,generated:void 0}}$type(){return this}notNull(){return this.config.notNull=!0,this}default(t){return this.config.default=t,this.config.hasDefault=!0,this}$defaultFn(t){return this.config.defaultFn=t,this.config.hasDefault=!0,this}$onUpdateFn(t){return this.config.onUpdateFn=t,this.config.hasDefault=!0,this}primaryKey(){return this.config.primaryKey=!0,this.config.notNull=!0,this}setName(t){this.config.name===""&&(this.config.name=t)}}k(Ck,Sy,"ColumnBuilder");const Zi=Symbol.for("drizzle:Name");var jy;jy=L;class _k{constructor(t,r){k(this,"reference");k(this,"_onUpdate","no action");k(this,"_onDelete","no action");this.reference=()=>{const{name:n,columns:s,foreignColumns:i}=t();return{name:n,columns:s,foreignTable:i[0].table,foreignColumns:i}},r&&(this._onUpdate=r.onUpdate,this._onDelete=r.onDelete)}onUpdate(t){return this._onUpdate=t===void 0?"no action":t,this}onDelete(t){return this._onDelete=t===void 0?"no action":t,this}build(t){return new kk(t,this)}}k(_k,jy,"PgForeignKeyBuilder");var Cy;Cy=L;class kk{constructor(t,r){k(this,"reference");k(this,"onUpdate");k(this,"onDelete");this.table=t,this.reference=r.reference,this.onUpdate=r._onUpdate,this.onDelete=r._onDelete}getName(){const{name:t,columns:r,foreignColumns:n}=this.reference(),s=r.map(l=>l.name),i=n.map(l=>l.name),a=[this.table[Zi],...s,n[0].table[Zi],...i];return t??`${a.join("_")}_fk`}}k(kk,Cy,"PgForeignKey");function p3(e,...t){return e(...t)}function g3(e,t){return`${e[Zi]}_${t.join("_")}_unique`}function ry(e,t,r){for(let n=t;n<e.length;n++){const s=e[n];if(s==="\\"){n++;continue}if(s==='"')return[e.slice(t,n).replace(/\\/g,""),n+1];if(!r&&(s===","||s==="}"))return[e.slice(t,n).replace(/\\/g,""),n]}return[e.slice(t).replace(/\\/g,""),e.length]}function Tk(e,t=0){const r=[];let n=t,s=!1;for(;n<e.length;){const i=e[n];if(i===","){(s||n===t)&&r.push(""),s=!0,n++;continue}if(s=!1,i==="\\"){n+=2;continue}if(i==='"'){const[c,u]=ry(e,n+1,!0);r.push(c),n=u;continue}if(i==="}")return[r,n+1];if(i==="{"){const[c,u]=Tk(e,n+1);r.push(c),n=u;continue}const[a,l]=ry(e,n,!1);r.push(a),n=l}return[r,n]}function v3(e){const[t]=Tk(e,1);return t}function Ek(e){return`{${e.map(t=>Array.isArray(t)?Ek(t):typeof t=="string"?`"${t.replace(/\\/g,"\\\\").replace(/"/g,'\\"')}"`:`${t}`).join(",")}}`}var _y,ky;class Ce extends(ky=Ck,_y=L,ky){constructor(){super(...arguments);k(this,"foreignKeyConfigs",[])}array(r){return new Rk(this.config.name,this,r)}references(r,n={}){return this.foreignKeyConfigs.push({ref:r,actions:n}),this}unique(r,n){return this.config.isUnique=!0,this.config.uniqueName=r,this.config.uniqueType=n==null?void 0:n.nulls,this}generatedAlwaysAs(r){return this.config.generated={as:r,type:"always",mode:"stored"},this}buildForeignKeys(r,n){return this.foreignKeyConfigs.map(({ref:s,actions:i})=>p3((a,l)=>{const c=new _k(()=>{const u=a();return{columns:[r],foreignColumns:[u]}});return l.onUpdate&&c.onUpdate(l.onUpdate),l.onDelete&&c.onDelete(l.onDelete),c.build(n)},s,i))}buildExtraConfigColumn(r){return new Pk(r,this.config)}}k(Ce,_y,"PgColumnBuilder");var Ty,Ey;class ve extends(Ey=So,Ty=L,Ey){constructor(t,r){r.uniqueName||(r.uniqueName=g3(t,[r.name])),super(t,r),this.table=t}}k(ve,Ty,"PgColumn");var Py,Ry;class Pk extends(Ry=ve,Py=L,Ry){constructor(){super(...arguments);k(this,"indexConfig",{order:this.config.order??"asc",nulls:this.config.nulls??"last",opClass:this.config.opClass});k(this,"defaultConfig",{order:"asc",nulls:"last",opClass:void 0})}getSQLType(){return this.getSQLType()}asc(){return this.indexConfig.order="asc",this}desc(){return this.indexConfig.order="desc",this}nullsFirst(){return this.indexConfig.nulls="first",this}nullsLast(){return this.indexConfig.nulls="last",this}op(r){return this.indexConfig.opClass=r,this}}k(Pk,Py,"ExtraConfigColumn");var Ay,Iy;class Rk extends(Iy=Ce,Ay=L,Iy){constructor(t,r,n){super(t,"array","PgArray"),this.config.baseBuilder=r,this.config.size=n}build(t){const r=this.config.baseBuilder.build(t);return new Im(t,this.config,r)}}k(Rk,Ay,"PgArrayBuilder");var My,Dy;const hu=class hu extends(Dy=ve,My=L,Dy){constructor(r,n,s,i){super(r,n);k(this,"size");this.baseColumn=s,this.range=i,this.size=n.size}getSQLType(){return`${this.baseColumn.getSQLType()}[${typeof this.size=="number"?this.size:""}]`}mapFromDriverValue(r){return typeof r=="string"&&(r=v3(r)),r.map(n=>this.baseColumn.mapFromDriverValue(n))}mapToDriverValue(r,n=!1){const s=r.map(i=>i===null?null:wt(this.baseColumn,hu)?this.baseColumn.mapToDriverValue(i,!0):this.baseColumn.mapToDriverValue(i));return n?s:Ek(s)}};k(hu,My,"PgArray");let Im=hu;const ny=Symbol.for("drizzle:isPgEnum");function y3(e){return!!e&&typeof e=="function"&&ny in e&&e[ny]===!0}var Oy;Oy=L;class Tp{constructor(t,r,n,s=!1){this._={brand:"Subquery",sql:t,selectedFields:r,alias:n,isWith:s}}}k(Tp,Oy,"Subquery");const x3={startActiveSpan(e,t){return t()}},Xi=Symbol.for("drizzle:ViewBaseConfig"),Jd=Symbol.for("drizzle:Schema"),sy=Symbol.for("drizzle:Columns"),iy=Symbol.for("drizzle:ExtraConfigColumns"),ef=Symbol.for("drizzle:OriginalName"),tf=Symbol.for("drizzle:BaseName"),ru=Symbol.for("drizzle:IsAlias"),oy=Symbol.for("drizzle:ExtraConfigBuilder"),Ak=Symbol.for("drizzle:IsDrizzleTable");var Ly,Fy,Vy,$y,zy,By,Uy,Wy,Hy,qy;qy=L,Hy=Zi,Wy=ef,Uy=Jd,By=sy,zy=iy,$y=tf,Vy=ru,Fy=Ak,Ly=oy;class $t{constructor(t,r,n){k(this,Hy);k(this,Wy);k(this,Uy);k(this,By);k(this,zy);k(this,$y);k(this,Vy,!1);k(this,Fy,!0);k(this,Ly);this[Zi]=this[ef]=t,this[Jd]=r,this[tf]=n}}k($t,qy,"Table"),k($t,"Symbol",{Name:Zi,Schema:Jd,OriginalName:ef,Columns:sy,ExtraConfigColumns:iy,BaseName:tf,IsAlias:ru,ExtraConfigBuilder:oy});function Ik(e){return typeof e=="object"&&e!==null&&Ak in e}function w3(e){return e!=null&&typeof e.getSQL=="function"}function b3(e){var r;const t={sql:"",params:[]};for(const n of e)t.sql+=n.sql,t.params.push(...n.params),(r=n.typings)!=null&&r.length&&(t.typings||(t.typings=[]),t.typings.push(...n.typings));return t}var Qy;Qy=L;class hr{constructor(t){k(this,"value");this.value=Array.isArray(t)?t:[t]}getSQL(){return new mt([this])}}k(hr,Qy,"StringChunk");var Gy;Gy=L;const Is=class Is{constructor(t){k(this,"decoder",Mk);k(this,"shouldInlineParams",!1);this.queryChunks=t}append(t){return this.queryChunks.push(...t.queryChunks),this}toQuery(t){return x3.startActiveSpan("drizzle.buildSQL",r=>{const n=this.buildQueryFromSourceParams(this.queryChunks,t);return r==null||r.setAttributes({"drizzle.query.text":n.sql,"drizzle.query.params":JSON.stringify(n.params)}),n})}buildQueryFromSourceParams(t,r){const n=Object.assign({},r,{inlineParams:r.inlineParams||this.shouldInlineParams,paramStartIndex:r.paramStartIndex||{value:0}}),{casing:s,escapeName:i,escapeParam:a,prepareTyping:l,inlineParams:c,paramStartIndex:u}=n;return b3(t.map(d=>{var f;if(wt(d,hr))return{sql:d.value.join(""),params:[]};if(wt(d,nu))return{sql:i(d.value),params:[]};if(d===void 0)return{sql:"",params:[]};if(Array.isArray(d)){const h=[new hr("(")];for(const[x,w]of d.entries())h.push(w),x<d.length-1&&h.push(new hr(", "));return h.push(new hr(")")),this.buildQueryFromSourceParams(h,n)}if(wt(d,Is))return this.buildQueryFromSourceParams(d.queryChunks,{...n,inlineParams:c||d.shouldInlineParams});if(wt(d,$t)){const h=d[$t.Symbol.Schema],x=d[$t.Symbol.Name];return{sql:h===void 0||d[ru]?i(x):i(h)+"."+i(x),params:[]}}if(wt(d,So)){const h=s.getColumnCasing(d);if(r.invokeSource==="indexes")return{sql:i(h),params:[]};const x=d.table[$t.Symbol.Schema];return{sql:d.table[ru]||x===void 0?i(d.table[$t.Symbol.Name])+"."+i(h):i(x)+"."+i(d.table[$t.Symbol.Name])+"."+i(h),params:[]}}if(wt(d,Lk)){const h=d[Xi].schema,x=d[Xi].name;return{sql:h===void 0||d[Xi].isAlias?i(x):i(h)+"."+i(x),params:[]}}if(wt(d,Ep)){if(wt(d.value,iu))return{sql:a(u.value++,d),params:[d],typings:["none"]};const h=d.value===null?null:d.encoder.mapToDriverValue(d.value);if(wt(h,Is))return this.buildQueryFromSourceParams([h],n);if(c)return{sql:this.mapInlineParam(h,n),params:[]};let x=["none"];return l&&(x=[l(d.encoder)]),{sql:a(u.value++,h),params:[h],typings:x}}return wt(d,iu)?{sql:a(u.value++,d),params:[d],typings:["none"]}:wt(d,Is.Aliased)&&d.fieldAlias!==void 0?{sql:i(d.fieldAlias),params:[]}:wt(d,Tp)?d._.isWith?{sql:i(d._.alias),params:[]}:this.buildQueryFromSourceParams([new hr("("),d._.sql,new hr(") "),new nu(d._.alias)],n):y3(d)?d.schema?{sql:i(d.schema)+"."+i(d.enumName),params:[]}:{sql:i(d.enumName),params:[]}:w3(d)?(f=d.shouldOmitSQLParens)!=null&&f.call(d)?this.buildQueryFromSourceParams([d.getSQL()],n):this.buildQueryFromSourceParams([new hr("("),d.getSQL(),new hr(")")],n):c?{sql:this.mapInlineParam(d,n),params:[]}:{sql:a(u.value++,d),params:[d],typings:["none"]}}))}mapInlineParam(t,{escapeString:r}){if(t===null)return"null";if(typeof t=="number"||typeof t=="boolean")return t.toString();if(typeof t=="string")return r(t);if(typeof t=="object"){const n=t.toString();return r(n==="[object Object]"?JSON.stringify(t):n)}throw new Error("Unexpected param value: "+t)}getSQL(){return this}as(t){return t===void 0?this:new Is.Aliased(this,t)}mapWith(t){return this.decoder=typeof t=="function"?{mapFromDriverValue:t}:t,this}inlineParams(){return this.shouldInlineParams=!0,this}if(t){return t?this:void 0}};k(Is,Gy,"SQL");let mt=Is;var Ky;Ky=L;class nu{constructor(t){k(this,"brand");this.value=t}getSQL(){return new mt([this])}}k(nu,Ky,"Name");const Mk={mapFromDriverValue:e=>e},Dk={mapToDriverValue:e=>e};({...Mk,...Dk});var Zy;Zy=L;class Ep{constructor(t,r=Dk){k(this,"brand");this.value=t,this.encoder=r}getSQL(){return new mt([this])}}k(Ep,Zy,"Param");function su(e,...t){const r=[];(t.length>0||e.length>0&&e[0]!=="")&&r.push(new hr(e[0]));for(const[n,s]of t.entries())r.push(s,new hr(e[n+1]));return new mt(r)}(e=>{function t(){return new mt([])}e.empty=t;function r(c){return new mt(c)}e.fromList=r;function n(c){return new mt([new hr(c)])}e.raw=n;function s(c,u){const d=[];for(const[f,h]of c.entries())f>0&&u!==void 0&&d.push(u),d.push(h);return new mt(d)}e.join=s;function i(c){return new nu(c)}e.identifier=i;function a(c){return new iu(c)}e.placeholder=a;function l(c,u){return new Ep(c,u)}e.param=l})(su||(su={}));(e=>{var r;r=L;const n=class n{constructor(i,a){k(this,"isSelectionField",!1);this.sql=i,this.fieldAlias=a}getSQL(){return this.sql}clone(){return new n(this.sql,this.fieldAlias)}};k(n,r,"SQL.Aliased");let t=n;e.Aliased=t})(mt||(mt={}));var Xy;Xy=L;class iu{constructor(t){this.name=t}getSQL(){return new mt([this])}}k(iu,Xy,"Placeholder");const Ok=Symbol.for("drizzle:IsDrizzleView");var Yy,Jy,ex;ex=L,Jy=Xi,Yy=Ok;class Lk{constructor({name:t,schema:r,selectedFields:n,query:s}){k(this,Jy);k(this,Yy,!0);this[Xi]={name:t,originalName:t,schema:r,selectedFields:n,query:s,isExisting:!s,isAlias:!1}}getSQL(){return new mt([this])}}k(Lk,ex,"View");function N3(e){return typeof e=="object"&&e!==null&&Ok in e}So.prototype.getSQL=function(){return new mt([this])};$t.prototype.getSQL=function(){return new mt([this])};Tp.prototype.getSQL=function(){return new mt([this])};function S3(e){return e[$t.Symbol.Columns]}function j3(e){return e[Xi].selectedFields}function vt(e,t){return{name:typeof e=="string"&&e.length>0?e:"",config:typeof e=="object"?e:t}}var tx,rx;class Nl extends(rx=Ce,tx=L,rx){generatedAlwaysAsIdentity(t){if(t){const{name:r,...n}=t;this.config.generatedIdentity={type:"always",sequenceName:r,sequenceOptions:n}}else this.config.generatedIdentity={type:"always"};return this.config.hasDefault=!0,this.config.notNull=!0,this}generatedByDefaultAsIdentity(t){if(t){const{name:r,...n}=t;this.config.generatedIdentity={type:"byDefault",sequenceName:r,sequenceOptions:n}}else this.config.generatedIdentity={type:"byDefault"};return this.config.hasDefault=!0,this.config.notNull=!0,this}}k(Nl,tx,"PgIntColumnBaseBuilder");var nx,sx;class Fk extends(sx=Nl,nx=L,sx){constructor(t){super(t,"number","PgBigInt53")}build(t){return new Vk(t,this.config)}}k(Fk,nx,"PgBigInt53Builder");var ix,ox;class Vk extends(ox=ve,ix=L,ox){getSQLType(){return"bigint"}mapFromDriverValue(t){return typeof t=="number"?t:Number(t)}}k(Vk,ix,"PgBigInt53");var ax,lx;class $k extends(lx=Nl,ax=L,lx){constructor(t){super(t,"bigint","PgBigInt64")}build(t){return new zk(t,this.config)}}k($k,ax,"PgBigInt64Builder");var cx,ux;class zk extends(ux=ve,cx=L,ux){getSQLType(){return"bigint"}mapFromDriverValue(t){return BigInt(t)}}k(zk,cx,"PgBigInt64");function C3(e,t){const{name:r,config:n}=vt(e,t);return n.mode==="number"?new Fk(r):new $k(r)}var dx,fx;class Bk extends(fx=Ce,dx=L,fx){constructor(t){super(t,"number","PgBigSerial53"),this.config.hasDefault=!0,this.config.notNull=!0}build(t){return new Uk(t,this.config)}}k(Bk,dx,"PgBigSerial53Builder");var mx,hx;class Uk extends(hx=ve,mx=L,hx){getSQLType(){return"bigserial"}mapFromDriverValue(t){return typeof t=="number"?t:Number(t)}}k(Uk,mx,"PgBigSerial53");var px,gx;class Wk extends(gx=Ce,px=L,gx){constructor(t){super(t,"bigint","PgBigSerial64"),this.config.hasDefault=!0}build(t){return new Hk(t,this.config)}}k(Wk,px,"PgBigSerial64Builder");var vx,yx;class Hk extends(yx=ve,vx=L,yx){getSQLType(){return"bigserial"}mapFromDriverValue(t){return BigInt(t)}}k(Hk,vx,"PgBigSerial64");function _3(e,t){const{name:r,config:n}=vt(e,t);return n.mode==="number"?new Bk(r):new Wk(r)}var xx,wx;class qk extends(wx=Ce,xx=L,wx){constructor(t){super(t,"boolean","PgBoolean")}build(t){return new Qk(t,this.config)}}k(qk,xx,"PgBooleanBuilder");var bx,Nx;class Qk extends(Nx=ve,bx=L,Nx){getSQLType(){return"boolean"}}k(Qk,bx,"PgBoolean");function sd(e){return new qk(e??"")}var Sx,jx;class Gk extends(jx=Ce,Sx=L,jx){constructor(t,r){super(t,"string","PgChar"),this.config.length=r.length,this.config.enumValues=r.enum}build(t){return new Kk(t,this.config)}}k(Gk,Sx,"PgCharBuilder");var Cx,_x;class Kk extends(_x=ve,Cx=L,_x){constructor(){super(...arguments);k(this,"length",this.config.length);k(this,"enumValues",this.config.enumValues)}getSQLType(){return this.length===void 0?"char":`char(${this.length})`}}k(Kk,Cx,"PgChar");function k3(e,t={}){const{name:r,config:n}=vt(e,t);return new Gk(r,n)}var kx,Tx;class Zk extends(Tx=Ce,kx=L,Tx){constructor(t){super(t,"string","PgCidr")}build(t){return new Xk(t,this.config)}}k(Zk,kx,"PgCidrBuilder");var Ex,Px;class Xk extends(Px=ve,Ex=L,Px){getSQLType(){return"cidr"}}k(Xk,Ex,"PgCidr");function T3(e){return new Zk(e??"")}var Rx,Ax;class Yk extends(Ax=Ce,Rx=L,Ax){constructor(t,r,n){super(t,"custom","PgCustomColumn"),this.config.fieldConfig=r,this.config.customTypeParams=n}build(t){return new Jk(t,this.config)}}k(Yk,Rx,"PgCustomColumnBuilder");var Ix,Mx;class Jk extends(Mx=ve,Ix=L,Mx){constructor(r,n){super(r,n);k(this,"sqlName");k(this,"mapTo");k(this,"mapFrom");this.sqlName=n.customTypeParams.dataType(n.fieldConfig),this.mapTo=n.customTypeParams.toDriver,this.mapFrom=n.customTypeParams.fromDriver}getSQLType(){return this.sqlName}mapFromDriverValue(r){return typeof this.mapFrom=="function"?this.mapFrom(r):r}mapToDriverValue(r){return typeof this.mapTo=="function"?this.mapTo(r):r}}k(Jk,Ix,"PgCustomColumn");function E3(e){return(t,r)=>{const{name:n,config:s}=vt(t,r);return new Yk(n,s,e)}}var Dx,Ox;class Lo extends(Ox=Ce,Dx=L,Ox){defaultNow(){return this.default(su`now()`)}}k(Lo,Dx,"PgDateColumnBaseBuilder");var Lx,Fx;class eT extends(Fx=Lo,Lx=L,Fx){constructor(t){super(t,"date","PgDate")}build(t){return new tT(t,this.config)}}k(eT,Lx,"PgDateBuilder");var Vx,$x;class tT extends($x=ve,Vx=L,$x){getSQLType(){return"date"}mapFromDriverValue(t){return new Date(t)}mapToDriverValue(t){return t.toISOString()}}k(tT,Vx,"PgDate");var zx,Bx;class rT extends(Bx=Lo,zx=L,Bx){constructor(t){super(t,"string","PgDateString")}build(t){return new nT(t,this.config)}}k(rT,zx,"PgDateStringBuilder");var Ux,Wx;class nT extends(Wx=ve,Ux=L,Wx){getSQLType(){return"date"}}k(nT,Ux,"PgDateString");function P3(e,t){const{name:r,config:n}=vt(e,t);return(n==null?void 0:n.mode)==="date"?new eT(r):new rT(r)}var Hx,qx;class sT extends(qx=Ce,Hx=L,qx){constructor(t){super(t,"number","PgDoublePrecision")}build(t){return new iT(t,this.config)}}k(sT,Hx,"PgDoublePrecisionBuilder");var Qx,Gx;class iT extends(Gx=ve,Qx=L,Gx){getSQLType(){return"double precision"}mapFromDriverValue(t){return typeof t=="string"?Number.parseFloat(t):t}}k(iT,Qx,"PgDoublePrecision");function R3(e){return new sT(e??"")}var Kx,Zx;class oT extends(Zx=Ce,Kx=L,Zx){constructor(t){super(t,"string","PgInet")}build(t){return new aT(t,this.config)}}k(oT,Kx,"PgInetBuilder");var Xx,Yx;class aT extends(Yx=ve,Xx=L,Yx){getSQLType(){return"inet"}}k(aT,Xx,"PgInet");function A3(e){return new oT(e??"")}var Jx,e0;class lT extends(e0=Nl,Jx=L,e0){constructor(t){super(t,"number","PgInteger")}build(t){return new cT(t,this.config)}}k(lT,Jx,"PgIntegerBuilder");var t0,r0;class cT extends(r0=ve,t0=L,r0){getSQLType(){return"integer"}mapFromDriverValue(t){return typeof t=="string"?Number.parseInt(t):t}}k(cT,t0,"PgInteger");function Ze(e){return new lT(e??"")}var n0,s0;class uT extends(s0=Ce,n0=L,s0){constructor(t,r){super(t,"string","PgInterval"),this.config.intervalConfig=r}build(t){return new dT(t,this.config)}}k(uT,n0,"PgIntervalBuilder");var i0,o0;class dT extends(o0=ve,i0=L,o0){constructor(){super(...arguments);k(this,"fields",this.config.intervalConfig.fields);k(this,"precision",this.config.intervalConfig.precision)}getSQLType(){const r=this.fields?` ${this.fields}`:"",n=this.precision?`(${this.precision})`:"";return`interval${r}${n}`}}k(dT,i0,"PgInterval");function I3(e,t={}){const{name:r,config:n}=vt(e,t);return new uT(r,n)}var a0,l0;class fT extends(l0=Ce,a0=L,l0){constructor(t){super(t,"json","PgJson")}build(t){return new mT(t,this.config)}}k(fT,a0,"PgJsonBuilder");var c0,u0;class mT extends(u0=ve,c0=L,u0){constructor(t,r){super(t,r)}getSQLType(){return"json"}mapToDriverValue(t){return JSON.stringify(t)}mapFromDriverValue(t){if(typeof t=="string")try{return JSON.parse(t)}catch{return t}return t}}k(mT,c0,"PgJson");function M3(e){return new fT(e??"")}var d0,f0;class hT extends(f0=Ce,d0=L,f0){constructor(t){super(t,"json","PgJsonb")}build(t){return new pT(t,this.config)}}k(hT,d0,"PgJsonbBuilder");var m0,h0;class pT extends(h0=ve,m0=L,h0){constructor(t,r){super(t,r)}getSQLType(){return"jsonb"}mapToDriverValue(t){return JSON.stringify(t)}mapFromDriverValue(t){if(typeof t=="string")try{return JSON.parse(t)}catch{return t}return t}}k(pT,m0,"PgJsonb");function Pp(e){return new hT(e??"")}var p0,g0;class gT extends(g0=Ce,p0=L,g0){constructor(t){super(t,"array","PgLine")}build(t){return new vT(t,this.config)}}k(gT,p0,"PgLineBuilder");var v0,y0;class vT extends(y0=ve,v0=L,y0){getSQLType(){return"line"}mapFromDriverValue(t){const[r,n,s]=t.slice(1,-1).split(",");return[Number.parseFloat(r),Number.parseFloat(n),Number.parseFloat(s)]}mapToDriverValue(t){return`{${t[0]},${t[1]},${t[2]}}`}}k(vT,v0,"PgLine");var x0,w0;class yT extends(w0=Ce,x0=L,w0){constructor(t){super(t,"json","PgLineABC")}build(t){return new xT(t,this.config)}}k(yT,x0,"PgLineABCBuilder");var b0,N0;class xT extends(N0=ve,b0=L,N0){getSQLType(){return"line"}mapFromDriverValue(t){const[r,n,s]=t.slice(1,-1).split(",");return{a:Number.parseFloat(r),b:Number.parseFloat(n),c:Number.parseFloat(s)}}mapToDriverValue(t){return`{${t.a},${t.b},${t.c}}`}}k(xT,b0,"PgLineABC");function D3(e,t){const{name:r,config:n}=vt(e,t);return!(n!=null&&n.mode)||n.mode==="tuple"?new gT(r):new yT(r)}var S0,j0;class wT extends(j0=Ce,S0=L,j0){constructor(t){super(t,"string","PgMacaddr")}build(t){return new bT(t,this.config)}}k(wT,S0,"PgMacaddrBuilder");var C0,_0;class bT extends(_0=ve,C0=L,_0){getSQLType(){return"macaddr"}}k(bT,C0,"PgMacaddr");function O3(e){return new wT(e??"")}var k0,T0;class NT extends(T0=Ce,k0=L,T0){constructor(t){super(t,"string","PgMacaddr8")}build(t){return new ST(t,this.config)}}k(NT,k0,"PgMacaddr8Builder");var E0,P0;class ST extends(P0=ve,E0=L,P0){getSQLType(){return"macaddr8"}}k(ST,E0,"PgMacaddr8");function L3(e){return new NT(e??"")}var R0,A0;class jT extends(A0=Ce,R0=L,A0){constructor(t,r,n){super(t,"string","PgNumeric"),this.config.precision=r,this.config.scale=n}build(t){return new CT(t,this.config)}}k(jT,R0,"PgNumericBuilder");var I0,M0;class CT extends(M0=ve,I0=L,M0){constructor(r,n){super(r,n);k(this,"precision");k(this,"scale");this.precision=n.precision,this.scale=n.scale}getSQLType(){return this.precision!==void 0&&this.scale!==void 0?`numeric(${this.precision}, ${this.scale})`:this.precision===void 0?"numeric":`numeric(${this.precision})`}}k(CT,I0,"PgNumeric");function F3(e,t){const{name:r,config:n}=vt(e,t);return new jT(r,n==null?void 0:n.precision,n==null?void 0:n.scale)}var D0,O0;class _T extends(O0=Ce,D0=L,O0){constructor(t){super(t,"array","PgPointTuple")}build(t){return new kT(t,this.config)}}k(_T,D0,"PgPointTupleBuilder");var L0,F0;class kT extends(F0=ve,L0=L,F0){getSQLType(){return"point"}mapFromDriverValue(t){if(typeof t=="string"){const[r,n]=t.slice(1,-1).split(",");return[Number.parseFloat(r),Number.parseFloat(n)]}return[t.x,t.y]}mapToDriverValue(t){return`(${t[0]},${t[1]})`}}k(kT,L0,"PgPointTuple");var V0,$0;class TT extends($0=Ce,V0=L,$0){constructor(t){super(t,"json","PgPointObject")}build(t){return new ET(t,this.config)}}k(TT,V0,"PgPointObjectBuilder");var z0,B0;class ET extends(B0=ve,z0=L,B0){getSQLType(){return"point"}mapFromDriverValue(t){if(typeof t=="string"){const[r,n]=t.slice(1,-1).split(",");return{x:Number.parseFloat(r),y:Number.parseFloat(n)}}return t}mapToDriverValue(t){return`(${t.x},${t.y})`}}k(ET,z0,"PgPointObject");function V3(e,t){const{name:r,config:n}=vt(e,t);return!(n!=null&&n.mode)||n.mode==="tuple"?new _T(r):new TT(r)}function $3(e){const t=[];for(let r=0;r<e.length;r+=2)t.push(Number.parseInt(e.slice(r,r+2),16));return new Uint8Array(t)}function ay(e,t){const r=new ArrayBuffer(8),n=new DataView(r);for(let s=0;s<8;s++)n.setUint8(s,e[t+s]);return n.getFloat64(0,!0)}function PT(e){const t=$3(e);let r=0;const n=t[r];r+=1;const s=new DataView(t.buffer),i=s.getUint32(r,n===1);if(r+=4,i&536870912&&(s.getUint32(r,n===1),r+=4),(i&65535)===1){const a=ay(t,r);r+=8;const l=ay(t,r);return r+=8,[a,l]}throw new Error("Unsupported geometry type")}var U0,W0;class RT extends(W0=Ce,U0=L,W0){constructor(t){super(t,"array","PgGeometry")}build(t){return new AT(t,this.config)}}k(RT,U0,"PgGeometryBuilder");var H0,q0;class AT extends(q0=ve,H0=L,q0){getSQLType(){return"geometry(point)"}mapFromDriverValue(t){return PT(t)}mapToDriverValue(t){return`point(${t[0]} ${t[1]})`}}k(AT,H0,"PgGeometry");var Q0,G0;class IT extends(G0=Ce,Q0=L,G0){constructor(t){super(t,"json","PgGeometryObject")}build(t){return new MT(t,this.config)}}k(IT,Q0,"PgGeometryObjectBuilder");var K0,Z0;class MT extends(Z0=ve,K0=L,Z0){getSQLType(){return"geometry(point)"}mapFromDriverValue(t){const r=PT(t);return{x:r[0],y:r[1]}}mapToDriverValue(t){return`point(${t.x} ${t.y})`}}k(MT,K0,"PgGeometryObject");function z3(e,t){const{name:r,config:n}=vt(e,t);return!(n!=null&&n.mode)||n.mode==="tuple"?new RT(r):new IT(r)}var X0,Y0;class DT extends(Y0=Ce,X0=L,Y0){constructor(t,r){super(t,"number","PgReal"),this.config.length=r}build(t){return new OT(t,this.config)}}k(DT,X0,"PgRealBuilder");var J0,ew;class OT extends(ew=ve,J0=L,ew){constructor(r,n){super(r,n);k(this,"mapFromDriverValue",r=>typeof r=="string"?Number.parseFloat(r):r)}getSQLType(){return"real"}}k(OT,J0,"PgReal");function pn(e){return new DT(e??"")}var tw,rw;class LT extends(rw=Ce,tw=L,rw){constructor(t){super(t,"number","PgSerial"),this.config.hasDefault=!0,this.config.notNull=!0}build(t){return new FT(t,this.config)}}k(LT,tw,"PgSerialBuilder");var nw,sw;class FT extends(sw=ve,nw=L,sw){getSQLType(){return"serial"}}k(FT,nw,"PgSerial");function An(e){return new LT(e??"")}var iw,ow;class VT extends(ow=Nl,iw=L,ow){constructor(t){super(t,"number","PgSmallInt")}build(t){return new $T(t,this.config)}}k(VT,iw,"PgSmallIntBuilder");var aw,lw;class $T extends(lw=ve,aw=L,lw){constructor(){super(...arguments);k(this,"mapFromDriverValue",r=>typeof r=="string"?Number(r):r)}getSQLType(){return"smallint"}}k($T,aw,"PgSmallInt");function B3(e){return new VT(e??"")}var cw,uw;class zT extends(uw=Ce,cw=L,uw){constructor(t){super(t,"number","PgSmallSerial"),this.config.hasDefault=!0,this.config.notNull=!0}build(t){return new BT(t,this.config)}}k(zT,cw,"PgSmallSerialBuilder");var dw,fw;class BT extends(fw=ve,dw=L,fw){getSQLType(){return"smallserial"}}k(BT,dw,"PgSmallSerial");function U3(e){return new zT(e??"")}var mw,hw;class UT extends(hw=Ce,mw=L,hw){constructor(t,r){super(t,"string","PgText"),this.config.enumValues=r.enum}build(t){return new WT(t,this.config)}}k(UT,mw,"PgTextBuilder");var pw,gw;class WT extends(gw=ve,pw=L,gw){constructor(){super(...arguments);k(this,"enumValues",this.config.enumValues)}getSQLType(){return"text"}}k(WT,pw,"PgText");function Ve(e,t={}){const{name:r,config:n}=vt(e,t);return new UT(r,n)}var vw,yw;class HT extends(yw=Lo,vw=L,yw){constructor(t,r,n){super(t,"string","PgTime"),this.withTimezone=r,this.precision=n,this.config.withTimezone=r,this.config.precision=n}build(t){return new qT(t,this.config)}}k(HT,vw,"PgTimeBuilder");var xw,ww;class qT extends(ww=ve,xw=L,ww){constructor(r,n){super(r,n);k(this,"withTimezone");k(this,"precision");this.withTimezone=n.withTimezone,this.precision=n.precision}getSQLType(){return`time${this.precision===void 0?"":`(${this.precision})`}${this.withTimezone?" with time zone":""}`}}k(qT,xw,"PgTime");function W3(e,t={}){const{name:r,config:n}=vt(e,t);return new HT(r,n.withTimezone??!1,n.precision)}var bw,Nw;class QT extends(Nw=Lo,bw=L,Nw){constructor(t,r,n){super(t,"date","PgTimestamp"),this.config.withTimezone=r,this.config.precision=n}build(t){return new GT(t,this.config)}}k(QT,bw,"PgTimestampBuilder");var Sw,jw;class GT extends(jw=ve,Sw=L,jw){constructor(r,n){super(r,n);k(this,"withTimezone");k(this,"precision");k(this,"mapFromDriverValue",r=>new Date(this.withTimezone?r:r+"+0000"));k(this,"mapToDriverValue",r=>r.toISOString());this.withTimezone=n.withTimezone,this.precision=n.precision}getSQLType(){return`timestamp${this.precision===void 0?"":` (${this.precision})`}${this.withTimezone?" with time zone":""}`}}k(GT,Sw,"PgTimestamp");var Cw,_w;class KT extends(_w=Lo,Cw=L,_w){constructor(t,r,n){super(t,"string","PgTimestampString"),this.config.withTimezone=r,this.config.precision=n}build(t){return new ZT(t,this.config)}}k(KT,Cw,"PgTimestampStringBuilder");var kw,Tw;class ZT extends(Tw=ve,kw=L,Tw){constructor(r,n){super(r,n);k(this,"withTimezone");k(this,"precision");this.withTimezone=n.withTimezone,this.precision=n.precision}getSQLType(){return`timestamp${this.precision===void 0?"":`(${this.precision})`}${this.withTimezone?" with time zone":""}`}}k(ZT,kw,"PgTimestampString");function Jt(e,t={}){const{name:r,config:n}=vt(e,t);return(n==null?void 0:n.mode)==="string"?new KT(r,n.withTimezone??!1,n.precision):new QT(r,(n==null?void 0:n.withTimezone)??!1,n==null?void 0:n.precision)}var Ew,Pw;class XT extends(Pw=Ce,Ew=L,Pw){constructor(t){super(t,"string","PgUUID")}defaultRandom(){return this.default(su`gen_random_uuid()`)}build(t){return new YT(t,this.config)}}k(XT,Ew,"PgUUIDBuilder");var Rw,Aw;class YT extends(Aw=ve,Rw=L,Aw){getSQLType(){return"uuid"}}k(YT,Rw,"PgUUID");function H3(e){return new XT(e??"")}var Iw,Mw;class JT extends(Mw=Ce,Iw=L,Mw){constructor(t,r){super(t,"string","PgVarchar"),this.config.length=r.length,this.config.enumValues=r.enum}build(t){return new eE(t,this.config)}}k(JT,Iw,"PgVarcharBuilder");var Dw,Ow;class eE extends(Ow=ve,Dw=L,Ow){constructor(){super(...arguments);k(this,"length",this.config.length);k(this,"enumValues",this.config.enumValues)}getSQLType(){return this.length===void 0?"varchar":`varchar(${this.length})`}}k(eE,Dw,"PgVarchar");function q3(e,t={}){const{name:r,config:n}=vt(e,t);return new JT(r,n)}var Lw,Fw;class tE extends(Fw=Ce,Lw=L,Fw){constructor(t,r){super(t,"string","PgBinaryVector"),this.config.dimensions=r.dimensions}build(t){return new rE(t,this.config)}}k(tE,Lw,"PgBinaryVectorBuilder");var Vw,$w;class rE extends($w=ve,Vw=L,$w){constructor(){super(...arguments);k(this,"dimensions",this.config.dimensions)}getSQLType(){return`bit(${this.dimensions})`}}k(rE,Vw,"PgBinaryVector");function Q3(e,t){const{name:r,config:n}=vt(e,t);return new tE(r,n)}var zw,Bw;class nE extends(Bw=Ce,zw=L,Bw){constructor(t,r){super(t,"array","PgHalfVector"),this.config.dimensions=r.dimensions}build(t){return new sE(t,this.config)}}k(nE,zw,"PgHalfVectorBuilder");var Uw,Ww;class sE extends(Ww=ve,Uw=L,Ww){constructor(){super(...arguments);k(this,"dimensions",this.config.dimensions)}getSQLType(){return`halfvec(${this.dimensions})`}mapToDriverValue(r){return JSON.stringify(r)}mapFromDriverValue(r){return r.slice(1,-1).split(",").map(n=>Number.parseFloat(n))}}k(sE,Uw,"PgHalfVector");function G3(e,t){const{name:r,config:n}=vt(e,t);return new nE(r,n)}var Hw,qw;class iE extends(qw=Ce,Hw=L,qw){constructor(t,r){super(t,"string","PgSparseVector"),this.config.dimensions=r.dimensions}build(t){return new oE(t,this.config)}}k(iE,Hw,"PgSparseVectorBuilder");var Qw,Gw;class oE extends(Gw=ve,Qw=L,Gw){constructor(){super(...arguments);k(this,"dimensions",this.config.dimensions)}getSQLType(){return`sparsevec(${this.dimensions})`}}k(oE,Qw,"PgSparseVector");function K3(e,t){const{name:r,config:n}=vt(e,t);return new iE(r,n)}var Kw,Zw;class aE extends(Zw=Ce,Kw=L,Zw){constructor(t,r){super(t,"array","PgVector"),this.config.dimensions=r.dimensions}build(t){return new lE(t,this.config)}}k(aE,Kw,"PgVectorBuilder");var Xw,Yw;class lE extends(Yw=ve,Xw=L,Yw){constructor(){super(...arguments);k(this,"dimensions",this.config.dimensions)}getSQLType(){return`vector(${this.dimensions})`}mapToDriverValue(r){return JSON.stringify(r)}mapFromDriverValue(r){return r.slice(1,-1).split(",").map(n=>Number.parseFloat(n))}}k(lE,Xw,"PgVector");function Z3(e,t){const{name:r,config:n}=vt(e,t);return new aE(r,n)}function X3(){return{bigint:C3,bigserial:_3,boolean:sd,char:k3,cidr:T3,customType:E3,date:P3,doublePrecision:R3,inet:A3,integer:Ze,interval:I3,json:M3,jsonb:Pp,line:D3,macaddr:O3,macaddr8:L3,numeric:F3,point:V3,geometry:z3,real:pn,serial:An,smallint:B3,smallserial:U3,text:Ve,time:W3,timestamp:Jt,uuid:H3,varchar:q3,bit:Q3,halfvec:G3,sparsevec:K3,vector:Z3}}const Mm=Symbol.for("drizzle:PgInlineForeignKeys"),ly=Symbol.for("drizzle:EnableRLS");var Jw,e1,t1,r1,n1;class ou extends(n1=$t,r1=L,t1=Mm,e1=ly,Jw=$t.Symbol.ExtraConfigBuilder,n1){constructor(){super(...arguments);k(this,t1,[]);k(this,e1,!1);k(this,Jw)}}k(ou,r1,"PgTable"),k(ou,"Symbol",Object.assign({},$t.Symbol,{InlineForeignKeys:Mm,EnableRLS:ly}));function Y3(e,t,r,n,s=e){const i=new ou(e,n,s),a=typeof t=="function"?t(X3()):t,l=Object.fromEntries(Object.entries(a).map(([d,f])=>{const h=f;h.setName(d);const x=h.build(i);return i[Mm].push(...h.buildForeignKeys(x,i)),[d,x]})),c=Object.fromEntries(Object.entries(a).map(([d,f])=>{const h=f;h.setName(d);const x=h.buildExtraConfigColumn(i);return[d,x]})),u=Object.assign(i,l);return u[$t.Symbol.Columns]=l,u[$t.Symbol.ExtraConfigColumns]=c,Object.assign(u,{enableRLS:()=>(u[ou.Symbol.EnableRLS]=!0,u)})}const ks=(e,t,r)=>Y3(e,t,r,void 0);var je;(function(e){e.assertEqual=s=>s;function t(s){}e.assertIs=t;function r(s){throw new Error}e.assertNever=r,e.arrayToEnum=s=>{const i={};for(const a of s)i[a]=a;return i},e.getValidEnumValues=s=>{const i=e.objectKeys(s).filter(l=>typeof s[s[l]]!="number"),a={};for(const l of i)a[l]=s[l];return e.objectValues(a)},e.objectValues=s=>e.objectKeys(s).map(function(i){return s[i]}),e.objectKeys=typeof Object.keys=="function"?s=>Object.keys(s):s=>{const i=[];for(const a in s)Object.prototype.hasOwnProperty.call(s,a)&&i.push(a);return i},e.find=(s,i)=>{for(const a of s)if(i(a))return a},e.isInteger=typeof Number.isInteger=="function"?s=>Number.isInteger(s):s=>typeof s=="number"&&isFinite(s)&&Math.floor(s)===s;function n(s,i=" | "){return s.map(a=>typeof a=="string"?`'${a}'`:a).join(i)}e.joinValues=n,e.jsonStringifyReplacer=(s,i)=>typeof i=="bigint"?i.toString():i})(je||(je={}));var Dm;(function(e){e.mergeShapes=(t,r)=>({...t,...r})})(Dm||(Dm={}));const Z=je.arrayToEnum(["string","nan","number","integer","float","boolean","date","bigint","symbol","function","undefined","null","array","object","unknown","promise","void","never","map","set"]),vn=e=>{switch(typeof e){case"undefined":return Z.undefined;case"string":return Z.string;case"number":return isNaN(e)?Z.nan:Z.number;case"boolean":return Z.boolean;case"function":return Z.function;case"bigint":return Z.bigint;case"symbol":return Z.symbol;case"object":return Array.isArray(e)?Z.array:e===null?Z.null:e.then&&typeof e.then=="function"&&e.catch&&typeof e.catch=="function"?Z.promise:typeof Map<"u"&&e instanceof Map?Z.map:typeof Set<"u"&&e instanceof Set?Z.set:typeof Date<"u"&&e instanceof Date?Z.date:Z.object;default:return Z.unknown}},V=je.arrayToEnum(["invalid_type","invalid_literal","custom","invalid_union","invalid_union_discriminator","invalid_enum_value","unrecognized_keys","invalid_arguments","invalid_return_type","invalid_date","invalid_string","too_small","too_big","invalid_intersection_types","not_multiple_of","not_finite"]),J3=e=>JSON.stringify(e,null,2).replace(/"([^"]+)":/g,"$1:");class lr extends Error{get errors(){return this.issues}constructor(t){super(),this.issues=[],this.addIssue=n=>{this.issues=[...this.issues,n]},this.addIssues=(n=[])=>{this.issues=[...this.issues,...n]};const r=new.target.prototype;Object.setPrototypeOf?Object.setPrototypeOf(this,r):this.__proto__=r,this.name="ZodError",this.issues=t}format(t){const r=t||function(i){return i.message},n={_errors:[]},s=i=>{for(const a of i.issues)if(a.code==="invalid_union")a.unionErrors.map(s);else if(a.code==="invalid_return_type")s(a.returnTypeError);else if(a.code==="invalid_arguments")s(a.argumentsError);else if(a.path.length===0)n._errors.push(r(a));else{let l=n,c=0;for(;c<a.path.length;){const u=a.path[c];c===a.path.length-1?(l[u]=l[u]||{_errors:[]},l[u]._errors.push(r(a))):l[u]=l[u]||{_errors:[]},l=l[u],c++}}};return s(this),n}static assert(t){if(!(t instanceof lr))throw new Error(`Not a ZodError: ${t}`)}toString(){return this.message}get message(){return JSON.stringify(this.issues,je.jsonStringifyReplacer,2)}get isEmpty(){return this.issues.length===0}flatten(t=r=>r.message){const r={},n=[];for(const s of this.issues)s.path.length>0?(r[s.path[0]]=r[s.path[0]]||[],r[s.path[0]].push(t(s))):n.push(t(s));return{formErrors:n,fieldErrors:r}}get formErrors(){return this.flatten()}}lr.create=e=>new lr(e);const jo=(e,t)=>{let r;switch(e.code){case V.invalid_type:e.received===Z.undefined?r="Required":r=`Expected ${e.expected}, received ${e.received}`;break;case V.invalid_literal:r=`Invalid literal value, expected ${JSON.stringify(e.expected,je.jsonStringifyReplacer)}`;break;case V.unrecognized_keys:r=`Unrecognized key(s) in object: ${je.joinValues(e.keys,", ")}`;break;case V.invalid_union:r="Invalid input";break;case V.invalid_union_discriminator:r=`Invalid discriminator value. Expected ${je.joinValues(e.options)}`;break;case V.invalid_enum_value:r=`Invalid enum value. Expected ${je.joinValues(e.options)}, received '${e.received}'`;break;case V.invalid_arguments:r="Invalid function arguments";break;case V.invalid_return_type:r="Invalid function return type";break;case V.invalid_date:r="Invalid date";break;case V.invalid_string:typeof e.validation=="object"?"includes"in e.validation?(r=`Invalid input: must include "${e.validation.includes}"`,typeof e.validation.position=="number"&&(r=`${r} at one or more positions greater than or equal to ${e.validation.position}`)):"startsWith"in e.validation?r=`Invalid input: must start with "${e.validation.startsWith}"`:"endsWith"in e.validation?r=`Invalid input: must end with "${e.validation.endsWith}"`:je.assertNever(e.validation):e.validation!=="regex"?r=`Invalid ${e.validation}`:r="Invalid";break;case V.too_small:e.type==="array"?r=`Array must contain ${e.exact?"exactly":e.inclusive?"at least":"more than"} ${e.minimum} element(s)`:e.type==="string"?r=`String must contain ${e.exact?"exactly":e.inclusive?"at least":"over"} ${e.minimum} character(s)`:e.type==="number"?r=`Number must be ${e.exact?"exactly equal to ":e.inclusive?"greater than or equal to ":"greater than "}${e.minimum}`:e.type==="date"?r=`Date must be ${e.exact?"exactly equal to ":e.inclusive?"greater than or equal to ":"greater than "}${new Date(Number(e.minimum))}`:r="Invalid input";break;case V.too_big:e.type==="array"?r=`Array must contain ${e.exact?"exactly":e.inclusive?"at most":"less than"} ${e.maximum} element(s)`:e.type==="string"?r=`String must contain ${e.exact?"exactly":e.inclusive?"at most":"under"} ${e.maximum} character(s)`:e.type==="number"?r=`Number must be ${e.exact?"exactly":e.inclusive?"less than or equal to":"less than"} ${e.maximum}`:e.type==="bigint"?r=`BigInt must be ${e.exact?"exactly":e.inclusive?"less than or equal to":"less than"} ${e.maximum}`:e.type==="date"?r=`Date must be ${e.exact?"exactly":e.inclusive?"smaller than or equal to":"smaller than"} ${new Date(Number(e.maximum))}`:r="Invalid input";break;case V.custom:r="Invalid input";break;case V.invalid_intersection_types:r="Intersection results could not be merged";break;case V.not_multiple_of:r=`Number must be a multiple of ${e.multipleOf}`;break;case V.not_finite:r="Number must be finite";break;default:r=t.defaultError,je.assertNever(e)}return{message:r}};let cE=jo;function e5(e){cE=e}function au(){return cE}const lu=e=>{const{data:t,path:r,errorMaps:n,issueData:s}=e,i=[...r,...s.path||[]],a={...s,path:i};if(s.message!==void 0)return{...s,path:i,message:s.message};let l="";const c=n.filter(u=>!!u).slice().reverse();for(const u of c)l=u(a,{data:t,defaultError:l}).message;return{...s,path:i,message:l}},t5=[];function G(e,t){const r=au(),n=lu({issueData:t,data:e.data,path:e.path,errorMaps:[e.common.contextualErrorMap,e.schemaErrorMap,r,r===jo?void 0:jo].filter(s=>!!s)});e.common.issues.push(n)}class It{constructor(){this.value="valid"}dirty(){this.value==="valid"&&(this.value="dirty")}abort(){this.value!=="aborted"&&(this.value="aborted")}static mergeArray(t,r){const n=[];for(const s of r){if(s.status==="aborted")return fe;s.status==="dirty"&&t.dirty(),n.push(s.value)}return{status:t.value,value:n}}static async mergeObjectAsync(t,r){const n=[];for(const s of r){const i=await s.key,a=await s.value;n.push({key:i,value:a})}return It.mergeObjectSync(t,n)}static mergeObjectSync(t,r){const n={};for(const s of r){const{key:i,value:a}=s;if(i.status==="aborted"||a.status==="aborted")return fe;i.status==="dirty"&&t.dirty(),a.status==="dirty"&&t.dirty(),i.value!=="__proto__"&&(typeof a.value<"u"||s.alwaysSet)&&(n[i.value]=a.value)}return{status:t.value,value:n}}}const fe=Object.freeze({status:"aborted"}),Vi=e=>({status:"dirty",value:e}),Bt=e=>({status:"valid",value:e}),Om=e=>e.status==="aborted",Lm=e=>e.status==="dirty",li=e=>e.status==="valid",za=e=>typeof Promise<"u"&&e instanceof Promise;function cu(e,t,r,n){if(typeof t=="function"?e!==t||!n:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return t.get(e)}function uE(e,t,r,n,s){if(typeof t=="function"?e!==t||!s:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return t.set(e,r),r}var te;(function(e){e.errToObj=t=>typeof t=="string"?{message:t}:t||{},e.toString=t=>typeof t=="string"?t:t==null?void 0:t.message})(te||(te={}));var na,sa;class on{constructor(t,r,n,s){this._cachedPath=[],this.parent=t,this.data=r,this._path=n,this._key=s}get path(){return this._cachedPath.length||(this._key instanceof Array?this._cachedPath.push(...this._path,...this._key):this._cachedPath.push(...this._path,this._key)),this._cachedPath}}const cy=(e,t)=>{if(li(t))return{success:!0,data:t.value};if(!e.common.issues.length)throw new Error("Validation failed but no issues detected.");return{success:!1,get error(){if(this._error)return this._error;const r=new lr(e.common.issues);return this._error=r,this._error}}};function ge(e){if(!e)return{};const{errorMap:t,invalid_type_error:r,required_error:n,description:s}=e;if(t&&(r||n))throw new Error(`Can't use "invalid_type_error" or "required_error" in conjunction with custom error map.`);return t?{errorMap:t,description:s}:{errorMap:(a,l)=>{var c,u;const{message:d}=e;return a.code==="invalid_enum_value"?{message:d??l.defaultError}:typeof l.data>"u"?{message:(c=d??n)!==null&&c!==void 0?c:l.defaultError}:a.code!=="invalid_type"?{message:l.defaultError}:{message:(u=d??r)!==null&&u!==void 0?u:l.defaultError}},description:s}}class we{get description(){return this._def.description}_getType(t){return vn(t.data)}_getOrReturnCtx(t,r){return r||{common:t.parent.common,data:t.data,parsedType:vn(t.data),schemaErrorMap:this._def.errorMap,path:t.path,parent:t.parent}}_processInputParams(t){return{status:new It,ctx:{common:t.parent.common,data:t.data,parsedType:vn(t.data),schemaErrorMap:this._def.errorMap,path:t.path,parent:t.parent}}}_parseSync(t){const r=this._parse(t);if(za(r))throw new Error("Synchronous parse encountered promise.");return r}_parseAsync(t){const r=this._parse(t);return Promise.resolve(r)}parse(t,r){const n=this.safeParse(t,r);if(n.success)return n.data;throw n.error}safeParse(t,r){var n;const s={common:{issues:[],async:(n=r==null?void 0:r.async)!==null&&n!==void 0?n:!1,contextualErrorMap:r==null?void 0:r.errorMap},path:(r==null?void 0:r.path)||[],schemaErrorMap:this._def.errorMap,parent:null,data:t,parsedType:vn(t)},i=this._parseSync({data:t,path:s.path,parent:s});return cy(s,i)}"~validate"(t){var r,n;const s={common:{issues:[],async:!!this["~standard"].async},path:[],schemaErrorMap:this._def.errorMap,parent:null,data:t,parsedType:vn(t)};if(!this["~standard"].async)try{const i=this._parseSync({data:t,path:[],parent:s});return li(i)?{value:i.value}:{issues:s.common.issues}}catch(i){!((n=(r=i==null?void 0:i.message)===null||r===void 0?void 0:r.toLowerCase())===null||n===void 0)&&n.includes("encountered")&&(this["~standard"].async=!0),s.common={issues:[],async:!0}}return this._parseAsync({data:t,path:[],parent:s}).then(i=>li(i)?{value:i.value}:{issues:s.common.issues})}async parseAsync(t,r){const n=await this.safeParseAsync(t,r);if(n.success)return n.data;throw n.error}async safeParseAsync(t,r){const n={common:{issues:[],contextualErrorMap:r==null?void 0:r.errorMap,async:!0},path:(r==null?void 0:r.path)||[],schemaErrorMap:this._def.errorMap,parent:null,data:t,parsedType:vn(t)},s=this._parse({data:t,path:n.path,parent:n}),i=await(za(s)?s:Promise.resolve(s));return cy(n,i)}refine(t,r){const n=s=>typeof r=="string"||typeof r>"u"?{message:r}:typeof r=="function"?r(s):r;return this._refinement((s,i)=>{const a=t(s),l=()=>i.addIssue({code:V.custom,...n(s)});return typeof Promise<"u"&&a instanceof Promise?a.then(c=>c?!0:(l(),!1)):a?!0:(l(),!1)})}refinement(t,r){return this._refinement((n,s)=>t(n)?!0:(s.addIssue(typeof r=="function"?r(n,s):r),!1))}_refinement(t){return new zr({schema:this,typeName:ue.ZodEffects,effect:{type:"refinement",refinement:t}})}superRefine(t){return this._refinement(t)}constructor(t){this.spa=this.safeParseAsync,this._def=t,this.parse=this.parse.bind(this),this.safeParse=this.safeParse.bind(this),this.parseAsync=this.parseAsync.bind(this),this.safeParseAsync=this.safeParseAsync.bind(this),this.spa=this.spa.bind(this),this.refine=this.refine.bind(this),this.refinement=this.refinement.bind(this),this.superRefine=this.superRefine.bind(this),this.optional=this.optional.bind(this),this.nullable=this.nullable.bind(this),this.nullish=this.nullish.bind(this),this.array=this.array.bind(this),this.promise=this.promise.bind(this),this.or=this.or.bind(this),this.and=this.and.bind(this),this.transform=this.transform.bind(this),this.brand=this.brand.bind(this),this.default=this.default.bind(this),this.catch=this.catch.bind(this),this.describe=this.describe.bind(this),this.pipe=this.pipe.bind(this),this.readonly=this.readonly.bind(this),this.isNullable=this.isNullable.bind(this),this.isOptional=this.isOptional.bind(this),this["~standard"]={version:1,vendor:"zod",validate:r=>this["~validate"](r)}}optional(){return nn.create(this,this._def)}nullable(){return bs.create(this,this._def)}nullish(){return this.nullable().optional()}array(){return Lr.create(this)}promise(){return _o.create(this,this._def)}or(t){return Ha.create([this,t],this._def)}and(t){return qa.create(this,t,this._def)}transform(t){return new zr({...ge(this._def),schema:this,typeName:ue.ZodEffects,effect:{type:"transform",transform:t}})}default(t){const r=typeof t=="function"?t:()=>t;return new Xa({...ge(this._def),innerType:this,defaultValue:r,typeName:ue.ZodDefault})}brand(){return new Rp({typeName:ue.ZodBranded,type:this,...ge(this._def)})}catch(t){const r=typeof t=="function"?t:()=>t;return new Ya({...ge(this._def),innerType:this,catchValue:r,typeName:ue.ZodCatch})}describe(t){const r=this.constructor;return new r({...this._def,description:t})}pipe(t){return Sl.create(this,t)}readonly(){return Ja.create(this)}isOptional(){return this.safeParse(void 0).success}isNullable(){return this.safeParse(null).success}}const r5=/^c[^\s-]{8,}$/i,n5=/^[0-9a-z]+$/,s5=/^[0-9A-HJKMNP-TV-Z]{26}$/i,i5=/^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$/i,o5=/^[a-z0-9_-]{21}$/i,a5=/^[A-Za-z0-9-_]+\.[A-Za-z0-9-_]+\.[A-Za-z0-9-_]*$/,l5=/^[-+]?P(?!$)(?:(?:[-+]?\d+Y)|(?:[-+]?\d+[.,]\d+Y$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:(?:[-+]?\d+W)|(?:[-+]?\d+[.,]\d+W$))?(?:(?:[-+]?\d+D)|(?:[-+]?\d+[.,]\d+D$))?(?:T(?=[\d+-])(?:(?:[-+]?\d+H)|(?:[-+]?\d+[.,]\d+H$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:[-+]?\d+(?:[.,]\d+)?S)?)??$/,c5=/^(?!\.)(?!.*\.\.)([A-Z0-9_'+\-\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\-]*\.)+[A-Z]{2,}$/i,u5="^(\\p{Extended_Pictographic}|\\p{Emoji_Component})+$";let rf;const d5=/^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/,f5=/^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\/(3[0-2]|[12]?[0-9])$/,m5=/^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$/,h5=/^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/,p5=/^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/,g5=/^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/,dE="((\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\d|30)|(02)-(0[1-9]|1\\d|2[0-8])))",v5=new RegExp(`^${dE}## ROLE & PRIMARY GOAL:
You are a "Robotic Senior Software Engineer AI". Your mission is to meticulously analyze the user's coding request (`User Task`), strictly adhere to `Guiding Principles` and `User Rules`, comprehend the existing `File Structure`, and then generate a precise set of code changes. Your *sole and exclusive output* must be a single `git diff` formatted text. Zero tolerance for any deviation from the specified output format.

---

## INPUT SECTIONS OVERVIEW:
1.  `User Task`: The user's coding problem or feature request.
2.  `Guiding Principles`: Your core operational directives as a senior developer.
3.  `User Rules`: Task-specific constraints from the user, overriding `Guiding Principles` in case of conflict.
4.  `Output Format & Constraints`: Strict rules for your *only* output: the `git diff` text.
5.  `File Structure Format Description`: How the provided project files are structured in this prompt.
6.  `File Structure`: The current state of the project's files.

---

## 1. User Task
list all the buttons on this site

---

## 2. Guiding Principles (Your Senior Developer Logic)

### A. Analysis & Planning (Internal Thought Process - Do NOT output this part):
1.  **Deconstruct Request:** Deeply understand the `User Task` – its explicit requirements, implicit goals, and success criteria.
2.  **Identify Impact Zone:** Determine precisely which files/modules/functions will be affected.
3.  **Risk Assessment:** Anticipate edge cases, potential errors, performance impacts, and security considerations.
4.  **Assume with Reason:** If ambiguities exist in `User Task`, make well-founded assumptions based on best practices and existing code context. Document these assumptions internally if complex.
5.  **Optimal Solution Path:** Briefly evaluate alternative solutions, selecting the one that best balances simplicity, maintainability, readability, and consistency with existing project patterns.
6.  **Plan Changes:** Before generating diffs, mentally (or internally) outline the specific changes needed for each affected file.

### B. Code Generation & Standards:
*   **Simplicity & Idiomatic Code:** Prioritize the simplest, most direct solution. Write code that is idiomatic for the language and aligns with project conventions (inferred from `File Structure`). Avoid over-engineering.
*   **Respect Existing Architecture:** Strictly follow the established project structure, naming conventions, and coding style.
*   **Type Safety:** Employ type hints/annotations as appropriate for the language.
*   **Modularity:** Design changes to be modular and reusable where sensible.
*   **Documentation:**
    *   Add concise docstrings/comments for new public APIs, complex logic, or non-obvious decisions.
    *   Update existing documentation if changes render it inaccurate.
*   **Logging:** Introduce logging for critical operations or error states if consistent with the project's logging strategy.
*   **No New Dependencies:** Do NOT introduce external libraries/dependencies unless explicitly stated in `User Task` or `User Rules`.
*   **Atomicity of Changes (Hunks):** Each distinct change block (hunk in the diff output) should represent a small, logically coherent modification.
*   **Testability:** Design changes to be testable. If a testing framework is evident in `File Structure` or mentioned in `User Rules`, ensure new code is compatible.

---

## 3. User Rules
no additional rules
*(These are user-provided, project-specific rules or task constraints. They take precedence over `Guiding Principles`.)*

---

## 4. Output Format & Constraints (MANDATORY & STRICT)

Your **ONLY** output will be a single, valid `git diff` formatted text, specifically in the **unified diff format**. No other text, explanations, or apologies are permitted.

### Git Diff Format Structure:
*   If no changes are required, output an empty string.
*   For each modified, newly created, or deleted file, include a diff block. Multiple file diffs are concatenated directly.

### File Diff Block Structure:
A typical diff block for a modified file looks like this:
```diff
diff --git a/relative/path/to/file.ext b/relative/path/to/file.ext
index <hash_old>..<hash_new> <mode>
--- a/relative/path/to/file.ext
+++ b/relative/path/to/file.ext
@@ -START_OLD,LINES_OLD +START_NEW,LINES_NEW @@
 context line (unchanged)
-old line to be removed
+new line to be added
 another context line (unchanged)
```

*   **`diff --git a/path b/path` line:**
    *   Indicates the start of a diff for a specific file.
    *   `a/path/to/file.ext` is the path in the "original" version.
    *   `b/path/to/file.ext` is the path in the "new" version. Paths are project-root-relative, using forward slashes (`/`).
*   **`index <hash_old>..<hash_new> <mode>` line (Optional Detail):**
    *   This line provides metadata about the change. While standard in `git diff`, if generating precise hashes and modes is overly complex for your internal model, you may omit this line or use placeholder values (e.g., `index 0000000..0000000 100644`). The `---`, `+++`, and `@@` lines are the most critical for applying the patch.
*   **`--- a/path/to/file.ext` line:**
    *   Specifies the original file. For **newly created files**, this should be `--- /dev/null`.
*   **`+++ b/path/to/file.ext` line:**
    *   Specifies the new file. For **deleted files**, this should be `+++ /dev/null`. For **newly created files**, this is `+++ b/path/to/new_file.ext`.
*   **Hunk Header (`@@ -START_OLD,LINES_OLD +START_NEW,LINES_NEW @@`):**
    *   `START_OLD,LINES_OLD`: 1-based start line and number of lines from the original file affected by this hunk.
        *   For **newly created files**, this is `0,0`.
        *   For hunks that **only add lines** (no deletions from original), `LINES_OLD` is `0`. (e.g., `@@ -50,0 +51,5 @@` means 5 lines added after original line 50).
    *   `START_NEW,LINES_NEW`: 1-based start line and number of lines in the new file version affected by this hunk.
        *   For **deleted files** (where the entire file is deleted), this is `0,0` for the `+++ /dev/null` part.
        *   For hunks that **only delete lines** (no additions), `LINES_NEW` is `0`. (e.g., `@@ -25,3 +25,0 @@` means 3 lines deleted starting from original line 25).
*   **Hunk Content:**
    *   Lines prefixed with a space (` `) are context lines (unchanged).
    *   Lines prefixed with a minus (`-`) are lines removed from the original file.
    *   Lines prefixed with a plus (`+`) are lines added to the new file.
    *   Include at least 3 lines of unchanged context around changes, where available. If changes are at the very beginning or end of a file, or if hunks are very close, fewer context lines are acceptable as per standard unified diff practice.

### Specific Cases:
*   **Newly Created Files:**
    ```diff
    diff --git a/relative/path/to/new_file.ext b/relative/path/to/new_file.ext
    new file mode 100644
    index 0000000..<hash_new_placeholder>
    --- /dev/null
    +++ b/relative/path/to/new_file.ext
    @@ -0,0 +1,LINES_IN_NEW_FILE @@
    +line 1 of new file
    +line 2 of new file
    ...
    ```
    *(The `new file mode` and `index` lines should be included. Use `100644` for regular files. For the hash in the `index` line, a placeholder like `abcdef0` is acceptable if the actual hash cannot be computed.)*

*   **Deleted Files:**
    ```diff
    diff --git a/relative/path/to/deleted_file.ext b/relative/path/to/deleted_file.ext
    deleted file mode <mode_old_placeholder>
    index <hash_old_placeholder>..0000000
    --- a/relative/path/to/deleted_file.ext
    +++ /dev/null
    @@ -1,LINES_IN_OLD_FILE +0,0 @@
    -line 1 of old file
    -line 2 of old file
    ...
    ```
    *(The `deleted file mode` and `index` lines should be included. Use a placeholder like `100644` for mode and `abcdef0` for hash if actual values are unknown.)*

*   **Untouched Files:** Do NOT include any diff output for files that have no changes.

### General Constraints on Generated Code:
*   **Minimal & Precise Changes:** Generate the smallest, most targeted diff that correctly implements the `User Task` per all rules.
*   **Preserve Integrity:** Do not break existing functionality unless the `User Task` explicitly requires it. The codebase should remain buildable/runnable.
*   **Leverage Existing Code:** Prefer modifying existing files over creating new ones, unless a new file is architecturally justified or required by `User Task` or `User Rules`.

---

## 5. File Structure Format Description
The `File Structure` (provided in the next section) is formatted as follows:
1.  An initial project directory tree structure (e.g., generated by `tree` or similar).
2.  Followed by the content of each file, using an XML-like structure:
    <file path="RELATIVE/PATH/TO/FILE">
    (File content here)
    </file>
    The `path` attribute contains the project-root-relative path, using forward slashes (`/`).
    File content is the raw text of the file. Each file block is separated by a newline.

---

## 6. File Structure
);function fE(e){let t="([01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d";return e.precision?t=`${t}\\.\\d{${e.precision}}`:e.precision==null&&(t=`${t}(\\.\\d+)?`),t}function y5(e){return new RegExp(`^${fE(e)}## ROLE & PRIMARY GOAL:
You are a "Robotic Senior Software Engineer AI". Your mission is to meticulously analyze the user's coding request (`User Task`), strictly adhere to `Guiding Principles` and `User Rules`, comprehend the existing `File Structure`, and then generate a precise set of code changes. Your *sole and exclusive output* must be a single `git diff` formatted text. Zero tolerance for any deviation from the specified output format.

---

## INPUT SECTIONS OVERVIEW:
1.  `User Task`: The user's coding problem or feature request.
2.  `Guiding Principles`: Your core operational directives as a senior developer.
3.  `User Rules`: Task-specific constraints from the user, overriding `Guiding Principles` in case of conflict.
4.  `Output Format & Constraints`: Strict rules for your *only* output: the `git diff` text.
5.  `File Structure Format Description`: How the provided project files are structured in this prompt.
6.  `File Structure`: The current state of the project's files.

---

## 1. User Task
list all the buttons on this site

---

## 2. Guiding Principles (Your Senior Developer Logic)

### A. Analysis & Planning (Internal Thought Process - Do NOT output this part):
1.  **Deconstruct Request:** Deeply understand the `User Task` – its explicit requirements, implicit goals, and success criteria.
2.  **Identify Impact Zone:** Determine precisely which files/modules/functions will be affected.
3.  **Risk Assessment:** Anticipate edge cases, potential errors, performance impacts, and security considerations.
4.  **Assume with Reason:** If ambiguities exist in `User Task`, make well-founded assumptions based on best practices and existing code context. Document these assumptions internally if complex.
5.  **Optimal Solution Path:** Briefly evaluate alternative solutions, selecting the one that best balances simplicity, maintainability, readability, and consistency with existing project patterns.
6.  **Plan Changes:** Before generating diffs, mentally (or internally) outline the specific changes needed for each affected file.

### B. Code Generation & Standards:
*   **Simplicity & Idiomatic Code:** Prioritize the simplest, most direct solution. Write code that is idiomatic for the language and aligns with project conventions (inferred from `File Structure`). Avoid over-engineering.
*   **Respect Existing Architecture:** Strictly follow the established project structure, naming conventions, and coding style.
*   **Type Safety:** Employ type hints/annotations as appropriate for the language.
*   **Modularity:** Design changes to be modular and reusable where sensible.
*   **Documentation:**
    *   Add concise docstrings/comments for new public APIs, complex logic, or non-obvious decisions.
    *   Update existing documentation if changes render it inaccurate.
*   **Logging:** Introduce logging for critical operations or error states if consistent with the project's logging strategy.
*   **No New Dependencies:** Do NOT introduce external libraries/dependencies unless explicitly stated in `User Task` or `User Rules`.
*   **Atomicity of Changes (Hunks):** Each distinct change block (hunk in the diff output) should represent a small, logically coherent modification.
*   **Testability:** Design changes to be testable. If a testing framework is evident in `File Structure` or mentioned in `User Rules`, ensure new code is compatible.

---

## 3. User Rules
no additional rules
*(These are user-provided, project-specific rules or task constraints. They take precedence over `Guiding Principles`.)*

---

## 4. Output Format & Constraints (MANDATORY & STRICT)

Your **ONLY** output will be a single, valid `git diff` formatted text, specifically in the **unified diff format**. No other text, explanations, or apologies are permitted.

### Git Diff Format Structure:
*   If no changes are required, output an empty string.
*   For each modified, newly created, or deleted file, include a diff block. Multiple file diffs are concatenated directly.

### File Diff Block Structure:
A typical diff block for a modified file looks like this:
```diff
diff --git a/relative/path/to/file.ext b/relative/path/to/file.ext
index <hash_old>..<hash_new> <mode>
--- a/relative/path/to/file.ext
+++ b/relative/path/to/file.ext
@@ -START_OLD,LINES_OLD +START_NEW,LINES_NEW @@
 context line (unchanged)
-old line to be removed
+new line to be added
 another context line (unchanged)
```

*   **`diff --git a/path b/path` line:**
    *   Indicates the start of a diff for a specific file.
    *   `a/path/to/file.ext` is the path in the "original" version.
    *   `b/path/to/file.ext` is the path in the "new" version. Paths are project-root-relative, using forward slashes (`/`).
*   **`index <hash_old>..<hash_new> <mode>` line (Optional Detail):**
    *   This line provides metadata about the change. While standard in `git diff`, if generating precise hashes and modes is overly complex for your internal model, you may omit this line or use placeholder values (e.g., `index 0000000..0000000 100644`). The `---`, `+++`, and `@@` lines are the most critical for applying the patch.
*   **`--- a/path/to/file.ext` line:**
    *   Specifies the original file. For **newly created files**, this should be `--- /dev/null`.
*   **`+++ b/path/to/file.ext` line:**
    *   Specifies the new file. For **deleted files**, this should be `+++ /dev/null`. For **newly created files**, this is `+++ b/path/to/new_file.ext`.
*   **Hunk Header (`@@ -START_OLD,LINES_OLD +START_NEW,LINES_NEW @@`):**
    *   `START_OLD,LINES_OLD`: 1-based start line and number of lines from the original file affected by this hunk.
        *   For **newly created files**, this is `0,0`.
        *   For hunks that **only add lines** (no deletions from original), `LINES_OLD` is `0`. (e.g., `@@ -50,0 +51,5 @@` means 5 lines added after original line 50).
    *   `START_NEW,LINES_NEW`: 1-based start line and number of lines in the new file version affected by this hunk.
        *   For **deleted files** (where the entire file is deleted), this is `0,0` for the `+++ /dev/null` part.
        *   For hunks that **only delete lines** (no additions), `LINES_NEW` is `0`. (e.g., `@@ -25,3 +25,0 @@` means 3 lines deleted starting from original line 25).
*   **Hunk Content:**
    *   Lines prefixed with a space (` `) are context lines (unchanged).
    *   Lines prefixed with a minus (`-`) are lines removed from the original file.
    *   Lines prefixed with a plus (`+`) are lines added to the new file.
    *   Include at least 3 lines of unchanged context around changes, where available. If changes are at the very beginning or end of a file, or if hunks are very close, fewer context lines are acceptable as per standard unified diff practice.

### Specific Cases:
*   **Newly Created Files:**
    ```diff
    diff --git a/relative/path/to/new_file.ext b/relative/path/to/new_file.ext
    new file mode 100644
    index 0000000..<hash_new_placeholder>
    --- /dev/null
    +++ b/relative/path/to/new_file.ext
    @@ -0,0 +1,LINES_IN_NEW_FILE @@
    +line 1 of new file
    +line 2 of new file
    ...
    ```
    *(The `new file mode` and `index` lines should be included. Use `100644` for regular files. For the hash in the `index` line, a placeholder like `abcdef0` is acceptable if the actual hash cannot be computed.)*

*   **Deleted Files:**
    ```diff
    diff --git a/relative/path/to/deleted_file.ext b/relative/path/to/deleted_file.ext
    deleted file mode <mode_old_placeholder>
    index <hash_old_placeholder>..0000000
    --- a/relative/path/to/deleted_file.ext
    +++ /dev/null
    @@ -1,LINES_IN_OLD_FILE +0,0 @@
    -line 1 of old file
    -line 2 of old file
    ...
    ```
    *(The `deleted file mode` and `index` lines should be included. Use a placeholder like `100644` for mode and `abcdef0` for hash if actual values are unknown.)*

*   **Untouched Files:** Do NOT include any diff output for files that have no changes.

### General Constraints on Generated Code:
*   **Minimal & Precise Changes:** Generate the smallest, most targeted diff that correctly implements the `User Task` per all rules.
*   **Preserve Integrity:** Do not break existing functionality unless the `User Task` explicitly requires it. The codebase should remain buildable/runnable.
*   **Leverage Existing Code:** Prefer modifying existing files over creating new ones, unless a new file is architecturally justified or required by `User Task` or `User Rules`.

---

## 5. File Structure Format Description
The `File Structure` (provided in the next section) is formatted as follows:
1.  An initial project directory tree structure (e.g., generated by `tree` or similar).
2.  Followed by the content of each file, using an XML-like structure:
    <file path="RELATIVE/PATH/TO/FILE">
    (File content here)
    </file>
    The `path` attribute contains the project-root-relative path, using forward slashes (`/`).
    File content is the raw text of the file. Each file block is separated by a newline.

---

## 6. File Structure
)}function mE(e){let t=`${dE}T${fE(e)}`;const r=[];return r.push(e.local?"Z?":"Z"),e.offset&&r.push("([+-]\\d{2}:?\\d{2})"),t=`${t}(${r.join("|")})`,new RegExp(`^${t}## ROLE & PRIMARY GOAL:
You are a "Robotic Senior Software Engineer AI". Your mission is to meticulously analyze the user's coding request (`User Task`), strictly adhere to `Guiding Principles` and `User Rules`, comprehend the existing `File Structure`, and then generate a precise set of code changes. Your *sole and exclusive output* must be a single `git diff` formatted text. Zero tolerance for any deviation from the specified output format.

---

## INPUT SECTIONS OVERVIEW:
1.  `User Task`: The user's coding problem or feature request.
2.  `Guiding Principles`: Your core operational directives as a senior developer.
3.  `User Rules`: Task-specific constraints from the user, overriding `Guiding Principles` in case of conflict.
4.  `Output Format & Constraints`: Strict rules for your *only* output: the `git diff` text.
5.  `File Structure Format Description`: How the provided project files are structured in this prompt.
6.  `File Structure`: The current state of the project's files.

---

## 1. User Task
list all the buttons on this site

---

## 2. Guiding Principles (Your Senior Developer Logic)

### A. Analysis & Planning (Internal Thought Process - Do NOT output this part):
1.  **Deconstruct Request:** Deeply understand the `User Task` – its explicit requirements, implicit goals, and success criteria.
2.  **Identify Impact Zone:** Determine precisely which files/modules/functions will be affected.
3.  **Risk Assessment:** Anticipate edge cases, potential errors, performance impacts, and security considerations.
4.  **Assume with Reason:** If ambiguities exist in `User Task`, make well-founded assumptions based on best practices and existing code context. Document these assumptions internally if complex.
5.  **Optimal Solution Path:** Briefly evaluate alternative solutions, selecting the one that best balances simplicity, maintainability, readability, and consistency with existing project patterns.
6.  **Plan Changes:** Before generating diffs, mentally (or internally) outline the specific changes needed for each affected file.

### B. Code Generation & Standards:
*   **Simplicity & Idiomatic Code:** Prioritize the simplest, most direct solution. Write code that is idiomatic for the language and aligns with project conventions (inferred from `File Structure`). Avoid over-engineering.
*   **Respect Existing Architecture:** Strictly follow the established project structure, naming conventions, and coding style.
*   **Type Safety:** Employ type hints/annotations as appropriate for the language.
*   **Modularity:** Design changes to be modular and reusable where sensible.
*   **Documentation:**
    *   Add concise docstrings/comments for new public APIs, complex logic, or non-obvious decisions.
    *   Update existing documentation if changes render it inaccurate.
*   **Logging:** Introduce logging for critical operations or error states if consistent with the project's logging strategy.
*   **No New Dependencies:** Do NOT introduce external libraries/dependencies unless explicitly stated in `User Task` or `User Rules`.
*   **Atomicity of Changes (Hunks):** Each distinct change block (hunk in the diff output) should represent a small, logically coherent modification.
*   **Testability:** Design changes to be testable. If a testing framework is evident in `File Structure` or mentioned in `User Rules`, ensure new code is compatible.

---

## 3. User Rules
no additional rules
*(These are user-provided, project-specific rules or task constraints. They take precedence over `Guiding Principles`.)*

---

## 4. Output Format & Constraints (MANDATORY & STRICT)

Your **ONLY** output will be a single, valid `git diff` formatted text, specifically in the **unified diff format**. No other text, explanations, or apologies are permitted.

### Git Diff Format Structure:
*   If no changes are required, output an empty string.
*   For each modified, newly created, or deleted file, include a diff block. Multiple file diffs are concatenated directly.

### File Diff Block Structure:
A typical diff block for a modified file looks like this:
```diff
diff --git a/relative/path/to/file.ext b/relative/path/to/file.ext
index <hash_old>..<hash_new> <mode>
--- a/relative/path/to/file.ext
+++ b/relative/path/to/file.ext
@@ -START_OLD,LINES_OLD +START_NEW,LINES_NEW @@
 context line (unchanged)
-old line to be removed
+new line to be added
 another context line (unchanged)
```

*   **`diff --git a/path b/path` line:**
    *   Indicates the start of a diff for a specific file.
    *   `a/path/to/file.ext` is the path in the "original" version.
    *   `b/path/to/file.ext` is the path in the "new" version. Paths are project-root-relative, using forward slashes (`/`).
*   **`index <hash_old>..<hash_new> <mode>` line (Optional Detail):**
    *   This line provides metadata about the change. While standard in `git diff`, if generating precise hashes and modes is overly complex for your internal model, you may omit this line or use placeholder values (e.g., `index 0000000..0000000 100644`). The `---`, `+++`, and `@@` lines are the most critical for applying the patch.
*   **`--- a/path/to/file.ext` line:**
    *   Specifies the original file. For **newly created files**, this should be `--- /dev/null`.
*   **`+++ b/path/to/file.ext` line:**
    *   Specifies the new file. For **deleted files**, this should be `+++ /dev/null`. For **newly created files**, this is `+++ b/path/to/new_file.ext`.
*   **Hunk Header (`@@ -START_OLD,LINES_OLD +START_NEW,LINES_NEW @@`):**
    *   `START_OLD,LINES_OLD`: 1-based start line and number of lines from the original file affected by this hunk.
        *   For **newly created files**, this is `0,0`.
        *   For hunks that **only add lines** (no deletions from original), `LINES_OLD` is `0`. (e.g., `@@ -50,0 +51,5 @@` means 5 lines added after original line 50).
    *   `START_NEW,LINES_NEW`: 1-based start line and number of lines in the new file version affected by this hunk.
        *   For **deleted files** (where the entire file is deleted), this is `0,0` for the `+++ /dev/null` part.
        *   For hunks that **only delete lines** (no additions), `LINES_NEW` is `0`. (e.g., `@@ -25,3 +25,0 @@` means 3 lines deleted starting from original line 25).
*   **Hunk Content:**
    *   Lines prefixed with a space (` `) are context lines (unchanged).
    *   Lines prefixed with a minus (`-`) are lines removed from the original file.
    *   Lines prefixed with a plus (`+`) are lines added to the new file.
    *   Include at least 3 lines of unchanged context around changes, where available. If changes are at the very beginning or end of a file, or if hunks are very close, fewer context lines are acceptable as per standard unified diff practice.

### Specific Cases:
*   **Newly Created Files:**
    ```diff
    diff --git a/relative/path/to/new_file.ext b/relative/path/to/new_file.ext
    new file mode 100644
    index 0000000..<hash_new_placeholder>
    --- /dev/null
    +++ b/relative/path/to/new_file.ext
    @@ -0,0 +1,LINES_IN_NEW_FILE @@
    +line 1 of new file
    +line 2 of new file
    ...
    ```
    *(The `new file mode` and `index` lines should be included. Use `100644` for regular files. For the hash in the `index` line, a placeholder like `abcdef0` is acceptable if the actual hash cannot be computed.)*

*   **Deleted Files:**
    ```diff
    diff --git a/relative/path/to/deleted_file.ext b/relative/path/to/deleted_file.ext
    deleted file mode <mode_old_placeholder>
    index <hash_old_placeholder>..0000000
    --- a/relative/path/to/deleted_file.ext
    +++ /dev/null
    @@ -1,LINES_IN_OLD_FILE +0,0 @@
    -line 1 of old file
    -line 2 of old file
    ...
    ```
    *(The `deleted file mode` and `index` lines should be included. Use a placeholder like `100644` for mode and `abcdef0` for hash if actual values are unknown.)*

*   **Untouched Files:** Do NOT include any diff output for files that have no changes.

### General Constraints on Generated Code:
*   **Minimal & Precise Changes:** Generate the smallest, most targeted diff that correctly implements the `User Task` per all rules.
*   **Preserve Integrity:** Do not break existing functionality unless the `User Task` explicitly requires it. The codebase should remain buildable/runnable.
*   **Leverage Existing Code:** Prefer modifying existing files over creating new ones, unless a new file is architecturally justified or required by `User Task` or `User Rules`.

---

## 5. File Structure Format Description
The `File Structure` (provided in the next section) is formatted as follows:
1.  An initial project directory tree structure (e.g., generated by `tree` or similar).
2.  Followed by the content of each file, using an XML-like structure:
    <file path="RELATIVE/PATH/TO/FILE">
    (File content here)
    </file>
    The `path` attribute contains the project-root-relative path, using forward slashes (`/`).
    File content is the raw text of the file. Each file block is separated by a newline.

---

## 6. File Structure
)}function x5(e,t){return!!((t==="v4"||!t)&&d5.test(e)||(t==="v6"||!t)&&m5.test(e))}function w5(e,t){if(!a5.test(e))return!1;try{const[r]=e.split("."),n=r.replace(/-/g,"+").replace(/_/g,"/").padEnd(r.length+(4-r.length%4)%4,"="),s=JSON.parse(atob(n));return!(typeof s!="object"||s===null||!s.typ||!s.alg||t&&s.alg!==t)}catch{return!1}}function b5(e,t){return!!((t==="v4"||!t)&&f5.test(e)||(t==="v6"||!t)&&h5.test(e))}class Ir extends we{_parse(t){if(this._def.coerce&&(t.data=String(t.data)),this._getType(t)!==Z.string){const i=this._getOrReturnCtx(t);return G(i,{code:V.invalid_type,expected:Z.string,received:i.parsedType}),fe}const n=new It;let s;for(const i of this._def.checks)if(i.kind==="min")t.data.length<i.value&&(s=this._getOrReturnCtx(t,s),G(s,{code:V.too_small,minimum:i.value,type:"string",inclusive:!0,exact:!1,message:i.message}),n.dirty());else if(i.kind==="max")t.data.length>i.value&&(s=this._getOrReturnCtx(t,s),G(s,{code:V.too_big,maximum:i.value,type:"string",inclusive:!0,exact:!1,message:i.message}),n.dirty());else if(i.kind==="length"){const a=t.data.length>i.value,l=t.data.length<i.value;(a||l)&&(s=this._getOrReturnCtx(t,s),a?G(s,{code:V.too_big,maximum:i.value,type:"string",inclusive:!0,exact:!0,message:i.message}):l&&G(s,{code:V.too_small,minimum:i.value,type:"string",inclusive:!0,exact:!0,message:i.message}),n.dirty())}else if(i.kind==="email")c5.test(t.data)||(s=this._getOrReturnCtx(t,s),G(s,{validation:"email",code:V.invalid_string,message:i.message}),n.dirty());else if(i.kind==="emoji")rf||(rf=new RegExp(u5,"u")),rf.test(t.data)||(s=this._getOrReturnCtx(t,s),G(s,{validation:"emoji",code:V.invalid_string,message:i.message}),n.dirty());else if(i.kind==="uuid")i5.test(t.data)||(s=this._getOrReturnCtx(t,s),G(s,{validation:"uuid",code:V.invalid_string,message:i.message}),n.dirty());else if(i.kind==="nanoid")o5.test(t.data)||(s=this._getOrReturnCtx(t,s),G(s,{validation:"nanoid",code:V.invalid_string,message:i.message}),n.dirty());else if(i.kind==="cuid")r5.test(t.data)||(s=this._getOrReturnCtx(t,s),G(s,{validation:"cuid",code:V.invalid_string,message:i.message}),n.dirty());else if(i.kind==="cuid2")n5.test(t.data)||(s=this._getOrReturnCtx(t,s),G(s,{validation:"cuid2",code:V.invalid_string,message:i.message}),n.dirty());else if(i.kind==="ulid")s5.test(t.data)||(s=this._getOrReturnCtx(t,s),G(s,{validation:"ulid",code:V.invalid_string,message:i.message}),n.dirty());else if(i.kind==="url")try{new URL(t.data)}catch{s=this._getOrReturnCtx(t,s),G(s,{validation:"url",code:V.invalid_string,message:i.message}),n.dirty()}else i.kind==="regex"?(i.regex.lastIndex=0,i.regex.test(t.data)||(s=this._getOrReturnCtx(t,s),G(s,{validation:"regex",code:V.invalid_string,message:i.message}),n.dirty())):i.kind==="trim"?t.data=t.data.trim():i.kind==="includes"?t.data.includes(i.value,i.position)||(s=this._getOrReturnCtx(t,s),G(s,{code:V.invalid_string,validation:{includes:i.value,position:i.position},message:i.message}),n.dirty()):i.kind==="toLowerCase"?t.data=t.data.toLowerCase():i.kind==="toUpperCase"?t.data=t.data.toUpperCase():i.kind==="startsWith"?t.data.startsWith(i.value)||(s=this._getOrReturnCtx(t,s),G(s,{code:V.invalid_string,validation:{startsWith:i.value},message:i.message}),n.dirty()):i.kind==="endsWith"?t.data.endsWith(i.value)||(s=this._getOrReturnCtx(t,s),G(s,{code:V.invalid_string,validation:{endsWith:i.value},message:i.message}),n.dirty()):i.kind==="datetime"?mE(i).test(t.data)||(s=this._getOrReturnCtx(t,s),G(s,{code:V.invalid_string,validation:"datetime",message:i.message}),n.dirty()):i.kind==="date"?v5.test(t.data)||(s=this._getOrReturnCtx(t,s),G(s,{code:V.invalid_string,validation:"date",message:i.message}),n.dirty()):i.kind==="time"?y5(i).test(t.data)||(s=this._getOrReturnCtx(t,s),G(s,{code:V.invalid_string,validation:"time",message:i.message}),n.dirty()):i.kind==="duration"?l5.test(t.data)||(s=this._getOrReturnCtx(t,s),G(s,{validation:"duration",code:V.invalid_string,message:i.message}),n.dirty()):i.kind==="ip"?x5(t.data,i.version)||(s=this._getOrReturnCtx(t,s),G(s,{validation:"ip",code:V.invalid_string,message:i.message}),n.dirty()):i.kind==="jwt"?w5(t.data,i.alg)||(s=this._getOrReturnCtx(t,s),G(s,{validation:"jwt",code:V.invalid_string,message:i.message}),n.dirty()):i.kind==="cidr"?b5(t.data,i.version)||(s=this._getOrReturnCtx(t,s),G(s,{validation:"cidr",code:V.invalid_string,message:i.message}),n.dirty()):i.kind==="base64"?p5.test(t.data)||(s=this._getOrReturnCtx(t,s),G(s,{validation:"base64",code:V.invalid_string,message:i.message}),n.dirty()):i.kind==="base64url"?g5.test(t.data)||(s=this._getOrReturnCtx(t,s),G(s,{validation:"base64url",code:V.invalid_string,message:i.message}),n.dirty()):je.assertNever(i);return{status:n.value,value:t.data}}_regex(t,r,n){return this.refinement(s=>t.test(s),{validation:r,code:V.invalid_string,...te.errToObj(n)})}_addCheck(t){return new Ir({...this._def,checks:[...this._def.checks,t]})}email(t){return this._addCheck({kind:"email",...te.errToObj(t)})}url(t){return this._addCheck({kind:"url",...te.errToObj(t)})}emoji(t){return this._addCheck({kind:"emoji",...te.errToObj(t)})}uuid(t){return this._addCheck({kind:"uuid",...te.errToObj(t)})}nanoid(t){return this._addCheck({kind:"nanoid",...te.errToObj(t)})}cuid(t){return this._addCheck({kind:"cuid",...te.errToObj(t)})}cuid2(t){return this._addCheck({kind:"cuid2",...te.errToObj(t)})}ulid(t){return this._addCheck({kind:"ulid",...te.errToObj(t)})}base64(t){return this._addCheck({kind:"base64",...te.errToObj(t)})}base64url(t){return this._addCheck({kind:"base64url",...te.errToObj(t)})}jwt(t){return this._addCheck({kind:"jwt",...te.errToObj(t)})}ip(t){return this._addCheck({kind:"ip",...te.errToObj(t)})}cidr(t){return this._addCheck({kind:"cidr",...te.errToObj(t)})}datetime(t){var r,n;return typeof t=="string"?this._addCheck({kind:"datetime",precision:null,offset:!1,local:!1,message:t}):this._addCheck({kind:"datetime",precision:typeof(t==null?void 0:t.precision)>"u"?null:t==null?void 0:t.precision,offset:(r=t==null?void 0:t.offset)!==null&&r!==void 0?r:!1,local:(n=t==null?void 0:t.local)!==null&&n!==void 0?n:!1,...te.errToObj(t==null?void 0:t.message)})}date(t){return this._addCheck({kind:"date",message:t})}time(t){return typeof t=="string"?this._addCheck({kind:"time",precision:null,message:t}):this._addCheck({kind:"time",precision:typeof(t==null?void 0:t.precision)>"u"?null:t==null?void 0:t.precision,...te.errToObj(t==null?void 0:t.message)})}duration(t){return this._addCheck({kind:"duration",...te.errToObj(t)})}regex(t,r){return this._addCheck({kind:"regex",regex:t,...te.errToObj(r)})}includes(t,r){return this._addCheck({kind:"includes",value:t,position:r==null?void 0:r.position,...te.errToObj(r==null?void 0:r.message)})}startsWith(t,r){return this._addCheck({kind:"startsWith",value:t,...te.errToObj(r)})}endsWith(t,r){return this._addCheck({kind:"endsWith",value:t,...te.errToObj(r)})}min(t,r){return this._addCheck({kind:"min",value:t,...te.errToObj(r)})}max(t,r){return this._addCheck({kind:"max",value:t,...te.errToObj(r)})}length(t,r){return this._addCheck({kind:"length",value:t,...te.errToObj(r)})}nonempty(t){return this.min(1,te.errToObj(t))}trim(){return new Ir({...this._def,checks:[...this._def.checks,{kind:"trim"}]})}toLowerCase(){return new Ir({...this._def,checks:[...this._def.checks,{kind:"toLowerCase"}]})}toUpperCase(){return new Ir({...this._def,checks:[...this._def.checks,{kind:"toUpperCase"}]})}get isDatetime(){return!!this._def.checks.find(t=>t.kind==="datetime")}get isDate(){return!!this._def.checks.find(t=>t.kind==="date")}get isTime(){return!!this._def.checks.find(t=>t.kind==="time")}get isDuration(){return!!this._def.checks.find(t=>t.kind==="duration")}get isEmail(){return!!this._def.checks.find(t=>t.kind==="email")}get isURL(){return!!this._def.checks.find(t=>t.kind==="url")}get isEmoji(){return!!this._def.checks.find(t=>t.kind==="emoji")}get isUUID(){return!!this._def.checks.find(t=>t.kind==="uuid")}get isNANOID(){return!!this._def.checks.find(t=>t.kind==="nanoid")}get isCUID(){return!!this._def.checks.find(t=>t.kind==="cuid")}get isCUID2(){return!!this._def.checks.find(t=>t.kind==="cuid2")}get isULID(){return!!this._def.checks.find(t=>t.kind==="ulid")}get isIP(){return!!this._def.checks.find(t=>t.kind==="ip")}get isCIDR(){return!!this._def.checks.find(t=>t.kind==="cidr")}get isBase64(){return!!this._def.checks.find(t=>t.kind==="base64")}get isBase64url(){return!!this._def.checks.find(t=>t.kind==="base64url")}get minLength(){let t=null;for(const r of this._def.checks)r.kind==="min"&&(t===null||r.value>t)&&(t=r.value);return t}get maxLength(){let t=null;for(const r of this._def.checks)r.kind==="max"&&(t===null||r.value<t)&&(t=r.value);return t}}Ir.create=e=>{var t;return new Ir({checks:[],typeName:ue.ZodString,coerce:(t=e==null?void 0:e.coerce)!==null&&t!==void 0?t:!1,...ge(e)})};function N5(e,t){const r=(e.toString().split(".")[1]||"").length,n=(t.toString().split(".")[1]||"").length,s=r>n?r:n,i=parseInt(e.toFixed(s).replace(".","")),a=parseInt(t.toFixed(s).replace(".",""));return i%a/Math.pow(10,s)}class ys extends we{constructor(){super(...arguments),this.min=this.gte,this.max=this.lte,this.step=this.multipleOf}_parse(t){if(this._def.coerce&&(t.data=Number(t.data)),this._getType(t)!==Z.number){const i=this._getOrReturnCtx(t);return G(i,{code:V.invalid_type,expected:Z.number,received:i.parsedType}),fe}let n;const s=new It;for(const i of this._def.checks)i.kind==="int"?je.isInteger(t.data)||(n=this._getOrReturnCtx(t,n),G(n,{code:V.invalid_type,expected:"integer",received:"float",message:i.message}),s.dirty()):i.kind==="min"?(i.inclusive?t.data<i.value:t.data<=i.value)&&(n=this._getOrReturnCtx(t,n),G(n,{code:V.too_small,minimum:i.value,type:"number",inclusive:i.inclusive,exact:!1,message:i.message}),s.dirty()):i.kind==="max"?(i.inclusive?t.data>i.value:t.data>=i.value)&&(n=this._getOrReturnCtx(t,n),G(n,{code:V.too_big,maximum:i.value,type:"number",inclusive:i.inclusive,exact:!1,message:i.message}),s.dirty()):i.kind==="multipleOf"?N5(t.data,i.value)!==0&&(n=this._getOrReturnCtx(t,n),G(n,{code:V.not_multiple_of,multipleOf:i.value,message:i.message}),s.dirty()):i.kind==="finite"?Number.isFinite(t.data)||(n=this._getOrReturnCtx(t,n),G(n,{code:V.not_finite,message:i.message}),s.dirty()):je.assertNever(i);return{status:s.value,value:t.data}}gte(t,r){return this.setLimit("min",t,!0,te.toString(r))}gt(t,r){return this.setLimit("min",t,!1,te.toString(r))}lte(t,r){return this.setLimit("max",t,!0,te.toString(r))}lt(t,r){return this.setLimit("max",t,!1,te.toString(r))}setLimit(t,r,n,s){return new ys({...this._def,checks:[...this._def.checks,{kind:t,value:r,inclusive:n,message:te.toString(s)}]})}_addCheck(t){return new ys({...this._def,checks:[...this._def.checks,t]})}int(t){return this._addCheck({kind:"int",message:te.toString(t)})}positive(t){return this._addCheck({kind:"min",value:0,inclusive:!1,message:te.toString(t)})}negative(t){return this._addCheck({kind:"max",value:0,inclusive:!1,message:te.toString(t)})}nonpositive(t){return this._addCheck({kind:"max",value:0,inclusive:!0,message:te.toString(t)})}nonnegative(t){return this._addCheck({kind:"min",value:0,inclusive:!0,message:te.toString(t)})}multipleOf(t,r){return this._addCheck({kind:"multipleOf",value:t,message:te.toString(r)})}finite(t){return this._addCheck({kind:"finite",message:te.toString(t)})}safe(t){return this._addCheck({kind:"min",inclusive:!0,value:Number.MIN_SAFE_INTEGER,message:te.toString(t)})._addCheck({kind:"max",inclusive:!0,value:Number.MAX_SAFE_INTEGER,message:te.toString(t)})}get minValue(){let t=null;for(const r of this._def.checks)r.kind==="min"&&(t===null||r.value>t)&&(t=r.value);return t}get maxValue(){let t=null;for(const r of this._def.checks)r.kind==="max"&&(t===null||r.value<t)&&(t=r.value);return t}get isInt(){return!!this._def.checks.find(t=>t.kind==="int"||t.kind==="multipleOf"&&je.isInteger(t.value))}get isFinite(){let t=null,r=null;for(const n of this._def.checks){if(n.kind==="finite"||n.kind==="int"||n.kind==="multipleOf")return!0;n.kind==="min"?(r===null||n.value>r)&&(r=n.value):n.kind==="max"&&(t===null||n.value<t)&&(t=n.value)}return Number.isFinite(r)&&Number.isFinite(t)}}ys.create=e=>new ys({checks:[],typeName:ue.ZodNumber,coerce:(e==null?void 0:e.coerce)||!1,...ge(e)});class xs extends we{constructor(){super(...arguments),this.min=this.gte,this.max=this.lte}_parse(t){if(this._def.coerce)try{t.data=BigInt(t.data)}catch{return this._getInvalidInput(t)}if(this._getType(t)!==Z.bigint)return this._getInvalidInput(t);let n;const s=new It;for(const i of this._def.checks)i.kind==="min"?(i.inclusive?t.data<i.value:t.data<=i.value)&&(n=this._getOrReturnCtx(t,n),G(n,{code:V.too_small,type:"bigint",minimum:i.value,inclusive:i.inclusive,message:i.message}),s.dirty()):i.kind==="max"?(i.inclusive?t.data>i.value:t.data>=i.value)&&(n=this._getOrReturnCtx(t,n),G(n,{code:V.too_big,type:"bigint",maximum:i.value,inclusive:i.inclusive,message:i.message}),s.dirty()):i.kind==="multipleOf"?t.data%i.value!==BigInt(0)&&(n=this._getOrReturnCtx(t,n),G(n,{code:V.not_multiple_of,multipleOf:i.value,message:i.message}),s.dirty()):je.assertNever(i);return{status:s.value,value:t.data}}_getInvalidInput(t){const r=this._getOrReturnCtx(t);return G(r,{code:V.invalid_type,expected:Z.bigint,received:r.parsedType}),fe}gte(t,r){return this.setLimit("min",t,!0,te.toString(r))}gt(t,r){return this.setLimit("min",t,!1,te.toString(r))}lte(t,r){return this.setLimit("max",t,!0,te.toString(r))}lt(t,r){return this.setLimit("max",t,!1,te.toString(r))}setLimit(t,r,n,s){return new xs({...this._def,checks:[...this._def.checks,{kind:t,value:r,inclusive:n,message:te.toString(s)}]})}_addCheck(t){return new xs({...this._def,checks:[...this._def.checks,t]})}positive(t){return this._addCheck({kind:"min",value:BigInt(0),inclusive:!1,message:te.toString(t)})}negative(t){return this._addCheck({kind:"max",value:BigInt(0),inclusive:!1,message:te.toString(t)})}nonpositive(t){return this._addCheck({kind:"max",value:BigInt(0),inclusive:!0,message:te.toString(t)})}nonnegative(t){return this._addCheck({kind:"min",value:BigInt(0),inclusive:!0,message:te.toString(t)})}multipleOf(t,r){return this._addCheck({kind:"multipleOf",value:t,message:te.toString(r)})}get minValue(){let t=null;for(const r of this._def.checks)r.kind==="min"&&(t===null||r.value>t)&&(t=r.value);return t}get maxValue(){let t=null;for(const r of this._def.checks)r.kind==="max"&&(t===null||r.value<t)&&(t=r.value);return t}}xs.create=e=>{var t;return new xs({checks:[],typeName:ue.ZodBigInt,coerce:(t=e==null?void 0:e.coerce)!==null&&t!==void 0?t:!1,...ge(e)})};class Ba extends we{_parse(t){if(this._def.coerce&&(t.data=!!t.data),this._getType(t)!==Z.boolean){const n=this._getOrReturnCtx(t);return G(n,{code:V.invalid_type,expected:Z.boolean,received:n.parsedType}),fe}return Bt(t.data)}}Ba.create=e=>new Ba({typeName:ue.ZodBoolean,coerce:(e==null?void 0:e.coerce)||!1,...ge(e)});class ci extends we{_parse(t){if(this._def.coerce&&(t.data=new Date(t.data)),this._getType(t)!==Z.date){const i=this._getOrReturnCtx(t);return G(i,{code:V.invalid_type,expected:Z.date,received:i.parsedType}),fe}if(isNaN(t.data.getTime())){const i=this._getOrReturnCtx(t);return G(i,{code:V.invalid_date}),fe}const n=new It;let s;for(const i of this._def.checks)i.kind==="min"?t.data.getTime()<i.value&&(s=this._getOrReturnCtx(t,s),G(s,{code:V.too_small,message:i.message,inclusive:!0,exact:!1,minimum:i.value,type:"date"}),n.dirty()):i.kind==="max"?t.data.getTime()>i.value&&(s=this._getOrReturnCtx(t,s),G(s,{code:V.too_big,message:i.message,inclusive:!0,exact:!1,maximum:i.value,type:"date"}),n.dirty()):je.assertNever(i);return{status:n.value,value:new Date(t.data.getTime())}}_addCheck(t){return new ci({...this._def,checks:[...this._def.checks,t]})}min(t,r){return this._addCheck({kind:"min",value:t.getTime(),message:te.toString(r)})}max(t,r){return this._addCheck({kind:"max",value:t.getTime(),message:te.toString(r)})}get minDate(){let t=null;for(const r of this._def.checks)r.kind==="min"&&(t===null||r.value>t)&&(t=r.value);return t!=null?new Date(t):null}get maxDate(){let t=null;for(const r of this._def.checks)r.kind==="max"&&(t===null||r.value<t)&&(t=r.value);return t!=null?new Date(t):null}}ci.create=e=>new ci({checks:[],coerce:(e==null?void 0:e.coerce)||!1,typeName:ue.ZodDate,...ge(e)});class uu extends we{_parse(t){if(this._getType(t)!==Z.symbol){const n=this._getOrReturnCtx(t);return G(n,{code:V.invalid_type,expected:Z.symbol,received:n.parsedType}),fe}return Bt(t.data)}}uu.create=e=>new uu({typeName:ue.ZodSymbol,...ge(e)});class Ua extends we{_parse(t){if(this._getType(t)!==Z.undefined){const n=this._getOrReturnCtx(t);return G(n,{code:V.invalid_type,expected:Z.undefined,received:n.parsedType}),fe}return Bt(t.data)}}Ua.create=e=>new Ua({typeName:ue.ZodUndefined,...ge(e)});class Wa extends we{_parse(t){if(this._getType(t)!==Z.null){const n=this._getOrReturnCtx(t);return G(n,{code:V.invalid_type,expected:Z.null,received:n.parsedType}),fe}return Bt(t.data)}}Wa.create=e=>new Wa({typeName:ue.ZodNull,...ge(e)});class Co extends we{constructor(){super(...arguments),this._any=!0}_parse(t){return Bt(t.data)}}Co.create=e=>new Co({typeName:ue.ZodAny,...ge(e)});class Zs extends we{constructor(){super(...arguments),this._unknown=!0}_parse(t){return Bt(t.data)}}Zs.create=e=>new Zs({typeName:ue.ZodUnknown,...ge(e)});class En extends we{_parse(t){const r=this._getOrReturnCtx(t);return G(r,{code:V.invalid_type,expected:Z.never,received:r.parsedType}),fe}}En.create=e=>new En({typeName:ue.ZodNever,...ge(e)});class du extends we{_parse(t){if(this._getType(t)!==Z.undefined){const n=this._getOrReturnCtx(t);return G(n,{code:V.invalid_type,expected:Z.void,received:n.parsedType}),fe}return Bt(t.data)}}du.create=e=>new du({typeName:ue.ZodVoid,...ge(e)});class Lr extends we{_parse(t){const{ctx:r,status:n}=this._processInputParams(t),s=this._def;if(r.parsedType!==Z.array)return G(r,{code:V.invalid_type,expected:Z.array,received:r.parsedType}),fe;if(s.exactLength!==null){const a=r.data.length>s.exactLength.value,l=r.data.length<s.exactLength.value;(a||l)&&(G(r,{code:a?V.too_big:V.too_small,minimum:l?s.exactLength.value:void 0,maximum:a?s.exactLength.value:void 0,type:"array",inclusive:!0,exact:!0,message:s.exactLength.message}),n.dirty())}if(s.minLength!==null&&r.data.length<s.minLength.value&&(G(r,{code:V.too_small,minimum:s.minLength.value,type:"array",inclusive:!0,exact:!1,message:s.minLength.message}),n.dirty()),s.maxLength!==null&&r.data.length>s.maxLength.value&&(G(r,{code:V.too_big,maximum:s.maxLength.value,type:"array",inclusive:!0,exact:!1,message:s.maxLength.message}),n.dirty()),r.common.async)return Promise.all([...r.data].map((a,l)=>s.type._parseAsync(new on(r,a,r.path,l)))).then(a=>It.mergeArray(n,a));const i=[...r.data].map((a,l)=>s.type._parseSync(new on(r,a,r.path,l)));return It.mergeArray(n,i)}get element(){return this._def.type}min(t,r){return new Lr({...this._def,minLength:{value:t,message:te.toString(r)}})}max(t,r){return new Lr({...this._def,maxLength:{value:t,message:te.toString(r)}})}length(t,r){return new Lr({...this._def,exactLength:{value:t,message:te.toString(r)}})}nonempty(t){return this.min(1,t)}}Lr.create=(e,t)=>new Lr({type:e,minLength:null,maxLength:null,exactLength:null,typeName:ue.ZodArray,...ge(t)});function ji(e){if(e instanceof Ge){const t={};for(const r in e.shape){const n=e.shape[r];t[r]=nn.create(ji(n))}return new Ge({...e._def,shape:()=>t})}else return e instanceof Lr?new Lr({...e._def,type:ji(e.element)}):e instanceof nn?nn.create(ji(e.unwrap())):e instanceof bs?bs.create(ji(e.unwrap())):e instanceof an?an.create(e.items.map(t=>ji(t))):e}class Ge extends we{constructor(){super(...arguments),this._cached=null,this.nonstrict=this.passthrough,this.augment=this.extend}_getCached(){if(this._cached!==null)return this._cached;const t=this._def.shape(),r=je.objectKeys(t);return this._cached={shape:t,keys:r}}_parse(t){if(this._getType(t)!==Z.object){const u=this._getOrReturnCtx(t);return G(u,{code:V.invalid_type,expected:Z.object,received:u.parsedType}),fe}const{status:n,ctx:s}=this._processInputParams(t),{shape:i,keys:a}=this._getCached(),l=[];if(!(this._def.catchall instanceof En&&this._def.unknownKeys==="strip"))for(const u in s.data)a.includes(u)||l.push(u);const c=[];for(const u of a){const d=i[u],f=s.data[u];c.push({key:{status:"valid",value:u},value:d._parse(new on(s,f,s.path,u)),alwaysSet:u in s.data})}if(this._def.catchall instanceof En){const u=this._def.unknownKeys;if(u==="passthrough")for(const d of l)c.push({key:{status:"valid",value:d},value:{status:"valid",value:s.data[d]}});else if(u==="strict")l.length>0&&(G(s,{code:V.unrecognized_keys,keys:l}),n.dirty());else if(u!=="strip")throw new Error("Internal ZodObject error: invalid unknownKeys value.")}else{const u=this._def.catchall;for(const d of l){const f=s.data[d];c.push({key:{status:"valid",value:d},value:u._parse(new on(s,f,s.path,d)),alwaysSet:d in s.data})}}return s.common.async?Promise.resolve().then(async()=>{const u=[];for(const d of c){const f=await d.key,h=await d.value;u.push({key:f,value:h,alwaysSet:d.alwaysSet})}return u}).then(u=>It.mergeObjectSync(n,u)):It.mergeObjectSync(n,c)}get shape(){return this._def.shape()}strict(t){return te.errToObj,new Ge({...this._def,unknownKeys:"strict",...t!==void 0?{errorMap:(r,n)=>{var s,i,a,l;const c=(a=(i=(s=this._def).errorMap)===null||i===void 0?void 0:i.call(s,r,n).message)!==null&&a!==void 0?a:n.defaultError;return r.code==="unrecognized_keys"?{message:(l=te.errToObj(t).message)!==null&&l!==void 0?l:c}:{message:c}}}:{}})}strip(){return new Ge({...this._def,unknownKeys:"strip"})}passthrough(){return new Ge({...this._def,unknownKeys:"passthrough"})}extend(t){return new Ge({...this._def,shape:()=>({...this._def.shape(),...t})})}merge(t){return new Ge({unknownKeys:t._def.unknownKeys,catchall:t._def.catchall,shape:()=>({...this._def.shape(),...t._def.shape()}),typeName:ue.ZodObject})}setKey(t,r){return this.augment({[t]:r})}catchall(t){return new Ge({...this._def,catchall:t})}pick(t){const r={};return je.objectKeys(t).forEach(n=>{t[n]&&this.shape[n]&&(r[n]=this.shape[n])}),new Ge({...this._def,shape:()=>r})}omit(t){const r={};return je.objectKeys(this.shape).forEach(n=>{t[n]||(r[n]=this.shape[n])}),new Ge({...this._def,shape:()=>r})}deepPartial(){return ji(this)}partial(t){const r={};return je.objectKeys(this.shape).forEach(n=>{const s=this.shape[n];t&&!t[n]?r[n]=s:r[n]=s.optional()}),new Ge({...this._def,shape:()=>r})}required(t){const r={};return je.objectKeys(this.shape).forEach(n=>{if(t&&!t[n])r[n]=this.shape[n];else{let i=this.shape[n];for(;i instanceof nn;)i=i._def.innerType;r[n]=i}}),new Ge({...this._def,shape:()=>r})}keyof(){return hE(je.objectKeys(this.shape))}}Ge.create=(e,t)=>new Ge({shape:()=>e,unknownKeys:"strip",catchall:En.create(),typeName:ue.ZodObject,...ge(t)});Ge.strictCreate=(e,t)=>new Ge({shape:()=>e,unknownKeys:"strict",catchall:En.create(),typeName:ue.ZodObject,...ge(t)});Ge.lazycreate=(e,t)=>new Ge({shape:e,unknownKeys:"strip",catchall:En.create(),typeName:ue.ZodObject,...ge(t)});class Ha extends we{_parse(t){const{ctx:r}=this._processInputParams(t),n=this._def.options;function s(i){for(const l of i)if(l.result.status==="valid")return l.result;for(const l of i)if(l.result.status==="dirty")return r.common.issues.push(...l.ctx.common.issues),l.result;const a=i.map(l=>new lr(l.ctx.common.issues));return G(r,{code:V.invalid_union,unionErrors:a}),fe}if(r.common.async)return Promise.all(n.map(async i=>{const a={...r,common:{...r.common,issues:[]},parent:null};return{result:await i._parseAsync({data:r.data,path:r.path,parent:a}),ctx:a}})).then(s);{let i;const a=[];for(const c of n){const u={...r,common:{...r.common,issues:[]},parent:null},d=c._parseSync({data:r.data,path:r.path,parent:u});if(d.status==="valid")return d;d.status==="dirty"&&!i&&(i={result:d,ctx:u}),u.common.issues.length&&a.push(u.common.issues)}if(i)return r.common.issues.push(...i.ctx.common.issues),i.result;const l=a.map(c=>new lr(c));return G(r,{code:V.invalid_union,unionErrors:l}),fe}}get options(){return this._def.options}}Ha.create=(e,t)=>new Ha({options:e,typeName:ue.ZodUnion,...ge(t)});const mn=e=>e instanceof Ga?mn(e.schema):e instanceof zr?mn(e.innerType()):e instanceof Ka?[e.value]:e instanceof ws?e.options:e instanceof Za?je.objectValues(e.enum):e instanceof Xa?mn(e._def.innerType):e instanceof Ua?[void 0]:e instanceof Wa?[null]:e instanceof nn?[void 0,...mn(e.unwrap())]:e instanceof bs?[null,...mn(e.unwrap())]:e instanceof Rp||e instanceof Ja?mn(e.unwrap()):e instanceof Ya?mn(e._def.innerType):[];class id extends we{_parse(t){const{ctx:r}=this._processInputParams(t);if(r.parsedType!==Z.object)return G(r,{code:V.invalid_type,expected:Z.object,received:r.parsedType}),fe;const n=this.discriminator,s=r.data[n],i=this.optionsMap.get(s);return i?r.common.async?i._parseAsync({data:r.data,path:r.path,parent:r}):i._parseSync({data:r.data,path:r.path,parent:r}):(G(r,{code:V.invalid_union_discriminator,options:Array.from(this.optionsMap.keys()),path:[n]}),fe)}get discriminator(){return this._def.discriminator}get options(){return this._def.options}get optionsMap(){return this._def.optionsMap}static create(t,r,n){const s=new Map;for(const i of r){const a=mn(i.shape[t]);if(!a.length)throw new Error(`A discriminator value for key \`${t}\` could not be extracted from all schema options`);for(const l of a){if(s.has(l))throw new Error(`Discriminator property ${String(t)} has duplicate value ${String(l)}`);s.set(l,i)}}return new id({typeName:ue.ZodDiscriminatedUnion,discriminator:t,options:r,optionsMap:s,...ge(n)})}}function Fm(e,t){const r=vn(e),n=vn(t);if(e===t)return{valid:!0,data:e};if(r===Z.object&&n===Z.object){const s=je.objectKeys(t),i=je.objectKeys(e).filter(l=>s.indexOf(l)!==-1),a={...e,...t};for(const l of i){const c=Fm(e[l],t[l]);if(!c.valid)return{valid:!1};a[l]=c.data}return{valid:!0,data:a}}else if(r===Z.array&&n===Z.array){if(e.length!==t.length)return{valid:!1};const s=[];for(let i=0;i<e.length;i++){const a=e[i],l=t[i],c=Fm(a,l);if(!c.valid)return{valid:!1};s.push(c.data)}return{valid:!0,data:s}}else return r===Z.date&&n===Z.date&&+e==+t?{valid:!0,data:e}:{valid:!1}}class qa extends we{_parse(t){const{status:r,ctx:n}=this._processInputParams(t),s=(i,a)=>{if(Om(i)||Om(a))return fe;const l=Fm(i.value,a.value);return l.valid?((Lm(i)||Lm(a))&&r.dirty(),{status:r.value,value:l.data}):(G(n,{code:V.invalid_intersection_types}),fe)};return n.common.async?Promise.all([this._def.left._parseAsync({data:n.data,path:n.path,parent:n}),this._def.right._parseAsync({data:n.data,path:n.path,parent:n})]).then(([i,a])=>s(i,a)):s(this._def.left._parseSync({data:n.data,path:n.path,parent:n}),this._def.right._parseSync({data:n.data,path:n.path,parent:n}))}}qa.create=(e,t,r)=>new qa({left:e,right:t,typeName:ue.ZodIntersection,...ge(r)});class an extends we{_parse(t){const{status:r,ctx:n}=this._processInputParams(t);if(n.parsedType!==Z.array)return G(n,{code:V.invalid_type,expected:Z.array,received:n.parsedType}),fe;if(n.data.length<this._def.items.length)return G(n,{code:V.too_small,minimum:this._def.items.length,inclusive:!0,exact:!1,type:"array"}),fe;!this._def.rest&&n.data.length>this._def.items.length&&(G(n,{code:V.too_big,maximum:this._def.items.length,inclusive:!0,exact:!1,type:"array"}),r.dirty());const i=[...n.data].map((a,l)=>{const c=this._def.items[l]||this._def.rest;return c?c._parse(new on(n,a,n.path,l)):null}).filter(a=>!!a);return n.common.async?Promise.all(i).then(a=>It.mergeArray(r,a)):It.mergeArray(r,i)}get items(){return this._def.items}rest(t){return new an({...this._def,rest:t})}}an.create=(e,t)=>{if(!Array.isArray(e))throw new Error("You must pass an array of schemas to z.tuple([ ... ])");return new an({items:e,typeName:ue.ZodTuple,rest:null,...ge(t)})};class Qa extends we{get keySchema(){return this._def.keyType}get valueSchema(){return this._def.valueType}_parse(t){const{status:r,ctx:n}=this._processInputParams(t);if(n.parsedType!==Z.object)return G(n,{code:V.invalid_type,expected:Z.object,received:n.parsedType}),fe;const s=[],i=this._def.keyType,a=this._def.valueType;for(const l in n.data)s.push({key:i._parse(new on(n,l,n.path,l)),value:a._parse(new on(n,n.data[l],n.path,l)),alwaysSet:l in n.data});return n.common.async?It.mergeObjectAsync(r,s):It.mergeObjectSync(r,s)}get element(){return this._def.valueType}static create(t,r,n){return r instanceof we?new Qa({keyType:t,valueType:r,typeName:ue.ZodRecord,...ge(n)}):new Qa({keyType:Ir.create(),valueType:t,typeName:ue.ZodRecord,...ge(r)})}}class fu extends we{get keySchema(){return this._def.keyType}get valueSchema(){return this._def.valueType}_parse(t){const{status:r,ctx:n}=this._processInputParams(t);if(n.parsedType!==Z.map)return G(n,{code:V.invalid_type,expected:Z.map,received:n.parsedType}),fe;const s=this._def.keyType,i=this._def.valueType,a=[...n.data.entries()].map(([l,c],u)=>({key:s._parse(new on(n,l,n.path,[u,"key"])),value:i._parse(new on(n,c,n.path,[u,"value"]))}));if(n.common.async){const l=new Map;return Promise.resolve().then(async()=>{for(const c of a){const u=await c.key,d=await c.value;if(u.status==="aborted"||d.status==="aborted")return fe;(u.status==="dirty"||d.status==="dirty")&&r.dirty(),l.set(u.value,d.value)}return{status:r.value,value:l}})}else{const l=new Map;for(const c of a){const u=c.key,d=c.value;if(u.status==="aborted"||d.status==="aborted")return fe;(u.status==="dirty"||d.status==="dirty")&&r.dirty(),l.set(u.value,d.value)}return{status:r.value,value:l}}}}fu.create=(e,t,r)=>new fu({valueType:t,keyType:e,typeName:ue.ZodMap,...ge(r)});class ui extends we{_parse(t){const{status:r,ctx:n}=this._processInputParams(t);if(n.parsedType!==Z.set)return G(n,{code:V.invalid_type,expected:Z.set,received:n.parsedType}),fe;const s=this._def;s.minSize!==null&&n.data.size<s.minSize.value&&(G(n,{code:V.too_small,minimum:s.minSize.value,type:"set",inclusive:!0,exact:!1,message:s.minSize.message}),r.dirty()),s.maxSize!==null&&n.data.size>s.maxSize.value&&(G(n,{code:V.too_big,maximum:s.maxSize.value,type:"set",inclusive:!0,exact:!1,message:s.maxSize.message}),r.dirty());const i=this._def.valueType;function a(c){const u=new Set;for(const d of c){if(d.status==="aborted")return fe;d.status==="dirty"&&r.dirty(),u.add(d.value)}return{status:r.value,value:u}}const l=[...n.data.values()].map((c,u)=>i._parse(new on(n,c,n.path,u)));return n.common.async?Promise.all(l).then(c=>a(c)):a(l)}min(t,r){return new ui({...this._def,minSize:{value:t,message:te.toString(r)}})}max(t,r){return new ui({...this._def,maxSize:{value:t,message:te.toString(r)}})}size(t,r){return this.min(t,r).max(t,r)}nonempty(t){return this.min(1,t)}}ui.create=(e,t)=>new ui({valueType:e,minSize:null,maxSize:null,typeName:ue.ZodSet,...ge(t)});class Yi extends we{constructor(){super(...arguments),this.validate=this.implement}_parse(t){const{ctx:r}=this._processInputParams(t);if(r.parsedType!==Z.function)return G(r,{code:V.invalid_type,expected:Z.function,received:r.parsedType}),fe;function n(l,c){return lu({data:l,path:r.path,errorMaps:[r.common.contextualErrorMap,r.schemaErrorMap,au(),jo].filter(u=>!!u),issueData:{code:V.invalid_arguments,argumentsError:c}})}function s(l,c){return lu({data:l,path:r.path,errorMaps:[r.common.contextualErrorMap,r.schemaErrorMap,au(),jo].filter(u=>!!u),issueData:{code:V.invalid_return_type,returnTypeError:c}})}const i={errorMap:r.common.contextualErrorMap},a=r.data;if(this._def.returns instanceof _o){const l=this;return Bt(async function(...c){const u=new lr([]),d=await l._def.args.parseAsync(c,i).catch(x=>{throw u.addIssue(n(c,x)),u}),f=await Reflect.apply(a,this,d);return await l._def.returns._def.type.parseAsync(f,i).catch(x=>{throw u.addIssue(s(f,x)),u})})}else{const l=this;return Bt(function(...c){const u=l._def.args.safeParse(c,i);if(!u.success)throw new lr([n(c,u.error)]);const d=Reflect.apply(a,this,u.data),f=l._def.returns.safeParse(d,i);if(!f.success)throw new lr([s(d,f.error)]);return f.data})}}parameters(){return this._def.args}returnType(){return this._def.returns}args(...t){return new Yi({...this._def,args:an.create(t).rest(Zs.create())})}returns(t){return new Yi({...this._def,returns:t})}implement(t){return this.parse(t)}strictImplement(t){return this.parse(t)}static create(t,r,n){return new Yi({args:t||an.create([]).rest(Zs.create()),returns:r||Zs.create(),typeName:ue.ZodFunction,...ge(n)})}}class Ga extends we{get schema(){return this._def.getter()}_parse(t){const{ctx:r}=this._processInputParams(t);return this._def.getter()._parse({data:r.data,path:r.path,parent:r})}}Ga.create=(e,t)=>new Ga({getter:e,typeName:ue.ZodLazy,...ge(t)});class Ka extends we{_parse(t){if(t.data!==this._def.value){const r=this._getOrReturnCtx(t);return G(r,{received:r.data,code:V.invalid_literal,expected:this._def.value}),fe}return{status:"valid",value:t.data}}get value(){return this._def.value}}Ka.create=(e,t)=>new Ka({value:e,typeName:ue.ZodLiteral,...ge(t)});function hE(e,t){return new ws({values:e,typeName:ue.ZodEnum,...ge(t)})}class ws extends we{constructor(){super(...arguments),na.set(this,void 0)}_parse(t){if(typeof t.data!="string"){const r=this._getOrReturnCtx(t),n=this._def.values;return G(r,{expected:je.joinValues(n),received:r.parsedType,code:V.invalid_type}),fe}if(cu(this,na)||uE(this,na,new Set(this._def.values)),!cu(this,na).has(t.data)){const r=this._getOrReturnCtx(t),n=this._def.values;return G(r,{received:r.data,code:V.invalid_enum_value,options:n}),fe}return Bt(t.data)}get options(){return this._def.values}get enum(){const t={};for(const r of this._def.values)t[r]=r;return t}get Values(){const t={};for(const r of this._def.values)t[r]=r;return t}get Enum(){const t={};for(const r of this._def.values)t[r]=r;return t}extract(t,r=this._def){return ws.create(t,{...this._def,...r})}exclude(t,r=this._def){return ws.create(this.options.filter(n=>!t.includes(n)),{...this._def,...r})}}na=new WeakMap;ws.create=hE;class Za extends we{constructor(){super(...arguments),sa.set(this,void 0)}_parse(t){const r=je.getValidEnumValues(this._def.values),n=this._getOrReturnCtx(t);if(n.parsedType!==Z.string&&n.parsedType!==Z.number){const s=je.objectValues(r);return G(n,{expected:je.joinValues(s),received:n.parsedType,code:V.invalid_type}),fe}if(cu(this,sa)||uE(this,sa,new Set(je.getValidEnumValues(this._def.values))),!cu(this,sa).has(t.data)){const s=je.objectValues(r);return G(n,{received:n.data,code:V.invalid_enum_value,options:s}),fe}return Bt(t.data)}get enum(){return this._def.values}}sa=new WeakMap;Za.create=(e,t)=>new Za({values:e,typeName:ue.ZodNativeEnum,...ge(t)});class _o extends we{unwrap(){return this._def.type}_parse(t){const{ctx:r}=this._processInputParams(t);if(r.parsedType!==Z.promise&&r.common.async===!1)return G(r,{code:V.invalid_type,expected:Z.promise,received:r.parsedType}),fe;const n=r.parsedType===Z.promise?r.data:Promise.resolve(r.data);return Bt(n.then(s=>this._def.type.parseAsync(s,{path:r.path,errorMap:r.common.contextualErrorMap})))}}_o.create=(e,t)=>new _o({type:e,typeName:ue.ZodPromise,...ge(t)});class zr extends we{innerType(){return this._def.schema}sourceType(){return this._def.schema._def.typeName===ue.ZodEffects?this._def.schema.sourceType():this._def.schema}_parse(t){const{status:r,ctx:n}=this._processInputParams(t),s=this._def.effect||null,i={addIssue:a=>{G(n,a),a.fatal?r.abort():r.dirty()},get path(){return n.path}};if(i.addIssue=i.addIssue.bind(i),s.type==="preprocess"){const a=s.transform(n.data,i);if(n.common.async)return Promise.resolve(a).then(async l=>{if(r.value==="aborted")return fe;const c=await this._def.schema._parseAsync({data:l,path:n.path,parent:n});return c.status==="aborted"?fe:c.status==="dirty"||r.value==="dirty"?Vi(c.value):c});{if(r.value==="aborted")return fe;const l=this._def.schema._parseSync({data:a,path:n.path,parent:n});return l.status==="aborted"?fe:l.status==="dirty"||r.value==="dirty"?Vi(l.value):l}}if(s.type==="refinement"){const a=l=>{const c=s.refinement(l,i);if(n.common.async)return Promise.resolve(c);if(c instanceof Promise)throw new Error("Async refinement encountered during synchronous parse operation. Use .parseAsync instead.");return l};if(n.common.async===!1){const l=this._def.schema._parseSync({data:n.data,path:n.path,parent:n});return l.status==="aborted"?fe:(l.status==="dirty"&&r.dirty(),a(l.value),{status:r.value,value:l.value})}else return this._def.schema._parseAsync({data:n.data,path:n.path,parent:n}).then(l=>l.status==="aborted"?fe:(l.status==="dirty"&&r.dirty(),a(l.value).then(()=>({status:r.value,value:l.value}))))}if(s.type==="transform")if(n.common.async===!1){const a=this._def.schema._parseSync({data:n.data,path:n.path,parent:n});if(!li(a))return a;const l=s.transform(a.value,i);if(l instanceof Promise)throw new Error("Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.");return{status:r.value,value:l}}else return this._def.schema._parseAsync({data:n.data,path:n.path,parent:n}).then(a=>li(a)?Promise.resolve(s.transform(a.value,i)).then(l=>({status:r.value,value:l})):a);je.assertNever(s)}}zr.create=(e,t,r)=>new zr({schema:e,typeName:ue.ZodEffects,effect:t,...ge(r)});zr.createWithPreprocess=(e,t,r)=>new zr({schema:t,effect:{type:"preprocess",transform:e},typeName:ue.ZodEffects,...ge(r)});class nn extends we{_parse(t){return this._getType(t)===Z.undefined?Bt(void 0):this._def.innerType._parse(t)}unwrap(){return this._def.innerType}}nn.create=(e,t)=>new nn({innerType:e,typeName:ue.ZodOptional,...ge(t)});class bs extends we{_parse(t){return this._getType(t)===Z.null?Bt(null):this._def.innerType._parse(t)}unwrap(){return this._def.innerType}}bs.create=(e,t)=>new bs({innerType:e,typeName:ue.ZodNullable,...ge(t)});class Xa extends we{_parse(t){const{ctx:r}=this._processInputParams(t);let n=r.data;return r.parsedType===Z.undefined&&(n=this._def.defaultValue()),this._def.innerType._parse({data:n,path:r.path,parent:r})}removeDefault(){return this._def.innerType}}Xa.create=(e,t)=>new Xa({innerType:e,typeName:ue.ZodDefault,defaultValue:typeof t.default=="function"?t.default:()=>t.default,...ge(t)});class Ya extends we{_parse(t){const{ctx:r}=this._processInputParams(t),n={...r,common:{...r.common,issues:[]}},s=this._def.innerType._parse({data:n.data,path:n.path,parent:{...n}});return za(s)?s.then(i=>({status:"valid",value:i.status==="valid"?i.value:this._def.catchValue({get error(){return new lr(n.common.issues)},input:n.data})})):{status:"valid",value:s.status==="valid"?s.value:this._def.catchValue({get error(){return new lr(n.common.issues)},input:n.data})}}removeCatch(){return this._def.innerType}}Ya.create=(e,t)=>new Ya({innerType:e,typeName:ue.ZodCatch,catchValue:typeof t.catch=="function"?t.catch:()=>t.catch,...ge(t)});class mu extends we{_parse(t){if(this._getType(t)!==Z.nan){const n=this._getOrReturnCtx(t);return G(n,{code:V.invalid_type,expected:Z.nan,received:n.parsedType}),fe}return{status:"valid",value:t.data}}}mu.create=e=>new mu({typeName:ue.ZodNaN,...ge(e)});const S5=Symbol("zod_brand");class Rp extends we{_parse(t){const{ctx:r}=this._processInputParams(t),n=r.data;return this._def.type._parse({data:n,path:r.path,parent:r})}unwrap(){return this._def.type}}class Sl extends we{_parse(t){const{status:r,ctx:n}=this._processInputParams(t);if(n.common.async)return(async()=>{const i=await this._def.in._parseAsync({data:n.data,path:n.path,parent:n});return i.status==="aborted"?fe:i.status==="dirty"?(r.dirty(),Vi(i.value)):this._def.out._parseAsync({data:i.value,path:n.path,parent:n})})();{const s=this._def.in._parseSync({data:n.data,path:n.path,parent:n});return s.status==="aborted"?fe:s.status==="dirty"?(r.dirty(),{status:"dirty",value:s.value}):this._def.out._parseSync({data:s.value,path:n.path,parent:n})}}static create(t,r){return new Sl({in:t,out:r,typeName:ue.ZodPipeline})}}class Ja extends we{_parse(t){const r=this._def.innerType._parse(t),n=s=>(li(s)&&(s.value=Object.freeze(s.value)),s);return za(r)?r.then(s=>n(s)):n(r)}unwrap(){return this._def.innerType}}Ja.create=(e,t)=>new Ja({innerType:e,typeName:ue.ZodReadonly,...ge(t)});function uy(e,t){const r=typeof e=="function"?e(t):typeof e=="string"?{message:e}:e;return typeof r=="string"?{message:r}:r}function pE(e,t={},r){return e?Co.create().superRefine((n,s)=>{var i,a;const l=e(n);if(l instanceof Promise)return l.then(c=>{var u,d;if(!c){const f=uy(t,n),h=(d=(u=f.fatal)!==null&&u!==void 0?u:r)!==null&&d!==void 0?d:!0;s.addIssue({code:"custom",...f,fatal:h})}});if(!l){const c=uy(t,n),u=(a=(i=c.fatal)!==null&&i!==void 0?i:r)!==null&&a!==void 0?a:!0;s.addIssue({code:"custom",...c,fatal:u})}}):Co.create()}const j5={object:Ge.lazycreate};var ue;(function(e){e.ZodString="ZodString",e.ZodNumber="ZodNumber",e.ZodNaN="ZodNaN",e.ZodBigInt="ZodBigInt",e.ZodBoolean="ZodBoolean",e.ZodDate="ZodDate",e.ZodSymbol="ZodSymbol",e.ZodUndefined="ZodUndefined",e.ZodNull="ZodNull",e.ZodAny="ZodAny",e.ZodUnknown="ZodUnknown",e.ZodNever="ZodNever",e.ZodVoid="ZodVoid",e.ZodArray="ZodArray",e.ZodObject="ZodObject",e.ZodUnion="ZodUnion",e.ZodDiscriminatedUnion="ZodDiscriminatedUnion",e.ZodIntersection="ZodIntersection",e.ZodTuple="ZodTuple",e.ZodRecord="ZodRecord",e.ZodMap="ZodMap",e.ZodSet="ZodSet",e.ZodFunction="ZodFunction",e.ZodLazy="ZodLazy",e.ZodLiteral="ZodLiteral",e.ZodEnum="ZodEnum",e.ZodEffects="ZodEffects",e.ZodNativeEnum="ZodNativeEnum",e.ZodOptional="ZodOptional",e.ZodNullable="ZodNullable",e.ZodDefault="ZodDefault",e.ZodCatch="ZodCatch",e.ZodPromise="ZodPromise",e.ZodBranded="ZodBranded",e.ZodPipeline="ZodPipeline",e.ZodReadonly="ZodReadonly"})(ue||(ue={}));const C5=(e,t={message:`Input not instance of ${e.name}`})=>pE(r=>r instanceof e,t),gE=Ir.create,vE=ys.create,_5=mu.create,k5=xs.create,yE=Ba.create,T5=ci.create,E5=uu.create,P5=Ua.create,R5=Wa.create,A5=Co.create,I5=Zs.create,M5=En.create,D5=du.create,O5=Lr.create,L5=Ge.create,F5=Ge.strictCreate,V5=Ha.create,$5=id.create,z5=qa.create,B5=an.create,U5=Qa.create,W5=fu.create,H5=ui.create,q5=Yi.create,Q5=Ga.create,G5=Ka.create,K5=ws.create,Z5=Za.create,X5=_o.create,dy=zr.create,Y5=nn.create,J5=bs.create,e6=zr.createWithPreprocess,t6=Sl.create,r6=()=>gE().optional(),n6=()=>vE().optional(),s6=()=>yE().optional(),i6={string:e=>Ir.create({...e,coerce:!0}),number:e=>ys.create({...e,coerce:!0}),boolean:e=>Ba.create({...e,coerce:!0}),bigint:e=>xs.create({...e,coerce:!0}),date:e=>ci.create({...e,coerce:!0})},o6=fe;var ct=Object.freeze({__proto__:null,defaultErrorMap:jo,setErrorMap:e5,getErrorMap:au,makeIssue:lu,EMPTY_PATH:t5,addIssueToContext:G,ParseStatus:It,INVALID:fe,DIRTY:Vi,OK:Bt,isAborted:Om,isDirty:Lm,isValid:li,isAsync:za,get util(){return je},get objectUtil(){return Dm},ZodParsedType:Z,getParsedType:vn,ZodType:we,datetimeRegex:mE,ZodString:Ir,ZodNumber:ys,ZodBigInt:xs,ZodBoolean:Ba,ZodDate:ci,ZodSymbol:uu,ZodUndefined:Ua,ZodNull:Wa,ZodAny:Co,ZodUnknown:Zs,ZodNever:En,ZodVoid:du,ZodArray:Lr,ZodObject:Ge,ZodUnion:Ha,ZodDiscriminatedUnion:id,ZodIntersection:qa,ZodTuple:an,ZodRecord:Qa,ZodMap:fu,ZodSet:ui,ZodFunction:Yi,ZodLazy:Ga,ZodLiteral:Ka,ZodEnum:ws,ZodNativeEnum:Za,ZodPromise:_o,ZodEffects:zr,ZodTransformer:zr,ZodOptional:nn,ZodNullable:bs,ZodDefault:Xa,ZodCatch:Ya,ZodNaN:mu,BRAND:S5,ZodBranded:Rp,ZodPipeline:Sl,ZodReadonly:Ja,custom:pE,Schema:we,ZodSchema:we,late:j5,get ZodFirstPartyTypeKind(){return ue},coerce:i6,any:A5,array:O5,bigint:k5,boolean:yE,date:T5,discriminatedUnion:$5,effect:dy,enum:K5,function:q5,instanceof:C5,intersection:z5,lazy:Q5,literal:G5,map:W5,nan:_5,nativeEnum:Z5,never:M5,null:R5,nullable:J5,number:vE,object:L5,oboolean:s6,onumber:n6,optional:Y5,ostring:r6,pipeline:t6,preprocess:e6,promise:X5,record:U5,set:H5,strictObject:F5,string:gE,symbol:E5,transformer:dy,tuple:B5,undefined:P5,union:V5,unknown:I5,void:D5,NEVER:o6,ZodIssueCode:V,quotelessJson:J3,ZodError:lr});const Qe={INT8_MIN:-128,INT8_MAX:127,INT8_UNSIGNED_MAX:255,INT16_MIN:-32768,INT16_MAX:32767,INT16_UNSIGNED_MAX:65535,INT24_MIN:-8388608,INT24_MAX:8388607,INT24_UNSIGNED_MAX:16777215,INT32_MIN:-2147483648,INT32_MAX:2147483647,INT32_UNSIGNED_MAX:4294967295,INT48_MIN:-0x800000000000,INT48_MAX:0x7fffffffffff,INT48_UNSIGNED_MAX:0xffffffffffff,INT64_MIN:-9223372036854775808n,INT64_MAX:9223372036854775807n,INT64_UNSIGNED_MAX:18446744073709551615n};function nt(e,t){return t.includes(e.columnType)}function a6(e){return"enumValues"in e&&Array.isArray(e.enumValues)&&e.enumValues.length>0}const l6=ct.union([ct.string(),ct.number(),ct.boolean(),ct.null()]),c6=ct.union([l6,ct.record(ct.any()),ct.array(ct.any())]),u6=ct.custom(e=>e instanceof Buffer);function xE(e,t){const r=(t==null?void 0:t.zodInstance)??ct,n=(t==null?void 0:t.coerce)??{};let s;return a6(e)&&(s=e.enumValues.length?r.enum(e.enumValues):r.string()),s||(nt(e,["PgGeometry","PgPointTuple"])?s=r.tuple([r.number(),r.number()]):nt(e,["PgGeometryObject","PgPointObject"])?s=r.object({x:r.number(),y:r.number()}):nt(e,["PgHalfVector","PgVector"])?(s=r.array(r.number()),s=e.dimensions?s.length(e.dimensions):s):nt(e,["PgLine"])?s=r.tuple([r.number(),r.number(),r.number()]):nt(e,["PgLineABC"])?s=r.object({a:r.number(),b:r.number(),c:r.number()}):nt(e,["PgArray"])?(s=r.array(xE(e.baseColumn,r)),s=e.size?s.length(e.size):s):e.dataType==="array"?s=r.array(r.any()):e.dataType==="number"?s=d6(e,r,n):e.dataType==="bigint"?s=f6(e,r,n):e.dataType==="boolean"?s=n===!0||n.boolean?r.coerce.boolean():r.boolean():e.dataType==="date"?s=n===!0||n.date?r.coerce.date():r.date():e.dataType==="string"?s=m6(e,r,n):e.dataType==="json"?s=c6:e.dataType==="custom"?s=r.any():e.dataType==="buffer"&&(s=u6)),s||(s=r.any()),s}function d6(e,t,r){let n=e.getSQLType().includes("unsigned"),s,i,a=!1;nt(e,["MySqlTinyInt","SingleStoreTinyInt"])?(s=n?0:Qe.INT8_MIN,i=n?Qe.INT8_UNSIGNED_MAX:Qe.INT8_MAX,a=!0):nt(e,["PgSmallInt","PgSmallSerial","MySqlSmallInt","SingleStoreSmallInt"])?(s=n?0:Qe.INT16_MIN,i=n?Qe.INT16_UNSIGNED_MAX:Qe.INT16_MAX,a=!0):nt(e,["PgReal","MySqlFloat","MySqlMediumInt","SingleStoreMediumInt","SingleStoreFloat"])?(s=n?0:Qe.INT24_MIN,i=n?Qe.INT24_UNSIGNED_MAX:Qe.INT24_MAX,a=nt(e,["MySqlMediumInt","SingleStoreMediumInt"])):nt(e,["PgInteger","PgSerial","MySqlInt","SingleStoreInt"])?(s=n?0:Qe.INT32_MIN,i=n?Qe.INT32_UNSIGNED_MAX:Qe.INT32_MAX,a=!0):nt(e,["PgDoublePrecision","MySqlReal","MySqlDouble","SingleStoreReal","SingleStoreDouble","SQLiteReal"])?(s=n?0:Qe.INT48_MIN,i=n?Qe.INT48_UNSIGNED_MAX:Qe.INT48_MAX):nt(e,["PgBigInt53","PgBigSerial53","MySqlBigInt53","MySqlSerial","SingleStoreBigInt53","SingleStoreSerial","SQLiteInteger"])?(n=n||nt(e,["MySqlSerial","SingleStoreSerial"]),s=n?0:Number.MIN_SAFE_INTEGER,i=Number.MAX_SAFE_INTEGER,a=!0):nt(e,["MySqlYear","SingleStoreYear"])?(s=1901,i=2155,a=!0):(s=Number.MIN_SAFE_INTEGER,i=Number.MAX_SAFE_INTEGER);let l=r===!0||r!=null&&r.number?t.coerce.number():t.number();return l=l.min(s).max(i),a?l.int():l}function f6(e,t,r){const n=e.getSQLType().includes("unsigned"),s=n?0n:Qe.INT64_MIN,i=n?Qe.INT64_UNSIGNED_MAX:Qe.INT64_MAX;return(r===!0||r!=null&&r.bigint?t.coerce.bigint():t.bigint()).min(s).max(i)}function m6(e,t,r){if(nt(e,["PgUUID"]))return t.string().uuid();let n,s,i=!1;nt(e,["PgVarchar","SQLiteText"])?n=e.length:nt(e,["MySqlVarChar","SingleStoreVarChar"])?n=e.length??Qe.INT16_UNSIGNED_MAX:nt(e,["MySqlText","SingleStoreText"])&&(e.textType==="longtext"?n=Qe.INT32_UNSIGNED_MAX:e.textType==="mediumtext"?n=Qe.INT24_UNSIGNED_MAX:e.textType==="text"?n=Qe.INT16_UNSIGNED_MAX:n=Qe.INT8_UNSIGNED_MAX),nt(e,["PgChar","MySqlChar","SingleStoreChar"])&&(n=e.length,i=!0),nt(e,["PgBinaryVector"])&&(s=/^[01]+$/,n=e.dimensions);let a=r===!0||r!=null&&r.string?t.coerce.string():t.string();return a=s?a.regex(s):a,n&&i?a.length(n):n?a.max(n):a}function wE(e){return Ik(e)?S3(e):j3(e)}function bE(e,t,r,n){const s={};for(const[i,a]of Object.entries(e)){if(!wt(a,So)&&!wt(a,mt)&&!wt(a,mt.Aliased)&&typeof a=="object"){const f=Ik(a)||N3(a)?wE(a):a;s[i]=bE(f,t[i]??{},r,n);continue}const l=t[i];if(l!==void 0&&typeof l!="function"){s[i]=l;continue}const c=wt(a,So)?a:void 0,u=c?xE(c,n):ct.any(),d=typeof l=="function"?l(u):u;r.never(c)||(s[i]=d,c&&(r.nullable(c)&&(s[i]=s[i].nullable()),r.optional(c)&&(s[i]=s[i].optional())))}return ct.object(s)}const h6={never:e=>{var t,r;return((t=e==null?void 0:e.generated)==null?void 0:t.type)==="always"||((r=e==null?void 0:e.generatedIdentity)==null?void 0:r.type)==="always"},optional:e=>!e.notNull||e.notNull&&e.hasDefault,nullable:e=>!e.notNull},Ts=(e,t)=>{const r=wE(e);return bE(r,{},h6)},gi=ks("users",{id:An("id").primaryKey(),username:Ve("username").notNull().unique(),email:Ve("email").notNull().unique(),password:Ve("password").notNull(),firstName:Ve("first_name").notNull(),lastName:Ve("last_name").notNull(),profileImage:Ve("profile_image"),createdAt:Jt("created_at").defaultNow().notNull()}),NE=ks("workouts",{id:An("id").primaryKey(),userId:Ze("user_id").references(()=>gi.id).notNull(),name:Ve("name").notNull(),description:Ve("description"),category:Ve("category").notNull(),difficulty:Ve("difficulty").notNull(),duration:Ze("duration").notNull(),calories:Ze("calories").notNull(),equipment:Ve("equipment").array(),exercises:Pp("exercises").notNull(),imageUrl:Ve("image_url"),isPublic:sd("is_public").default(!0),createdAt:Jt("created_at").defaultNow().notNull()}),SE=ks("workout_sessions",{id:An("id").primaryKey(),userId:Ze("user_id").references(()=>gi.id).notNull(),workoutId:Ze("workout_id").references(()=>NE.id).notNull(),startTime:Jt("start_time").notNull(),endTime:Jt("end_time"),totalDuration:Ze("total_duration"),caloriesBurned:Ze("calories_burned"),formScore:pn("form_score"),notes:Ve("notes"),exercises:Pp("exercises"),completionStatus:Ve("completion_status").notNull().default("in_progress"),createdAt:Jt("created_at").defaultNow().notNull()}),p6=ks("user_stats",{id:An("id").primaryKey(),userId:Ze("user_id").references(()=>gi.id).notNull(),date:Jt("date").notNull(),weight:pn("weight"),bodyFat:pn("body_fat"),muscleMass:pn("muscle_mass"),caloriesConsumed:Ze("calories_consumed"),proteinConsumed:pn("protein_consumed"),carbsConsumed:pn("carbs_consumed"),fatsConsumed:pn("fats_consumed"),sleepHours:pn("sleep_hours"),stressLevel:Ze("stress_level"),energyLevel:Ze("energy_level"),createdAt:Jt("created_at").defaultNow().notNull()}),jE=ks("achievements",{id:An("id").primaryKey(),userId:Ze("user_id").references(()=>gi.id).notNull(),type:Ve("type").notNull(),title:Ve("title").notNull(),description:Ve("description").notNull(),iconType:Ve("icon_type").notNull(),value:Ve("value"),unlockedAt:Jt("unlocked_at").defaultNow().notNull()}),CE=ks("challenges",{id:An("id").primaryKey(),name:Ve("name").notNull(),description:Ve("description").notNull(),type:Ve("type").notNull(),target:Ze("target").notNull(),unit:Ve("unit").notNull(),startDate:Jt("start_date").notNull(),endDate:Jt("end_date").notNull(),isActive:sd("is_active").default(!0),participants:Ze("participants").default(0),createdAt:Jt("created_at").defaultNow().notNull()}),g6=ks("challenge_participations",{id:An("id").primaryKey(),userId:Ze("user_id").references(()=>gi.id).notNull(),challengeId:Ze("challenge_id").references(()=>CE.id).notNull(),progress:Ze("progress").default(0),isCompleted:sd("is_completed").default(!1),joinedAt:Jt("joined_at").defaultNow().notNull()}),v6=ks("social_posts",{id:An("id").primaryKey(),userId:Ze("user_id").references(()=>gi.id).notNull(),content:Ve("content").notNull(),imageUrl:Ve("image_url"),workoutSessionId:Ze("workout_session_id").references(()=>SE.id),achievementId:Ze("achievement_id").references(()=>jE.id),likes:Ze("likes").default(0),comments:Ze("comments").default(0),createdAt:Jt("created_at").defaultNow().notNull()}),y6=Ts(gi).omit({id:!0,createdAt:!0});Ts(NE).omit({id:!0,createdAt:!0});Ts(SE).omit({id:!0,createdAt:!0});Ts(p6).omit({id:!0,createdAt:!0});Ts(jE).omit({id:!0,unlockedAt:!0});Ts(CE).omit({id:!0,createdAt:!0});Ts(g6).omit({id:!0,joinedAt:!0});Ts(v6).omit({id:!0,createdAt:!0,likes:!0,comments:!0});ct.object({email:ct.string().email(),password:ct.string().min(6)});const x6=y6.extend({confirmPassword:ct.string().min(6,"Password must be at least 6 characters")}).refine(e=>e.password===e.confirmPassword,{message:"Passwords don't match",path:["confirmPassword"]});function _E(){const[,e]=Au(),{login:t}=Rn(),{toast:r}=dl(),[n,s]=m.useState(!1),i=Yv({resolver:ey(ct.object({email:ct.string().email()})),defaultValues:{email:""}}),a=Yv({resolver:ey(x6),defaultValues:{username:"",email:"",password:"",confirmPassword:"",firstName:"",lastName:""}}),l=async u=>{s(!0);try{const d=await h3(u);t(d.token,d.user),r({title:"Welcome back!",description:"You have been successfully logged in."}),e("/dashboard")}catch(d){r({title:"Login failed",description:d.message||"Please check your credentials and try again.",variant:"destructive"})}finally{s(!1)}},c=async u=>{s(!0);try{const{confirmPassword:d,...f}=u,h=await m3(f);t(h.token,h.user),r({title:"Account created!",description:"Welcome to FitForge! Your fitness journey starts now."}),e("/dashboard")}catch(d){r({title:"Registration failed",description:d.message||"Please try again with different details.",variant:"destructive"})}finally{s(!1)}};return o.jsxs("div",{className:"min-h-screen flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8",children:[o.jsxs("div",{className:"absolute inset-0 z-0",children:[o.jsx("img",{src:"https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?ixlib=rb-4.0.3&auto=format&fit=crop&w=2070&h=1000",alt:"Fitness gym background",className:"w-full h-full object-cover"}),o.jsx("div",{className:"absolute inset-0 bg-background/80 backdrop-blur-sm"})]}),o.jsxs("div",{className:"relative z-10 w-full max-w-md space-y-8",children:[o.jsxs("div",{className:"text-center",children:[o.jsxs("div",{className:"flex justify-center items-center space-x-2 mb-6",children:[o.jsx("div",{className:"w-12 h-12 gradient-bg rounded-xl flex items-center justify-center",children:o.jsx(Ro,{className:"w-6 h-6 text-white"})}),o.jsx("h1",{className:"text-3xl font-bold",children:"FitForge"})]}),o.jsx("p",{className:"text-muted-foreground",children:"Join the ultimate AI-powered fitness ecosystem"})]}),o.jsx(ie,{className:"glass-effect",children:o.jsxs(BF,{defaultValue:"login",className:"w-full",children:[o.jsxs(ak,{className:"grid w-full grid-cols-2",children:[o.jsx(Pm,{value:"login",children:"Sign In"}),o.jsx(Pm,{value:"register",children:"Sign Up"})]}),o.jsxs(Rm,{value:"login",children:[o.jsxs(Le,{children:[o.jsx(Fe,{children:"Welcome back"}),o.jsx(jm,{children:"Enter your credentials to access your account"})]}),o.jsx(le,{children:o.jsx(ty,{...i,children:o.jsxs("form",{onSubmit:i.handleSubmit(l),className:"space-y-4",children:[o.jsx(Ps,{control:i.control,name:"email",render:({field:u})=>o.jsxs($n,{children:[o.jsx(zn,{children:"Email"}),o.jsx(Bn,{children:o.jsx(Qt,{type:"email",placeholder:"Enter your email",...u,disabled:n})}),o.jsx(Un,{})]})}),o.jsxs("div",{className:"text-sm text-muted-foreground p-3 bg-muted/50 rounded-lg",children:[o.jsxs("p",{children:["🔓 ",o.jsx("strong",{children:"Password not required for demo"})]}),o.jsx("p",{children:"Just enter your email to access your workout data"})]}),o.jsxs(ae,{type:"submit",className:"w-full gradient-bg",disabled:n,children:[n&&o.jsx(hv,{className:"mr-2 h-4 w-4 animate-spin"}),"Sign In"]})]})})})]}),o.jsxs(Rm,{value:"register",children:[o.jsxs(Le,{children:[o.jsx(Fe,{children:"Create account"}),o.jsx(jm,{children:"Start your fitness journey with FitForge"})]}),o.jsx(le,{children:o.jsx(ty,{...a,children:o.jsxs("form",{onSubmit:a.handleSubmit(c),className:"space-y-4",children:[o.jsxs("div",{className:"grid grid-cols-2 gap-4",children:[o.jsx(Ps,{control:a.control,name:"firstName",render:({field:u})=>o.jsxs($n,{children:[o.jsx(zn,{children:"First Name"}),o.jsx(Bn,{children:o.jsx(Qt,{placeholder:"John",...u,disabled:n})}),o.jsx(Un,{})]})}),o.jsx(Ps,{control:a.control,name:"lastName",render:({field:u})=>o.jsxs($n,{children:[o.jsx(zn,{children:"Last Name"}),o.jsx(Bn,{children:o.jsx(Qt,{placeholder:"Doe",...u,disabled:n})}),o.jsx(Un,{})]})})]}),o.jsx(Ps,{control:a.control,name:"username",render:({field:u})=>o.jsxs($n,{children:[o.jsx(zn,{children:"Username"}),o.jsx(Bn,{children:o.jsx(Qt,{placeholder:"johndoe",...u,disabled:n})}),o.jsx(Un,{})]})}),o.jsx(Ps,{control:a.control,name:"email",render:({field:u})=>o.jsxs($n,{children:[o.jsx(zn,{children:"Email"}),o.jsx(Bn,{children:o.jsx(Qt,{type:"email",placeholder:"john@example.com",...u,disabled:n})}),o.jsx(Un,{})]})}),o.jsx(Ps,{control:a.control,name:"password",render:({field:u})=>o.jsxs($n,{children:[o.jsx(zn,{children:"Password"}),o.jsx(Bn,{children:o.jsx(Qt,{type:"password",placeholder:"Create a password",...u,disabled:n})}),o.jsx(Un,{})]})}),o.jsx(Ps,{control:a.control,name:"confirmPassword",render:({field:u})=>o.jsxs($n,{children:[o.jsx(zn,{children:"Confirm Password"}),o.jsx(Bn,{children:o.jsx(Qt,{type:"password",placeholder:"Confirm your password",...u,disabled:n})}),o.jsx(Un,{})]})}),o.jsxs(ae,{type:"submit",className:"w-full gradient-bg",disabled:n,children:[n&&o.jsx(hv,{className:"mr-2 h-4 w-4 animate-spin"}),"Create Account"]})]})})})]})]})})]})]})}function w6(){const{user:e}=Rn(),{data:t=[]}=yr({queryKey:["/api/workout-sessions"]}),{data:r}=yr({queryKey:["/api/user-stats/latest"]}),{data:n=[]}=yr({queryKey:["/api/achievements"]});yr({queryKey:["/api/challenges"]});const s={workoutProgress:70,calorieGoal:2200,caloriesConsumed:(r==null?void 0:r.caloriesConsumed)||1750,workoutsThisWeek:t.filter(a=>{const l=new Date(a.createdAt),c=new Date;return c.setDate(c.getDate()-7),l>=c}).length},i=[{title:"Start Quick Workout",description:"15-minute full body routine",icon:Fu,color:"bg-primary/10 text-primary",href:"/workouts"},{title:"Log Nutrition",description:"Track your meals",icon:hs,color:"bg-accent/10 text-accent",href:"/nutrition"},{title:"View Progress",description:"Check your stats",icon:gl,color:"bg-secondary/10 text-secondary",href:"/progress"}];return o.jsxs("div",{className:"min-h-screen bg-background",children:[o.jsx("section",{className:"bg-gradient-to-r from-primary/10 via-accent/5 to-secondary/10 py-12",children:o.jsx("div",{className:"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8",children:o.jsxs("div",{className:"text-center",children:[o.jsxs("h1",{className:"text-4xl font-bold mb-4",children:["Welcome back, ",e==null?void 0:e.firstName,"! 👋"]}),o.jsx("p",{className:"text-xl text-muted-foreground mb-8",children:"Ready to crush your fitness goals today?"}),o.jsxs("div",{className:"grid md:grid-cols-3 gap-6 max-w-3xl mx-auto",children:[o.jsx(ie,{children:o.jsxs(le,{className:"p-6 text-center",children:[o.jsxs("div",{className:"w-16 h-16 mx-auto mb-4 relative",children:[o.jsxs("svg",{className:"w-16 h-16 progress-ring",children:[o.jsx("circle",{cx:"32",cy:"32",r:"28",stroke:"currentColor",strokeWidth:"4",fill:"none",className:"text-muted opacity-30"}),o.jsx("circle",{cx:"32",cy:"32",r:"28",stroke:"hsl(var(--primary))",strokeWidth:"4",fill:"none",strokeDasharray:"175.9",strokeDashoffset:175.9*(1-s.workoutProgress/100),strokeLinecap:"round"})]}),o.jsx("div",{className:"absolute inset-0 flex items-center justify-center",children:o.jsxs("span",{className:"text-foreground font-bold",children:[s.workoutProgress,"%"]})})]}),o.jsx("p",{className:"font-medium",children:"Daily Goal"})]})}),o.jsx(ie,{children:o.jsxs(le,{className:"p-6 text-center",children:[o.jsx("div",{className:"text-3xl font-bold text-accent mb-2",children:s.workoutsThisWeek}),o.jsx("p",{className:"font-medium",children:"Workouts This Week"})]})}),o.jsx(ie,{children:o.jsxs(le,{className:"p-6 text-center",children:[o.jsxs("div",{className:"text-3xl font-bold text-secondary mb-2",children:[Math.round(s.caloriesConsumed/s.calorieGoal*100),"%"]}),o.jsx("p",{className:"font-medium",children:"Calorie Goal"}),o.jsx(Nn,{value:s.caloriesConsumed/s.calorieGoal*100,className:"mt-2 h-2"})]})})]})]})})}),o.jsx("section",{className:"py-12",children:o.jsxs("div",{className:"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8",children:[o.jsx("h2",{className:"text-2xl font-bold mb-8",children:"Quick Actions"}),o.jsx("div",{className:"grid md:grid-cols-3 gap-6",children:i.map((a,l)=>o.jsx(rt,{href:a.href,children:o.jsx(ie,{className:"card-hover cursor-pointer",children:o.jsxs(le,{className:"p-6",children:[o.jsx("div",{className:`w-12 h-12 ${a.color} rounded-xl flex items-center justify-center mb-4`,children:o.jsx(a.icon,{className:"w-6 h-6"})}),o.jsx("h3",{className:"font-bold mb-2",children:a.title}),o.jsx("p",{className:"text-sm text-muted-foreground",children:a.description})]})})},l))})]})}),o.jsx("section",{className:"py-12 bg-muted/30",children:o.jsx("div",{className:"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8",children:o.jsxs("div",{className:"grid lg:grid-cols-2 gap-8",children:[o.jsxs(ie,{children:[o.jsx(Le,{children:o.jsxs(Fe,{className:"flex items-center",children:[o.jsx(Oa,{className:"w-5 h-5 mr-2 text-primary"}),"Recent Workouts"]})}),o.jsx(le,{children:t.length>0?o.jsx("div",{className:"space-y-4",children:t.slice(0,3).map(a=>o.jsxs("div",{className:"flex items-center justify-between p-3 bg-muted/50 rounded-lg",children:[o.jsxs("div",{children:[o.jsx("p",{className:"font-medium",children:"Workout Session"}),o.jsx("p",{className:"text-sm text-muted-foreground",children:new Date(a.createdAt).toLocaleDateString()})]}),o.jsxs("div",{className:"text-right",children:[o.jsxs("p",{className:"font-bold text-primary",children:[a.totalDuration||0," min"]}),o.jsxs("p",{className:"text-sm text-muted-foreground",children:[a.caloriesBurned||0," cal"]})]})]},a.id))}):o.jsxs("div",{className:"text-center py-8",children:[o.jsx(Oa,{className:"w-12 h-12 mx-auto text-muted-foreground mb-4"}),o.jsx("p",{className:"text-muted-foreground",children:"No recent workouts"}),o.jsx(rt,{href:"/workouts",children:o.jsx(ae,{className:"mt-4 gradient-bg",children:"Start First Workout"})})]})})]}),o.jsxs(ie,{children:[o.jsx(Le,{children:o.jsxs(Fe,{className:"flex items-center",children:[o.jsx(Ks,{className:"w-5 h-5 mr-2 text-accent"}),"Recent Achievements"]})}),o.jsx(le,{children:n.length>0?o.jsx("div",{className:"space-y-4",children:n.slice(0,3).map(a=>o.jsxs("div",{className:"flex items-start space-x-3 p-3 bg-muted/50 rounded-lg",children:[o.jsx("div",{className:"w-10 h-10 bg-accent/10 rounded-xl flex items-center justify-center flex-shrink-0",children:o.jsx(Ks,{className:"w-5 h-5 text-accent"})}),o.jsxs("div",{className:"flex-1",children:[o.jsx("p",{className:"font-medium",children:a.title}),o.jsx("p",{className:"text-sm text-muted-foreground",children:a.description}),o.jsx("p",{className:"text-xs text-muted-foreground mt-1",children:new Date(a.unlockedAt).toLocaleDateString()})]})]},a.id))}):o.jsxs("div",{className:"text-center py-8",children:[o.jsx(Ks,{className:"w-12 h-12 mx-auto text-muted-foreground mb-4"}),o.jsx("p",{className:"text-muted-foreground",children:"No achievements yet"}),o.jsx("p",{className:"text-sm text-muted-foreground mt-2",children:"Complete workouts to earn your first achievement!"})]})})]})]})})}),o.jsx(D_,{})]})}const fy={Abs:{name:"Ender's Core Workout",description:"Comprehensive core strengthening with progressive hold times",duration:30,difficulty:"Intermediate",exercises:[{id:1,name:"Planks",primaryMuscles:["Rectus Abdominis","Transverse Abdominis"],secondaryMuscles:["Obliques","Erector Spinae"],equipment:["None"],restTime:30,difficulty:"Beginner",workoutType:"Abs"},{id:2,name:"Spider Planks",primaryMuscles:["Rectus Abdominis","Transverse Abdominis"],secondaryMuscles:["Obliques","Erector Spinae","Shoulders"],equipment:["Bench"],restTime:60,difficulty:"Intermediate",workoutType:"Abs"},{id:3,name:"Bench Situps",primaryMuscles:["Rectus Abdominis"],secondaryMuscles:["Hip Flexors","Obliques"],equipment:["TRX","Bench"],restTime:90,difficulty:"Intermediate",workoutType:"Abs"},{id:4,name:"Hanging Knee Raises",primaryMuscles:["Rectus Abdominis"],secondaryMuscles:["Hip Flexors","Obliques","Grip/Forearms"],equipment:["Pull-up Bar"],restTime:120,difficulty:"Intermediate",workoutType:"Abs"}]},BackBiceps:{name:"Ender's Pull Day",description:"Back and bicep development with compound movements",duration:60,difficulty:"Intermediate",exercises:[{id:5,name:"Shoulder Shrugs",primaryMuscles:["Trapezius"],secondaryMuscles:["Levator Scapulae"],equipment:["Dumbbells"],restTime:150,difficulty:"Beginner",workoutType:"BackBiceps"},{id:6,name:"T Row",primaryMuscles:["Latissimus Dorsi"],secondaryMuscles:["Rhomboids","Trapezius","Biceps Brachii","Grip/Forearms"],equipment:["T-Bar","Barbell"],restTime:180,difficulty:"Intermediate",workoutType:"BackBiceps"},{id:7,name:"Incline Hammer Curl",primaryMuscles:["Biceps Brachii"],secondaryMuscles:["Brachialis","Brachioradialis","Grip/Forearms"],equipment:["Dumbbells","Incline Bench"],restTime:210,difficulty:"Beginner",workoutType:"BackBiceps"},{id:8,name:"Neutral Grip Pull-ups",primaryMuscles:["Latissimus Dorsi"],secondaryMuscles:["Biceps Brachii","Rhomboids","Trapezius","Grip/Forearms"],equipment:["Pull-up Bar"],restTime:240,difficulty:"Intermediate",workoutType:"BackBiceps"},{id:9,name:"Bent Over Rows",primaryMuscles:["Latissimus Dorsi"],secondaryMuscles:["Rhomboids","Trapezius","Biceps Brachii","Grip/Forearms"],equipment:["Barbell","Dumbbells"],restTime:270,difficulty:"Intermediate",workoutType:"BackBiceps"}]},ChestTriceps:{name:"Ender's Push Day",description:"Chest and tricep focus with pressing movements",duration:75,difficulty:"Intermediate",exercises:[{id:10,name:"Bench Press",primaryMuscles:["Pectoralis Major"],secondaryMuscles:["Triceps Brachii","Anterior Deltoids","Serratus Anterior"],equipment:["Barbell","Bench"],restTime:540,difficulty:"Intermediate",workoutType:"ChestTriceps"},{id:11,name:"TRX Reverse Flys",primaryMuscles:["Rhomboids"],secondaryMuscles:["Trapezius","Rear Deltoids","Core"],equipment:["TRX"],restTime:570,difficulty:"Intermediate",workoutType:"ChestTriceps"},{id:12,name:"Tricep Extension",primaryMuscles:["Triceps Brachii"],secondaryMuscles:["Anconeus"],equipment:["Dumbbells"],restTime:600,difficulty:"Beginner",workoutType:"ChestTriceps"},{id:13,name:"TRX Pushup",primaryMuscles:["Pectoralis Major"],secondaryMuscles:["Triceps Brachii","Anterior Deltoids","Core"],equipment:["TRX"],restTime:0,difficulty:"Intermediate",workoutType:"ChestTriceps"},{id:14,name:"Incline Bench Press",primaryMuscles:["Pectoralis Major"],secondaryMuscles:["Triceps Brachii","Anterior Deltoids","Serratus Anterior"],equipment:["Barbell","Incline Bench"],restTime:0,difficulty:"Intermediate",workoutType:"ChestTriceps"},{id:15,name:"Shoulder Press",primaryMuscles:["Deltoids"],secondaryMuscles:["Triceps Brachii","Trapezius","Serratus Anterior"],equipment:["Barbell","Dumbbells"],restTime:0,difficulty:"Intermediate",workoutType:"ChestTriceps"},{id:16,name:"Dips",primaryMuscles:["Triceps Brachii"],secondaryMuscles:["Pectoralis Major","Anterior Deltoids","Core"],equipment:["Dip Station","Parallel Bars"],restTime:0,difficulty:"Intermediate",workoutType:"ChestTriceps"}]},Legs:{name:"Ender's Leg Day",description:"Lower body compound movements and glute activation",duration:50,difficulty:"Advanced",exercises:[{id:17,name:"Goblet Squats",primaryMuscles:["Quadriceps","Gluteus Maximus"],secondaryMuscles:["Hamstrings","Core","Grip/Forearms"],equipment:["Kettlebell","Dumbbell"],restTime:0,difficulty:"Beginner",workoutType:"Legs"},{id:18,name:"Dead Lifts",primaryMuscles:["Gluteus Maximus","Hamstrings"],secondaryMuscles:["Erector Spinae","Core","Grip/Forearms"],equipment:["Barbell"],restTime:0,difficulty:"Advanced",workoutType:"Legs"},{id:19,name:"Calf Raises",primaryMuscles:["Gastrocnemius","Soleus"],secondaryMuscles:[],equipment:["None","Calf Machine"],restTime:0,difficulty:"Beginner",workoutType:"Legs"},{id:20,name:"Glute Bridges",primaryMuscles:["Gluteus Maximus"],secondaryMuscles:["Hamstrings","Core","Quadriceps"],equipment:["None","Barbell"],restTime:0,difficulty:"Beginner",workoutType:"Legs"},{id:21,name:"Kettlebell Swings",primaryMuscles:["Gluteus Maximus","Hamstrings"],secondaryMuscles:["Core","Shoulders","Grip/Forearms"],equipment:["Kettlebell"],restTime:0,difficulty:"Intermediate",workoutType:"Legs"}]}};function b6(){const[,e]=Au(),{startWorkout:t}=fj(),{toast:r}=dl(),n=i=>{const a=fy[i];r({title:"Starting Workout!",description:`Get ready for ${a.name}`}),t(i,a.exercises),e("/workout-session")},s=i=>{switch(i.toLowerCase()){case"beginner":return"bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-300";case"intermediate":return"bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-300";case"advanced":return"bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-300";default:return"bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-300"}};return o.jsx("section",{className:"bg-muted/30 py-16",children:o.jsxs("div",{className:"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8",children:[o.jsxs("div",{className:"text-center mb-12",children:[o.jsx("h2",{className:"text-4xl font-bold mb-4",children:"Ender's Workout Collection"}),o.jsx("p",{className:"text-xl text-muted-foreground",children:"Professional workout routines with precise muscle targeting"})]}),o.jsx("div",{className:"grid md:grid-cols-2 lg:grid-cols-2 gap-8",children:Object.entries(fy).map(([i,a])=>o.jsxs(ie,{className:"overflow-hidden card-hover",children:[o.jsxs(Le,{children:[o.jsxs("div",{className:"flex items-center justify-between",children:[o.jsx(Fe,{className:"text-xl",children:a.name}),o.jsx(Or,{className:s(a.difficulty),children:a.difficulty})]}),o.jsx("p",{className:"text-muted-foreground",children:a.description})]}),o.jsxs(le,{className:"space-y-4",children:[o.jsxs("div",{className:"flex items-center justify-between text-sm text-muted-foreground",children:[o.jsxs("span",{className:"flex items-center",children:[o.jsx(NS,{className:"w-4 h-4 mr-1"}),a.duration," min"]}),o.jsxs("span",{className:"flex items-center",children:[o.jsx(hs,{className:"w-4 h-4 mr-1"}),a.exercises.length," exercises"]}),o.jsxs("span",{className:"flex items-center",children:[o.jsx(Ro,{className:"w-4 h-4 mr-1"}),"Mixed Equipment"]})]}),o.jsxs("div",{className:"space-y-2",children:[o.jsx("h4",{className:"text-sm font-medium",children:"Exercises:"}),o.jsxs("div",{className:"grid grid-cols-1 gap-1",children:[a.exercises.slice(0,3).map((l,c)=>o.jsxs("div",{className:"text-xs text-muted-foreground",children:[c+1,". ",l.name]},l.id)),a.exercises.length>3&&o.jsxs("div",{className:"text-xs text-muted-foreground",children:["+",a.exercises.length-3," more exercises"]})]})]}),o.jsxs(ae,{onClick:()=>n(i),className:"w-full gradient-bg",children:[o.jsx(Fu,{className:"w-4 h-4 mr-2"}),"Start ",i," Workout"]})]})]},i))}),o.jsx("div",{className:"mt-12 text-center",children:o.jsxs(ie,{className:"inline-block p-6 bg-gradient-to-r from-primary/10 to-accent/10",children:[o.jsx("h3",{className:"text-lg font-bold mb-2",children:"Real Exercise Database"}),o.jsx("p",{className:"text-sm text-muted-foreground mb-4",children:"Based on Ender's actual workout logs with precise muscle activation percentages"}),o.jsxs("div",{className:"grid grid-cols-4 gap-4 text-center",children:[o.jsxs("div",{children:[o.jsx("div",{className:"text-2xl font-bold text-primary",children:"27"}),o.jsx("div",{className:"text-xs text-muted-foreground",children:"Total Exercises"})]}),o.jsxs("div",{children:[o.jsx("div",{className:"text-2xl font-bold text-accent",children:"4"}),o.jsx("div",{className:"text-xs text-muted-foreground",children:"Workout Types"})]}),o.jsxs("div",{children:[o.jsx("div",{className:"text-2xl font-bold text-secondary",children:"215"}),o.jsx("div",{className:"text-xs text-muted-foreground",children:"Total Minutes"})]}),o.jsxs("div",{children:[o.jsx("div",{className:"text-2xl font-bold text-orange-500",children:"100%"}),o.jsx("div",{className:"text-xs text-muted-foreground",children:"Real Data"})]})]})]})})]})})}function N6(){Rn();const{data:e=[]}=yr({queryKey:["/api/workouts"]}),{data:t=[]}=yr({queryKey:["/api/workout-sessions"]}),r={totalWorkouts:t.length,weeklyWorkouts:t.filter(s=>{const i=new Date(s.createdAt),a=new Date;return a.setDate(a.getDate()-7),i>=a}).length,totalMinutes:t.reduce((s,i)=>s+(i.totalDuration||0),0),totalCalories:t.reduce((s,i)=>s+(i.caloriesBurned||0),0)},n=[{name:"Strength Training",count:e.filter(s=>s.category==="strength").length,icon:hs,color:"bg-primary/10 text-primary"},{name:"Cardio",count:e.filter(s=>s.category==="cardio").length,icon:Oa,color:"bg-accent/10 text-accent"},{name:"Yoga & Flexibility",count:e.filter(s=>s.category==="yoga").length,icon:gl,color:"bg-secondary/10 text-secondary"}];return o.jsxs("div",{className:"min-h-screen bg-background",children:[o.jsx("section",{className:"bg-gradient-to-r from-primary/10 via-accent/5 to-secondary/10 py-12",children:o.jsxs("div",{className:"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8",children:[o.jsxs("div",{className:"flex items-center justify-between mb-8",children:[o.jsxs("div",{children:[o.jsx("h1",{className:"text-4xl font-bold mb-4",children:"Your Workouts"}),o.jsx("p",{className:"text-xl text-muted-foreground",children:"AI-powered training tailored to your goals"})]}),o.jsxs(ae,{className:"gradient-bg",children:[o.jsx(Uh,{className:"w-4 h-4 mr-2"}),"Create Workout"]})]}),o.jsxs("div",{className:"grid md:grid-cols-4 gap-6",children:[o.jsx(ie,{children:o.jsxs(le,{className:"p-6 text-center",children:[o.jsx("div",{className:"text-3xl font-bold text-primary mb-2",children:r.totalWorkouts}),o.jsx("p",{className:"text-sm text-muted-foreground",children:"Total Workouts"})]})}),o.jsx(ie,{children:o.jsxs(le,{className:"p-6 text-center",children:[o.jsx("div",{className:"text-3xl font-bold text-accent mb-2",children:r.weeklyWorkouts}),o.jsx("p",{className:"text-sm text-muted-foreground",children:"This Week"})]})}),o.jsx(ie,{children:o.jsxs(le,{className:"p-6 text-center",children:[o.jsxs("div",{className:"text-3xl font-bold text-secondary mb-2",children:[Math.round(r.totalMinutes/60),"h"]}),o.jsx("p",{className:"text-sm text-muted-foreground",children:"Total Time"})]})}),o.jsx(ie,{children:o.jsxs(le,{className:"p-6 text-center",children:[o.jsx("div",{className:"text-3xl font-bold text-orange-500 mb-2",children:r.totalCalories}),o.jsx("p",{className:"text-sm text-muted-foreground",children:"Calories Burned"})]})})]})]})}),o.jsx("section",{className:"py-12",children:o.jsxs("div",{className:"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8",children:[o.jsx("h2",{className:"text-2xl font-bold mb-8",children:"Browse by Category"}),o.jsx("div",{className:"grid md:grid-cols-3 gap-6 mb-12",children:n.map((s,i)=>o.jsx(ie,{className:"card-hover cursor-pointer",children:o.jsxs(le,{className:"p-6",children:[o.jsx("div",{className:`w-12 h-12 ${s.color} rounded-xl flex items-center justify-center mb-4`,children:o.jsx(s.icon,{className:"w-6 h-6"})}),o.jsx("h3",{className:"font-bold mb-2",children:s.name}),o.jsxs("p",{className:"text-muted-foreground",children:[s.count," workout",s.count!==1?"s":""," available"]})]})},i))})]})}),t.length>0&&o.jsx("section",{className:"py-12 bg-muted/30",children:o.jsxs("div",{className:"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8",children:[o.jsxs("div",{className:"flex items-center justify-between mb-8",children:[o.jsx("h2",{className:"text-2xl font-bold",children:"Recent Sessions"}),o.jsx(ae,{variant:"outline",children:"View All"})]}),o.jsx("div",{className:"grid md:grid-cols-2 lg:grid-cols-3 gap-6",children:t.slice(0,6).map(s=>o.jsx(ie,{className:"card-hover",children:o.jsxs(le,{className:"p-6",children:[o.jsxs("div",{className:"flex items-center justify-between mb-4",children:[o.jsx("h3",{className:"font-bold",children:"Workout Session"}),o.jsx(Or,{variant:s.completionStatus==="completed"?"default":"secondary",children:s.completionStatus})]}),o.jsxs("div",{className:"space-y-2 text-sm",children:[o.jsxs("div",{className:"flex items-center justify-between",children:[o.jsxs("span",{className:"flex items-center text-muted-foreground",children:[o.jsx(Vc,{className:"w-4 h-4 mr-1"}),"Duration"]}),o.jsxs("span",{className:"font-medium",children:[s.totalDuration||0," min"]})]}),o.jsxs("div",{className:"flex items-center justify-between",children:[o.jsxs("span",{className:"flex items-center text-muted-foreground",children:[o.jsx(pl,{className:"w-4 h-4 mr-1"}),"Calories"]}),o.jsx("span",{className:"font-medium",children:s.caloriesBurned||0})]}),s.formScore&&o.jsxs("div",{className:"flex items-center justify-between",children:[o.jsxs("span",{className:"flex items-center text-muted-foreground",children:[o.jsx(vS,{className:"w-4 h-4 mr-1"}),"Form Score"]}),o.jsxs("span",{className:"font-medium",children:[Math.round(s.formScore),"%"]})]}),o.jsx("p",{className:"text-muted-foreground mt-2",children:new Date(s.createdAt).toLocaleDateString()})]})]})},s.id))})]})}),o.jsx(b6,{}),o.jsx(O_,{})]})}function S6(){Rn();const{data:e=[]}=yr({queryKey:["/api/user-stats"]}),{data:t=[]}=yr({queryKey:["/api/achievements"]}),{data:r=[]}=yr({queryKey:["/api/workout-sessions"]}),n=e[0],s=e[1],i=(u,d)=>!u||!d?0:(u-d)/d*100,a=[{label:"Weight",current:(n==null?void 0:n.weight)||0,previous:s==null?void 0:s.weight,unit:"kg",icon:OI,color:"text-primary"},{label:"Body Fat",current:(n==null?void 0:n.bodyFat)||0,previous:s==null?void 0:s.bodyFat,unit:"%",icon:hs,color:"text-accent",reverse:!0},{label:"Muscle Mass",current:(n==null?void 0:n.muscleMass)||0,previous:s==null?void 0:s.muscleMass,unit:"kg",icon:Oa,color:"text-secondary"},{label:"Energy Level",current:(n==null?void 0:n.energyLevel)||0,previous:s==null?void 0:s.energyLevel,unit:"/10",icon:FI,color:"text-orange-500"}],l={totalSessions:r.length,totalDuration:r.reduce((u,d)=>u+(d.totalDuration||0),0),totalCalories:r.reduce((u,d)=>u+(d.caloriesBurned||0),0),averageFormScore:(()=>{const u=r.filter(d=>d.formScore);return u.length>0?u.reduce((d,f)=>d+(f.formScore||0),0)/u.length:0})(),thisWeekSessions:r.filter(u=>{const d=new Date(u.createdAt),f=new Date;return f.setDate(f.getDate()-7),d>=f}).length},c=[{title:"Weekly Workout Goal",current:l.thisWeekSessions,target:5,unit:"sessions",color:"primary"},{title:"Monthly Calorie Burn",current:l.totalCalories,target:8e3,unit:"calories",color:"accent"},{title:"Form Score Target",current:Math.round(l.averageFormScore),target:95,unit:"%",color:"secondary"}];return o.jsxs("div",{className:"min-h-screen bg-background",children:[o.jsx("section",{className:"bg-gradient-to-r from-primary/10 via-accent/5 to-secondary/10 py-12",children:o.jsx("div",{className:"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8",children:o.jsxs("div",{className:"text-center",children:[o.jsx("h1",{className:"text-4xl font-bold mb-4",children:"Your Progress Journey"}),o.jsx("p",{className:"text-xl text-muted-foreground",children:"Track your transformation with detailed analytics"})]})})}),o.jsx("section",{className:"py-12",children:o.jsxs("div",{className:"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8",children:[o.jsx("h2",{className:"text-2xl font-bold mb-8",children:"Body Composition"}),o.jsx("div",{className:"grid md:grid-cols-2 lg:grid-cols-4 gap-6 mb-12",children:a.map((u,d)=>{const f=i(u.current??void 0,u.previous??void 0),h=u.reverse?f<0:f>0,x=u.reverse?f>0:f<0;return o.jsx(ie,{children:o.jsxs(le,{className:"p-6",children:[o.jsxs("div",{className:"flex items-center justify-between mb-4",children:[o.jsx(u.icon,{className:`w-8 h-8 ${u.color}`}),u.previous&&o.jsxs("div",{className:`flex items-center text-sm ${h?"text-green-500":x?"text-red-500":"text-muted-foreground"}`,children:[h?o.jsx(gl,{className:"w-4 h-4 mr-1"}):x?o.jsx(II,{className:"w-4 h-4 mr-1"}):null,f!==0&&`${Math.abs(f).toFixed(1)}%`]})]}),o.jsxs("div",{className:"text-3xl font-bold mb-1",children:[u.current,u.unit]}),o.jsx("p",{className:"text-sm text-muted-foreground",children:u.label})]})},d)})}),o.jsx("h2",{className:"text-2xl font-bold mb-8",children:"Workout Performance"}),o.jsxs("div",{className:"grid md:grid-cols-2 lg:grid-cols-4 gap-6 mb-12",children:[o.jsx(ie,{children:o.jsxs(le,{className:"p-6 text-center",children:[o.jsx(Oa,{className:"w-8 h-8 text-primary mx-auto mb-4"}),o.jsx("div",{className:"text-3xl font-bold text-primary mb-1",children:l.totalSessions}),o.jsx("p",{className:"text-sm text-muted-foreground",children:"Total Sessions"})]})}),o.jsx(ie,{children:o.jsxs(le,{className:"p-6 text-center",children:[o.jsx(gS,{className:"w-8 h-8 text-accent mx-auto mb-4"}),o.jsxs("div",{className:"text-3xl font-bold text-accent mb-1",children:[Math.round(l.totalDuration/60),"h"]}),o.jsx("p",{className:"text-sm text-muted-foreground",children:"Total Time"})]})}),o.jsx(ie,{children:o.jsxs(le,{className:"p-6 text-center",children:[o.jsx(pl,{className:"w-8 h-8 text-orange-500 mx-auto mb-4"}),o.jsx("div",{className:"text-3xl font-bold text-orange-500 mb-1",children:l.totalCalories}),o.jsx("p",{className:"text-sm text-muted-foreground",children:"Calories Burned"})]})}),o.jsx(ie,{children:o.jsxs(le,{className:"p-6 text-center",children:[o.jsx(hs,{className:"w-8 h-8 text-secondary mx-auto mb-4"}),o.jsxs("div",{className:"text-3xl font-bold text-secondary mb-1",children:[Math.round(l.averageFormScore),"%"]}),o.jsx("p",{className:"text-sm text-muted-foreground",children:"Avg Form Score"})]})})]})]})}),o.jsx("section",{className:"py-12 bg-muted/30",children:o.jsxs("div",{className:"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8",children:[o.jsx("h2",{className:"text-2xl font-bold mb-8",children:"Current Goals"}),o.jsx("div",{className:"grid md:grid-cols-3 gap-6",children:c.map((u,d)=>{const f=Math.min(u.current/u.target*100,100),h=u.color==="primary"?"text-primary":u.color==="accent"?"text-accent":"text-secondary";return o.jsx(ie,{children:o.jsxs(le,{className:"p-6",children:[o.jsx("h3",{className:"font-bold mb-4",children:u.title}),o.jsxs("div",{className:"flex items-center justify-between mb-2",children:[o.jsx("span",{className:"text-sm text-muted-foreground",children:"Progress"}),o.jsxs("span",{className:`font-bold ${h}`,children:[u.current," / ",u.target," ",u.unit]})]}),o.jsx(Nn,{value:f,className:"mb-2"}),o.jsxs("p",{className:"text-sm text-muted-foreground",children:[Math.round(f),"% complete"]})]})},d)})})]})}),t.length>0&&o.jsx("section",{className:"py-12",children:o.jsxs("div",{className:"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8",children:[o.jsxs("div",{className:"flex items-center justify-between mb-8",children:[o.jsx("h2",{className:"text-2xl font-bold",children:"Recent Achievements"}),o.jsx(ae,{variant:"outline",children:"View All"})]}),o.jsx("div",{className:"grid md:grid-cols-2 lg:grid-cols-3 gap-6",children:t.slice(0,6).map(u=>o.jsx(ie,{className:"card-hover",children:o.jsx(le,{className:"p-6",children:o.jsxs("div",{className:"flex items-start space-x-4",children:[o.jsx("div",{className:"w-12 h-12 bg-accent/10 rounded-xl flex items-center justify-center flex-shrink-0",children:o.jsx(Ks,{className:"w-6 h-6 text-accent"})}),o.jsxs("div",{className:"flex-1",children:[o.jsx("h3",{className:"font-bold mb-1",children:u.title}),o.jsx("p",{className:"text-sm text-muted-foreground mb-2",children:u.description}),u.value&&o.jsx(Or,{variant:"secondary",className:"text-xs",children:u.value}),o.jsx("p",{className:"text-xs text-muted-foreground mt-2",children:new Date(u.unlockedAt).toLocaleDateString()})]})]})})},u.id))})]})}),o.jsx(L_,{})]})}function j6(){Rn();const{data:e=[]}=yr({queryKey:["/api/challenges"]}),{data:t=[]}=yr({queryKey:["/api/social/posts"]}),r={totalMembers:45672,activeChallenges:e.filter(i=>i.isActive).length,completedWorkouts:892344,totalCaloriesBurned:15672890},n=[{rank:1,name:"Sarah Chen",points:2847,avatar:"SC"},{rank:2,name:"Mike Rodriguez",points:2756,avatar:"MR"},{rank:3,name:"Emma Johnson",points:2698,avatar:"EJ"},{rank:4,name:"Alex Thompson",points:2634,avatar:"AT"},{rank:5,name:"Lisa Wang",points:2587,avatar:"LW"}],s=e.filter(i=>i.isActive).slice(0,3);return o.jsxs("div",{className:"min-h-screen bg-background",children:[o.jsx("section",{className:"bg-gradient-to-r from-primary/10 via-accent/5 to-secondary/10 py-12",children:o.jsxs("div",{className:"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8",children:[o.jsxs("div",{className:"text-center mb-8",children:[o.jsx("h1",{className:"text-4xl font-bold mb-4",children:"FitForge Community"}),o.jsx("p",{className:"text-xl text-muted-foreground",children:"Connect, compete, and achieve greatness together"})]}),o.jsxs("div",{className:"grid md:grid-cols-4 gap-6",children:[o.jsx(ie,{children:o.jsxs(le,{className:"p-6 text-center",children:[o.jsx($c,{className:"w-8 h-8 text-primary mx-auto mb-4"}),o.jsx("div",{className:"text-3xl font-bold text-primary mb-1",children:r.totalMembers.toLocaleString()}),o.jsx("p",{className:"text-sm text-muted-foreground",children:"Active Members"})]})}),o.jsx(ie,{children:o.jsxs(le,{className:"p-6 text-center",children:[o.jsx(hs,{className:"w-8 h-8 text-accent mx-auto mb-4"}),o.jsx("div",{className:"text-3xl font-bold text-accent mb-1",children:r.activeChallenges}),o.jsx("p",{className:"text-sm text-muted-foreground",children:"Live Challenges"})]})}),o.jsx(ie,{children:o.jsxs(le,{className:"p-6 text-center",children:[o.jsx(Ks,{className:"w-8 h-8 text-secondary mx-auto mb-4"}),o.jsxs("div",{className:"text-3xl font-bold text-secondary mb-1",children:[(r.completedWorkouts/1e3).toFixed(0),"K"]}),o.jsx("p",{className:"text-sm text-muted-foreground",children:"Workouts Completed"})]})}),o.jsx(ie,{children:o.jsxs(le,{className:"p-6 text-center",children:[o.jsx(pl,{className:"w-8 h-8 text-orange-500 mx-auto mb-4"}),o.jsxs("div",{className:"text-3xl font-bold text-orange-500 mb-1",children:[(r.totalCaloriesBurned/1e6).toFixed(1),"M"]}),o.jsx("p",{className:"text-sm text-muted-foreground",children:"Calories Burned"})]})})]})]})}),o.jsx("section",{className:"py-12",children:o.jsxs("div",{className:"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8",children:[o.jsxs("div",{className:"flex items-center justify-between mb-8",children:[o.jsx("h2",{className:"text-2xl font-bold",children:"Featured Challenges"}),o.jsxs(ae,{className:"gradient-bg",children:[o.jsx(Uh,{className:"w-4 h-4 mr-2"}),"Create Challenge"]})]}),o.jsx("div",{className:"grid md:grid-cols-3 gap-6",children:s.map(i=>{var a;return o.jsx(ie,{className:"card-hover",children:o.jsxs(le,{className:"p-6",children:[o.jsxs("div",{className:"flex items-center justify-between mb-4",children:[o.jsx("h3",{className:"font-bold",children:i.name}),o.jsxs(Or,{className:"bg-primary/10 text-primary",children:[Math.ceil((new Date(i.endDate).getTime()-new Date().getTime())/(1e3*60*60*24))," days left"]})]}),o.jsx("p",{className:"text-sm text-muted-foreground mb-4",children:i.description}),o.jsxs("div",{className:"flex items-center justify-between mb-4",children:[o.jsxs("div",{className:"flex items-center",children:[o.jsx($c,{className:"w-4 h-4 mr-2 text-muted-foreground"}),o.jsxs("span",{className:"text-sm text-muted-foreground",children:[(a=i.participants)==null?void 0:a.toLocaleString()," participants"]})]}),o.jsxs("div",{className:"flex items-center",children:[o.jsx(hs,{className:"w-4 h-4 mr-2 text-muted-foreground"}),o.jsxs("span",{className:"text-sm text-muted-foreground",children:[i.target," ",i.unit]})]})]}),o.jsx(ae,{className:"w-full btn-secondary",children:"Join Challenge"})]})},i.id)})})]})}),o.jsx("section",{className:"py-12 bg-muted/30",children:o.jsx("div",{className:"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8",children:o.jsxs("div",{className:"grid lg:grid-cols-3 gap-8",children:[o.jsxs(ie,{className:"lg:col-span-1",children:[o.jsx(Le,{children:o.jsxs(Fe,{className:"flex items-center",children:[o.jsx(pI,{className:"w-5 h-5 mr-2 text-accent"}),"Weekly Leaders"]})}),o.jsxs(le,{children:[o.jsx("div",{className:"space-y-4",children:n.map(i=>o.jsxs("div",{className:"flex items-center space-x-3",children:[o.jsx("div",{className:`w-8 h-8 rounded-full flex items-center justify-center text-sm font-bold ${i.rank===1?"bg-yellow-500 text-white":i.rank===2?"bg-gray-400 text-white":i.rank===3?"bg-orange-600 text-white":"bg-muted text-muted-foreground"}`,children:i.rank}),o.jsx(Zc,{className:"w-8 h-8",children:o.jsx(Xc,{className:"text-xs",children:i.avatar})}),o.jsxs("div",{className:"flex-1",children:[o.jsx("p",{className:"font-medium text-sm",children:i.name}),o.jsxs("p",{className:"text-xs text-muted-foreground",children:[i.points," points"]})]})]},i.rank))}),o.jsx(ae,{variant:"outline",className:"w-full mt-4",children:"View Full Leaderboard"})]})]}),o.jsxs(ie,{className:"lg:col-span-2",children:[o.jsx(Le,{children:o.jsxs(Fe,{className:"flex items-center",children:[o.jsx(gl,{className:"w-5 h-5 mr-2 text-primary"}),"Community Activity"]})}),o.jsxs(le,{children:[t.length>0?o.jsx("div",{className:"space-y-6",children:t.slice(0,3).map(i=>{var a,l;return o.jsxs("div",{className:"border-b border-border pb-4 last:border-b-0",children:[o.jsxs("div",{className:"flex items-center mb-3",children:[o.jsx(Zc,{className:"w-8 h-8 mr-3",children:o.jsxs(Xc,{className:"text-xs",children:[(a=i.user.firstName)==null?void 0:a[0],(l=i.user.lastName)==null?void 0:l[0]]})}),o.jsxs("div",{children:[o.jsxs("p",{className:"font-medium text-sm",children:[i.user.firstName," ",i.user.lastName]}),o.jsx("p",{className:"text-xs text-muted-foreground",children:new Date(i.createdAt).toLocaleDateString()})]})]}),o.jsx("p",{className:"text-sm mb-3",children:i.content}),o.jsxs("div",{className:"flex items-center space-x-4 text-xs text-muted-foreground",children:[o.jsxs("span",{className:"flex items-center",children:[o.jsx(wS,{className:"w-3 h-3 mr-1"}),i.likes]}),o.jsxs("span",{className:"flex items-center",children:[o.jsx(mm,{className:"w-3 h-3 mr-1"}),i.comments]})]})]},i.id)})}):o.jsxs("div",{className:"text-center py-8",children:[o.jsx(mm,{className:"w-12 h-12 mx-auto text-muted-foreground mb-4"}),o.jsx("p",{className:"text-muted-foreground",children:"No activity yet"}),o.jsx(ae,{className:"mt-4 gradient-bg",children:"Share Your Progress"})]}),o.jsx(ae,{variant:"outline",className:"w-full mt-4",children:"View Full Feed"})]})]})]})})}),o.jsx(Q_,{})]})}function Si({children:e}){const{user:t,isLoading:r}=Rn();return r?o.jsx("div",{className:"min-h-screen flex items-center justify-center",children:o.jsx("div",{className:"animate-spin rounded-full h-32 w-32 border-b-2 border-primary"})}):t?o.jsx(o.Fragment,{children:e}):o.jsx(_E,{})}function C6(){return Rn(),o.jsxs("div",{className:"min-h-screen bg-background",children:[o.jsx(LL,{}),o.jsxs(MR,{children:[o.jsx(cn,{path:"/",component:FF}),o.jsx(cn,{path:"/auth",component:_E}),o.jsx(cn,{path:"/dashboard",children:o.jsx(Si,{children:o.jsx(w6,{})})}),o.jsx(cn,{path:"/workouts",children:o.jsx(Si,{children:o.jsx(N6,{})})}),o.jsx(cn,{path:"/progress",children:o.jsx(Si,{children:o.jsx(S6,{})})}),o.jsx(cn,{path:"/community",children:o.jsx(Si,{children:o.jsx(j6,{})})}),o.jsx(cn,{path:"/workout-session",children:o.jsx(Si,{children:o.jsx(KL,{})})}),o.jsx(cn,{path:"/start-workout",children:o.jsx(Si,{children:o.jsx(kF,{})})}),o.jsx(cn,{component:TF})]})]})}function _6(){return o.jsx(tA,{client:pA,children:o.jsx(G4,{children:o.jsx(Z4,{children:o.jsx(X4,{children:o.jsxs(q4,{children:[o.jsx(wM,{}),o.jsx(C6,{})]})})})})})}yN(document.getElementById("root")).render(o.jsx(_6,{}));

</file>
<file path="FitForge/dist/public/assets/index-Hli7ESkA.css">
*,:before,:after{--tw-border-spacing-x: 0;--tw-border-spacing-y: 0;--tw-translate-x: 0;--tw-translate-y: 0;--tw-rotate: 0;--tw-skew-x: 0;--tw-skew-y: 0;--tw-scale-x: 1;--tw-scale-y: 1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness: proximity;--tw-gradient-from-position: ;--tw-gradient-via-position: ;--tw-gradient-to-position: ;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width: 0px;--tw-ring-offset-color: #fff;--tw-ring-color: rgb(59 130 246 / .5);--tw-ring-offset-shadow: 0 0 #0000;--tw-ring-shadow: 0 0 #0000;--tw-shadow: 0 0 #0000;--tw-shadow-colored: 0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: ;--tw-contain-size: ;--tw-contain-layout: ;--tw-contain-paint: ;--tw-contain-style: }::backdrop{--tw-border-spacing-x: 0;--tw-border-spacing-y: 0;--tw-translate-x: 0;--tw-translate-y: 0;--tw-rotate: 0;--tw-skew-x: 0;--tw-skew-y: 0;--tw-scale-x: 1;--tw-scale-y: 1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness: proximity;--tw-gradient-from-position: ;--tw-gradient-via-position: ;--tw-gradient-to-position: ;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width: 0px;--tw-ring-offset-color: #fff;--tw-ring-color: rgb(59 130 246 / .5);--tw-ring-offset-shadow: 0 0 #0000;--tw-ring-shadow: 0 0 #0000;--tw-shadow: 0 0 #0000;--tw-shadow-colored: 0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: ;--tw-contain-size: ;--tw-contain-layout: ;--tw-contain-paint: ;--tw-contain-style: }*,:before,:after{box-sizing:border-box;border-width:0;border-style:solid;border-color:#e5e7eb}:before,:after{--tw-content: ""}html,:host{line-height:1.5;-webkit-text-size-adjust:100%;-moz-tab-size:4;-o-tab-size:4;tab-size:4;font-family:ui-sans-serif,system-ui,sans-serif,"Apple Color Emoji","Segoe UI Emoji",Segoe UI Symbol,"Noto Color Emoji";font-feature-settings:normal;font-variation-settings:normal;-webkit-tap-highlight-color:transparent}body{margin:0;line-height:inherit}hr{height:0;color:inherit;border-top-width:1px}abbr:where([title]){-webkit-text-decoration:underline dotted;text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,samp,pre{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace;font-feature-settings:normal;font-variation-settings:normal;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{text-indent:0;border-color:inherit;border-collapse:collapse}button,input,optgroup,select,textarea{font-family:inherit;font-feature-settings:inherit;font-variation-settings:inherit;font-size:100%;font-weight:inherit;line-height:inherit;letter-spacing:inherit;color:inherit;margin:0;padding:0}button,select{text-transform:none}button,input:where([type=button]),input:where([type=reset]),input:where([type=submit]){-webkit-appearance:button;background-color:transparent;background-image:none}:-moz-focusring{outline:auto}:-moz-ui-invalid{box-shadow:none}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dl,dd,h1,h2,h3,h4,h5,h6,hr,figure,p,pre{margin:0}fieldset{margin:0;padding:0}legend{padding:0}ol,ul,menu{list-style:none;margin:0;padding:0}dialog{padding:0}textarea{resize:vertical}input::-moz-placeholder,textarea::-moz-placeholder{opacity:1;color:#9ca3af}input::placeholder,textarea::placeholder{opacity:1;color:#9ca3af}button,[role=button]{cursor:pointer}:disabled{cursor:default}img,svg,video,canvas,audio,iframe,embed,object{display:block;vertical-align:middle}img,video{max-width:100%;height:auto}[hidden]:where(:not([hidden=until-found])){display:none}*{border-color:hsl(var(--border))}body{background-color:hsl(var(--background));font-family:ui-sans-serif,system-ui,sans-serif,"Apple Color Emoji","Segoe UI Emoji",Segoe UI Symbol,"Noto Color Emoji";color:hsl(var(--foreground));-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-family:Inter,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,sans-serif}html{scroll-behavior:smooth}.gradient-bg{background:linear-gradient(135deg,hsl(var(--primary)),hsl(var(--secondary)))}.glass-effect{-webkit-backdrop-filter:blur(16px);backdrop-filter:blur(16px);background:var(--glass-bg);border:1px solid var(--glass-border)}.text-gradient{background:linear-gradient(135deg,hsl(var(--primary)),hsl(var(--accent)));-webkit-background-clip:text;-webkit-text-fill-color:transparent;background-clip:text}.card-hover{transition-property:all;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.3s;animation-duration:.3s}.card-hover:hover{--tw-translate-y: -.5rem;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));--tw-shadow: 0 20px 25px -5px rgb(0 0 0 / .1), 0 8px 10px -6px rgb(0 0 0 / .1);--tw-shadow-colored: 0 20px 25px -5px var(--tw-shadow-color), 0 8px 10px -6px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}.btn-primary{background:linear-gradient(135deg,hsl(var(--primary)),hsl(var(--secondary)));transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));border-radius:.75rem;padding:.75rem 1.5rem;font-weight:600;--tw-text-opacity: 1;color:rgb(255 255 255 / var(--tw-text-opacity, 1));transition-property:all;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.3s;animation-duration:.3s}.btn-primary:hover{--tw-scale-x: 1.05;--tw-scale-y: 1.05;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));--tw-shadow: 0 10px 15px -3px rgb(0 0 0 / .1), 0 4px 6px -4px rgb(0 0 0 / .1);--tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}.btn-secondary{border-radius:.75rem;border-width:2px;border-color:hsl(var(--primary));padding:.75rem 1.5rem;font-weight:600;color:hsl(var(--primary));transition-property:all;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.3s;animation-duration:.3s}.btn-secondary:hover{background-color:hsl(var(--primary));--tw-text-opacity: 1;color:rgb(255 255 255 / var(--tw-text-opacity, 1))}.progress-ring{transform:rotate(-90deg)}.progress-ring circle{transition:stroke-dasharray 1s ease-in-out,stroke-dashoffset 1s ease-in-out}.sr-only{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);white-space:nowrap;border-width:0}.pointer-events-none{pointer-events:none}.pointer-events-auto{pointer-events:auto}.visible{visibility:visible}.invisible{visibility:hidden}.fixed{position:fixed}.absolute{position:absolute}.relative{position:relative}.sticky{position:sticky}.inset-0{top:0;right:0;bottom:0;left:0}.inset-x-0{left:0;right:0}.inset-y-0{top:0;bottom:0}.-bottom-12{bottom:-3rem}.-left-12{left:-3rem}.-right-12{right:-3rem}.-top-12{top:-3rem}.bottom-0{bottom:0}.bottom-4{bottom:1rem}.left-0{left:0}.left-1{left:.25rem}.left-1\/2{left:50%}.left-2{left:.5rem}.left-3{left:.75rem}.left-4{left:1rem}.left-\[50\%\]{left:50%}.right-0{right:0}.right-1{right:.25rem}.right-2{right:.5rem}.right-3{right:.75rem}.right-4{right:1rem}.top-0{top:0}.top-1\.5{top:.375rem}.top-1\/2{top:50%}.top-1\/3{top:33.333333%}.top-1\/4{top:25%}.top-2{top:.5rem}.top-3\.5{top:.875rem}.top-4{top:1rem}.top-\[1px\]{top:1px}.top-\[50\%\]{top:50%}.top-\[60\%\]{top:60%}.top-full{top:100%}.z-0{z-index:0}.z-10{z-index:10}.z-20{z-index:20}.z-50{z-index:50}.z-\[100\]{z-index:100}.z-\[1\]{z-index:1}.-mx-1{margin-left:-.25rem;margin-right:-.25rem}.mx-2{margin-left:.5rem;margin-right:.5rem}.mx-3\.5{margin-left:.875rem;margin-right:.875rem}.mx-4{margin-left:1rem;margin-right:1rem}.mx-auto{margin-left:auto;margin-right:auto}.my-0\.5{margin-top:.125rem;margin-bottom:.125rem}.my-1{margin-top:.25rem;margin-bottom:.25rem}.-ml-4{margin-left:-1rem}.-mt-4{margin-top:-1rem}.mb-1{margin-bottom:.25rem}.mb-12{margin-bottom:3rem}.mb-2{margin-bottom:.5rem}.mb-3{margin-bottom:.75rem}.mb-4{margin-bottom:1rem}.mb-6{margin-bottom:1.5rem}.mb-8{margin-bottom:2rem}.ml-1{margin-left:.25rem}.ml-auto{margin-left:auto}.mr-1{margin-right:.25rem}.mr-2{margin-right:.5rem}.mr-3{margin-right:.75rem}.mt-1{margin-top:.25rem}.mt-1\.5{margin-top:.375rem}.mt-12{margin-top:3rem}.mt-2{margin-top:.5rem}.mt-24{margin-top:6rem}.mt-4{margin-top:1rem}.mt-6{margin-top:1.5rem}.mt-auto{margin-top:auto}.line-clamp-2{overflow:hidden;display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:2}.block{display:block}.inline-block{display:inline-block}.flex{display:flex}.inline-flex{display:inline-flex}.table{display:table}.grid{display:grid}.hidden{display:none}.aspect-square{aspect-ratio:1 / 1}.aspect-video{aspect-ratio:16 / 9}.size-4{width:1rem;height:1rem}.h-1\.5{height:.375rem}.h-10{height:2.5rem}.h-11{height:2.75rem}.h-12{height:3rem}.h-16{height:4rem}.h-2{height:.5rem}.h-2\.5{height:.625rem}.h-3{height:.75rem}.h-3\.5{height:.875rem}.h-32{height:8rem}.h-4{height:1rem}.h-48{height:12rem}.h-5{height:1.25rem}.h-6{height:1.5rem}.h-64{height:16rem}.h-7{height:1.75rem}.h-8{height:2rem}.h-9{height:2.25rem}.h-\[1px\]{height:1px}.h-\[var\(--radix-navigation-menu-viewport-height\)\]{height:var(--radix-navigation-menu-viewport-height)}.h-\[var\(--radix-select-trigger-height\)\]{height:var(--radix-select-trigger-height)}.h-auto{height:auto}.h-full{height:100%}.h-px{height:1px}.h-svh{height:100svh}.max-h-96{max-height:24rem}.max-h-\[--radix-context-menu-content-available-height\]{max-height:var(--radix-context-menu-content-available-height)}.max-h-\[--radix-select-content-available-height\]{max-height:var(--radix-select-content-available-height)}.max-h-\[300px\]{max-height:300px}.max-h-\[var\(--radix-dropdown-menu-content-available-height\)\]{max-height:var(--radix-dropdown-menu-content-available-height)}.max-h-screen{max-height:100vh}.min-h-0{min-height:0px}.min-h-\[80px\]{min-height:80px}.min-h-\[80vh\]{min-height:80vh}.min-h-screen{min-height:100vh}.min-h-svh{min-height:100svh}.w-0{width:0px}.w-1{width:.25rem}.w-10{width:2.5rem}.w-11{width:2.75rem}.w-12{width:3rem}.w-16{width:4rem}.w-2{width:.5rem}.w-2\.5{width:.625rem}.w-2\/3{width:66.666667%}.w-3{width:.75rem}.w-3\.5{width:.875rem}.w-3\/4{width:75%}.w-32{width:8rem}.w-4{width:1rem}.w-5{width:1.25rem}.w-56{width:14rem}.w-6{width:1.5rem}.w-64{width:16rem}.w-7{width:1.75rem}.w-72{width:18rem}.w-8{width:2rem}.w-9{width:2.25rem}.w-\[--sidebar-width\]{width:var(--sidebar-width)}.w-\[100px\]{width:100px}.w-\[140px\]{width:140px}.w-\[150px\]{width:150px}.w-\[1px\]{width:1px}.w-\[300px\]{width:300px}.w-auto{width:auto}.w-full{width:100%}.w-max{width:-moz-max-content;width:max-content}.w-px{width:1px}.min-w-0{min-width:0px}.min-w-10{min-width:2.5rem}.min-w-11{min-width:2.75rem}.min-w-5{min-width:1.25rem}.min-w-9{min-width:2.25rem}.min-w-\[12rem\]{min-width:12rem}.min-w-\[8rem\]{min-width:8rem}.min-w-\[var\(--radix-select-trigger-width\)\]{min-width:var(--radix-select-trigger-width)}.max-w-2xl{max-width:42rem}.max-w-3xl{max-width:48rem}.max-w-6xl{max-width:72rem}.max-w-7xl{max-width:80rem}.max-w-\[--skeleton-width\]{max-width:var(--skeleton-width)}.max-w-lg{max-width:32rem}.max-w-max{max-width:-moz-max-content;max-width:max-content}.max-w-md{max-width:28rem}.flex-1{flex:1 1 0%}.flex-shrink-0,.shrink-0{flex-shrink:0}.grow{flex-grow:1}.grow-0{flex-grow:0}.basis-full{flex-basis:100%}.caption-bottom{caption-side:bottom}.border-collapse{border-collapse:collapse}.origin-\[--radix-context-menu-content-transform-origin\]{transform-origin:var(--radix-context-menu-content-transform-origin)}.origin-\[--radix-dropdown-menu-content-transform-origin\]{transform-origin:var(--radix-dropdown-menu-content-transform-origin)}.origin-\[--radix-hover-card-content-transform-origin\]{transform-origin:var(--radix-hover-card-content-transform-origin)}.origin-\[--radix-menubar-content-transform-origin\]{transform-origin:var(--radix-menubar-content-transform-origin)}.origin-\[--radix-popover-content-transform-origin\]{transform-origin:var(--radix-popover-content-transform-origin)}.origin-\[--radix-select-content-transform-origin\]{transform-origin:var(--radix-select-content-transform-origin)}.origin-\[--radix-tooltip-content-transform-origin\]{transform-origin:var(--radix-tooltip-content-transform-origin)}.-translate-x-1\/2{--tw-translate-x: -50%;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.-translate-x-px{--tw-translate-x: -1px;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.-translate-y-1\/2{--tw-translate-y: -50%;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.translate-x-\[-50\%\]{--tw-translate-x: -50%;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.translate-x-px{--tw-translate-x: 1px;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.translate-y-\[-50\%\]{--tw-translate-y: -50%;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.rotate-45{--tw-rotate: 45deg;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.rotate-90{--tw-rotate: 90deg;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.transform{transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.animate-pulse{animation:pulse 2s cubic-bezier(.4,0,.6,1) infinite}@keyframes spin{to{transform:rotate(360deg)}}.animate-spin{animation:spin 1s linear infinite}.cursor-default{cursor:default}.cursor-pointer{cursor:pointer}.touch-none{touch-action:none}.select-none{-webkit-user-select:none;-moz-user-select:none;user-select:none}.list-none{list-style-type:none}.grid-cols-1{grid-template-columns:repeat(1,minmax(0,1fr))}.grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}.grid-cols-3{grid-template-columns:repeat(3,minmax(0,1fr))}.grid-cols-4{grid-template-columns:repeat(4,minmax(0,1fr))}.flex-row{flex-direction:row}.flex-col{flex-direction:column}.flex-col-reverse{flex-direction:column-reverse}.flex-wrap{flex-wrap:wrap}.items-start{align-items:flex-start}.items-end{align-items:flex-end}.items-center{align-items:center}.items-stretch{align-items:stretch}.justify-center{justify-content:center}.justify-between{justify-content:space-between}.gap-1{gap:.25rem}.gap-1\.5{gap:.375rem}.gap-12{gap:3rem}.gap-2{gap:.5rem}.gap-3{gap:.75rem}.gap-4{gap:1rem}.gap-6{gap:1.5rem}.gap-8{gap:2rem}.space-x-1>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(.25rem * var(--tw-space-x-reverse));margin-left:calc(.25rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-2>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(.5rem * var(--tw-space-x-reverse));margin-left:calc(.5rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-3>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(.75rem * var(--tw-space-x-reverse));margin-left:calc(.75rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-4>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(1rem * var(--tw-space-x-reverse));margin-left:calc(1rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-6>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(1.5rem * var(--tw-space-x-reverse));margin-left:calc(1.5rem * calc(1 - var(--tw-space-x-reverse)))}.space-y-0>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(0px * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(0px * var(--tw-space-y-reverse))}.space-y-1>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(.25rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(.25rem * var(--tw-space-y-reverse))}.space-y-1\.5>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(.375rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(.375rem * var(--tw-space-y-reverse))}.space-y-2>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(.5rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(.5rem * var(--tw-space-y-reverse))}.space-y-3>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(.75rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(.75rem * var(--tw-space-y-reverse))}.space-y-4>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(1rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(1rem * var(--tw-space-y-reverse))}.space-y-6>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(1.5rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(1.5rem * var(--tw-space-y-reverse))}.space-y-8>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(2rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(2rem * var(--tw-space-y-reverse))}.overflow-auto{overflow:auto}.overflow-hidden{overflow:hidden}.overflow-y-auto{overflow-y:auto}.overflow-x-hidden{overflow-x:hidden}.whitespace-nowrap{white-space:nowrap}.break-words{overflow-wrap:break-word}.rounded{border-radius:.25rem}.rounded-2xl{border-radius:1rem}.rounded-\[2px\]{border-radius:2px}.rounded-\[inherit\]{border-radius:inherit}.rounded-full{border-radius:9999px}.rounded-lg{border-radius:var(--radius)}.rounded-md{border-radius:calc(var(--radius) - 2px)}.rounded-sm{border-radius:calc(var(--radius) - 4px)}.rounded-xl{border-radius:.75rem}.rounded-l-lg{border-top-left-radius:var(--radius);border-bottom-left-radius:var(--radius)}.rounded-l-none{border-top-left-radius:0;border-bottom-left-radius:0}.rounded-r-lg{border-top-right-radius:var(--radius);border-bottom-right-radius:var(--radius)}.rounded-r-none{border-top-right-radius:0;border-bottom-right-radius:0}.rounded-t{border-top-left-radius:.25rem;border-top-right-radius:.25rem}.rounded-t-\[10px\]{border-top-left-radius:10px;border-top-right-radius:10px}.rounded-tl-sm{border-top-left-radius:calc(var(--radius) - 4px)}.border{border-width:1px}.border-2{border-width:2px}.border-\[1\.5px\]{border-width:1.5px}.border-y{border-top-width:1px;border-bottom-width:1px}.border-b{border-bottom-width:1px}.border-b-2{border-bottom-width:2px}.border-l{border-left-width:1px}.border-r{border-right-width:1px}.border-t{border-top-width:1px}.border-dashed{border-style:dashed}.border-\[--color-border\]{border-color:var(--color-border)}.border-accent{border-color:hsl(var(--accent))}.border-border{border-color:hsl(var(--border))}.border-border\/50{border-color:hsl(var(--border) / .5)}.border-destructive{border-color:hsl(var(--destructive))}.border-destructive\/50{border-color:hsl(var(--destructive) / .5)}.border-gray-700{--tw-border-opacity: 1;border-color:rgb(55 65 81 / var(--tw-border-opacity, 1))}.border-gray-800{--tw-border-opacity: 1;border-color:rgb(31 41 55 / var(--tw-border-opacity, 1))}.border-input{border-color:hsl(var(--input))}.border-primary{border-color:hsl(var(--primary))}.border-sidebar-border{border-color:hsl(var(--sidebar-border))}.border-transparent{border-color:transparent}.border-l-transparent{border-left-color:transparent}.border-t-transparent{border-top-color:transparent}.bg-\[--color-bg\]{background-color:var(--color-bg)}.bg-accent{background-color:hsl(var(--accent))}.bg-accent\/10{background-color:hsl(var(--accent) / .1)}.bg-background{background-color:hsl(var(--background))}.bg-background\/80{background-color:hsl(var(--background) / .8)}.bg-background\/90{background-color:hsl(var(--background) / .9)}.bg-black\/80{background-color:#000c}.bg-border{background-color:hsl(var(--border))}.bg-card{background-color:hsl(var(--card))}.bg-destructive{background-color:hsl(var(--destructive))}.bg-foreground{background-color:hsl(var(--foreground))}.bg-gray-100{--tw-bg-opacity: 1;background-color:rgb(243 244 246 / var(--tw-bg-opacity, 1))}.bg-gray-400{--tw-bg-opacity: 1;background-color:rgb(156 163 175 / var(--tw-bg-opacity, 1))}.bg-gray-50{--tw-bg-opacity: 1;background-color:rgb(249 250 251 / var(--tw-bg-opacity, 1))}.bg-gray-800{--tw-bg-opacity: 1;background-color:rgb(31 41 55 / var(--tw-bg-opacity, 1))}.bg-green-100{--tw-bg-opacity: 1;background-color:rgb(220 252 231 / var(--tw-bg-opacity, 1))}.bg-muted{background-color:hsl(var(--muted))}.bg-muted\/10{background-color:hsl(var(--muted) / .1)}.bg-muted\/30{background-color:hsl(var(--muted) / .3)}.bg-muted\/50{background-color:hsl(var(--muted) / .5)}.bg-orange-600{--tw-bg-opacity: 1;background-color:rgb(234 88 12 / var(--tw-bg-opacity, 1))}.bg-popover{background-color:hsl(var(--popover))}.bg-primary{background-color:hsl(var(--primary))}.bg-primary\/10{background-color:hsl(var(--primary) / .1)}.bg-primary\/90{background-color:hsl(var(--primary) / .9)}.bg-red-100{--tw-bg-opacity: 1;background-color:rgb(254 226 226 / var(--tw-bg-opacity, 1))}.bg-secondary{background-color:hsl(var(--secondary))}.bg-secondary\/10{background-color:hsl(var(--secondary) / .1)}.bg-sidebar{background-color:hsl(var(--sidebar-background))}.bg-sidebar-border{background-color:hsl(var(--sidebar-border))}.bg-transparent{background-color:transparent}.bg-yellow-100{--tw-bg-opacity: 1;background-color:rgb(254 249 195 / var(--tw-bg-opacity, 1))}.bg-yellow-500{--tw-bg-opacity: 1;background-color:rgb(234 179 8 / var(--tw-bg-opacity, 1))}.bg-gradient-to-r{background-image:linear-gradient(to right,var(--tw-gradient-stops))}.bg-gradient-to-t{background-image:linear-gradient(to top,var(--tw-gradient-stops))}.from-accent\/10{--tw-gradient-from: hsl(var(--accent) / .1) var(--tw-gradient-from-position);--tw-gradient-to: hsl(var(--accent) / 0) var(--tw-gradient-to-position);--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to)}.from-background\/90{--tw-gradient-from: hsl(var(--background) / .9) var(--tw-gradient-from-position);--tw-gradient-to: hsl(var(--background) / 0) var(--tw-gradient-to-position);--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to)}.from-primary{--tw-gradient-from: hsl(var(--primary)) var(--tw-gradient-from-position);--tw-gradient-to: hsl(var(--primary) / 0) var(--tw-gradient-to-position);--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to)}.from-primary\/10{--tw-gradient-from: hsl(var(--primary) / .1) var(--tw-gradient-from-position);--tw-gradient-to: hsl(var(--primary) / 0) var(--tw-gradient-to-position);--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to)}.via-accent\/5{--tw-gradient-to: hsl(var(--accent) / 0) var(--tw-gradient-to-position);--tw-gradient-stops: var(--tw-gradient-from), hsl(var(--accent) / .05) var(--tw-gradient-via-position), var(--tw-gradient-to)}.via-background\/60{--tw-gradient-to: hsl(var(--background) / 0) var(--tw-gradient-to-position);--tw-gradient-stops: var(--tw-gradient-from), hsl(var(--background) / .6) var(--tw-gradient-via-position), var(--tw-gradient-to)}.to-accent\/10{--tw-gradient-to: hsl(var(--accent) / .1) var(--tw-gradient-to-position)}.to-background\/30{--tw-gradient-to: hsl(var(--background) / .3) var(--tw-gradient-to-position)}.to-primary\/50{--tw-gradient-to: hsl(var(--primary) / .5) var(--tw-gradient-to-position)}.to-secondary\/10{--tw-gradient-to: hsl(var(--secondary) / .1) var(--tw-gradient-to-position)}.fill-current{fill:currentColor}.object-cover{-o-object-fit:cover;object-fit:cover}.p-0{padding:0}.p-1{padding:.25rem}.p-2{padding:.5rem}.p-3{padding:.75rem}.p-4{padding:1rem}.p-6{padding:1.5rem}.p-8{padding:2rem}.p-\[1px\]{padding:1px}.px-1{padding-left:.25rem;padding-right:.25rem}.px-2{padding-left:.5rem;padding-right:.5rem}.px-2\.5{padding-left:.625rem;padding-right:.625rem}.px-3{padding-left:.75rem;padding-right:.75rem}.px-4{padding-left:1rem;padding-right:1rem}.px-5{padding-left:1.25rem;padding-right:1.25rem}.px-8{padding-left:2rem;padding-right:2rem}.py-0\.5{padding-top:.125rem;padding-bottom:.125rem}.py-1{padding-top:.25rem;padding-bottom:.25rem}.py-1\.5{padding-top:.375rem;padding-bottom:.375rem}.py-12{padding-top:3rem;padding-bottom:3rem}.py-16{padding-top:4rem;padding-bottom:4rem}.py-2{padding-top:.5rem;padding-bottom:.5rem}.py-24{padding-top:6rem;padding-bottom:6rem}.py-3{padding-top:.75rem;padding-bottom:.75rem}.py-4{padding-top:1rem;padding-bottom:1rem}.py-6{padding-top:1.5rem;padding-bottom:1.5rem}.py-8{padding-top:2rem;padding-bottom:2rem}.pb-2{padding-bottom:.5rem}.pb-3{padding-bottom:.75rem}.pb-4{padding-bottom:1rem}.pb-6{padding-bottom:1.5rem}.pl-10{padding-left:2.5rem}.pl-2\.5{padding-left:.625rem}.pl-4{padding-left:1rem}.pl-8{padding-left:2rem}.pr-2{padding-right:.5rem}.pr-2\.5{padding-right:.625rem}.pr-8{padding-right:2rem}.pt-0{padding-top:0}.pt-1{padding-top:.25rem}.pt-3{padding-top:.75rem}.pt-4{padding-top:1rem}.pt-6{padding-top:1.5rem}.pt-8{padding-top:2rem}.text-left{text-align:left}.text-center{text-align:center}.text-right{text-align:right}.align-middle{vertical-align:middle}.font-mono{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace}.text-2xl{font-size:1.5rem;line-height:2rem}.text-3xl{font-size:1.875rem;line-height:2.25rem}.text-4xl{font-size:2.25rem;line-height:2.5rem}.text-5xl{font-size:3rem;line-height:1}.text-\[0\.8rem\]{font-size:.8rem}.text-base{font-size:1rem;line-height:1.5rem}.text-lg{font-size:1.125rem;line-height:1.75rem}.text-sm{font-size:.875rem;line-height:1.25rem}.text-xl{font-size:1.25rem;line-height:1.75rem}.text-xs{font-size:.75rem;line-height:1rem}.font-bold{font-weight:700}.font-medium{font-weight:500}.font-normal{font-weight:400}.font-semibold{font-weight:600}.tabular-nums{--tw-numeric-spacing: tabular-nums;font-variant-numeric:var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction)}.leading-none{line-height:1}.leading-relaxed{line-height:1.625}.tracking-tight{letter-spacing:-.025em}.tracking-widest{letter-spacing:.1em}.text-accent{color:hsl(var(--accent))}.text-accent-foreground{color:hsl(var(--accent-foreground))}.text-card-foreground{color:hsl(var(--card-foreground))}.text-current{color:currentColor}.text-destructive{color:hsl(var(--destructive))}.text-destructive-foreground{color:hsl(var(--destructive-foreground))}.text-foreground{color:hsl(var(--foreground))}.text-foreground\/50{color:hsl(var(--foreground) / .5)}.text-gray-400{--tw-text-opacity: 1;color:rgb(156 163 175 / var(--tw-text-opacity, 1))}.text-gray-600{--tw-text-opacity: 1;color:rgb(75 85 99 / var(--tw-text-opacity, 1))}.text-gray-800{--tw-text-opacity: 1;color:rgb(31 41 55 / var(--tw-text-opacity, 1))}.text-gray-900{--tw-text-opacity: 1;color:rgb(17 24 39 / var(--tw-text-opacity, 1))}.text-green-500{--tw-text-opacity: 1;color:rgb(34 197 94 / var(--tw-text-opacity, 1))}.text-green-800{--tw-text-opacity: 1;color:rgb(22 101 52 / var(--tw-text-opacity, 1))}.text-muted{color:hsl(var(--muted))}.text-muted-foreground{color:hsl(var(--muted-foreground))}.text-orange-500{--tw-text-opacity: 1;color:rgb(249 115 22 / var(--tw-text-opacity, 1))}.text-popover-foreground{color:hsl(var(--popover-foreground))}.text-primary{color:hsl(var(--primary))}.text-primary-foreground{color:hsl(var(--primary-foreground))}.text-red-500{--tw-text-opacity: 1;color:rgb(239 68 68 / var(--tw-text-opacity, 1))}.text-red-800{--tw-text-opacity: 1;color:rgb(153 27 27 / var(--tw-text-opacity, 1))}.text-secondary{color:hsl(var(--secondary))}.text-secondary-foreground{color:hsl(var(--secondary-foreground))}.text-sidebar-foreground{color:hsl(var(--sidebar-foreground))}.text-sidebar-foreground\/70{color:hsl(var(--sidebar-foreground) / .7)}.text-white{--tw-text-opacity: 1;color:rgb(255 255 255 / var(--tw-text-opacity, 1))}.text-yellow-500{--tw-text-opacity: 1;color:rgb(234 179 8 / var(--tw-text-opacity, 1))}.text-yellow-800{--tw-text-opacity: 1;color:rgb(133 77 14 / var(--tw-text-opacity, 1))}.underline-offset-4{text-underline-offset:4px}.opacity-0{opacity:0}.opacity-30{opacity:.3}.opacity-50{opacity:.5}.opacity-60{opacity:.6}.opacity-70{opacity:.7}.opacity-80{opacity:.8}.opacity-90{opacity:.9}.shadow-\[0_0_0_1px_hsl\(var\(--sidebar-border\)\)\]{--tw-shadow: 0 0 0 1px hsl(var(--sidebar-border));--tw-shadow-colored: 0 0 0 1px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}.shadow-lg{--tw-shadow: 0 10px 15px -3px rgb(0 0 0 / .1), 0 4px 6px -4px rgb(0 0 0 / .1);--tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}.shadow-md{--tw-shadow: 0 4px 6px -1px rgb(0 0 0 / .1), 0 2px 4px -2px rgb(0 0 0 / .1);--tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}.shadow-none{--tw-shadow: 0 0 #0000;--tw-shadow-colored: 0 0 #0000;box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}.shadow-sm{--tw-shadow: 0 1px 2px 0 rgb(0 0 0 / .05);--tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}.shadow-xl{--tw-shadow: 0 20px 25px -5px rgb(0 0 0 / .1), 0 8px 10px -6px rgb(0 0 0 / .1);--tw-shadow-colored: 0 20px 25px -5px var(--tw-shadow-color), 0 8px 10px -6px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}.outline-none{outline:2px solid transparent;outline-offset:2px}.outline{outline-style:solid}.ring-0{--tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow, 0 0 #0000)}.ring-2{--tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow, 0 0 #0000)}.ring-ring{--tw-ring-color: hsl(var(--ring))}.ring-sidebar-ring{--tw-ring-color: hsl(var(--sidebar-ring))}.ring-offset-background{--tw-ring-offset-color: hsl(var(--background))}.filter{filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}.backdrop-blur-lg{--tw-backdrop-blur: blur(16px);-webkit-backdrop-filter:var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);backdrop-filter:var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia)}.backdrop-blur-sm{--tw-backdrop-blur: blur(4px);-webkit-backdrop-filter:var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);backdrop-filter:var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia)}.transition{transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,-webkit-backdrop-filter;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter,-webkit-backdrop-filter;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.transition-\[left\,right\,width\]{transition-property:left,right,width;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.transition-\[margin\,opacity\]{transition-property:margin,opacity;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.transition-\[width\,height\,padding\]{transition-property:width,height,padding;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.transition-\[width\]{transition-property:width;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.transition-all{transition-property:all;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.transition-colors{transition-property:color,background-color,border-color,text-decoration-color,fill,stroke;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.transition-opacity{transition-property:opacity;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.transition-transform{transition-property:transform;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.duration-1000{transition-duration:1s}.duration-200{transition-duration:.2s}.duration-300{transition-duration:.3s}.ease-in-out{transition-timing-function:cubic-bezier(.4,0,.2,1)}.ease-linear{transition-timing-function:linear}@keyframes enter{0%{opacity:var(--tw-enter-opacity, 1);transform:translate3d(var(--tw-enter-translate-x, 0),var(--tw-enter-translate-y, 0),0) scale3d(var(--tw-enter-scale, 1),var(--tw-enter-scale, 1),var(--tw-enter-scale, 1)) rotate(var(--tw-enter-rotate, 0))}}@keyframes exit{to{opacity:var(--tw-exit-opacity, 1);transform:translate3d(var(--tw-exit-translate-x, 0),var(--tw-exit-translate-y, 0),0) scale3d(var(--tw-exit-scale, 1),var(--tw-exit-scale, 1),var(--tw-exit-scale, 1)) rotate(var(--tw-exit-rotate, 0))}}.animate-in{animation-name:enter;animation-duration:.15s;--tw-enter-opacity: initial;--tw-enter-scale: initial;--tw-enter-rotate: initial;--tw-enter-translate-x: initial;--tw-enter-translate-y: initial}.fade-in-0{--tw-enter-opacity: 0}.fade-in-80{--tw-enter-opacity: .8}.zoom-in-95{--tw-enter-scale: .95}.duration-1000{animation-duration:1s}.duration-200{animation-duration:.2s}.duration-300{animation-duration:.3s}.ease-in-out{animation-timing-function:cubic-bezier(.4,0,.2,1)}.ease-linear{animation-timing-function:linear}.paused{animation-play-state:paused}.animate-fade-in{animation:fadeIn .6s ease-in-out}.animate-slide-up{animation:slideUp .8s ease-out}:root{--background: 210 11% 98%;--foreground: 213 24% 10%;--muted: 210 11% 96%;--muted-foreground: 213 12% 45%;--popover: 0 0% 100%;--popover-foreground: 213 24% 10%;--card: 0 0% 100%;--card-foreground: 213 24% 10%;--border: 210 20% 90%;--input: 210 20% 90%;--primary: 15 90% 60%;--primary-foreground: 0 0% 100%;--secondary: 207 100% 28%;--secondary-foreground: 0 0% 100%;--accent: 162 100% 39%;--accent-foreground: 0 0% 100%;--destructive: 0 84% 60%;--destructive-foreground: 0 0% 100%;--ring: 15 90% 60%;--radius: .75rem;--dark: 240 6% 4%;--dark-card: 240 6% 11%;--light-gray: 210 11% 98%;--dark-gray: 213 12% 16%;--gradient-primary: linear-gradient(135deg, hsl(15 90% 60%) 0%, hsl(207 100% 28%) 100%);--glass-bg: rgba(255, 255, 255, .1);--glass-border: rgba(255, 255, 255, .2)}.dark{--background: 240 6% 4%;--foreground: 0 0% 98%;--muted: 240 6% 11%;--muted-foreground: 240 5% 65%;--popover: 240 6% 11%;--popover-foreground: 0 0% 98%;--card: 240 6% 11%;--card-foreground: 0 0% 98%;--border: 240 6% 18%;--input: 240 6% 18%;--primary: 15 90% 60%;--primary-foreground: 0 0% 100%;--secondary: 240 6% 18%;--secondary-foreground: 0 0% 98%;--accent: 162 100% 39%;--accent-foreground: 0 0% 100%;--destructive: 0 62% 30%;--destructive-foreground: 0 0% 98%;--ring: 15 90% 60%;--glass-bg: rgba(26, 27, 30, .8);--glass-border: rgba(255, 255, 255, .1)}@keyframes fadeIn{0%{opacity:0;transform:translateY(20px)}to{opacity:1;transform:translateY(0)}}@keyframes slideUp{0%{opacity:0;transform:translateY(30px)}to{opacity:1;transform:translateY(0)}}@keyframes float{0%,to{transform:translateY(0)}50%{transform:translateY(-10px)}}::-webkit-scrollbar{width:8px}::-webkit-scrollbar-track{background:hsl(var(--muted))}::-webkit-scrollbar-thumb{background:hsl(var(--muted-foreground) / .3);border-radius:4px}::-webkit-scrollbar-thumb:hover{background:hsl(var(--muted-foreground) / .5)}@keyframes pulse{50%{opacity:.5}}.skeleton{animation:pulse 2s cubic-bezier(.4,0,.6,1) infinite;border-radius:.25rem;background-color:hsl(var(--muted))}.focus-ring:focus{outline:2px solid transparent;outline-offset:2px;--tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow, 0 0 #0000);--tw-ring-color: hsl(var(--primary));--tw-ring-offset-width: 2px;--tw-ring-offset-color: hsl(var(--background))}@media (max-width: 768px){.container{padding-left:1rem;padding-right:1rem}}@media (prefers-contrast: high){:root{--border: 0 0% 20%}.dark{--border: 0 0% 80%}}@media (prefers-reduced-motion: reduce){*,*:before,*:after{animation-duration:.01ms!important;animation-iteration-count:1!important;transition-duration:.01ms!important}}.file\:border-0::file-selector-button{border-width:0px}.file\:bg-transparent::file-selector-button{background-color:transparent}.file\:text-sm::file-selector-button{font-size:.875rem;line-height:1.25rem}.file\:font-medium::file-selector-button{font-weight:500}.file\:text-foreground::file-selector-button{color:hsl(var(--foreground))}.placeholder\:text-gray-400::-moz-placeholder{--tw-text-opacity: 1;color:rgb(156 163 175 / var(--tw-text-opacity, 1))}.placeholder\:text-gray-400::placeholder{--tw-text-opacity: 1;color:rgb(156 163 175 / var(--tw-text-opacity, 1))}.placeholder\:text-muted-foreground::-moz-placeholder{color:hsl(var(--muted-foreground))}.placeholder\:text-muted-foreground::placeholder{color:hsl(var(--muted-foreground))}.after\:absolute:after{content:var(--tw-content);position:absolute}.after\:-inset-2:after{content:var(--tw-content);top:-.5rem;right:-.5rem;bottom:-.5rem;left:-.5rem}.after\:inset-y-0:after{content:var(--tw-content);top:0;bottom:0}.after\:left-1\/2:after{content:var(--tw-content);left:50%}.after\:w-1:after{content:var(--tw-content);width:.25rem}.after\:w-\[2px\]:after{content:var(--tw-content);width:2px}.after\:-translate-x-1\/2:after{content:var(--tw-content);--tw-translate-x: -50%;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.first\:rounded-l-md:first-child{border-top-left-radius:calc(var(--radius) - 2px);border-bottom-left-radius:calc(var(--radius) - 2px)}.first\:border-l:first-child{border-left-width:1px}.last\:rounded-r-md:last-child{border-top-right-radius:calc(var(--radius) - 2px);border-bottom-right-radius:calc(var(--radius) - 2px)}.last\:border-b-0:last-child{border-bottom-width:0px}.focus-within\:relative:focus-within{position:relative}.focus-within\:z-20:focus-within{z-index:20}.hover\:border-primary\/50:hover{border-color:hsl(var(--primary) / .5)}.hover\:bg-accent:hover{background-color:hsl(var(--accent))}.hover\:bg-destructive\/80:hover{background-color:hsl(var(--destructive) / .8)}.hover\:bg-destructive\/90:hover{background-color:hsl(var(--destructive) / .9)}.hover\:bg-muted:hover{background-color:hsl(var(--muted))}.hover\:bg-muted\/50:hover{background-color:hsl(var(--muted) / .5)}.hover\:bg-primary:hover{background-color:hsl(var(--primary))}.hover\:bg-primary\/5:hover{background-color:hsl(var(--primary) / .05)}.hover\:bg-primary\/80:hover{background-color:hsl(var(--primary) / .8)}.hover\:bg-primary\/90:hover{background-color:hsl(var(--primary) / .9)}.hover\:bg-secondary:hover{background-color:hsl(var(--secondary))}.hover\:bg-secondary\/80:hover{background-color:hsl(var(--secondary) / .8)}.hover\:bg-sidebar-accent:hover{background-color:hsl(var(--sidebar-accent))}.hover\:text-accent-foreground:hover{color:hsl(var(--accent-foreground))}.hover\:text-destructive:hover{color:hsl(var(--destructive))}.hover\:text-foreground:hover{color:hsl(var(--foreground))}.hover\:text-muted-foreground:hover{color:hsl(var(--muted-foreground))}.hover\:text-primary:hover{color:hsl(var(--primary))}.hover\:text-primary-foreground:hover{color:hsl(var(--primary-foreground))}.hover\:text-sidebar-accent-foreground:hover{color:hsl(var(--sidebar-accent-foreground))}.hover\:text-white:hover{--tw-text-opacity: 1;color:rgb(255 255 255 / var(--tw-text-opacity, 1))}.hover\:underline:hover{text-decoration-line:underline}.hover\:opacity-100:hover{opacity:1}.hover\:opacity-80:hover{opacity:.8}.hover\:shadow-\[0_0_0_1px_hsl\(var\(--sidebar-accent\)\)\]:hover{--tw-shadow: 0 0 0 1px hsl(var(--sidebar-accent));--tw-shadow-colored: 0 0 0 1px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}.hover\:shadow-md:hover{--tw-shadow: 0 4px 6px -1px rgb(0 0 0 / .1), 0 2px 4px -2px rgb(0 0 0 / .1);--tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}.hover\:after\:bg-sidebar-border:hover:after{content:var(--tw-content);background-color:hsl(var(--sidebar-border))}.focus\:bg-accent:focus{background-color:hsl(var(--accent))}.focus\:bg-primary:focus{background-color:hsl(var(--primary))}.focus\:text-accent-foreground:focus{color:hsl(var(--accent-foreground))}.focus\:text-primary-foreground:focus{color:hsl(var(--primary-foreground))}.focus\:opacity-100:focus{opacity:1}.focus\:outline-none:focus{outline:2px solid transparent;outline-offset:2px}.focus\:ring-2:focus{--tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow, 0 0 #0000)}.focus\:ring-primary:focus{--tw-ring-color: hsl(var(--primary))}.focus\:ring-ring:focus{--tw-ring-color: hsl(var(--ring))}.focus\:ring-offset-2:focus{--tw-ring-offset-width: 2px}.focus-visible\:outline-none:focus-visible{outline:2px solid transparent;outline-offset:2px}.focus-visible\:ring-1:focus-visible{--tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow, 0 0 #0000)}.focus-visible\:ring-2:focus-visible{--tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow, 0 0 #0000)}.focus-visible\:ring-ring:focus-visible{--tw-ring-color: hsl(var(--ring))}.focus-visible\:ring-sidebar-ring:focus-visible{--tw-ring-color: hsl(var(--sidebar-ring))}.focus-visible\:ring-offset-1:focus-visible{--tw-ring-offset-width: 1px}.focus-visible\:ring-offset-2:focus-visible{--tw-ring-offset-width: 2px}.focus-visible\:ring-offset-background:focus-visible{--tw-ring-offset-color: hsl(var(--background))}.active\:bg-sidebar-accent:active{background-color:hsl(var(--sidebar-accent))}.active\:text-sidebar-accent-foreground:active{color:hsl(var(--sidebar-accent-foreground))}.disabled\:pointer-events-none:disabled{pointer-events:none}.disabled\:cursor-not-allowed:disabled{cursor:not-allowed}.disabled\:opacity-50:disabled{opacity:.5}.group\/menu-item:focus-within .group-focus-within\/menu-item\:opacity-100{opacity:1}.group\/menu-item:hover .group-hover\/menu-item\:opacity-100,.group:hover .group-hover\:opacity-100{opacity:1}.group.destructive .group-\[\.destructive\]\:border-muted\/40{border-color:hsl(var(--muted) / .4)}.group.destructive .group-\[\.destructive\]\:text-red-300{--tw-text-opacity: 1;color:rgb(252 165 165 / var(--tw-text-opacity, 1))}.group.destructive .group-\[\.destructive\]\:hover\:border-destructive\/30:hover{border-color:hsl(var(--destructive) / .3)}.group.destructive .group-\[\.destructive\]\:hover\:bg-destructive:hover{background-color:hsl(var(--destructive))}.group.destructive .group-\[\.destructive\]\:hover\:text-destructive-foreground:hover{color:hsl(var(--destructive-foreground))}.group.destructive .group-\[\.destructive\]\:hover\:text-red-50:hover{--tw-text-opacity: 1;color:rgb(254 242 242 / var(--tw-text-opacity, 1))}.group.destructive .group-\[\.destructive\]\:focus\:ring-destructive:focus{--tw-ring-color: hsl(var(--destructive))}.group.destructive .group-\[\.destructive\]\:focus\:ring-red-400:focus{--tw-ring-opacity: 1;--tw-ring-color: rgb(248 113 113 / var(--tw-ring-opacity, 1))}.group.destructive .group-\[\.destructive\]\:focus\:ring-offset-red-600:focus{--tw-ring-offset-color: #dc2626}.peer\/menu-button:hover~.peer-hover\/menu-button\:text-sidebar-accent-foreground{color:hsl(var(--sidebar-accent-foreground))}.peer:disabled~.peer-disabled\:cursor-not-allowed{cursor:not-allowed}.peer:disabled~.peer-disabled\:opacity-70{opacity:.7}.has-\[\[data-variant\=inset\]\]\:bg-sidebar:has([data-variant=inset]){background-color:hsl(var(--sidebar-background))}.has-\[\:disabled\]\:opacity-50:has(:disabled){opacity:.5}.group\/menu-item:has([data-sidebar=menu-action]) .group-has-\[\[data-sidebar\=menu-action\]\]\/menu-item\:pr-8{padding-right:2rem}.aria-disabled\:pointer-events-none[aria-disabled=true]{pointer-events:none}.aria-disabled\:opacity-50[aria-disabled=true]{opacity:.5}.aria-selected\:bg-accent[aria-selected=true]{background-color:hsl(var(--accent))}.aria-selected\:bg-accent\/50[aria-selected=true]{background-color:hsl(var(--accent) / .5)}.aria-selected\:text-accent-foreground[aria-selected=true]{color:hsl(var(--accent-foreground))}.aria-selected\:text-muted-foreground[aria-selected=true]{color:hsl(var(--muted-foreground))}.aria-selected\:opacity-100[aria-selected=true]{opacity:1}.data-\[disabled\=true\]\:pointer-events-none[data-disabled=true],.data-\[disabled\]\:pointer-events-none[data-disabled]{pointer-events:none}.data-\[panel-group-direction\=vertical\]\:h-px[data-panel-group-direction=vertical]{height:1px}.data-\[panel-group-direction\=vertical\]\:w-full[data-panel-group-direction=vertical]{width:100%}.data-\[side\=bottom\]\:translate-y-1[data-side=bottom]{--tw-translate-y: .25rem;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.data-\[side\=left\]\:-translate-x-1[data-side=left]{--tw-translate-x: -.25rem;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.data-\[side\=right\]\:translate-x-1[data-side=right]{--tw-translate-x: .25rem;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.data-\[side\=top\]\:-translate-y-1[data-side=top]{--tw-translate-y: -.25rem;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.data-\[state\=checked\]\:translate-x-5[data-state=checked]{--tw-translate-x: 1.25rem;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.data-\[state\=unchecked\]\:translate-x-0[data-state=unchecked],.data-\[swipe\=cancel\]\:translate-x-0[data-swipe=cancel]{--tw-translate-x: 0px;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.data-\[swipe\=end\]\:translate-x-\[var\(--radix-toast-swipe-end-x\)\][data-swipe=end]{--tw-translate-x: var(--radix-toast-swipe-end-x);transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.data-\[swipe\=move\]\:translate-x-\[var\(--radix-toast-swipe-move-x\)\][data-swipe=move]{--tw-translate-x: var(--radix-toast-swipe-move-x);transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}@keyframes accordion-up{0%{height:var(--radix-accordion-content-height)}to{height:0}}.data-\[state\=closed\]\:animate-accordion-up[data-state=closed]{animation:accordion-up .2s ease-out}@keyframes accordion-down{0%{height:0}to{height:var(--radix-accordion-content-height)}}.data-\[state\=open\]\:animate-accordion-down[data-state=open]{animation:accordion-down .2s ease-out}.data-\[panel-group-direction\=vertical\]\:flex-col[data-panel-group-direction=vertical]{flex-direction:column}.data-\[active\=true\]\:bg-sidebar-accent[data-active=true]{background-color:hsl(var(--sidebar-accent))}.data-\[selected\=\'true\'\]\:bg-accent[data-selected=true]{background-color:hsl(var(--accent))}.data-\[state\=active\]\:bg-background[data-state=active]{background-color:hsl(var(--background))}.data-\[state\=checked\]\:bg-primary[data-state=checked]{background-color:hsl(var(--primary))}.data-\[state\=on\]\:bg-accent[data-state=on],.data-\[state\=open\]\:bg-accent[data-state=open]{background-color:hsl(var(--accent))}.data-\[state\=open\]\:bg-accent\/50[data-state=open]{background-color:hsl(var(--accent) / .5)}.data-\[state\=open\]\:bg-secondary[data-state=open]{background-color:hsl(var(--secondary))}.data-\[state\=selected\]\:bg-muted[data-state=selected]{background-color:hsl(var(--muted))}.data-\[state\=unchecked\]\:bg-input[data-state=unchecked]{background-color:hsl(var(--input))}.data-\[active\=true\]\:font-medium[data-active=true]{font-weight:500}.data-\[active\=true\]\:text-sidebar-accent-foreground[data-active=true]{color:hsl(var(--sidebar-accent-foreground))}.data-\[placeholder\]\:text-muted-foreground[data-placeholder]{color:hsl(var(--muted-foreground))}.data-\[selected\=true\]\:text-accent-foreground[data-selected=true]{color:hsl(var(--accent-foreground))}.data-\[state\=active\]\:text-foreground[data-state=active]{color:hsl(var(--foreground))}.data-\[state\=checked\]\:text-primary-foreground[data-state=checked]{color:hsl(var(--primary-foreground))}.data-\[state\=on\]\:text-accent-foreground[data-state=on],.data-\[state\=open\]\:text-accent-foreground[data-state=open]{color:hsl(var(--accent-foreground))}.data-\[state\=open\]\:text-muted-foreground[data-state=open]{color:hsl(var(--muted-foreground))}.data-\[disabled\=true\]\:opacity-50[data-disabled=true],.data-\[disabled\]\:opacity-50[data-disabled]{opacity:.5}.data-\[state\=open\]\:opacity-100[data-state=open]{opacity:1}.data-\[state\=active\]\:shadow-sm[data-state=active]{--tw-shadow: 0 1px 2px 0 rgb(0 0 0 / .05);--tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}.data-\[swipe\=move\]\:transition-none[data-swipe=move]{transition-property:none}.data-\[state\=closed\]\:duration-300[data-state=closed]{transition-duration:.3s}.data-\[state\=open\]\:duration-500[data-state=open]{transition-duration:.5s}.data-\[motion\^\=from-\]\:animate-in[data-motion^=from-],.data-\[state\=open\]\:animate-in[data-state=open],.data-\[state\=visible\]\:animate-in[data-state=visible]{animation-name:enter;animation-duration:.15s;--tw-enter-opacity: initial;--tw-enter-scale: initial;--tw-enter-rotate: initial;--tw-enter-translate-x: initial;--tw-enter-translate-y: initial}.data-\[motion\^\=to-\]\:animate-out[data-motion^=to-],.data-\[state\=closed\]\:animate-out[data-state=closed],.data-\[state\=hidden\]\:animate-out[data-state=hidden],.data-\[swipe\=end\]\:animate-out[data-swipe=end]{animation-name:exit;animation-duration:.15s;--tw-exit-opacity: initial;--tw-exit-scale: initial;--tw-exit-rotate: initial;--tw-exit-translate-x: initial;--tw-exit-translate-y: initial}.data-\[motion\^\=from-\]\:fade-in[data-motion^=from-]{--tw-enter-opacity: 0}.data-\[motion\^\=to-\]\:fade-out[data-motion^=to-],.data-\[state\=closed\]\:fade-out-0[data-state=closed]{--tw-exit-opacity: 0}.data-\[state\=closed\]\:fade-out-80[data-state=closed]{--tw-exit-opacity: .8}.data-\[state\=hidden\]\:fade-out[data-state=hidden]{--tw-exit-opacity: 0}.data-\[state\=open\]\:fade-in-0[data-state=open],.data-\[state\=visible\]\:fade-in[data-state=visible]{--tw-enter-opacity: 0}.data-\[state\=closed\]\:zoom-out-95[data-state=closed]{--tw-exit-scale: .95}.data-\[state\=open\]\:zoom-in-90[data-state=open]{--tw-enter-scale: .9}.data-\[state\=open\]\:zoom-in-95[data-state=open]{--tw-enter-scale: .95}.data-\[motion\=from-end\]\:slide-in-from-right-52[data-motion=from-end]{--tw-enter-translate-x: 13rem}.data-\[motion\=from-start\]\:slide-in-from-left-52[data-motion=from-start]{--tw-enter-translate-x: -13rem}.data-\[motion\=to-end\]\:slide-out-to-right-52[data-motion=to-end]{--tw-exit-translate-x: 13rem}.data-\[motion\=to-start\]\:slide-out-to-left-52[data-motion=to-start]{--tw-exit-translate-x: -13rem}.data-\[side\=bottom\]\:slide-in-from-top-2[data-side=bottom]{--tw-enter-translate-y: -.5rem}.data-\[side\=left\]\:slide-in-from-right-2[data-side=left]{--tw-enter-translate-x: .5rem}.data-\[side\=right\]\:slide-in-from-left-2[data-side=right]{--tw-enter-translate-x: -.5rem}.data-\[side\=top\]\:slide-in-from-bottom-2[data-side=top]{--tw-enter-translate-y: .5rem}.data-\[state\=closed\]\:slide-out-to-bottom[data-state=closed]{--tw-exit-translate-y: 100%}.data-\[state\=closed\]\:slide-out-to-left[data-state=closed]{--tw-exit-translate-x: -100%}.data-\[state\=closed\]\:slide-out-to-left-1\/2[data-state=closed]{--tw-exit-translate-x: -50%}.data-\[state\=closed\]\:slide-out-to-right[data-state=closed],.data-\[state\=closed\]\:slide-out-to-right-full[data-state=closed]{--tw-exit-translate-x: 100%}.data-\[state\=closed\]\:slide-out-to-top[data-state=closed]{--tw-exit-translate-y: -100%}.data-\[state\=closed\]\:slide-out-to-top-\[48\%\][data-state=closed]{--tw-exit-translate-y: -48%}.data-\[state\=open\]\:slide-in-from-bottom[data-state=open]{--tw-enter-translate-y: 100%}.data-\[state\=open\]\:slide-in-from-left[data-state=open]{--tw-enter-translate-x: -100%}.data-\[state\=open\]\:slide-in-from-left-1\/2[data-state=open]{--tw-enter-translate-x: -50%}.data-\[state\=open\]\:slide-in-from-right[data-state=open]{--tw-enter-translate-x: 100%}.data-\[state\=open\]\:slide-in-from-top[data-state=open]{--tw-enter-translate-y: -100%}.data-\[state\=open\]\:slide-in-from-top-\[48\%\][data-state=open]{--tw-enter-translate-y: -48%}.data-\[state\=open\]\:slide-in-from-top-full[data-state=open]{--tw-enter-translate-y: -100%}.data-\[state\=closed\]\:duration-300[data-state=closed]{animation-duration:.3s}.data-\[state\=open\]\:duration-500[data-state=open]{animation-duration:.5s}.data-\[panel-group-direction\=vertical\]\:after\:left-0[data-panel-group-direction=vertical]:after{content:var(--tw-content);left:0}.data-\[panel-group-direction\=vertical\]\:after\:h-1[data-panel-group-direction=vertical]:after{content:var(--tw-content);height:.25rem}.data-\[panel-group-direction\=vertical\]\:after\:w-full[data-panel-group-direction=vertical]:after{content:var(--tw-content);width:100%}.data-\[panel-group-direction\=vertical\]\:after\:-translate-y-1\/2[data-panel-group-direction=vertical]:after{content:var(--tw-content);--tw-translate-y: -50%;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.data-\[panel-group-direction\=vertical\]\:after\:translate-x-0[data-panel-group-direction=vertical]:after{content:var(--tw-content);--tw-translate-x: 0px;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.data-\[state\=open\]\:hover\:bg-accent:hover[data-state=open]{background-color:hsl(var(--accent))}.data-\[state\=open\]\:hover\:bg-sidebar-accent:hover[data-state=open]{background-color:hsl(var(--sidebar-accent))}.data-\[state\=open\]\:hover\:text-sidebar-accent-foreground:hover[data-state=open]{color:hsl(var(--sidebar-accent-foreground))}.data-\[state\=open\]\:focus\:bg-accent:focus[data-state=open]{background-color:hsl(var(--accent))}.group[data-collapsible=offcanvas] .group-data-\[collapsible\=offcanvas\]\:left-\[calc\(var\(--sidebar-width\)\*-1\)\]{left:calc(var(--sidebar-width) * -1)}.group[data-collapsible=offcanvas] .group-data-\[collapsible\=offcanvas\]\:right-\[calc\(var\(--sidebar-width\)\*-1\)\]{right:calc(var(--sidebar-width) * -1)}.group[data-side=left] .group-data-\[side\=left\]\:-right-4{right:-1rem}.group[data-side=right] .group-data-\[side\=right\]\:left-0{left:0}.group[data-collapsible=icon] .group-data-\[collapsible\=icon\]\:-mt-8{margin-top:-2rem}.group[data-collapsible=icon] .group-data-\[collapsible\=icon\]\:hidden{display:none}.group[data-collapsible=icon] .group-data-\[collapsible\=icon\]\:\!size-8{width:2rem!important;height:2rem!important}.group[data-collapsible=icon] .group-data-\[collapsible\=icon\]\:w-\[--sidebar-width-icon\]{width:var(--sidebar-width-icon)}.group[data-collapsible=icon] .group-data-\[collapsible\=icon\]\:w-\[calc\(var\(--sidebar-width-icon\)_\+_theme\(spacing\.4\)\)\]{width:calc(var(--sidebar-width-icon) + 1rem)}.group[data-collapsible=icon] .group-data-\[collapsible\=icon\]\:w-\[calc\(var\(--sidebar-width-icon\)_\+_theme\(spacing\.4\)_\+2px\)\]{width:calc(var(--sidebar-width-icon) + 1rem + 2px)}.group[data-collapsible=offcanvas] .group-data-\[collapsible\=offcanvas\]\:w-0{width:0px}.group[data-collapsible=offcanvas] .group-data-\[collapsible\=offcanvas\]\:translate-x-0{--tw-translate-x: 0px;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.group[data-side=right] .group-data-\[side\=right\]\:rotate-180,.group[data-state=open] .group-data-\[state\=open\]\:rotate-180{--tw-rotate: 180deg;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.group[data-collapsible=icon] .group-data-\[collapsible\=icon\]\:overflow-hidden{overflow:hidden}.group[data-variant=floating] .group-data-\[variant\=floating\]\:rounded-lg{border-radius:var(--radius)}.group[data-variant=floating] .group-data-\[variant\=floating\]\:border{border-width:1px}.group[data-side=left] .group-data-\[side\=left\]\:border-r{border-right-width:1px}.group[data-side=right] .group-data-\[side\=right\]\:border-l{border-left-width:1px}.group[data-variant=floating] .group-data-\[variant\=floating\]\:border-sidebar-border{border-color:hsl(var(--sidebar-border))}.group[data-collapsible=icon] .group-data-\[collapsible\=icon\]\:\!p-0{padding:0!important}.group[data-collapsible=icon] .group-data-\[collapsible\=icon\]\:\!p-2{padding:.5rem!important}.group[data-collapsible=icon] .group-data-\[collapsible\=icon\]\:opacity-0{opacity:0}.group[data-variant=floating] .group-data-\[variant\=floating\]\:shadow{--tw-shadow: 0 1px 3px 0 rgb(0 0 0 / .1), 0 1px 2px -1px rgb(0 0 0 / .1);--tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}.group[data-collapsible=offcanvas] .group-data-\[collapsible\=offcanvas\]\:after\:left-full:after{content:var(--tw-content);left:100%}.group[data-collapsible=offcanvas] .group-data-\[collapsible\=offcanvas\]\:hover\:bg-sidebar:hover{background-color:hsl(var(--sidebar-background))}.peer\/menu-button[data-size=default]~.peer-data-\[size\=default\]\/menu-button\:top-1\.5{top:.375rem}.peer\/menu-button[data-size=lg]~.peer-data-\[size\=lg\]\/menu-button\:top-2\.5{top:.625rem}.peer\/menu-button[data-size=sm]~.peer-data-\[size\=sm\]\/menu-button\:top-1{top:.25rem}.peer\/menu-button[data-active=true]~.peer-data-\[active\=true\]\/menu-button\:text-sidebar-accent-foreground{color:hsl(var(--sidebar-accent-foreground))}.dark\:border-destructive:is(.dark *){border-color:hsl(var(--destructive))}.dark\:bg-gray-900:is(.dark *){--tw-bg-opacity: 1;background-color:rgb(17 24 39 / var(--tw-bg-opacity, 1))}.dark\:bg-green-900:is(.dark *){--tw-bg-opacity: 1;background-color:rgb(20 83 45 / var(--tw-bg-opacity, 1))}.dark\:bg-red-900:is(.dark *){--tw-bg-opacity: 1;background-color:rgb(127 29 29 / var(--tw-bg-opacity, 1))}.dark\:bg-yellow-900:is(.dark *){--tw-bg-opacity: 1;background-color:rgb(113 63 18 / var(--tw-bg-opacity, 1))}.dark\:text-gray-300:is(.dark *){--tw-text-opacity: 1;color:rgb(209 213 219 / var(--tw-text-opacity, 1))}.dark\:text-green-300:is(.dark *){--tw-text-opacity: 1;color:rgb(134 239 172 / var(--tw-text-opacity, 1))}.dark\:text-red-300:is(.dark *){--tw-text-opacity: 1;color:rgb(252 165 165 / var(--tw-text-opacity, 1))}.dark\:text-yellow-300:is(.dark *){--tw-text-opacity: 1;color:rgb(253 224 71 / var(--tw-text-opacity, 1))}@media (min-width: 640px){.sm\:bottom-0{bottom:0}.sm\:right-0{right:0}.sm\:top-auto{top:auto}.sm\:mt-0{margin-top:0}.sm\:flex{display:flex}.sm\:max-w-sm{max-width:24rem}.sm\:flex-row{flex-direction:row}.sm\:flex-col{flex-direction:column}.sm\:justify-end{justify-content:flex-end}.sm\:gap-2\.5{gap:.625rem}.sm\:space-x-2>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(.5rem * var(--tw-space-x-reverse));margin-left:calc(.5rem * calc(1 - var(--tw-space-x-reverse)))}.sm\:space-x-4>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(1rem * var(--tw-space-x-reverse));margin-left:calc(1rem * calc(1 - var(--tw-space-x-reverse)))}.sm\:space-y-0>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(0px * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(0px * var(--tw-space-y-reverse))}.sm\:rounded-lg{border-radius:var(--radius)}.sm\:px-6{padding-left:1.5rem;padding-right:1.5rem}.sm\:text-left{text-align:left}.data-\[state\=open\]\:sm\:slide-in-from-bottom-full[data-state=open]{--tw-enter-translate-y: 100%}}@media (min-width: 768px){.md\:absolute{position:absolute}.md\:block{display:block}.md\:flex{display:flex}.md\:hidden{display:none}.md\:w-\[var\(--radix-navigation-menu-viewport-width\)\]{width:var(--radix-navigation-menu-viewport-width)}.md\:w-auto{width:auto}.md\:max-w-\[420px\]{max-width:420px}.md\:grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}.md\:grid-cols-3{grid-template-columns:repeat(3,minmax(0,1fr))}.md\:grid-cols-4{grid-template-columns:repeat(4,minmax(0,1fr))}.md\:text-sm{font-size:.875rem;line-height:1.25rem}.md\:opacity-0{opacity:0}.after\:md\:hidden:after{content:var(--tw-content);display:none}.peer[data-variant=inset]~.md\:peer-data-\[variant\=inset\]\:m-2{margin:.5rem}.peer[data-state=collapsed][data-variant=inset]~.md\:peer-data-\[state\=collapsed\]\:peer-data-\[variant\=inset\]\:ml-2{margin-left:.5rem}.peer[data-variant=inset]~.md\:peer-data-\[variant\=inset\]\:ml-0{margin-left:0}.peer[data-variant=inset]~.md\:peer-data-\[variant\=inset\]\:rounded-xl{border-radius:.75rem}.peer[data-variant=inset]~.md\:peer-data-\[variant\=inset\]\:shadow{--tw-shadow: 0 1px 3px 0 rgb(0 0 0 / .1), 0 1px 2px -1px rgb(0 0 0 / .1);--tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}}@media (min-width: 1024px){.lg\:col-span-1{grid-column:span 1 / span 1}.lg\:col-span-2{grid-column:span 2 / span 2}.lg\:grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}.lg\:grid-cols-3{grid-template-columns:repeat(3,minmax(0,1fr))}.lg\:grid-cols-4{grid-template-columns:repeat(4,minmax(0,1fr))}.lg\:flex-row{flex-direction:row}.lg\:px-8{padding-left:2rem;padding-right:2rem}.lg\:text-6xl{font-size:3.75rem;line-height:1}}.\[\&\:has\(\[aria-selected\]\)\]\:bg-accent:has([aria-selected]){background-color:hsl(var(--accent))}.first\:\[\&\:has\(\[aria-selected\]\)\]\:rounded-l-md:has([aria-selected]):first-child{border-top-left-radius:calc(var(--radius) - 2px);border-bottom-left-radius:calc(var(--radius) - 2px)}.last\:\[\&\:has\(\[aria-selected\]\)\]\:rounded-r-md:has([aria-selected]):last-child{border-top-right-radius:calc(var(--radius) - 2px);border-bottom-right-radius:calc(var(--radius) - 2px)}.\[\&\:has\(\[aria-selected\]\.day-outside\)\]\:bg-accent\/50:has([aria-selected].day-outside){background-color:hsl(var(--accent) / .5)}.\[\&\:has\(\[aria-selected\]\.day-range-end\)\]\:rounded-r-md:has([aria-selected].day-range-end){border-top-right-radius:calc(var(--radius) - 2px);border-bottom-right-radius:calc(var(--radius) - 2px)}.\[\&\:has\(\[role\=checkbox\]\)\]\:pr-0:has([role=checkbox]){padding-right:0}.\[\&\>button\]\:hidden>button{display:none}.\[\&\>span\:last-child\]\:truncate>span:last-child{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.\[\&\>span\]\:line-clamp-1>span{overflow:hidden;display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:1}.\[\&\>svg\+div\]\:translate-y-\[-3px\]>svg+div{--tw-translate-y: -3px;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.\[\&\>svg\]\:absolute>svg{position:absolute}.\[\&\>svg\]\:left-4>svg{left:1rem}.\[\&\>svg\]\:top-4>svg{top:1rem}.\[\&\>svg\]\:size-4>svg{width:1rem;height:1rem}.\[\&\>svg\]\:h-2\.5>svg{height:.625rem}.\[\&\>svg\]\:h-3>svg{height:.75rem}.\[\&\>svg\]\:h-3\.5>svg{height:.875rem}.\[\&\>svg\]\:w-2\.5>svg{width:.625rem}.\[\&\>svg\]\:w-3>svg{width:.75rem}.\[\&\>svg\]\:w-3\.5>svg{width:.875rem}.\[\&\>svg\]\:shrink-0>svg{flex-shrink:0}.\[\&\>svg\]\:text-destructive>svg{color:hsl(var(--destructive))}.\[\&\>svg\]\:text-foreground>svg{color:hsl(var(--foreground))}.\[\&\>svg\]\:text-muted-foreground>svg{color:hsl(var(--muted-foreground))}.\[\&\>svg\]\:text-sidebar-accent-foreground>svg{color:hsl(var(--sidebar-accent-foreground))}.\[\&\>svg\~\*\]\:pl-7>svg~*{padding-left:1.75rem}.\[\&\>tr\]\:last\:border-b-0:last-child>tr{border-bottom-width:0px}.\[\&\[data-panel-group-direction\=vertical\]\>div\]\:rotate-90[data-panel-group-direction=vertical]>div{--tw-rotate: 90deg;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.\[\&\[data-state\=open\]\>svg\]\:rotate-180[data-state=open]>svg{--tw-rotate: 180deg;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.\[\&_\.recharts-cartesian-axis-tick_text\]\:fill-muted-foreground .recharts-cartesian-axis-tick text{fill:hsl(var(--muted-foreground))}.\[\&_\.recharts-cartesian-grid_line\[stroke\=\'\#ccc\'\]\]\:stroke-border\/50 .recharts-cartesian-grid line[stroke="#ccc"]{stroke:hsl(var(--border) / .5)}.\[\&_\.recharts-curve\.recharts-tooltip-cursor\]\:stroke-border .recharts-curve.recharts-tooltip-cursor{stroke:hsl(var(--border))}.\[\&_\.recharts-dot\[stroke\=\'\#fff\'\]\]\:stroke-transparent .recharts-dot[stroke="#fff"]{stroke:transparent}.\[\&_\.recharts-layer\]\:outline-none .recharts-layer{outline:2px solid transparent;outline-offset:2px}.\[\&_\.recharts-polar-grid_\[stroke\=\'\#ccc\'\]\]\:stroke-border .recharts-polar-grid [stroke="#ccc"]{stroke:hsl(var(--border))}.\[\&_\.recharts-radial-bar-background-sector\]\:fill-muted .recharts-radial-bar-background-sector,.\[\&_\.recharts-rectangle\.recharts-tooltip-cursor\]\:fill-muted .recharts-rectangle.recharts-tooltip-cursor{fill:hsl(var(--muted))}.\[\&_\.recharts-reference-line_\[stroke\=\'\#ccc\'\]\]\:stroke-border .recharts-reference-line [stroke="#ccc"]{stroke:hsl(var(--border))}.\[\&_\.recharts-sector\[stroke\=\'\#fff\'\]\]\:stroke-transparent .recharts-sector[stroke="#fff"]{stroke:transparent}.\[\&_\.recharts-sector\]\:outline-none .recharts-sector,.\[\&_\.recharts-surface\]\:outline-none .recharts-surface{outline:2px solid transparent;outline-offset:2px}.\[\&_\[cmdk-group-heading\]\]\:px-2 [cmdk-group-heading]{padding-left:.5rem;padding-right:.5rem}.\[\&_\[cmdk-group-heading\]\]\:py-1\.5 [cmdk-group-heading]{padding-top:.375rem;padding-bottom:.375rem}.\[\&_\[cmdk-group-heading\]\]\:text-xs [cmdk-group-heading]{font-size:.75rem;line-height:1rem}.\[\&_\[cmdk-group-heading\]\]\:font-medium [cmdk-group-heading]{font-weight:500}.\[\&_\[cmdk-group-heading\]\]\:text-muted-foreground [cmdk-group-heading]{color:hsl(var(--muted-foreground))}.\[\&_\[cmdk-group\]\:not\(\[hidden\]\)_\~\[cmdk-group\]\]\:pt-0 [cmdk-group]:not([hidden])~[cmdk-group]{padding-top:0}.\[\&_\[cmdk-group\]\]\:px-2 [cmdk-group]{padding-left:.5rem;padding-right:.5rem}.\[\&_\[cmdk-input-wrapper\]_svg\]\:h-5 [cmdk-input-wrapper] svg{height:1.25rem}.\[\&_\[cmdk-input-wrapper\]_svg\]\:w-5 [cmdk-input-wrapper] svg{width:1.25rem}.\[\&_\[cmdk-input\]\]\:h-12 [cmdk-input]{height:3rem}.\[\&_\[cmdk-item\]\]\:px-2 [cmdk-item]{padding-left:.5rem;padding-right:.5rem}.\[\&_\[cmdk-item\]\]\:py-3 [cmdk-item]{padding-top:.75rem;padding-bottom:.75rem}.\[\&_\[cmdk-item\]_svg\]\:h-5 [cmdk-item] svg{height:1.25rem}.\[\&_\[cmdk-item\]_svg\]\:w-5 [cmdk-item] svg{width:1.25rem}.\[\&_p\]\:leading-relaxed p{line-height:1.625}.\[\&_svg\]\:pointer-events-none svg{pointer-events:none}.\[\&_svg\]\:size-4 svg{width:1rem;height:1rem}.\[\&_svg\]\:shrink-0 svg{flex-shrink:0}.\[\&_tr\:last-child\]\:border-0 tr:last-child{border-width:0px}.\[\&_tr\]\:border-b tr{border-bottom-width:1px}[data-side=left][data-collapsible=offcanvas] .\[\[data-side\=left\]\[data-collapsible\=offcanvas\]_\&\]\:-right-2{right:-.5rem}[data-side=left][data-state=collapsed] .\[\[data-side\=left\]\[data-state\=collapsed\]_\&\]\:cursor-e-resize{cursor:e-resize}[data-side=left] .\[\[data-side\=left\]_\&\]\:cursor-w-resize{cursor:w-resize}[data-side=right][data-collapsible=offcanvas] .\[\[data-side\=right\]\[data-collapsible\=offcanvas\]_\&\]\:-left-2{left:-.5rem}[data-side=right][data-state=collapsed] .\[\[data-side\=right\]\[data-state\=collapsed\]_\&\]\:cursor-w-resize{cursor:w-resize}[data-side=right] .\[\[data-side\=right\]_\&\]\:cursor-e-resize{cursor:e-resize}

</file>
<file path="FitForge/dist/public/index.html">
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1" />
    <script type="module" crossorigin src="/assets/index-BJvHg-M7.js"></script>
    <link rel="stylesheet" crossorigin href="/assets/index-Hli7ESkA.css">
  </head>
  <body>
    <div id="root"></div>
    <!-- This is a replit script which adds a banner on the top of the page when opened in development mode outside the replit environment -->
    <script type="text/javascript" src="https://replit.com/public/js/replit-dev-banner.js"></script>
  </body>
</html>
</file>
<file path="FitForge/dist/index.js">
var __defProp = Object.defineProperty;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __esm = (fn, res) => function __init() {
  return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};

// scripts/ender-real-exercises.ts
var ender_real_exercises_exports = {};
__export(ender_real_exercises_exports, {
  enderExerciseDatabase: () => enderExerciseDatabase,
  enderWorkoutRoutines: () => enderWorkoutRoutines
});
var enderExerciseDatabase, enderWorkoutRoutines;
var init_ender_real_exercises = __esm({
  "scripts/ender-real-exercises.ts"() {
    "use strict";
    enderExerciseDatabase = [
      // ABS WORKOUT
      {
        exerciseName: "Planks",
        equipmentType: "Bodyweight",
        category: "Isolation",
        movementType: "Core",
        workoutType: "Abs",
        variation: "A",
        weight: "Bodyweight",
        restTime: "0:30",
        reps: 1,
        primaryMuscles: [
          { muscle: "Rectus Abdominis", percentage: 65 },
          { muscle: "Transverse Abdominis", percentage: 40 }
        ],
        secondaryMuscles: [
          { muscle: "Obliques", percentage: 20 },
          { muscle: "Erector Spinae", percentage: 10 }
        ],
        equipment: ["None"],
        difficulty: "Beginner"
      },
      {
        exerciseName: "Spider Planks",
        equipmentType: "Bench",
        category: "Isolation",
        movementType: "Core",
        workoutType: "Abs",
        variation: "A",
        weight: 1,
        restTime: "1:00",
        reps: 2,
        primaryMuscles: [
          { muscle: "Rectus Abdominis", percentage: 60 },
          { muscle: "Transverse Abdominis", percentage: 30 }
        ],
        secondaryMuscles: [
          { muscle: "Obliques", percentage: 30 },
          { muscle: "Erector Spinae", percentage: 10 },
          { muscle: "Shoulders", percentage: 10 }
        ],
        equipment: ["Bench"],
        difficulty: "Intermediate"
      },
      {
        exerciseName: "Bench Situps",
        equipmentType: "TRX",
        category: "Isolation",
        movementType: "Core",
        workoutType: "Abs",
        variation: "A",
        weight: 5,
        restTime: "1:30",
        reps: 3,
        primaryMuscles: [
          { muscle: "Rectus Abdominis", percentage: 60 }
        ],
        secondaryMuscles: [
          { muscle: "Hip Flexors", percentage: 25 },
          { muscle: "Obliques", percentage: 15 }
        ],
        equipment: ["TRX", "Bench"],
        difficulty: "Intermediate"
      },
      {
        exerciseName: "Hanging Knee Raises",
        equipmentType: "Kettlebell",
        category: "Isolation",
        movementType: "Core",
        workoutType: "Abs",
        variation: "A",
        weight: 10,
        restTime: "2:00",
        reps: 4,
        primaryMuscles: [
          { muscle: "Rectus Abdominis", percentage: 80 }
        ],
        secondaryMuscles: [
          { muscle: "Hip Flexors", percentage: 23 },
          { muscle: "Obliques", percentage: 40 },
          { muscle: "Grip/Forearms", percentage: 10 }
        ],
        equipment: ["Pull-up Bar"],
        difficulty: "Intermediate"
      },
      // BACK & BICEPS WORKOUT
      {
        exerciseName: "Shoulder Shrugs",
        equipmentType: "Dumbbell",
        category: "Isolation",
        movementType: "Pull",
        workoutType: "BackBiceps",
        variation: "A/B",
        weight: 15,
        restTime: "2:30",
        reps: 5,
        primaryMuscles: [
          { muscle: "Trapezius", percentage: 80 }
        ],
        secondaryMuscles: [
          { muscle: "Levator Scapulae", percentage: 20 }
        ],
        equipment: ["Dumbbells"],
        difficulty: "Beginner"
      },
      {
        exerciseName: "T Row",
        equipmentType: "OYA",
        category: "Compound",
        movementType: "Pull",
        workoutType: "BackBiceps",
        variation: "B",
        weight: 20,
        restTime: "3:00",
        reps: 6,
        primaryMuscles: [
          { muscle: "Latissimus Dorsi", percentage: 85 }
        ],
        secondaryMuscles: [
          { muscle: "Rhomboids", percentage: 25 },
          { muscle: "Trapezius", percentage: 15 },
          { muscle: "Biceps Brachii", percentage: 12 },
          { muscle: "Grip/Forearms", percentage: 8 }
        ],
        equipment: ["T-Bar", "Barbell"],
        difficulty: "Intermediate"
      },
      {
        exerciseName: "Incline Hammer Curl",
        equipmentType: "Pull-up Bar",
        category: "Isolation",
        movementType: "Pull",
        workoutType: "BackBiceps",
        variation: "B",
        weight: 25,
        restTime: "3:30",
        reps: 7,
        primaryMuscles: [
          { muscle: "Biceps Brachii", percentage: 70 }
        ],
        secondaryMuscles: [
          { muscle: "Brachialis", percentage: 20 },
          { muscle: "Brachioradialis", percentage: 10 },
          { muscle: "Grip/Forearms", percentage: 10 }
        ],
        equipment: ["Dumbbells", "Incline Bench"],
        difficulty: "Beginner"
      },
      {
        exerciseName: "Neutral Grip Pull-ups",
        equipmentType: "Countertop",
        category: "Compound",
        movementType: "Pull",
        workoutType: "BackBiceps",
        variation: "B",
        weight: 30,
        restTime: "4:00",
        reps: 8,
        primaryMuscles: [
          { muscle: "Latissimus Dorsi", percentage: 85 }
        ],
        secondaryMuscles: [
          { muscle: "Biceps Brachii", percentage: 25 },
          { muscle: "Rhomboids", percentage: 15 },
          { muscle: "Trapezius", percentage: 15 },
          { muscle: "Grip/Forearms", percentage: 10 }
        ],
        equipment: ["Pull-up Bar"],
        difficulty: "Intermediate"
      },
      {
        exerciseName: "Bent Over Rows",
        equipmentType: "Plybox",
        category: "Compound",
        movementType: "Pull",
        workoutType: "BackBiceps",
        variation: "A",
        weight: 35,
        restTime: "4:30",
        reps: 9,
        primaryMuscles: [
          { muscle: "Latissimus Dorsi", percentage: 90 }
        ],
        secondaryMuscles: [
          { muscle: "Rhomboids", percentage: 25 },
          { muscle: "Trapezius", percentage: 20 },
          { muscle: "Biceps Brachii", percentage: 15 },
          { muscle: "Grip/Forearms", percentage: 10 }
        ],
        equipment: ["Barbell", "Dumbbells"],
        difficulty: "Intermediate"
      },
      {
        exerciseName: "Row",
        equipmentType: "Cable",
        category: "Compound",
        movementType: "Pull",
        workoutType: "BackBiceps",
        variation: "B",
        weight: 40,
        restTime: "5:00",
        reps: 10,
        primaryMuscles: [
          { muscle: "Latissimus Dorsi", percentage: 85 }
        ],
        secondaryMuscles: [
          { muscle: "Rhomboids", percentage: 25 },
          { muscle: "Trapezius", percentage: 20 },
          { muscle: "Biceps Brachii", percentage: 15 },
          { muscle: "Core", percentage: 10 },
          { muscle: "Grip/Forearms", percentage: 10 }
        ],
        equipment: ["Cable Machine", "Resistance Band"],
        difficulty: "Intermediate"
      },
      {
        exerciseName: "Renegade Rows",
        equipmentType: "Dumbbell",
        category: "Compound",
        movementType: "Pull",
        workoutType: "BackBiceps",
        variation: "A/B",
        weight: 45,
        restTime: "5:30",
        reps: 11,
        primaryMuscles: [
          { muscle: "Latissimus Dorsi", percentage: 70 }
        ],
        secondaryMuscles: [
          { muscle: "Rhomboids", percentage: 25 },
          { muscle: "Trapezius", percentage: 20 },
          { muscle: "Biceps Brachii", percentage: 15 },
          { muscle: "Core", percentage: 30 },
          { muscle: "Grip/Forearms", percentage: 10 }
        ],
        equipment: ["Dumbbells"],
        difficulty: "Advanced"
      },
      {
        exerciseName: "Single Arm Upright Row",
        equipmentType: "Dumbbell",
        category: "Isolation",
        movementType: "Pull",
        workoutType: "BackBiceps",
        variation: "A/B",
        weight: 50,
        restTime: "6:00",
        reps: 12,
        primaryMuscles: [
          { muscle: "Trapezius", percentage: 60 },
          { muscle: "Deltoids", percentage: 40 }
        ],
        secondaryMuscles: [
          { muscle: "Biceps Brachii", percentage: 20 },
          { muscle: "Core", percentage: 15 },
          { muscle: "Grip/Forearms", percentage: 10 }
        ],
        equipment: ["Dumbbells"],
        difficulty: "Intermediate"
      },
      {
        exerciseName: "TRX Bicep Curl",
        equipmentType: "TRX",
        category: "Isolation",
        movementType: "Pull",
        workoutType: "BackBiceps",
        variation: "A/B",
        weight: 55,
        restTime: "6:30",
        reps: 13,
        primaryMuscles: [
          { muscle: "Biceps Brachii", percentage: 80 }
        ],
        secondaryMuscles: [
          { muscle: "Brachialis", percentage: 15 },
          { muscle: "Brachioradialis", percentage: 5 },
          { muscle: "Core", percentage: 15 },
          { muscle: "Grip/Forearms", percentage: 10 }
        ],
        equipment: ["TRX"],
        difficulty: "Intermediate"
      },
      {
        exerciseName: "Chin-Ups",
        equipmentType: "Pull-up Bar",
        category: "Compound",
        movementType: "Pull",
        workoutType: "BackBiceps",
        variation: "B",
        weight: 60,
        restTime: "7:00",
        reps: 14,
        primaryMuscles: [
          { muscle: "Latissimus Dorsi", percentage: 85 },
          { muscle: "Biceps Brachii", percentage: 30 }
        ],
        secondaryMuscles: [
          { muscle: "Rhomboids", percentage: 20 },
          { muscle: "Trapezius", percentage: 15 },
          { muscle: "Grip/Forearms", percentage: 10 }
        ],
        equipment: ["Pull-up Bar"],
        difficulty: "Intermediate"
      },
      {
        exerciseName: "Face Pull",
        equipmentType: "Cable",
        category: "Isolation",
        movementType: "Pull",
        workoutType: "BackBiceps",
        variation: "A/B",
        weight: 65,
        restTime: "7:30",
        reps: 15,
        primaryMuscles: [
          { muscle: "Trapezius", percentage: 50 },
          { muscle: "Rhomboids", percentage: 40 }
        ],
        secondaryMuscles: [
          { muscle: "Rear Deltoids", percentage: 40 },
          { muscle: "Rotator Cuff", percentage: 15 }
        ],
        equipment: ["Cable Machine", "Resistance Band"],
        difficulty: "Beginner"
      },
      {
        exerciseName: "Concentration Curl",
        equipmentType: "Dumbbell",
        category: "Isolation",
        movementType: "Pull",
        workoutType: "BackBiceps",
        variation: "A",
        weight: 70,
        restTime: "8:00",
        reps: 16,
        primaryMuscles: [
          { muscle: "Biceps Brachii", percentage: 90 }
        ],
        secondaryMuscles: [
          { muscle: "Brachialis", percentage: 10 },
          { muscle: "Grip/Forearms", percentage: 10 }
        ],
        equipment: ["Dumbbells"],
        difficulty: "Beginner"
      },
      {
        exerciseName: "Wide Grip Pullups",
        equipmentType: "Pull-up Bar",
        category: "Compound",
        movementType: "Pull",
        workoutType: "BackBiceps",
        variation: "A",
        weight: 75,
        restTime: "8:30",
        reps: 17,
        primaryMuscles: [
          { muscle: "Latissimus Dorsi", percentage: 90 }
        ],
        secondaryMuscles: [
          { muscle: "Biceps Brachii", percentage: 20 },
          { muscle: "Rhomboids", percentage: 15 },
          { muscle: "Trapezius", percentage: 15 },
          { muscle: "Grip/Forearms", percentage: 10 }
        ],
        equipment: ["Pull-up Bar"],
        difficulty: "Advanced"
      },
      // CHEST & TRICEPS WORKOUT  
      {
        exerciseName: "Bench Press",
        equipmentType: "Barbell",
        category: "Compound",
        movementType: "Push",
        workoutType: "ChestTriceps",
        variation: "A",
        weight: 80,
        restTime: "9:00",
        reps: 18,
        primaryMuscles: [
          { muscle: "Pectoralis Major", percentage: 85 }
        ],
        secondaryMuscles: [
          { muscle: "Triceps Brachii", percentage: 25 },
          { muscle: "Anterior Deltoids", percentage: 30 },
          { muscle: "Serratus Anterior", percentage: 10 }
        ],
        equipment: ["Barbell", "Bench"],
        difficulty: "Intermediate"
      },
      {
        exerciseName: "TRX Reverse Flys",
        equipmentType: "TRX",
        category: "Isolation",
        movementType: "Pull",
        workoutType: "ChestTriceps",
        variation: "A/B",
        weight: 85,
        restTime: "9:30",
        reps: 19,
        primaryMuscles: [
          { muscle: "Rhomboids", percentage: 70 }
        ],
        secondaryMuscles: [
          { muscle: "Trapezius", percentage: 40 },
          { muscle: "Rear Deltoids", percentage: 30 },
          { muscle: "Core", percentage: 15 }
        ],
        equipment: ["TRX"],
        difficulty: "Intermediate"
      },
      {
        exerciseName: "Tricep Extension",
        equipmentType: "Dumbbell",
        category: "Isolation",
        movementType: "Push",
        workoutType: "ChestTriceps",
        variation: "A",
        weight: 90,
        restTime: "10:00",
        reps: 20,
        primaryMuscles: [
          { muscle: "Triceps Brachii", percentage: 85 }
        ],
        secondaryMuscles: [
          { muscle: "Anconeus", percentage: 30 }
        ],
        equipment: ["Dumbbells"],
        difficulty: "Beginner"
      },
      {
        exerciseName: "TRX Pushup",
        equipmentType: "TRX",
        category: "Compound",
        movementType: "Push",
        workoutType: "ChestTriceps",
        variation: "A",
        weight: 95,
        reps: 21,
        primaryMuscles: [
          { muscle: "Pectoralis Major", percentage: 80 }
        ],
        secondaryMuscles: [
          { muscle: "Triceps Brachii", percentage: 30 },
          { muscle: "Anterior Deltoids", percentage: 25 },
          { muscle: "Core", percentage: 25 }
        ],
        equipment: ["TRX"],
        difficulty: "Intermediate"
      },
      {
        exerciseName: "Incline Bench Press",
        equipmentType: "Barbell",
        category: "Compound",
        movementType: "Push",
        workoutType: "ChestTriceps",
        variation: "B",
        weight: 125,
        reps: 27,
        primaryMuscles: [
          { muscle: "Pectoralis Major", percentage: 75 }
        ],
        secondaryMuscles: [
          { muscle: "Triceps Brachii", percentage: 25 },
          { muscle: "Anterior Deltoids", percentage: 35 },
          { muscle: "Serratus Anterior", percentage: 10 }
        ],
        equipment: ["Barbell", "Incline Bench"],
        difficulty: "Intermediate"
      },
      {
        exerciseName: "Shoulder Press",
        equipmentType: "Barbell",
        category: "Compound",
        movementType: "Push",
        workoutType: "ChestTriceps",
        variation: "A/B",
        weight: 130,
        reps: 28,
        primaryMuscles: [
          { muscle: "Deltoids", percentage: 80 }
        ],
        secondaryMuscles: [
          { muscle: "Triceps Brachii", percentage: 30 },
          { muscle: "Trapezius", percentage: 20 },
          { muscle: "Serratus Anterior", percentage: 15 }
        ],
        equipment: ["Barbell", "Dumbbells"],
        difficulty: "Intermediate"
      },
      {
        exerciseName: "Dips",
        equipmentType: "Bodyweight",
        category: "Compound",
        movementType: "Push",
        workoutType: "ChestTriceps",
        variation: "B",
        weight: 135,
        reps: 29,
        primaryMuscles: [
          { muscle: "Triceps Brachii", percentage: 70 }
        ],
        secondaryMuscles: [
          { muscle: "Pectoralis Major", percentage: 65 },
          { muscle: "Anterior Deltoids", percentage: 30 },
          { muscle: "Core", percentage: 10 }
        ],
        equipment: ["Dip Station", "Parallel Bars"],
        difficulty: "Intermediate"
      },
      {
        exerciseName: "Single Arm Bench",
        equipmentType: "Dumbbell",
        category: "Compound",
        movementType: "Push",
        workoutType: "ChestTriceps",
        variation: "A/B",
        weight: 100,
        reps: 22,
        primaryMuscles: [
          { muscle: "Pectoralis Major", percentage: 80 }
        ],
        secondaryMuscles: [
          { muscle: "Triceps Brachii", percentage: 25 },
          { muscle: "Anterior Deltoids", percentage: 25 },
          { muscle: "Core", percentage: 20 }
        ],
        equipment: ["Dumbbells", "Bench"],
        difficulty: "Intermediate"
      },
      {
        exerciseName: "Single Arm Incline",
        equipmentType: "Dumbbell",
        category: "Compound",
        movementType: "Push",
        workoutType: "ChestTriceps",
        variation: "A/B",
        weight: 105,
        reps: 23,
        primaryMuscles: [
          { muscle: "Pectoralis Major", percentage: 75 }
        ],
        secondaryMuscles: [
          { muscle: "Triceps Brachii", percentage: 25 },
          { muscle: "Anterior Deltoids", percentage: 30 },
          { muscle: "Core", percentage: 20 }
        ],
        equipment: ["Dumbbells", "Incline Bench"],
        difficulty: "Intermediate"
      },
      {
        exerciseName: "Pullover",
        equipmentType: "Dumbbell",
        category: "Isolation",
        movementType: "Pull",
        workoutType: "ChestTriceps",
        variation: "A/B",
        weight: 110,
        reps: 24,
        primaryMuscles: [
          { muscle: "Latissimus Dorsi", percentage: 65 },
          { muscle: "Pectoralis Major", percentage: 35 }
        ],
        secondaryMuscles: [
          { muscle: "Triceps Brachii", percentage: 25 },
          { muscle: "Serratus Anterior", percentage: 15 }
        ],
        equipment: ["Dumbbells", "Bench"],
        difficulty: "Intermediate"
      },
      {
        exerciseName: "Claps",
        equipmentType: "Bodyweight",
        category: "Explosive",
        movementType: "Push",
        workoutType: "ChestTriceps",
        variation: "A/B",
        weight: 115,
        reps: 25,
        primaryMuscles: [
          { muscle: "Pectoralis Major", percentage: 80 }
        ],
        secondaryMuscles: [
          { muscle: "Triceps Brachii", percentage: 20 },
          { muscle: "Anterior Deltoids", percentage: 20 }
        ],
        equipment: ["None"],
        difficulty: "Advanced"
      },
      {
        exerciseName: "Pushup",
        equipmentType: "Bodyweight",
        category: "Compound",
        movementType: "Push",
        workoutType: "ChestTriceps",
        variation: "A/B",
        weight: 120,
        reps: 26,
        primaryMuscles: [
          { muscle: "Pectoralis Major", percentage: 80 }
        ],
        secondaryMuscles: [
          { muscle: "Triceps Brachii", percentage: 30 },
          { muscle: "Anterior Deltoids", percentage: 25 },
          { muscle: "Core", percentage: 15 }
        ],
        equipment: ["None"],
        difficulty: "Beginner"
      },
      {
        exerciseName: "Kettlebell Halos",
        equipmentType: "Kettlebell",
        category: "Functional",
        movementType: "Full Body",
        workoutType: "ChestTriceps",
        variation: "A/B",
        weight: 140,
        reps: 30,
        primaryMuscles: [
          { muscle: "Deltoids", percentage: 60 }
        ],
        secondaryMuscles: [
          { muscle: "Trapezius", percentage: 30 },
          { muscle: "Triceps Brachii", percentage: 25 },
          { muscle: "Core", percentage: 30 },
          { muscle: "Grip/Forearms", percentage: 15 }
        ],
        equipment: ["Kettlebell"],
        difficulty: "Intermediate"
      },
      {
        exerciseName: "Kettlebell Press",
        equipmentType: "Kettlebell",
        category: "Compound",
        movementType: "Push",
        workoutType: "ChestTriceps",
        variation: "A/B",
        weight: 145,
        reps: 31,
        primaryMuscles: [
          { muscle: "Deltoids", percentage: 70 }
        ],
        secondaryMuscles: [
          { muscle: "Triceps Brachii", percentage: 40 },
          { muscle: "Core", percentage: 35 },
          { muscle: "Grip/Forearms", percentage: 15 }
        ],
        equipment: ["Kettlebell"],
        difficulty: "Intermediate"
      },
      // LEGS WORKOUT
      {
        exerciseName: "Goblet Squats",
        equipmentType: "Kettlebell",
        category: "Compound",
        movementType: "Legs",
        workoutType: "Legs",
        variation: "A",
        weight: 150,
        reps: 32,
        primaryMuscles: [
          { muscle: "Quadriceps", percentage: 65 },
          { muscle: "Gluteus Maximus", percentage: 50 }
        ],
        secondaryMuscles: [
          { muscle: "Hamstrings", percentage: 20 },
          { muscle: "Core", percentage: 25 },
          { muscle: "Grip/Forearms", percentage: 5 }
        ],
        equipment: ["Kettlebell", "Dumbbell"],
        difficulty: "Beginner"
      },
      {
        exerciseName: "Dead Lifts",
        equipmentType: "Barbell",
        category: "Compound",
        movementType: "Legs",
        workoutType: "Legs",
        variation: "A",
        weight: 155,
        reps: 33,
        primaryMuscles: [
          { muscle: "Gluteus Maximus", percentage: 90 },
          { muscle: "Hamstrings", percentage: 70 }
        ],
        secondaryMuscles: [
          { muscle: "Erector Spinae", percentage: 60 },
          { muscle: "Core", percentage: 30 },
          { muscle: "Grip/Forearms", percentage: 25 }
        ],
        equipment: ["Barbell"],
        difficulty: "Advanced"
      },
      {
        exerciseName: "Calf Raises",
        equipmentType: "Bodyweight",
        category: "Isolation",
        movementType: "Legs",
        workoutType: "Legs",
        variation: "A",
        weight: 160,
        reps: 34,
        primaryMuscles: [
          { muscle: "Gastrocnemius", percentage: 80 },
          { muscle: "Soleus", percentage: 70 }
        ],
        equipment: ["None", "Calf Machine"],
        difficulty: "Beginner"
      },
      {
        exerciseName: "Glute Bridges",
        equipmentType: "Bodyweight",
        category: "Isolation",
        movementType: "Legs",
        workoutType: "Legs",
        variation: "B",
        weight: 165,
        reps: 35,
        primaryMuscles: [
          { muscle: "Gluteus Maximus", percentage: 90 }
        ],
        secondaryMuscles: [
          { muscle: "Hamstrings", percentage: 40 },
          { muscle: "Core", percentage: 20 },
          { muscle: "Quadriceps", percentage: 10 }
        ],
        equipment: ["None", "Barbell"],
        difficulty: "Beginner"
      },
      {
        exerciseName: "Kettlebell Swings",
        equipmentType: "Kettlebell",
        category: "Compound",
        movementType: "Full Body",
        workoutType: "Legs",
        variation: "A/B",
        weight: 180,
        reps: 38,
        primaryMuscles: [
          { muscle: "Gluteus Maximus", percentage: 80 },
          { muscle: "Hamstrings", percentage: 70 }
        ],
        secondaryMuscles: [
          { muscle: "Core", percentage: 40 },
          { muscle: "Shoulders", percentage: 15 },
          { muscle: "Grip/Forearms", percentage: 15 }
        ],
        equipment: ["Kettlebell"],
        difficulty: "Intermediate"
      },
      {
        exerciseName: "Box Step-ups",
        equipmentType: "Plybox",
        category: "Compound",
        movementType: "Legs",
        workoutType: "Legs",
        variation: "B",
        weight: 170,
        reps: 36,
        primaryMuscles: [
          { muscle: "Quadriceps", percentage: 65 },
          { muscle: "Gluteus Maximus", percentage: 85 }
        ],
        secondaryMuscles: [
          { muscle: "Hamstrings", percentage: 30 },
          { muscle: "Erector Spinae", percentage: 15 }
        ],
        equipment: ["Plyometric Box", "Step Platform"],
        difficulty: "Intermediate"
      },
      {
        exerciseName: "Stiff Legged Deadlifts",
        equipmentType: "Barbell",
        category: "Compound",
        movementType: "Legs",
        workoutType: "Legs",
        variation: "B",
        weight: 175,
        reps: 37,
        primaryMuscles: [
          { muscle: "Hamstrings", percentage: 85 },
          { muscle: "Gluteus Maximus", percentage: 75 }
        ],
        secondaryMuscles: [
          { muscle: "Erector Spinae", percentage: 50 },
          { muscle: "Core", percentage: 25 },
          { muscle: "Grip/Forearms", percentage: 15 }
        ],
        equipment: ["Barbell", "Dumbbells"],
        difficulty: "Intermediate"
      }
    ];
    enderWorkoutRoutines = {
      "Abs": {
        name: "Ender's Core Workout",
        description: "Comprehensive core strengthening with progressive hold times",
        duration: 30,
        exercises: enderExerciseDatabase.filter((ex) => ex.workoutType === "Abs")
      },
      "BackBiceps": {
        name: "Ender's Pull Day",
        description: "Back and bicep development with compound movements",
        duration: 60,
        exercises: enderExerciseDatabase.filter((ex) => ex.workoutType === "BackBiceps")
      },
      "ChestTriceps": {
        name: "Ender's Push Day",
        description: "Chest and tricep focus with pressing movements",
        duration: 75,
        exercises: enderExerciseDatabase.filter((ex) => ex.workoutType === "ChestTriceps")
      },
      "Legs": {
        name: "Ender's Leg Day",
        description: "Lower body compound movements and glute activation",
        duration: 50,
        exercises: enderExerciseDatabase.filter((ex) => ex.workoutType === "Legs")
      }
    };
    console.log("Ender's Exercise Database Summary:");
    console.log(`Total exercises: ${enderExerciseDatabase.length}`);
    console.log("Workout types:", Object.keys(enderWorkoutRoutines));
    Object.keys(enderWorkoutRoutines).forEach((type) => {
      const routine = enderWorkoutRoutines[type];
      console.log(`${type}: ${routine.exercises.length} exercises, ${routine.duration}min`);
    });
  }
});

// server/index.ts
import express2 from "express";

// server/routes.ts
import { createServer } from "http";

// server/storage.ts
init_ender_real_exercises();
var MemStorage = class {
  users;
  workouts;
  workoutSessions;
  userStats;
  achievements;
  challenges;
  challengeParticipations;
  socialPosts;
  currentId;
  constructor() {
    this.users = /* @__PURE__ */ new Map();
    this.workouts = /* @__PURE__ */ new Map();
    this.workoutSessions = /* @__PURE__ */ new Map();
    this.userStats = /* @__PURE__ */ new Map();
    this.achievements = /* @__PURE__ */ new Map();
    this.challenges = /* @__PURE__ */ new Map();
    this.challengeParticipations = /* @__PURE__ */ new Map();
    this.socialPosts = /* @__PURE__ */ new Map();
    this.currentId = 1;
    this.seedData();
  }
  seedData() {
    const realWorkouts = [
      // PUSH DAY - Chest & Triceps
      {
        userId: 1,
        name: enderWorkoutRoutines.ChestTriceps.name,
        description: enderWorkoutRoutines.ChestTriceps.description,
        category: "strength",
        difficulty: "intermediate",
        duration: enderWorkoutRoutines.ChestTriceps.duration,
        calories: enderWorkoutRoutines.ChestTriceps.duration * 5.5,
        // ~5.5 cal/min for strength training
        equipment: ["barbell", "dumbbells", "trx", "bench", "kettlebell"],
        exercises: enderWorkoutRoutines.ChestTriceps.exercises.slice(0, 6).map((ex) => ({
          name: ex.exerciseName,
          sets: 3,
          reps: ex.reps <= 5 ? 12 : Math.max(8, 15 - ex.reps),
          weight: ex.weight === "Bodyweight" ? void 0 : ex.weight,
          equipment: ex.equipmentType,
          primaryMuscles: ex.primaryMuscles.map((m) => `${m.muscle}:${m.percentage}%`).join(", "),
          variation: ex.variation
        })),
        imageUrl: "https://images.unsplash.com/photo-1581009146145-b5ef050c2e1e?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=300",
        isPublic: true
      },
      // PULL DAY - Back & Biceps  
      {
        userId: 1,
        name: enderWorkoutRoutines.BackBiceps.name,
        description: enderWorkoutRoutines.BackBiceps.description,
        category: "strength",
        difficulty: "intermediate",
        duration: enderWorkoutRoutines.BackBiceps.duration,
        calories: enderWorkoutRoutines.BackBiceps.duration * 5.5,
        equipment: ["dumbbells", "pull-up bar", "trx", "cable", "barbell"],
        exercises: enderWorkoutRoutines.BackBiceps.exercises.slice(0, 6).map((ex) => ({
          name: ex.exerciseName,
          sets: 3,
          reps: ex.reps <= 5 ? 12 : Math.max(8, 15 - ex.reps),
          weight: ex.weight === "Bodyweight" ? void 0 : ex.weight,
          equipment: ex.equipmentType,
          primaryMuscles: ex.primaryMuscles.map((m) => `${m.muscle}:${m.percentage}%`).join(", "),
          variation: ex.variation
        })),
        imageUrl: "https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=300",
        isPublic: true
      },
      // LEG DAY
      {
        userId: 1,
        name: enderWorkoutRoutines.Legs.name,
        description: enderWorkoutRoutines.Legs.description,
        category: "strength",
        difficulty: "intermediate",
        duration: enderWorkoutRoutines.Legs.duration,
        calories: enderWorkoutRoutines.Legs.duration * 6.5,
        // Higher calorie burn for legs
        equipment: ["kettlebell", "barbell", "plybox"],
        exercises: enderWorkoutRoutines.Legs.exercises.map((ex) => ({
          name: ex.exerciseName,
          sets: ex.exerciseName.includes("Calf") ? 4 : 3,
          reps: ex.exerciseName.includes("Deadlift") ? 6 : ex.exerciseName.includes("Calf") ? 20 : 12,
          weight: ex.weight === "Bodyweight" ? void 0 : ex.weight,
          equipment: ex.equipmentType,
          primaryMuscles: ex.primaryMuscles.map((m) => `${m.muscle}:${m.percentage}%`).join(", "),
          variation: ex.variation
        })),
        imageUrl: "https://images.unsplash.com/photo-1434608519344-49d77a699e1d?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=300",
        isPublic: true
      },
      // CORE DAY
      {
        userId: 1,
        name: enderWorkoutRoutines.Abs.name,
        description: enderWorkoutRoutines.Abs.description,
        category: "core",
        difficulty: "intermediate",
        duration: enderWorkoutRoutines.Abs.duration,
        calories: enderWorkoutRoutines.Abs.duration * 4.5,
        equipment: ["trx", "bench", "pull-up bar"],
        exercises: enderWorkoutRoutines.Abs.exercises.map((ex) => ({
          name: ex.exerciseName,
          sets: 3,
          reps: ex.exerciseName.includes("Plank") ? 1 : 15,
          duration: ex.exerciseName.includes("Plank") ? 60 : void 0,
          equipment: ex.equipmentType,
          primaryMuscles: ex.primaryMuscles.map((m) => `${m.muscle}:${m.percentage}%`).join(", "),
          variation: ex.variation
        })),
        imageUrl: "https://images.unsplash.com/photo-1544367567-0f2fcb009e0b?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=300",
        isPublic: true
      },
      // PUSH DAY - Variation A (Focus on Compound Movements)
      {
        userId: 1,
        name: "Ender's Push Day - Variation A",
        description: "Heavy compound focus with barbells and progressive overload",
        category: "strength",
        difficulty: "intermediate",
        duration: 70,
        calories: 385,
        equipment: ["barbell", "bench", "dumbbells"],
        exercises: enderWorkoutRoutines.ChestTriceps.exercises.filter((ex) => ex.variation === "A").map((ex) => ({
          name: ex.exerciseName,
          sets: 4,
          reps: Math.max(6, 12 - Math.floor(ex.reps / 3)),
          weight: ex.weight === "Bodyweight" ? void 0 : ex.weight,
          equipment: ex.equipmentType,
          primaryMuscles: ex.primaryMuscles.map((m) => `${m.muscle}:${m.percentage}%`).join(", "),
          variation: ex.variation
        })),
        imageUrl: "https://images.unsplash.com/photo-1581009146145-b5ef050c2e1e?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=300",
        isPublic: true
      },
      // PUSH DAY - Variation B (Focus on Volume & Accessories)  
      {
        userId: 1,
        name: "Ender's Push Day - Variation B",
        description: "Higher volume with accessory movements and isolation work",
        category: "strength",
        difficulty: "intermediate",
        duration: 75,
        calories: 410,
        equipment: ["dumbbells", "trx", "kettlebell", "incline bench"],
        exercises: enderWorkoutRoutines.ChestTriceps.exercises.filter((ex) => ex.variation === "B" || ex.variation === "A/B").map((ex) => ({
          name: ex.exerciseName,
          sets: 3,
          reps: Math.max(10, 18 - Math.floor(ex.reps / 2)),
          weight: ex.weight === "Bodyweight" ? void 0 : ex.weight,
          equipment: ex.equipmentType,
          primaryMuscles: ex.primaryMuscles.map((m) => `${m.muscle}:${m.percentage}%`).join(", "),
          variation: ex.variation
        })),
        imageUrl: "https://images.unsplash.com/photo-1581009146145-b5ef050c2e1e?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=300",
        isPublic: true
      },
      // PULL DAY - Variation A (Heavy Pulling)
      {
        userId: 1,
        name: "Ender's Pull Day - Variation A",
        description: "Heavy compound pulling with deadlifts and weighted pull-ups",
        category: "strength",
        difficulty: "intermediate",
        duration: 65,
        calories: 360,
        equipment: ["barbell", "pull-up bar", "dumbbells"],
        exercises: enderWorkoutRoutines.BackBiceps.exercises.filter((ex) => ex.variation === "A").map((ex) => ({
          name: ex.exerciseName,
          sets: 4,
          reps: ex.exerciseName.includes("Pull") ? 8 : Math.max(6, 12 - Math.floor(ex.reps / 3)),
          weight: ex.weight === "Bodyweight" ? void 0 : ex.weight,
          equipment: ex.equipmentType,
          primaryMuscles: ex.primaryMuscles.map((m) => `${m.muscle}:${m.percentage}%`).join(", "),
          variation: ex.variation
        })),
        imageUrl: "https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=300",
        isPublic: true
      },
      // PULL DAY - Variation B (Volume & Width Focus)
      {
        userId: 1,
        name: "Ender's Pull Day - Variation B",
        description: "High volume back width and bicep specialization",
        category: "strength",
        difficulty: "intermediate",
        duration: 60,
        calories: 330,
        equipment: ["pull-up bar", "cable", "trx", "dumbbells"],
        exercises: enderWorkoutRoutines.BackBiceps.exercises.filter((ex) => ex.variation === "B" || ex.variation === "A/B").slice(0, 7).map((ex) => ({
          name: ex.exerciseName,
          sets: 3,
          reps: ex.exerciseName.includes("Curl") ? 15 : Math.max(8, 15 - Math.floor(ex.reps / 3)),
          weight: ex.weight === "Bodyweight" ? void 0 : ex.weight,
          equipment: ex.equipmentType,
          primaryMuscles: ex.primaryMuscles.map((m) => `${m.muscle}:${m.percentage}%`).join(", "),
          variation: ex.variation
        })),
        imageUrl: "https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=300",
        isPublic: true
      },
      // LEGS - Heavy Compound
      {
        userId: 1,
        name: "Ender's Leg Day - Heavy Compound",
        description: "Heavy squats, deadlifts, and compound leg movements",
        category: "strength",
        difficulty: "intermediate",
        duration: 55,
        calories: 360,
        equipment: ["barbell", "kettlebell"],
        exercises: enderWorkoutRoutines.Legs.exercises.filter((ex) => ex.exerciseName.includes("Squat") || ex.exerciseName.includes("Deadlift")).map((ex) => ({
          name: ex.exerciseName,
          sets: 4,
          reps: ex.exerciseName.includes("Deadlift") ? 5 : 8,
          weight: ex.weight === "Bodyweight" ? void 0 : ex.weight,
          equipment: ex.equipmentType,
          primaryMuscles: ex.primaryMuscles.map((m) => `${m.muscle}:${m.percentage}%`).join(", "),
          variation: ex.variation
        })),
        imageUrl: "https://images.unsplash.com/photo-1434608519344-49d77a699e1d?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=300",
        isPublic: true
      }
    ];
    const sampleChallenges = [
      {
        name: "January Cardio Blitz",
        description: "Complete 20 cardio sessions this month. Win exclusive NFT badges!",
        type: "cardio",
        target: 20,
        unit: "sessions",
        startDate: /* @__PURE__ */ new Date("2024-01-01"),
        endDate: /* @__PURE__ */ new Date("2024-01-31"),
        isActive: true,
        participants: 12847
      },
      {
        name: "Mindful Movement",
        description: "Practice yoga or mobility work for 10 minutes daily for 30 days.",
        type: "mindfulness",
        target: 30,
        unit: "days",
        startDate: /* @__PURE__ */ new Date("2024-01-01"),
        endDate: /* @__PURE__ */ new Date("2024-01-30"),
        isActive: true,
        participants: 8432
      }
    ];
    const sampleUser = {
      firstName: "Ender",
      lastName: "Test",
      email: "ender@test.com",
      username: "ender",
      password: "password123",
      // Simple password for testing
      fitnessLevel: "intermediate",
      goals: ["strength", "endurance"]
    };
    const userId = this.currentId++;
    this.users.set(userId, {
      ...sampleUser,
      id: userId,
      createdAt: /* @__PURE__ */ new Date(),
      profileImage: null
    });
    const dummyWorkoutSessions = [
      // Recent Push Day workout
      {
        userId,
        workoutTemplateId: null,
        startTime: new Date(Date.now() - 3 * 24 * 60 * 60 * 1e3),
        // 3 days ago
        endTime: new Date(Date.now() - 3 * 24 * 60 * 60 * 1e3 + 75 * 60 * 1e3),
        // 75 min later
        duration: 75,
        exercises: [
          {
            exerciseName: "Bench Press",
            sets: [
              { reps: 8, weight: 185, restTime: 180, formScore: 8.5, notes: "Strong session" },
              { reps: 8, weight: 185, restTime: 180, formScore: 8 },
              { reps: 7, weight: 185, restTime: 180, formScore: 7.5, notes: "Slight fatigue" },
              { reps: 6, weight: 185, restTime: 240, formScore: 7 }
            ]
          },
          {
            exerciseName: "Incline Bench Press",
            sets: [
              { reps: 10, weight: 155, restTime: 150, formScore: 8.5 },
              { reps: 9, weight: 155, restTime: 150, formScore: 8 },
              { reps: 8, weight: 155, restTime: 180, formScore: 7.5 }
            ]
          },
          {
            exerciseName: "Shoulder Press",
            sets: [
              { reps: 12, weight: 65, restTime: 120, formScore: 9 },
              { reps: 11, weight: 65, restTime: 120, formScore: 8.5 },
              { reps: 10, weight: 65, restTime: 150, formScore: 8 }
            ]
          }
        ],
        caloriesBurned: 410,
        notes: "Great push session, felt strong on bench",
        rating: 4
      },
      // Recent Pull Day workout  
      {
        userId,
        workoutTemplateId: null,
        startTime: new Date(Date.now() - 5 * 24 * 60 * 60 * 1e3),
        // 5 days ago
        endTime: new Date(Date.now() - 5 * 24 * 60 * 60 * 1e3 + 60 * 60 * 1e3),
        // 60 min later
        duration: 60,
        exercises: [
          {
            exerciseName: "Wide Grip Pullups",
            sets: [
              { reps: 8, weight: void 0, restTime: 180, formScore: 8, notes: "Bodyweight felt good" },
              { reps: 7, weight: void 0, restTime: 180, formScore: 7.5 },
              { reps: 6, weight: void 0, restTime: 200, formScore: 7 }
            ]
          },
          {
            exerciseName: "Bent Over Rows",
            sets: [
              { reps: 10, weight: 155, restTime: 150, formScore: 8.5 },
              { reps: 10, weight: 155, restTime: 150, formScore: 8 },
              { reps: 9, weight: 155, restTime: 180, formScore: 7.5 }
            ]
          },
          {
            exerciseName: "Concentration Curl",
            sets: [
              { reps: 15, weight: 35, restTime: 90, formScore: 9 },
              { reps: 14, weight: 35, restTime: 90, formScore: 8.5 },
              { reps: 12, weight: 35, restTime: 120, formScore: 8 }
            ]
          }
        ],
        caloriesBurned: 330,
        notes: "Good back width focus",
        rating: 4
      },
      // Leg Day workout
      {
        userId,
        workoutTemplateId: null,
        startTime: new Date(Date.now() - 7 * 24 * 60 * 60 * 1e3),
        // 7 days ago
        endTime: new Date(Date.now() - 7 * 24 * 60 * 60 * 1e3 + 50 * 60 * 1e3),
        // 50 min later
        duration: 50,
        exercises: [
          {
            exerciseName: "Goblet Squats",
            sets: [
              { reps: 12, weight: 50, restTime: 150, formScore: 8.5 },
              { reps: 12, weight: 50, restTime: 150, formScore: 8 },
              { reps: 10, weight: 50, restTime: 180, formScore: 7.5 }
            ]
          },
          {
            exerciseName: "Dead Lifts",
            sets: [
              { reps: 6, weight: 225, restTime: 240, formScore: 8, notes: "Heavy set, good form" },
              { reps: 5, weight: 225, restTime: 240, formScore: 7.5 },
              { reps: 5, weight: 225, restTime: 300, formScore: 7 }
            ]
          }
        ],
        caloriesBurned: 325,
        notes: "Solid leg session",
        rating: 4
      }
    ];
    realWorkouts.forEach((workout) => {
      const id = this.currentId++;
      this.workouts.set(id, {
        ...workout,
        id,
        createdAt: /* @__PURE__ */ new Date(),
        description: workout.description || null,
        equipment: workout.equipment || null,
        imageUrl: workout.imageUrl || null,
        isPublic: workout.isPublic ?? null
      });
    });
    sampleChallenges.forEach((challenge) => {
      const id = this.currentId++;
      this.challenges.set(id, {
        ...challenge,
        id,
        createdAt: /* @__PURE__ */ new Date(),
        isActive: challenge.isActive ?? null,
        participants: challenge.participants ?? null
      });
    });
    dummyWorkoutSessions.forEach((session) => {
      const id = this.currentId++;
      this.workoutSessions.set(id, {
        ...session,
        id,
        createdAt: session.startTime,
        workoutTemplateId: session.workoutTemplateId || null,
        exercises: session.exercises || null,
        caloriesBurned: session.caloriesBurned || null,
        notes: session.notes || null,
        rating: session.rating || null
      });
    });
  }
  // User methods
  async getUser(id) {
    return this.users.get(id);
  }
  async getUserByEmail(email) {
    return Array.from(this.users.values()).find((user) => user.email === email);
  }
  async getUserByUsername(username) {
    return Array.from(this.users.values()).find((user) => user.username === username);
  }
  async createUser(insertUser) {
    const id = this.currentId++;
    const user = {
      ...insertUser,
      id,
      createdAt: /* @__PURE__ */ new Date(),
      profileImage: insertUser.profileImage || null
    };
    this.users.set(id, user);
    return user;
  }
  async updateUser(id, updates) {
    const user = this.users.get(id);
    if (!user) return void 0;
    const updatedUser = { ...user, ...updates };
    this.users.set(id, updatedUser);
    return updatedUser;
  }
  // Workout methods
  async getWorkouts(filters) {
    let workouts2 = Array.from(this.workouts.values());
    if (filters?.category) {
      workouts2 = workouts2.filter((w) => w.category === filters.category);
    }
    if (filters?.difficulty) {
      workouts2 = workouts2.filter((w) => w.difficulty === filters.difficulty);
    }
    if (filters?.userId) {
      workouts2 = workouts2.filter((w) => w.userId === filters.userId);
    }
    return workouts2.sort((a, b) => b.createdAt.getTime() - a.createdAt.getTime());
  }
  async getWorkout(id) {
    return this.workouts.get(id);
  }
  async createWorkout(workout) {
    const id = this.currentId++;
    const newWorkout = {
      ...workout,
      id,
      createdAt: /* @__PURE__ */ new Date(),
      description: workout.description || null,
      equipment: workout.equipment || null,
      imageUrl: workout.imageUrl || null,
      isPublic: workout.isPublic ?? null
    };
    this.workouts.set(id, newWorkout);
    return newWorkout;
  }
  async updateWorkout(id, updates) {
    const workout = this.workouts.get(id);
    if (!workout) return void 0;
    const updatedWorkout = { ...workout, ...updates };
    this.workouts.set(id, updatedWorkout);
    return updatedWorkout;
  }
  async deleteWorkout(id) {
    return this.workouts.delete(id);
  }
  // Workout session methods
  async getWorkoutSessions(userId) {
    return Array.from(this.workoutSessions.values()).filter((session) => session.userId === userId).sort((a, b) => b.createdAt.getTime() - a.createdAt.getTime());
  }
  async getWorkoutSession(id) {
    return this.workoutSessions.get(id);
  }
  async createWorkoutSession(session) {
    const id = this.currentId++;
    const newSession = {
      ...session,
      id,
      createdAt: /* @__PURE__ */ new Date(),
      exercises: session.exercises || null,
      endTime: session.endTime || null,
      totalDuration: session.totalDuration || null,
      caloriesBurned: session.caloriesBurned || null,
      formScore: session.formScore || null,
      notes: session.notes || null,
      completionStatus: session.completionStatus || "in_progress"
    };
    this.workoutSessions.set(id, newSession);
    return newSession;
  }
  async updateWorkoutSession(id, updates) {
    const session = this.workoutSessions.get(id);
    if (!session) return void 0;
    const updatedSession = { ...session, ...updates };
    this.workoutSessions.set(id, updatedSession);
    return updatedSession;
  }
  // User stats methods
  async getUserStats(userId, limit = 30) {
    return Array.from(this.userStats.values()).filter((stats) => stats.userId === userId).sort((a, b) => b.date.getTime() - a.date.getTime()).slice(0, limit);
  }
  async createUserStats(stats) {
    const id = this.currentId++;
    const newStats = {
      ...stats,
      id,
      createdAt: /* @__PURE__ */ new Date(),
      weight: stats.weight ?? null,
      bodyFat: stats.bodyFat ?? null,
      muscleMass: stats.muscleMass ?? null,
      caloriesConsumed: stats.caloriesConsumed ?? null,
      proteinConsumed: stats.proteinConsumed ?? null,
      carbsConsumed: stats.carbsConsumed ?? null,
      fatsConsumed: stats.fatsConsumed ?? null,
      sleepHours: stats.sleepHours ?? null,
      stressLevel: stats.stressLevel ?? null,
      energyLevel: stats.energyLevel ?? null
    };
    this.userStats.set(id, newStats);
    return newStats;
  }
  async getLatestUserStats(userId) {
    const userStats2 = await this.getUserStats(userId, 1);
    return userStats2[0];
  }
  // Achievement methods
  async getUserAchievements(userId) {
    return Array.from(this.achievements.values()).filter((achievement) => achievement.userId === userId).sort((a, b) => b.unlockedAt.getTime() - a.unlockedAt.getTime());
  }
  async createAchievement(achievement) {
    const id = this.currentId++;
    const newAchievement = {
      ...achievement,
      id,
      unlockedAt: /* @__PURE__ */ new Date(),
      value: achievement.value || null
    };
    this.achievements.set(id, newAchievement);
    return newAchievement;
  }
  // Challenge methods
  async getActiveChallenges() {
    const now = /* @__PURE__ */ new Date();
    return Array.from(this.challenges.values()).filter((challenge) => challenge.isActive && challenge.endDate > now).sort((a, b) => a.endDate.getTime() - b.endDate.getTime());
  }
  async getChallenge(id) {
    return this.challenges.get(id);
  }
  async createChallenge(challenge) {
    const id = this.currentId++;
    const newChallenge = {
      ...challenge,
      id,
      createdAt: /* @__PURE__ */ new Date(),
      isActive: challenge.isActive ?? null,
      participants: challenge.participants ?? null
    };
    this.challenges.set(id, newChallenge);
    return newChallenge;
  }
  async getChallengeParticipations(userId) {
    const participations = Array.from(this.challengeParticipations.values()).filter((p) => p.userId === userId);
    return participations.map((p) => {
      const challenge = this.challenges.get(p.challengeId);
      return { ...p, challenge };
    });
  }
  async joinChallenge(participation) {
    const id = this.currentId++;
    const newParticipation = {
      ...participation,
      id,
      joinedAt: /* @__PURE__ */ new Date(),
      progress: participation.progress ?? null,
      isCompleted: participation.isCompleted ?? null
    };
    this.challengeParticipations.set(id, newParticipation);
    const challenge = this.challenges.get(participation.challengeId);
    if (challenge) {
      challenge.participants = (challenge.participants || 0) + 1;
    }
    return newParticipation;
  }
  async updateChallengeProgress(userId, challengeId, progress) {
    const participation = Array.from(this.challengeParticipations.values()).find((p) => p.userId === userId && p.challengeId === challengeId);
    if (!participation) return void 0;
    participation.progress = progress;
    const challenge = this.challenges.get(challengeId);
    if (challenge && progress >= challenge.target) {
      participation.isCompleted = true;
    }
    return participation;
  }
  // Social methods
  async getSocialPosts(limit = 20) {
    const posts = Array.from(this.socialPosts.values()).sort((a, b) => b.createdAt.getTime() - a.createdAt.getTime()).slice(0, limit);
    return posts.map((post) => {
      const user = this.users.get(post.userId);
      return {
        ...post,
        user: {
          id: user.id,
          firstName: user.firstName,
          lastName: user.lastName,
          profileImage: user.profileImage
        }
      };
    });
  }
  async createSocialPost(post) {
    const id = this.currentId++;
    const newPost = {
      ...post,
      id,
      likes: 0,
      comments: 0,
      createdAt: /* @__PURE__ */ new Date(),
      imageUrl: post.imageUrl || null,
      workoutSessionId: post.workoutSessionId || null,
      achievementId: post.achievementId || null
    };
    this.socialPosts.set(id, newPost);
    return newPost;
  }
  async likeSocialPost(postId) {
    const post = this.socialPosts.get(postId);
    if (!post) return false;
    post.likes = (post.likes || 0) + 1;
    return true;
  }
};
var storage = new MemStorage();

// server/routes.ts
import bcrypt from "bcrypt";
import jwt from "jsonwebtoken";

// shared/schema.ts
import { pgTable, text, serial, integer, boolean, timestamp, real, jsonb } from "drizzle-orm/pg-core";
import { createInsertSchema } from "drizzle-zod";
import { z } from "zod";
var users = pgTable("users", {
  id: serial("id").primaryKey(),
  username: text("username").notNull().unique(),
  email: text("email").notNull().unique(),
  password: text("password").notNull(),
  firstName: text("first_name").notNull(),
  lastName: text("last_name").notNull(),
  profileImage: text("profile_image"),
  createdAt: timestamp("created_at").defaultNow().notNull()
});
var workouts = pgTable("workouts", {
  id: serial("id").primaryKey(),
  userId: integer("user_id").references(() => users.id).notNull(),
  name: text("name").notNull(),
  description: text("description"),
  category: text("category").notNull(),
  // strength, cardio, yoga, hiit, etc.
  difficulty: text("difficulty").notNull(),
  // beginner, intermediate, advanced
  duration: integer("duration").notNull(),
  // in minutes
  calories: integer("calories").notNull(),
  equipment: text("equipment").array(),
  exercises: jsonb("exercises").notNull(),
  // array of exercise objects
  imageUrl: text("image_url"),
  isPublic: boolean("is_public").default(true),
  createdAt: timestamp("created_at").defaultNow().notNull()
});
var workoutSessions = pgTable("workout_sessions", {
  id: serial("id").primaryKey(),
  userId: integer("user_id").references(() => users.id).notNull(),
  workoutId: integer("workout_id").references(() => workouts.id).notNull(),
  startTime: timestamp("start_time").notNull(),
  endTime: timestamp("end_time"),
  totalDuration: integer("total_duration"),
  // in minutes
  caloriesBurned: integer("calories_burned"),
  formScore: real("form_score"),
  // 0-100
  notes: text("notes"),
  exercises: jsonb("exercises"),
  // detailed exercise performance data
  completionStatus: text("completion_status").notNull().default("in_progress"),
  // in_progress, completed, paused
  createdAt: timestamp("created_at").defaultNow().notNull()
});
var userStats = pgTable("user_stats", {
  id: serial("id").primaryKey(),
  userId: integer("user_id").references(() => users.id).notNull(),
  date: timestamp("date").notNull(),
  weight: real("weight"),
  bodyFat: real("body_fat"),
  muscleMass: real("muscle_mass"),
  caloriesConsumed: integer("calories_consumed"),
  proteinConsumed: real("protein_consumed"),
  carbsConsumed: real("carbs_consumed"),
  fatsConsumed: real("fats_consumed"),
  sleepHours: real("sleep_hours"),
  stressLevel: integer("stress_level"),
  // 1-10
  energyLevel: integer("energy_level"),
  // 1-10
  createdAt: timestamp("created_at").defaultNow().notNull()
});
var achievements = pgTable("achievements", {
  id: serial("id").primaryKey(),
  userId: integer("user_id").references(() => users.id).notNull(),
  type: text("type").notNull(),
  // personal_record, streak, form_expert, etc.
  title: text("title").notNull(),
  description: text("description").notNull(),
  iconType: text("icon_type").notNull(),
  // trophy, fire, medal, etc.
  value: text("value"),
  // e.g., "225 lbs", "30 days", etc.
  unlockedAt: timestamp("unlocked_at").defaultNow().notNull()
});
var challenges = pgTable("challenges", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description").notNull(),
  type: text("type").notNull(),
  // cardio, strength, mindfulness, etc.
  target: integer("target").notNull(),
  // target number (reps, sessions, etc.)
  unit: text("unit").notNull(),
  // sessions, minutes, reps, etc.
  startDate: timestamp("start_date").notNull(),
  endDate: timestamp("end_date").notNull(),
  isActive: boolean("is_active").default(true),
  participants: integer("participants").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull()
});
var challengeParticipations = pgTable("challenge_participations", {
  id: serial("id").primaryKey(),
  userId: integer("user_id").references(() => users.id).notNull(),
  challengeId: integer("challenge_id").references(() => challenges.id).notNull(),
  progress: integer("progress").default(0),
  isCompleted: boolean("is_completed").default(false),
  joinedAt: timestamp("joined_at").defaultNow().notNull()
});
var socialPosts = pgTable("social_posts", {
  id: serial("id").primaryKey(),
  userId: integer("user_id").references(() => users.id).notNull(),
  content: text("content").notNull(),
  imageUrl: text("image_url"),
  workoutSessionId: integer("workout_session_id").references(() => workoutSessions.id),
  achievementId: integer("achievement_id").references(() => achievements.id),
  likes: integer("likes").default(0),
  comments: integer("comments").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull()
});
var insertUserSchema = createInsertSchema(users).omit({
  id: true,
  createdAt: true
});
var insertWorkoutSchema = createInsertSchema(workouts).omit({
  id: true,
  createdAt: true
});
var insertWorkoutSessionSchema = createInsertSchema(workoutSessions).omit({
  id: true,
  createdAt: true
});
var insertUserStatsSchema = createInsertSchema(userStats).omit({
  id: true,
  createdAt: true
});
var insertAchievementSchema = createInsertSchema(achievements).omit({
  id: true,
  unlockedAt: true
});
var insertChallengeSchema = createInsertSchema(challenges).omit({
  id: true,
  createdAt: true
});
var insertChallengeParticipationSchema = createInsertSchema(challengeParticipations).omit({
  id: true,
  joinedAt: true
});
var insertSocialPostSchema = createInsertSchema(socialPosts).omit({
  id: true,
  createdAt: true,
  likes: true,
  comments: true
});
var loginSchema = z.object({
  email: z.string().email(),
  password: z.string().min(6)
});

// server/routes.ts
var JWT_SECRET = process.env.JWT_SECRET || "fitforge-secret-key";
var authenticateToken = (req, res, next) => {
  req.userId = 1;
  next();
};
async function registerRoutes(app2) {
  app2.post("/api/auth/register", async (req, res) => {
    try {
      const userData = insertUserSchema.parse(req.body);
      const existingUser = await storage.getUserByEmail(userData.email);
      if (existingUser) {
        return res.status(400).json({ message: "User already exists" });
      }
      const hashedPassword = await bcrypt.hash(userData.password, 10);
      const user = await storage.createUser({
        ...userData,
        password: hashedPassword
      });
      const token = jwt.sign({ userId: user.id }, JWT_SECRET, { expiresIn: "24h" });
      res.json({
        token,
        user: {
          id: user.id,
          username: user.username,
          email: user.email,
          firstName: user.firstName,
          lastName: user.lastName,
          profileImage: user.profileImage
        }
      });
    } catch (error) {
      res.status(400).json({ message: error.message });
    }
  });
  app2.post("/api/auth/login", async (req, res) => {
    try {
      const { email } = req.body;
      const user = await storage.getUserByEmail(email);
      if (!user) {
        return res.status(400).json({ message: "No account found with that email address" });
      }
      const token = jwt.sign({ userId: user.id }, JWT_SECRET, { expiresIn: "24h" });
      res.json({
        token,
        user: {
          id: user.id,
          username: user.username,
          email: user.email,
          firstName: user.firstName,
          lastName: user.lastName,
          profileImage: user.profileImage
        }
      });
    } catch (error) {
      res.status(400).json({ message: error.message });
    }
  });
  app2.get("/api/auth/me", async (req, res) => {
    try {
      const user = await storage.getUser(1);
      if (!user) {
        return res.status(404).json({ message: "User not found" });
      }
      res.json({
        id: user.id,
        username: user.username,
        email: user.email,
        firstName: user.firstName,
        lastName: user.lastName,
        profileImage: user.profileImage
      });
    } catch (error) {
      res.status(500).json({ message: error.message });
    }
  });
  app2.get("/api/exercises", async (req, res) => {
    try {
      const { enderExerciseDatabase: enderExerciseDatabase3 } = await Promise.resolve().then(() => (init_ender_real_exercises(), ender_real_exercises_exports));
      const { category, workoutType, equipment } = req.query;
      let exercises = enderExerciseDatabase3;
      if (category) {
        exercises = exercises.filter((ex) => ex.category === category);
      }
      if (workoutType) {
        exercises = exercises.filter((ex) => ex.workoutType === workoutType);
      }
      if (equipment) {
        exercises = exercises.filter((ex) => ex.equipmentType === equipment);
      }
      res.json(exercises);
    } catch (error) {
      res.status(500).json({ message: error.message });
    }
  });
  app2.get("/api/workouts", async (req, res) => {
    try {
      const { category, difficulty } = req.query;
      const workouts2 = await storage.getWorkouts({
        category,
        difficulty
      });
      res.json(workouts2);
    } catch (error) {
      res.status(500).json({ message: error.message });
    }
  });
  app2.get("/api/workouts/:id", async (req, res) => {
    try {
      const id = parseInt(req.params.id);
      const workout = await storage.getWorkout(id);
      if (!workout) {
        return res.status(404).json({ message: "Workout not found" });
      }
      res.json(workout);
    } catch (error) {
      res.status(500).json({ message: error.message });
    }
  });
  app2.post("/api/workouts", authenticateToken, async (req, res) => {
    try {
      const workoutData = insertWorkoutSchema.parse({
        ...req.body,
        userId: req.userId
      });
      const workout = await storage.createWorkout(workoutData);
      res.json(workout);
    } catch (error) {
      res.status(400).json({ message: error.message });
    }
  });
  app2.get("/api/exercises/:exerciseName/previous", authenticateToken, async (req, res) => {
    try {
      const { exerciseName } = req.params;
      const userId = req.userId;
      const sessions = await storage.getWorkoutSessions(userId);
      for (const session of sessions.reverse()) {
        if (session.exercises) {
          const exerciseData = session.exercises.find((ex) => ex.exerciseName === exerciseName);
          if (exerciseData && exerciseData.sets && exerciseData.sets.length > 0) {
            const lastSet = exerciseData.sets[exerciseData.sets.length - 1];
            const targets = {
              weight: lastSet.weight ? Math.ceil(lastSet.weight * 1.03) : lastSet.weight,
              reps: lastSet.reps ? Math.ceil(lastSet.reps * 1.03) : lastSet.reps,
              previous: {
                weight: lastSet.weight,
                reps: lastSet.reps,
                formScore: lastSet.formScore,
                date: session.startTime
              }
            };
            return res.json(targets);
          }
        }
      }
      res.json({ weight: null, reps: null, previous: null });
    } catch (error) {
      res.status(500).json({ message: error.message });
    }
  });
  app2.get("/api/workout-sessions", authenticateToken, async (req, res) => {
    try {
      const sessions = await storage.getWorkoutSessions(req.userId);
      res.json(sessions);
    } catch (error) {
      res.status(500).json({ message: error.message });
    }
  });
  app2.post("/api/workout-sessions", authenticateToken, async (req, res) => {
    try {
      const sessionData = insertWorkoutSessionSchema.parse({
        ...req.body,
        userId: req.userId
      });
      const session = await storage.createWorkoutSession(sessionData);
      res.json(session);
    } catch (error) {
      res.status(400).json({ message: error.message });
    }
  });
  app2.patch("/api/workout-sessions/:id", authenticateToken, async (req, res) => {
    try {
      const id = parseInt(req.params.id);
      const updates = req.body;
      const session = await storage.updateWorkoutSession(id, updates);
      if (!session) {
        return res.status(404).json({ message: "Session not found" });
      }
      res.json(session);
    } catch (error) {
      res.status(500).json({ message: error.message });
    }
  });
  app2.get("/api/user-stats", authenticateToken, async (req, res) => {
    try {
      const limit = req.query.limit ? parseInt(req.query.limit) : void 0;
      const stats = await storage.getUserStats(req.userId, limit);
      res.json(stats);
    } catch (error) {
      res.status(500).json({ message: error.message });
    }
  });
  app2.get("/api/user-stats/latest", authenticateToken, async (req, res) => {
    try {
      const stats = await storage.getLatestUserStats(req.userId);
      res.json(stats);
    } catch (error) {
      res.status(500).json({ message: error.message });
    }
  });
  app2.post("/api/user-stats", authenticateToken, async (req, res) => {
    try {
      const statsData = insertUserStatsSchema.parse({
        ...req.body,
        userId: req.userId
      });
      const stats = await storage.createUserStats(statsData);
      res.json(stats);
    } catch (error) {
      res.status(400).json({ message: error.message });
    }
  });
  app2.get("/api/achievements", authenticateToken, async (req, res) => {
    try {
      const achievements2 = await storage.getUserAchievements(req.userId);
      res.json(achievements2);
    } catch (error) {
      res.status(500).json({ message: error.message });
    }
  });
  app2.post("/api/achievements", authenticateToken, async (req, res) => {
    try {
      const achievementData = insertAchievementSchema.parse({
        ...req.body,
        userId: req.userId
      });
      const achievement = await storage.createAchievement(achievementData);
      res.json(achievement);
    } catch (error) {
      res.status(400).json({ message: error.message });
    }
  });
  app2.get("/api/challenges", async (req, res) => {
    try {
      const challenges2 = await storage.getActiveChallenges();
      res.json(challenges2);
    } catch (error) {
      res.status(500).json({ message: error.message });
    }
  });
  app2.get("/api/challenges/my-participations", authenticateToken, async (req, res) => {
    try {
      const participations = await storage.getChallengeParticipations(req.userId);
      res.json(participations);
    } catch (error) {
      res.status(500).json({ message: error.message });
    }
  });
  app2.post("/api/challenges/:id/join", authenticateToken, async (req, res) => {
    try {
      const challengeId = parseInt(req.params.id);
      const participation = await storage.joinChallenge({
        userId: req.userId,
        challengeId,
        progress: 0,
        isCompleted: false
      });
      res.json(participation);
    } catch (error) {
      res.status(400).json({ message: error.message });
    }
  });
  app2.patch("/api/challenges/:id/progress", authenticateToken, async (req, res) => {
    try {
      const challengeId = parseInt(req.params.id);
      const { progress } = req.body;
      const participation = await storage.updateChallengeProgress(req.userId, challengeId, progress);
      if (!participation) {
        return res.status(404).json({ message: "Participation not found" });
      }
      res.json(participation);
    } catch (error) {
      res.status(500).json({ message: error.message });
    }
  });
  app2.get("/api/social/posts", async (req, res) => {
    try {
      const limit = req.query.limit ? parseInt(req.query.limit) : void 0;
      const posts = await storage.getSocialPosts(limit);
      res.json(posts);
    } catch (error) {
      res.status(500).json({ message: error.message });
    }
  });
  app2.post("/api/social/posts", authenticateToken, async (req, res) => {
    try {
      const postData = insertSocialPostSchema.parse({
        ...req.body,
        userId: req.userId
      });
      const post = await storage.createSocialPost(postData);
      res.json(post);
    } catch (error) {
      res.status(400).json({ message: error.message });
    }
  });
  app2.post("/api/social/posts/:id/like", authenticateToken, async (req, res) => {
    try {
      const postId = parseInt(req.params.id);
      const success = await storage.likeSocialPost(postId);
      if (!success) {
        return res.status(404).json({ message: "Post not found" });
      }
      res.json({ success: true });
    } catch (error) {
      res.status(500).json({ message: error.message });
    }
  });
  const httpServer = createServer(app2);
  return httpServer;
}

// server/vite.ts
import express from "express";
import fs from "fs";
import path2 from "path";
import { createServer as createViteServer, createLogger } from "vite";

// vite.config.ts
import { defineConfig } from "vite";
import react from "@vitejs/plugin-react";
import path from "path";
import runtimeErrorOverlay from "@replit/vite-plugin-runtime-error-modal";
import { fileURLToPath } from "url";
var __dirname = path.dirname(fileURLToPath(import.meta.url));
var vite_config_default = defineConfig({
  plugins: [
    react(),
    runtimeErrorOverlay()
  ],
  resolve: {
    alias: {
      "@": path.resolve(__dirname, "client", "src"),
      "@shared": path.resolve(__dirname, "shared"),
      "@assets": path.resolve(__dirname, "attached_assets")
    }
  },
  root: path.resolve(__dirname, "client"),
  build: {
    outDir: path.resolve(__dirname, "dist/public"),
    emptyOutDir: true
  }
});

// server/vite.ts
import { nanoid } from "nanoid";
var viteLogger = createLogger();
function log(message, source = "express") {
  const formattedTime = (/* @__PURE__ */ new Date()).toLocaleTimeString("en-US", {
    hour: "numeric",
    minute: "2-digit",
    second: "2-digit",
    hour12: true
  });
  console.log(`${formattedTime} [${source}] ${message}`);
}
async function setupVite(app2, server) {
  const serverOptions = {
    middlewareMode: true,
    hmr: { server },
    allowedHosts: true
  };
  const vite = await createViteServer({
    ...vite_config_default,
    configFile: false,
    customLogger: {
      ...viteLogger,
      error: (msg, options) => {
        viteLogger.error(msg, options);
        process.exit(1);
      }
    },
    server: serverOptions,
    appType: "custom"
  });
  app2.use(vite.middlewares);
  app2.use("*", async (req, res, next) => {
    const url = req.originalUrl;
    try {
      const clientTemplate = path2.resolve(
        path2.dirname(new URL(import.meta.url).pathname),
        "..",
        "client",
        "index.html"
      );
      let template = await fs.promises.readFile(clientTemplate, "utf-8");
      template = template.replace(
        `src="/src/main.tsx"`,
        `src="/src/main.tsx?v=${nanoid()}"`
      );
      const page = await vite.transformIndexHtml(url, template);
      res.status(200).set({ "Content-Type": "text/html" }).end(page);
    } catch (e) {
      vite.ssrFixStacktrace(e);
      next(e);
    }
  });
}
function serveStatic(app2) {
  const distPath = path2.resolve(path2.dirname(new URL(import.meta.url).pathname), "public");
  if (!fs.existsSync(distPath)) {
    throw new Error(
      `Could not find the build directory: ${distPath}, make sure to build the client first`
    );
  }
  app2.use(express.static(distPath));
  app2.use("*", (_req, res) => {
    res.sendFile(path2.resolve(distPath, "index.html"));
  });
}

// server/index.ts
var app = express2();
app.use(express2.json());
app.use(express2.urlencoded({ extended: false }));
app.use((req, res, next) => {
  const start = Date.now();
  const path3 = req.path;
  let capturedJsonResponse = void 0;
  const originalResJson = res.json;
  res.json = function(bodyJson, ...args) {
    capturedJsonResponse = bodyJson;
    return originalResJson.apply(res, [bodyJson, ...args]);
  };
  res.on("finish", () => {
    const duration = Date.now() - start;
    if (path3.startsWith("/api")) {
      let logLine = `${req.method} ${path3} ${res.statusCode} in ${duration}ms`;
      if (capturedJsonResponse) {
        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;
      }
      if (logLine.length > 80) {
        logLine = logLine.slice(0, 79) + "\u2026";
      }
      log(logLine);
    }
  });
  next();
});
(async () => {
  const server = await registerRoutes(app);
  app.use((err, _req, res, _next) => {
    const status = err.status || err.statusCode || 500;
    const message = err.message || "Internal Server Error";
    res.status(status).json({ message });
    throw err;
  });
  if (app.get("env") === "development") {
    await setupVite(app, server);
  } else {
    serveStatic(app);
  }
  const port = 5e3;
  server.listen({
    port,
    host: "0.0.0.0",
    reusePort: true
  }, () => {
    log(`serving on port ${port}`);
  });
})();

</file>
<file path="FitForge/docs/INTEGRATION.md">
# FitnessForge + Advanced Exercise Database Integration

## Overview
This branch integrates a professional-grade exercise database (180+ exercises with detailed muscle targeting) into FitnessForge's modern tech stack, creating the ultimate fitness platform.

## What We're Combining

### From Your Excel Workout Log
- **180+ categorized exercises** with equipment variations
- **Detailed muscle percentage breakdowns** (e.g., Bench Press: 60% Chest, 30% Triceps, 10% Shoulders)
- **Advanced analytics formulas** (1RM calculations, push/pull ratios, volume tracking)
- **Exercise categorization** by equipment, movement pattern, and muscle groups
- **Progressive overload tracking** with personal records
- **Workout balance metrics** (upper/lower, push/pull, compound/isolation)

### From Replit's FitnessForge
- **Modern React/TypeScript architecture**
- **Real-time UI with animations**
- **Authentication and user management**
- **Social features and gamification**
- **AI-ready architecture** for form analysis
- **Professional UI component library**
- **PostgreSQL with Drizzle ORM**

## Enhanced Features

### 1. Professional Exercise Library
```typescript
{
  exerciseName: "Bench Press",
  primaryMuscles: [{ muscle: "Chest", percentage: 60 }],
  secondaryMuscles: [{ muscle: "Triceps", percentage: 30 }],
  variations: ["Wide Grip", "Close Grip", "Pause Rep"],
  equipment: ["Barbell", "Bench", "Rack"]
}
```

### 2. Advanced Performance Tracking
- **Detailed set logging**: Weight, reps, rest time, form score, tempo, RPE
- **Volume calculations** with muscle group distribution
- **Personal record tracking** (1RM, 3RM, 5RM, max reps)
- **Progressive overload monitoring**

### 3. Intelligent Analytics
- **Push/Pull balance ratio**
- **Upper/Lower body distribution**
- **Compound vs Isolation ratio**
- **Muscle group frequency analysis**
- **Recovery recommendations**

### 4. Workout Templates
- Pre-built programs based on scientific principles
- Customizable based on equipment availability
- Progressive difficulty scaling
- Muscle group targeting

## Database Schema Enhancements

### New Tables
- `exercise_library` - Comprehensive exercise database
- `workout_templates` - Structured workout programs
- `enhanced_workout_sessions` - Detailed performance tracking
- `personal_records` - PR tracking by exercise type
- `workout_analytics` - Advanced metrics and insights
- `exercise_history` - Progression over time

### Key Improvements
1. **Structured exercise data** instead of generic JSON
2. **Muscle percentage tracking** for accurate volume distribution
3. **Equipment categorization** for gym/home workout filtering
4. **Performance metrics** beyond basic sets/reps
5. **Analytics dashboard** with actionable insights

## Implementation Benefits

### For Users
- **Scientific training approach** with proper muscle targeting
- **Prevent imbalances** with push/pull and muscle group tracking
- **Optimize recovery** with frequency analysis
- **Track real progress** with multiple PR types
- **Get personalized recommendations** based on data

### For Developers
- **Type-safe exercise data** with TypeScript
- **Reusable analytics functions**
- **Scalable architecture** for future AI integration
- **Clean separation** of concerns
- **Migration path** from Excel to production database

## Migration Strategy

### Phase 1: Data Import
- Import 180+ exercises with categorization
- Validate muscle percentage data
- Set up equipment relationships

### Phase 2: Enhanced Tracking
- Update session logging to capture detailed metrics
- Implement volume calculations
- Add personal record detection

### Phase 3: Analytics Integration
- Port Excel formulas to TypeScript
- Create real-time dashboard components
- Add progression visualizations

### Phase 4: AI Enhancement
- Use muscle targeting data for form recommendations
- Predict optimal workout timing
- Generate personalized programs

## Example Use Cases

### 1. Balanced Program Generation
```typescript
// Generate push day with proper muscle distribution
const pushExercises = exercises.filter(e => 
  e.movementType === 'Push' && 
  e.primaryMuscles.some(m => ['Chest', 'Shoulders', 'Triceps'].includes(m.muscle))
);
```

### 2. Recovery Tracking
```typescript
// Check if muscle group needs more recovery
const lastChestWorkout = getLastWorkoutForMuscle('Chest');
const daysSinceChest = daysSince(lastChestWorkout);
const chestRecoveryNeeded = daysSinceChest < 48; // 48hr minimum
```

### 3. Progressive Overload
```typescript
// Suggest weight increase based on performance
const lastBenchSets = getLastExerciseSets('Bench Press');
if (allSetsCompletedWithGoodForm(lastBenchSets)) {
  suggestWeightIncrease(2.5); // kg
}
```

## Future Enhancements

### Computer Vision Integration
- Use exercise data to validate form
- Real-time rep counting with exercise recognition
- Automatic exercise logging

### Machine Learning
- Predict optimal training volume
- Personalized exercise recommendations
- Injury risk assessment

### Social Features
- Share workouts with exact exercise details
- Challenge friends on specific lifts
- Form check community with exercise context

## Conclusion
This integration creates a fitness platform that combines the **sophistication of professional training logs** with the **modern UX of contemporary apps**. It's not just another fitness app - it's a scientific training tool wrapped in beautiful, functional design.
</file>
<file path="FitForge/scripts/add-sample-workouts.ts">
import { storage } from '../server/storage';

// Sample workouts based on your exercise preferences
const sampleWorkouts = [
  {
    userId: 1, // Will assign to test user or admin
    name: "Push Day - Chest Focus",
    description: "Comprehensive push day targeting chest, shoulders, and triceps with compound movements",
    category: "strength",
    difficulty: "intermediate", 
    duration: 75,
    calories: 420,
    equipment: ["barbell", "dumbbells", "bench", "rack"],
    exercises: [
      {
        name: "Bench Press",
        sets: 4,
        reps: 8,
        weight: 185,
        notes: "Focus on controlled eccentric, pause at chest"
      },
      {
        name: "Incline Bench Press",
        sets: 3, 
        reps: 10,
        weight: 155,
        notes: "30° incline, full range of motion"
      },
      {
        name: "Dumbbell Press",
        sets: 3,
        reps: 12,
        weight: 65,
        notes: "Squeeze at top, slow negative"
      },
      {
        name: "Shoulder Press", 
        sets: 3,
        reps: 10,
        weight: 115,
        notes: "Military style, strict form"
      },
      {
        name: "Lateral Raises",
        sets: 3,
        reps: 15,
        weight: 20,
        notes: "Light weight, focus on mind-muscle connection"
      },
      {
        name: "Close Grip Bench Press",
        sets: 3,
        reps: 10,
        weight: 135,
        notes: "Tricep focused, hands shoulder-width apart"
      }
    ]
  },
  {
    userId: 1,
    name: "Pull Day - Back Focus",
    description: "Complete pull day for back, biceps, and rear delts with heavy compounds",
    category: "strength",
    difficulty: "advanced",
    duration: 80,
    calories: 450,
    equipment: ["barbell", "pull-up bar", "cable machine"],
    exercises: [
      {
        name: "Deadlift",
        sets: 4,
        reps: 5,
        weight: 315,
        notes: "Conventional stance, maintain neutral spine"
      },
      {
        name: "Pull-ups",
        sets: 4,
        reps: 10,
        weight: 0,
        notes: "Full dead hang, chin over bar"
      },
      {
        name: "Bent Over Row",
        sets: 4,
        reps: 8,
        weight: 185,
        notes: "45° torso angle, squeeze shoulder blades"
      },
      {
        name: "T-Bar Row",
        sets: 3,
        reps: 12,
        weight: 90,
        notes: "Wide grip, focus on rhomboids"
      },
      {
        name: "Face Pulls",
        sets: 3,
        reps: 20,
        weight: 40,
        notes: "High rep, external rotation focus"
      },
      {
        name: "Barbell Curl",
        sets: 3,
        reps: 10,
        weight: 85,
        notes: "Strict form, no swinging"
      }
    ]
  },
  {
    userId: 1,
    name: "Leg Day - Compound Focus", 
    description: "Heavy compound movements for maximum leg development",
    category: "strength",
    difficulty: "advanced",
    duration: 60,
    calories: 380,
    equipment: ["barbell", "rack", "dumbbells"],
    exercises: [
      {
        name: "Squat",
        sets: 5,
        reps: 6,
        weight: 275,
        notes: "Below parallel, drive through heels"
      },
      {
        name: "Romanian Deadlift",
        sets: 4,
        reps: 8,
        weight: 225,
        notes: "Hinge at hips, feel hamstring stretch"
      },
      {
        name: "Goblet Squat",
        sets: 3,
        reps: 15,
        weight: 50,
        notes: "Goblet hold, ass to grass depth"
      },
      {
        name: "Calf Raises",
        sets: 4,
        reps: 20,
        weight: 45,
        notes: "Full range, pause at top"
      }
    ]
  }
];

async function addSampleWorkouts() {
  console.log("💪 Adding sample workout templates...");
  
  try {
    for (const workout of sampleWorkouts) {
      const created = await storage.createWorkout(workout as any);
      console.log(`✓ Created: ${created.name}`);
    }
    
    console.log("🎉 Sample workouts added successfully!");
    console.log("📋 Available workouts:");
    
    const allWorkouts = await storage.getWorkouts();
    allWorkouts.forEach(w => {
      console.log(`   - ${w.name} (${w.difficulty}, ${w.duration}min)`);
    });
    
  } catch (error) {
    console.error("❌ Failed to add sample workouts:", error);
  }
}

addSampleWorkouts();
</file>
<file path="FitForge/scripts/create-ender-profile.ts">
// Ender's profile with workout formulas referencing global exercise library IDs
import { enderExerciseDatabase } from './ender-real-exercises.js';

// Map exercise names to their future database IDs (1-indexed)
const exerciseNameToId: Record<string, number> = {};
enderExerciseDatabase.forEach((exercise, index) => {
  exerciseNameToId[exercise.exerciseName] = index + 1;
});

// Ender's complete user profile
export const enderProfile = {
  // Basic profile info
  username: "ender",
  email: "endersclarity@gmail.com", 
  firstName: "Ender",
  lastName: "Smith",
  
  // Training background
  experienceLevel: "Advanced",
  primaryGoals: ["Strength", "Hypertrophy", "Functional"],
  preferredEquipment: ["Barbell", "Dumbbell", "Kettlebell", "TRX", "Bodyweight"],
  
  // Workout formulas - exercise IDs organized by workout type
  workoutFormulas: {
    "Abs": [
      exerciseNameToId["Planks"],              // 1
      exerciseNameToId["Spider Planks"],        // 2  
      exerciseNameToId["Bench Situps"],         // 3
      exerciseNameToId["Hanging Knee Raises"]   // 4
    ],
    "BackBiceps": [
      exerciseNameToId["Shoulder Shrugs"],      // 5
      exerciseNameToId["T Row"],                // 6
      exerciseNameToId["Incline Hammer Curl"],  // 7
      exerciseNameToId["Neutral Grip Pull-ups"], // 8
      exerciseNameToId["Bent Over Rows"]        // 9
    ],
    "ChestTriceps": [
      exerciseNameToId["Bench Press"],          // 10
      exerciseNameToId["TRX Reverse Flys"],     // 11
      exerciseNameToId["Tricep Extension"],     // 12
      exerciseNameToId["TRX Pushup"],          // 13
      exerciseNameToId["Incline Bench Press"], // 14
      exerciseNameToId["Shoulder Press"],       // 15
      exerciseNameToId["Dips"]                 // 16
    ],
    "Legs": [
      exerciseNameToId["Goblet Squats"],        // 17
      exerciseNameToId["Dead Lifts"],           // 18
      exerciseNameToId["Calf Raises"],          // 19
      exerciseNameToId["Glute Bridges"],        // 20
      exerciseNameToId["Kettlebell Swings"]     // 21
    ]
  },
  
  // Personal exercise preferences by exercise ID
  exercisePreferences: {
    // ABS
    [exerciseNameToId["Planks"]]: { 
      weight: "bodyweight", reps: 1, sets: 3, restTime: "0:30",
      notes: "Hold for 60+ seconds, focus on form" 
    },
    [exerciseNameToId["Spider Planks"]]: { 
      weight: 1, reps: 2, sets: 3, restTime: "1:00",
      notes: "Bench variation, controlled movement" 
    },
    [exerciseNameToId["Bench Situps"]]: { 
      weight: 5, reps: 3, sets: 3, restTime: "1:30",
      notes: "TRX assisted, full range of motion" 
    },
    [exerciseNameToId["Hanging Knee Raises"]]: { 
      weight: 10, reps: 4, sets: 3, restTime: "2:00",
      notes: "Focus on controlled negatives" 
    },
    
    // BACK & BICEPS
    [exerciseNameToId["Shoulder Shrugs"]]: { 
      weight: 15, reps: 5, sets: 3, restTime: "2:30",
      notes: "Dumbbell variation, squeeze at top" 
    },
    [exerciseNameToId["T Row"]]: { 
      weight: 20, reps: 6, sets: 3, restTime: "3:00",
      notes: "OYA setup, focus on lat activation" 
    },
    [exerciseNameToId["Incline Hammer Curl"]]: { 
      weight: 25, reps: 7, sets: 3, restTime: "3:30",
      notes: "Pull-up bar alternative, strict form" 
    },
    [exerciseNameToId["Neutral Grip Pull-ups"]]: { 
      weight: 30, reps: 8, sets: 3, restTime: "4:00",
      notes: "Countertop variation when needed" 
    },
    [exerciseNameToId["Bent Over Rows"]]: { 
      weight: 35, reps: 9, sets: 3, restTime: "4:30",
      notes: "Plybox setup, barbell preferred" 
    },
    
    // CHEST & TRICEPS  
    [exerciseNameToId["Bench Press"]]: { 
      weight: 80, reps: 18, sets: 4, restTime: "9:00",
      notes: "Main compound movement, progressive overload" 
    },
    [exerciseNameToId["TRX Reverse Flys"]]: { 
      weight: 85, reps: 19, sets: 3, restTime: "9:30",
      notes: "Rear delt focus, controlled movement" 
    },
    [exerciseNameToId["Tricep Extension"]]: { 
      weight: 90, reps: 20, sets: 3, restTime: "10:00",
      notes: "Dumbbell variation, full range" 
    },
    [exerciseNameToId["TRX Pushup"]]: { 
      weight: 95, reps: 21, sets: 3, restTime: "10:30",
      notes: "Instability training, core engagement" 
    },
    [exerciseNameToId["Incline Bench Press"]]: { 
      weight: 125, reps: 27, sets: 4, restTime: "11:00",
      notes: "Upper chest focus, 30-45 degree angle" 
    },
    [exerciseNameToId["Shoulder Press"]]: { 
      weight: 130, reps: 28, sets: 3, restTime: "11:30",
      notes: "Barbell preferred, strict press" 
    },
    [exerciseNameToId["Dips"]]: { 
      weight: 135, reps: 29, sets: 3, restTime: "12:00",
      notes: "Bodyweight, focus on tricep activation" 
    },
    
    // LEGS
    [exerciseNameToId["Goblet Squats"]]: { 
      weight: 150, reps: 32, sets: 3, restTime: "12:30",
      notes: "Kettlebell variation, full depth" 
    },
    [exerciseNameToId["Dead Lifts"]]: { 
      weight: 155, reps: 33, sets: 4, restTime: "13:00",
      notes: "Main compound movement, proper form critical" 
    },
    [exerciseNameToId["Calf Raises"]]: { 
      weight: 160, reps: 34, sets: 3, restTime: "13:30",
      notes: "Bodyweight, focus on full range" 
    },
    [exerciseNameToId["Glute Bridges"]]: { 
      weight: 165, reps: 35, sets: 3, restTime: "14:00",
      notes: "Bodyweight variation, glute activation" 
    },
    [exerciseNameToId["Kettlebell Swings"]]: { 
      weight: 180, reps: 38, sets: 3, restTime: "14:30",
      notes: "Full body movement, hip hinge focus" 
    }
  }
};

// Workout routine queries for Ender's profile
export const enderWorkoutQueries = {
  getAbsWorkout: () => enderProfile.workoutFormulas["Abs"],
  getBackBicepsWorkout: () => enderProfile.workoutFormulas["BackBiceps"], 
  getChestTricepsWorkout: () => enderProfile.workoutFormulas["ChestTriceps"],
  getLegsWorkout: () => enderProfile.workoutFormulas["Legs"],
  
  // Get exercise preferences for a specific exercise ID
  getExercisePrefs: (exerciseId: number) => enderProfile.exercisePreferences[exerciseId],
  
  // Get full workout with exercise details by workout type
  getFullWorkout: (workoutType: keyof typeof enderProfile.workoutFormulas) => {
    const exerciseIds = enderProfile.workoutFormulas[workoutType];
    return exerciseIds.map(id => ({
      exerciseId: id,
      preferences: enderProfile.exercisePreferences[id]
    }));
  }
};

console.log("Ender's Profile Summary:");
console.log("Workout Types:", Object.keys(enderProfile.workoutFormulas));
Object.entries(enderProfile.workoutFormulas).forEach(([type, exercises]) => {
  console.log(`${type}: ${exercises.length} exercises`);
});
console.log(`Total exercise preferences: ${Object.keys(enderProfile.exercisePreferences).length}`);
</file>
<file path="FitForge/scripts/ender-real-exercises.ts">
// Ender's Real Exercise Database - Parsed from Excel data
export const enderExerciseDatabase = [
  // ABS WORKOUT
  {
    exerciseName: "Planks",
    equipmentType: "Bodyweight",
    category: "Isolation",
    movementType: "Core",
    workoutType: "Abs",
    variation: "A",
    weight: "Bodyweight",
    restTime: "0:30",
    reps: 1,
    primaryMuscles: [
      { muscle: "Rectus Abdominis", percentage: 65 },
      { muscle: "Transverse Abdominis", percentage: 40 }
    ],
    secondaryMuscles: [
      { muscle: "Obliques", percentage: 20 },
      { muscle: "Erector Spinae", percentage: 10 }
    ],
    equipment: ["None"],
    difficulty: "Beginner"
  },
  {
    exerciseName: "Spider Planks",
    equipmentType: "Bench",
    category: "Isolation", 
    movementType: "Core",
    workoutType: "Abs",
    variation: "A",
    weight: 1,
    restTime: "1:00",
    reps: 2,
    primaryMuscles: [
      { muscle: "Rectus Abdominis", percentage: 60 },
      { muscle: "Transverse Abdominis", percentage: 30 }
    ],
    secondaryMuscles: [
      { muscle: "Obliques", percentage: 30 },
      { muscle: "Erector Spinae", percentage: 10 },
      { muscle: "Shoulders", percentage: 10 }
    ],
    equipment: ["Bench"],
    difficulty: "Intermediate"
  },
  {
    exerciseName: "Bench Situps",
    equipmentType: "TRX",
    category: "Isolation",
    movementType: "Core", 
    workoutType: "Abs",
    variation: "A",
    weight: 5,
    restTime: "1:30",
    reps: 3,
    primaryMuscles: [
      { muscle: "Rectus Abdominis", percentage: 60 }
    ],
    secondaryMuscles: [
      { muscle: "Hip Flexors", percentage: 25 },
      { muscle: "Obliques", percentage: 15 }
    ],
    equipment: ["TRX", "Bench"],
    difficulty: "Intermediate"
  },
  {
    exerciseName: "Hanging Knee Raises",
    equipmentType: "Kettlebell",
    category: "Isolation",
    movementType: "Core",
    workoutType: "Abs", 
    variation: "A",
    weight: 10,
    restTime: "2:00",
    reps: 4,
    primaryMuscles: [
      { muscle: "Rectus Abdominis", percentage: 80 }
    ],
    secondaryMuscles: [
      { muscle: "Hip Flexors", percentage: 23 },
      { muscle: "Obliques", percentage: 40 },
      { muscle: "Grip/Forearms", percentage: 10 }
    ],
    equipment: ["Pull-up Bar"],
    difficulty: "Intermediate"
  },

  // BACK & BICEPS WORKOUT
  {
    exerciseName: "Shoulder Shrugs",
    equipmentType: "Dumbbell",
    category: "Isolation",
    movementType: "Pull",
    workoutType: "BackBiceps",
    variation: "A/B",
    weight: 15,
    restTime: "2:30", 
    reps: 5,
    primaryMuscles: [
      { muscle: "Trapezius", percentage: 80 }
    ],
    secondaryMuscles: [
      { muscle: "Levator Scapulae", percentage: 20 }
    ],
    equipment: ["Dumbbells"],
    difficulty: "Beginner"
  },
  {
    exerciseName: "T Row",
    equipmentType: "OYA",
    category: "Compound",
    movementType: "Pull",
    workoutType: "BackBiceps",
    variation: "B", 
    weight: 20,
    restTime: "3:00",
    reps: 6,
    primaryMuscles: [
      { muscle: "Latissimus Dorsi", percentage: 85 }
    ],
    secondaryMuscles: [
      { muscle: "Rhomboids", percentage: 25 },
      { muscle: "Trapezius", percentage: 15 },
      { muscle: "Biceps Brachii", percentage: 12 },
      { muscle: "Grip/Forearms", percentage: 8 }
    ],
    equipment: ["T-Bar", "Barbell"],
    difficulty: "Intermediate"
  },
  {
    exerciseName: "Incline Hammer Curl",
    equipmentType: "Pull-up Bar",
    category: "Isolation",
    movementType: "Pull",
    workoutType: "BackBiceps",
    variation: "B",
    weight: 25,
    restTime: "3:30",
    reps: 7,
    primaryMuscles: [
      { muscle: "Biceps Brachii", percentage: 70 }
    ],
    secondaryMuscles: [
      { muscle: "Brachialis", percentage: 20 },
      { muscle: "Brachioradialis", percentage: 10 },
      { muscle: "Grip/Forearms", percentage: 10 }
    ],
    equipment: ["Dumbbells", "Incline Bench"],
    difficulty: "Beginner"
  },
  {
    exerciseName: "Neutral Grip Pull-ups",
    equipmentType: "Countertop",
    category: "Compound",
    movementType: "Pull",
    workoutType: "BackBiceps",
    variation: "B",
    weight: 30,
    restTime: "4:00",
    reps: 8,
    primaryMuscles: [
      { muscle: "Latissimus Dorsi", percentage: 85 }
    ],
    secondaryMuscles: [
      { muscle: "Biceps Brachii", percentage: 25 },
      { muscle: "Rhomboids", percentage: 15 },
      { muscle: "Trapezius", percentage: 15 },
      { muscle: "Grip/Forearms", percentage: 10 }
    ],
    equipment: ["Pull-up Bar"],
    difficulty: "Intermediate"
  },
  {
    exerciseName: "Bent Over Rows",
    equipmentType: "Plybox",
    category: "Compound",
    movementType: "Pull",
    workoutType: "BackBiceps",
    variation: "A",
    weight: 35,
    restTime: "4:30",
    reps: 9,
    primaryMuscles: [
      { muscle: "Latissimus Dorsi", percentage: 90 }
    ],
    secondaryMuscles: [
      { muscle: "Rhomboids", percentage: 25 },
      { muscle: "Trapezius", percentage: 20 },
      { muscle: "Biceps Brachii", percentage: 15 },
      { muscle: "Grip/Forearms", percentage: 10 }
    ],
    equipment: ["Barbell", "Dumbbells"],
    difficulty: "Intermediate"
  },
  {
    exerciseName: "Row",
    equipmentType: "Cable",
    category: "Compound",
    movementType: "Pull",
    workoutType: "BackBiceps",
    variation: "B",
    weight: 40,
    restTime: "5:00",
    reps: 10,
    primaryMuscles: [
      { muscle: "Latissimus Dorsi", percentage: 85 }
    ],
    secondaryMuscles: [
      { muscle: "Rhomboids", percentage: 25 },
      { muscle: "Trapezius", percentage: 20 },
      { muscle: "Biceps Brachii", percentage: 15 },
      { muscle: "Core", percentage: 10 },
      { muscle: "Grip/Forearms", percentage: 10 }
    ],
    equipment: ["Cable Machine", "Resistance Band"],
    difficulty: "Intermediate"
  },
  {
    exerciseName: "Renegade Rows",
    equipmentType: "Dumbbell",
    category: "Compound",
    movementType: "Pull",
    workoutType: "BackBiceps",
    variation: "A/B",
    weight: 45,
    restTime: "5:30",
    reps: 11,
    primaryMuscles: [
      { muscle: "Latissimus Dorsi", percentage: 70 }
    ],
    secondaryMuscles: [
      { muscle: "Rhomboids", percentage: 25 },
      { muscle: "Trapezius", percentage: 20 },
      { muscle: "Biceps Brachii", percentage: 15 },
      { muscle: "Core", percentage: 30 },
      { muscle: "Grip/Forearms", percentage: 10 }
    ],
    equipment: ["Dumbbells"],
    difficulty: "Advanced"
  },
  {
    exerciseName: "Single Arm Upright Row",
    equipmentType: "Dumbbell",
    category: "Isolation",
    movementType: "Pull",
    workoutType: "BackBiceps",
    variation: "A/B",
    weight: 50,
    restTime: "6:00",
    reps: 12,
    primaryMuscles: [
      { muscle: "Trapezius", percentage: 60 },
      { muscle: "Deltoids", percentage: 40 }
    ],
    secondaryMuscles: [
      { muscle: "Biceps Brachii", percentage: 20 },
      { muscle: "Core", percentage: 15 },
      { muscle: "Grip/Forearms", percentage: 10 }
    ],
    equipment: ["Dumbbells"],
    difficulty: "Intermediate"
  },
  {
    exerciseName: "TRX Bicep Curl",
    equipmentType: "TRX",
    category: "Isolation",
    movementType: "Pull",
    workoutType: "BackBiceps",
    variation: "A/B",
    weight: 55,
    restTime: "6:30",
    reps: 13,
    primaryMuscles: [
      { muscle: "Biceps Brachii", percentage: 80 }
    ],
    secondaryMuscles: [
      { muscle: "Brachialis", percentage: 15 },
      { muscle: "Brachioradialis", percentage: 5 },
      { muscle: "Core", percentage: 15 },
      { muscle: "Grip/Forearms", percentage: 10 }
    ],
    equipment: ["TRX"],
    difficulty: "Intermediate"
  },
  {
    exerciseName: "Chin-Ups",
    equipmentType: "Pull-up Bar",
    category: "Compound",
    movementType: "Pull",
    workoutType: "BackBiceps",
    variation: "B",
    weight: 60,
    restTime: "7:00",
    reps: 14,
    primaryMuscles: [
      { muscle: "Latissimus Dorsi", percentage: 85 },
      { muscle: "Biceps Brachii", percentage: 30 }
    ],
    secondaryMuscles: [
      { muscle: "Rhomboids", percentage: 20 },
      { muscle: "Trapezius", percentage: 15 },
      { muscle: "Grip/Forearms", percentage: 10 }
    ],
    equipment: ["Pull-up Bar"],
    difficulty: "Intermediate"
  },
  {
    exerciseName: "Face Pull",
    equipmentType: "Cable",
    category: "Isolation",
    movementType: "Pull",
    workoutType: "BackBiceps",
    variation: "A/B",
    weight: 65,
    restTime: "7:30",
    reps: 15,
    primaryMuscles: [
      { muscle: "Trapezius", percentage: 50 },
      { muscle: "Rhomboids", percentage: 40 }
    ],
    secondaryMuscles: [
      { muscle: "Rear Deltoids", percentage: 40 },
      { muscle: "Rotator Cuff", percentage: 15 }
    ],
    equipment: ["Cable Machine", "Resistance Band"],
    difficulty: "Beginner"
  },
  {
    exerciseName: "Concentration Curl",
    equipmentType: "Dumbbell",
    category: "Isolation",
    movementType: "Pull",
    workoutType: "BackBiceps",
    variation: "A",
    weight: 70,
    restTime: "8:00",
    reps: 16,
    primaryMuscles: [
      { muscle: "Biceps Brachii", percentage: 90 }
    ],
    secondaryMuscles: [
      { muscle: "Brachialis", percentage: 10 },
      { muscle: "Grip/Forearms", percentage: 10 }
    ],
    equipment: ["Dumbbells"],
    difficulty: "Beginner"
  },
  {
    exerciseName: "Wide Grip Pullups",
    equipmentType: "Pull-up Bar",
    category: "Compound",
    movementType: "Pull",
    workoutType: "BackBiceps",
    variation: "A",
    weight: 75,
    restTime: "8:30",
    reps: 17,
    primaryMuscles: [
      { muscle: "Latissimus Dorsi", percentage: 90 }
    ],
    secondaryMuscles: [
      { muscle: "Biceps Brachii", percentage: 20 },
      { muscle: "Rhomboids", percentage: 15 },
      { muscle: "Trapezius", percentage: 15 },
      { muscle: "Grip/Forearms", percentage: 10 }
    ],
    equipment: ["Pull-up Bar"],
    difficulty: "Advanced"
  },

  // CHEST & TRICEPS WORKOUT  
  {
    exerciseName: "Bench Press",
    equipmentType: "Barbell",
    category: "Compound",
    movementType: "Push",
    workoutType: "ChestTriceps",
    variation: "A",
    weight: 80,
    restTime: "9:00",
    reps: 18,
    primaryMuscles: [
      { muscle: "Pectoralis Major", percentage: 85 }
    ],
    secondaryMuscles: [
      { muscle: "Triceps Brachii", percentage: 25 },
      { muscle: "Anterior Deltoids", percentage: 30 },
      { muscle: "Serratus Anterior", percentage: 10 }
    ],
    equipment: ["Barbell", "Bench"],
    difficulty: "Intermediate"
  },
  {
    exerciseName: "TRX Reverse Flys",
    equipmentType: "TRX",
    category: "Isolation",
    movementType: "Pull",
    workoutType: "ChestTriceps",
    variation: "A/B",
    weight: 85,
    restTime: "9:30",
    reps: 19,
    primaryMuscles: [
      { muscle: "Rhomboids", percentage: 70 }
    ],
    secondaryMuscles: [
      { muscle: "Trapezius", percentage: 40 },
      { muscle: "Rear Deltoids", percentage: 30 },
      { muscle: "Core", percentage: 15 }
    ],
    equipment: ["TRX"],
    difficulty: "Intermediate"
  },
  {
    exerciseName: "Tricep Extension",
    equipmentType: "Dumbbell",
    category: "Isolation",
    movementType: "Push",
    workoutType: "ChestTriceps",
    variation: "A",
    weight: 90,
    restTime: "10:00",
    reps: 20,
    primaryMuscles: [
      { muscle: "Triceps Brachii", percentage: 85 }
    ],
    secondaryMuscles: [
      { muscle: "Anconeus", percentage: 30 }
    ],
    equipment: ["Dumbbells"],
    difficulty: "Beginner"
  },
  {
    exerciseName: "TRX Pushup",
    equipmentType: "TRX",
    category: "Compound",
    movementType: "Push",
    workoutType: "ChestTriceps",
    variation: "A",
    weight: 95,
    reps: 21,
    primaryMuscles: [
      { muscle: "Pectoralis Major", percentage: 80 }
    ],
    secondaryMuscles: [
      { muscle: "Triceps Brachii", percentage: 30 },
      { muscle: "Anterior Deltoids", percentage: 25 },
      { muscle: "Core", percentage: 25 }
    ],
    equipment: ["TRX"],
    difficulty: "Intermediate"
  },
  {
    exerciseName: "Incline Bench Press",
    equipmentType: "Barbell",
    category: "Compound",
    movementType: "Push",
    workoutType: "ChestTriceps",
    variation: "B",
    weight: 125,
    reps: 27,
    primaryMuscles: [
      { muscle: "Pectoralis Major", percentage: 75 }
    ],
    secondaryMuscles: [
      { muscle: "Triceps Brachii", percentage: 25 },
      { muscle: "Anterior Deltoids", percentage: 35 },
      { muscle: "Serratus Anterior", percentage: 10 }
    ],
    equipment: ["Barbell", "Incline Bench"],
    difficulty: "Intermediate"
  },
  {
    exerciseName: "Shoulder Press",
    equipmentType: "Barbell",
    category: "Compound", 
    movementType: "Push",
    workoutType: "ChestTriceps",
    variation: "A/B",
    weight: 130,
    reps: 28,
    primaryMuscles: [
      { muscle: "Deltoids", percentage: 80 }
    ],
    secondaryMuscles: [
      { muscle: "Triceps Brachii", percentage: 30 },
      { muscle: "Trapezius", percentage: 20 },
      { muscle: "Serratus Anterior", percentage: 15 }
    ],
    equipment: ["Barbell", "Dumbbells"],
    difficulty: "Intermediate"
  },
  {
    exerciseName: "Dips",
    equipmentType: "Bodyweight",
    category: "Compound",
    movementType: "Push", 
    workoutType: "ChestTriceps",
    variation: "B",
    weight: 135,
    reps: 29,
    primaryMuscles: [
      { muscle: "Triceps Brachii", percentage: 70 }
    ],
    secondaryMuscles: [
      { muscle: "Pectoralis Major", percentage: 65 },
      { muscle: "Anterior Deltoids", percentage: 30 },
      { muscle: "Core", percentage: 10 }
    ],
    equipment: ["Dip Station", "Parallel Bars"],
    difficulty: "Intermediate"
  },
  {
    exerciseName: "Single Arm Bench",
    equipmentType: "Dumbbell",
    category: "Compound",
    movementType: "Push",
    workoutType: "ChestTriceps",
    variation: "A/B",
    weight: 100,
    reps: 22,
    primaryMuscles: [
      { muscle: "Pectoralis Major", percentage: 80 }
    ],
    secondaryMuscles: [
      { muscle: "Triceps Brachii", percentage: 25 },
      { muscle: "Anterior Deltoids", percentage: 25 },
      { muscle: "Core", percentage: 20 }
    ],
    equipment: ["Dumbbells", "Bench"],
    difficulty: "Intermediate"
  },
  {
    exerciseName: "Single Arm Incline",
    equipmentType: "Dumbbell",
    category: "Compound",
    movementType: "Push",
    workoutType: "ChestTriceps",
    variation: "A/B",
    weight: 105,
    reps: 23,
    primaryMuscles: [
      { muscle: "Pectoralis Major", percentage: 75 }
    ],
    secondaryMuscles: [
      { muscle: "Triceps Brachii", percentage: 25 },
      { muscle: "Anterior Deltoids", percentage: 30 },
      { muscle: "Core", percentage: 20 }
    ],
    equipment: ["Dumbbells", "Incline Bench"],
    difficulty: "Intermediate"
  },
  {
    exerciseName: "Pullover",
    equipmentType: "Dumbbell",
    category: "Isolation",
    movementType: "Pull",
    workoutType: "ChestTriceps",
    variation: "A/B",
    weight: 110,
    reps: 24,
    primaryMuscles: [
      { muscle: "Latissimus Dorsi", percentage: 65 },
      { muscle: "Pectoralis Major", percentage: 35 }
    ],
    secondaryMuscles: [
      { muscle: "Triceps Brachii", percentage: 25 },
      { muscle: "Serratus Anterior", percentage: 15 }
    ],
    equipment: ["Dumbbells", "Bench"],
    difficulty: "Intermediate"
  },
  {
    exerciseName: "Claps",
    equipmentType: "Bodyweight",
    category: "Explosive",
    movementType: "Push",
    workoutType: "ChestTriceps",
    variation: "A/B",
    weight: 115,
    reps: 25,
    primaryMuscles: [
      { muscle: "Pectoralis Major", percentage: 80 }
    ],
    secondaryMuscles: [
      { muscle: "Triceps Brachii", percentage: 20 },
      { muscle: "Anterior Deltoids", percentage: 20 }
    ],
    equipment: ["None"],
    difficulty: "Advanced"
  },
  {
    exerciseName: "Pushup",
    equipmentType: "Bodyweight",
    category: "Compound",
    movementType: "Push",
    workoutType: "ChestTriceps",
    variation: "A/B",
    weight: 120,
    reps: 26,
    primaryMuscles: [
      { muscle: "Pectoralis Major", percentage: 80 }
    ],
    secondaryMuscles: [
      { muscle: "Triceps Brachii", percentage: 30 },
      { muscle: "Anterior Deltoids", percentage: 25 },
      { muscle: "Core", percentage: 15 }
    ],
    equipment: ["None"],
    difficulty: "Beginner"
  },
  {
    exerciseName: "Kettlebell Halos",
    equipmentType: "Kettlebell",
    category: "Functional",
    movementType: "Full Body",
    workoutType: "ChestTriceps",
    variation: "A/B",
    weight: 140,
    reps: 30,
    primaryMuscles: [
      { muscle: "Deltoids", percentage: 60 }
    ],
    secondaryMuscles: [
      { muscle: "Trapezius", percentage: 30 },
      { muscle: "Triceps Brachii", percentage: 25 },
      { muscle: "Core", percentage: 30 },
      { muscle: "Grip/Forearms", percentage: 15 }
    ],
    equipment: ["Kettlebell"],
    difficulty: "Intermediate"
  },
  {
    exerciseName: "Kettlebell Press",
    equipmentType: "Kettlebell",
    category: "Compound",
    movementType: "Push",
    workoutType: "ChestTriceps",
    variation: "A/B",
    weight: 145,
    reps: 31,
    primaryMuscles: [
      { muscle: "Deltoids", percentage: 70 }
    ],
    secondaryMuscles: [
      { muscle: "Triceps Brachii", percentage: 40 },
      { muscle: "Core", percentage: 35 },
      { muscle: "Grip/Forearms", percentage: 15 }
    ],
    equipment: ["Kettlebell"],
    difficulty: "Intermediate"
  },

  // LEGS WORKOUT
  {
    exerciseName: "Goblet Squats",
    equipmentType: "Kettlebell",
    category: "Compound",
    movementType: "Legs",
    workoutType: "Legs",
    variation: "A",
    weight: 150,
    reps: 32,
    primaryMuscles: [
      { muscle: "Quadriceps", percentage: 65 },
      { muscle: "Gluteus Maximus", percentage: 50 }
    ],
    secondaryMuscles: [
      { muscle: "Hamstrings", percentage: 20 },
      { muscle: "Core", percentage: 25 },
      { muscle: "Grip/Forearms", percentage: 5 }
    ],
    equipment: ["Kettlebell", "Dumbbell"],
    difficulty: "Beginner"
  },
  {
    exerciseName: "Dead Lifts",
    equipmentType: "Barbell",
    category: "Compound",
    movementType: "Legs",
    workoutType: "Legs",
    variation: "A",
    weight: 155,
    reps: 33,
    primaryMuscles: [
      { muscle: "Gluteus Maximus", percentage: 90 },
      { muscle: "Hamstrings", percentage: 70 }
    ],
    secondaryMuscles: [
      { muscle: "Erector Spinae", percentage: 60 },
      { muscle: "Core", percentage: 30 },
      { muscle: "Grip/Forearms", percentage: 25 }
    ],
    equipment: ["Barbell"],
    difficulty: "Advanced"
  },
  {
    exerciseName: "Calf Raises",
    equipmentType: "Bodyweight",
    category: "Isolation",
    movementType: "Legs",
    workoutType: "Legs",
    variation: "A",
    weight: 160,
    reps: 34,
    primaryMuscles: [
      { muscle: "Gastrocnemius", percentage: 80 },
      { muscle: "Soleus", percentage: 70 }
    ],
    equipment: ["None", "Calf Machine"],
    difficulty: "Beginner"
  },
  {
    exerciseName: "Glute Bridges",
    equipmentType: "Bodyweight",
    category: "Isolation",
    movementType: "Legs",
    workoutType: "Legs",
    variation: "B",
    weight: 165,
    reps: 35,
    primaryMuscles: [
      { muscle: "Gluteus Maximus", percentage: 90 }
    ],
    secondaryMuscles: [
      { muscle: "Hamstrings", percentage: 40 },
      { muscle: "Core", percentage: 20 },
      { muscle: "Quadriceps", percentage: 10 }
    ],
    equipment: ["None", "Barbell"],
    difficulty: "Beginner"
  },
  {
    exerciseName: "Kettlebell Swings",
    equipmentType: "Kettlebell",
    category: "Compound",
    movementType: "Full Body",
    workoutType: "Legs",
    variation: "A/B",
    weight: 180,
    reps: 38,
    primaryMuscles: [
      { muscle: "Gluteus Maximus", percentage: 80 },
      { muscle: "Hamstrings", percentage: 70 }
    ],
    secondaryMuscles: [
      { muscle: "Core", percentage: 40 },
      { muscle: "Shoulders", percentage: 15 },
      { muscle: "Grip/Forearms", percentage: 15 }
    ],
    equipment: ["Kettlebell"],
    difficulty: "Intermediate"
  },
  {
    exerciseName: "Box Step-ups",
    equipmentType: "Plybox",
    category: "Compound",
    movementType: "Legs",
    workoutType: "Legs",
    variation: "B",
    weight: 170,
    reps: 36,
    primaryMuscles: [
      { muscle: "Quadriceps", percentage: 65 },
      { muscle: "Gluteus Maximus", percentage: 85 }
    ],
    secondaryMuscles: [
      { muscle: "Hamstrings", percentage: 30 },
      { muscle: "Erector Spinae", percentage: 15 }
    ],
    equipment: ["Plyometric Box", "Step Platform"],
    difficulty: "Intermediate"
  },
  {
    exerciseName: "Stiff Legged Deadlifts",
    equipmentType: "Barbell",
    category: "Compound",
    movementType: "Legs",
    workoutType: "Legs",
    variation: "B",
    weight: 175,
    reps: 37,
    primaryMuscles: [
      { muscle: "Hamstrings", percentage: 85 },
      { muscle: "Gluteus Maximus", percentage: 75 }
    ],
    secondaryMuscles: [
      { muscle: "Erector Spinae", percentage: 50 },
      { muscle: "Core", percentage: 25 },
      { muscle: "Grip/Forearms", percentage: 15 }
    ],
    equipment: ["Barbell", "Dumbbells"],
    difficulty: "Intermediate"
  }
];

// Workout routines based on workout types
export const enderWorkoutRoutines = {
  "Abs": {
    name: "Ender's Core Workout",
    description: "Comprehensive core strengthening with progressive hold times",
    duration: 30,
    exercises: enderExerciseDatabase.filter(ex => ex.workoutType === "Abs")
  },
  "BackBiceps": {
    name: "Ender's Pull Day", 
    description: "Back and bicep development with compound movements",
    duration: 60,
    exercises: enderExerciseDatabase.filter(ex => ex.workoutType === "BackBiceps")
  },
  "ChestTriceps": {
    name: "Ender's Push Day",
    description: "Chest and tricep focus with pressing movements", 
    duration: 75,
    exercises: enderExerciseDatabase.filter(ex => ex.workoutType === "ChestTriceps")
  },
  "Legs": {
    name: "Ender's Leg Day",
    description: "Lower body compound movements and glute activation",
    duration: 50,
    exercises: enderExerciseDatabase.filter(ex => ex.workoutType === "Legs")
  }
};

console.log("Ender's Exercise Database Summary:");
console.log(`Total exercises: ${enderExerciseDatabase.length}`);
console.log("Workout types:", Object.keys(enderWorkoutRoutines));
Object.keys(enderWorkoutRoutines).forEach(type => {
  const routine = enderWorkoutRoutines[type as keyof typeof enderWorkoutRoutines];
  console.log(`${type}: ${routine.exercises.length} exercises, ${routine.duration}min`);
});
</file>
<file path="FitForge/scripts/generate-realistic-workout-history.ts">
import { enderExerciseDatabase } from "./ender-real-exercises";

// Define workout progression patterns for realistic 6-month history
export interface WorkoutHistorySet {
  reps: number;
  weight?: number;
  restTime: number;
  formScore: number;
  notes?: string;
}

export interface WorkoutHistoryExercise {
  exerciseName: string;
  sets: WorkoutHistorySet[];
}

export interface WorkoutHistorySession {
  userId: number;
  workoutTemplateId?: number | null;
  startTime: Date;
  endTime: Date;
  duration: number;
  exercises: WorkoutHistoryExercise[];
  caloriesBurned: number;
  notes?: string;
  rating: number;
  completionStatus: string;
}

// Training phases for realistic periodization
const trainingPhases = [
  { name: "Foundation", weeks: 4, focusRep: 12, focusIntensity: 0.70 },
  { name: "Strength", weeks: 4, focusRep: 6, focusIntensity: 0.85 },
  { name: "Power", weeks: 3, focusRep: 4, focusIntensity: 0.90 },
  { name: "Deload", weeks: 1, focusRep: 10, focusIntensity: 0.60 },
  { name: "Hypertrophy", weeks: 6, focusRep: 10, focusIntensity: 0.75 },
  { name: "Strength II", weeks: 4, focusRep: 5, focusIntensity: 0.87 },
  { name: "Peak", weeks: 2, focusRep: 3, focusIntensity: 0.92 },
  { name: "Deload II", weeks: 1, focusRep: 12, focusIntensity: 0.65 }
];

// Base weights for exercises (realistic starting point for intermediate lifter)
const baseWeights: Record<string, number> = {
  "Bench Press": 175,
  "Incline Bench Press": 145,
  "Shoulder Press": 85,
  "Dips": 0, // bodyweight
  "TRX Pushup": 0,
  "Tricep Extension": 50,
  "Dead Lifts": 215,
  "Bent Over Rows": 145,
  "T Row": 135,
  "Neutral Grip Pull-ups": 0,
  "Incline Hammer Curl": 35,
  "Shoulder Shrugs": 165,
  "Goblet Squats": 45,
  "Glute Bridges": 0,
  "Calf Raises": 0,
  "Kettlebell Swings": 35,
  "Planks": 0,
  "Spider Planks": 0,
  "Bench Situps": 0,
  "Hanging Knee Raises": 0
};

// Workout frequency patterns (Push/Pull/Legs split)
const workoutPatterns = [
  { type: "Push", exercises: ["Bench Press", "Incline Bench Press", "Shoulder Press", "Dips", "Tricep Extension"] },
  { type: "Pull", exercises: ["Dead Lifts", "Bent Over Rows", "Neutral Grip Pull-ups", "Incline Hammer Curl", "Shoulder Shrugs"] },
  { type: "Legs", exercises: ["Goblet Squats", "Dead Lifts", "Glute Bridges", "Calf Raises", "Kettlebell Swings"] },
  { type: "Core", exercises: ["Planks", "Spider Planks", "Bench Situps", "Hanging Knee Raises"] }
];

function calculateProgressiveWeight(baseWeight: number, weeksPassed: number, phase: any): number {
  if (baseWeight === 0) return 0; // bodyweight exercises
  
  // Linear progression with phase-specific adjustments
  const baseProgression = weeksPassed * 2.5; // 2.5lbs per week base
  const phaseMultiplier = phase.focusIntensity;
  const progressedWeight = baseWeight + (baseProgression * phaseMultiplier);
  
  // Add some randomness for realism (-5 to +10 lbs)
  const variance = Math.random() * 15 - 5;
  return Math.round((progressedWeight + variance) / 5) * 5; // Round to nearest 5
}

function calculateRepsAndSets(phase: any, exerciseName: string, weekInPhase: number): { reps: number[], sets: number } {
  const baseReps = phase.focusRep;
  const repsVariation = Math.floor(Math.random() * 3) - 1; // -1, 0, or +1
  const targetReps = Math.max(3, baseReps + repsVariation);
  
  // Simulate fatigue across sets
  const sets = exerciseName.includes("Calf") ? 4 : 3;
  const repsPerSet = [];
  
  for (let i = 0; i < sets; i++) {
    const fatigueReduction = i * (Math.random() * 2); // 0-2 rep reduction per set
    const setReps = Math.max(Math.floor(targetReps * 0.6), targetReps - Math.floor(fatigueReduction));
    repsPerSet.push(setReps);
  }
  
  return { reps: repsPerSet, sets };
}

function calculateFormScore(weekInPhase: number, setNumber: number, phase: any): number {
  // Form generally decreases with fatigue and increases with practice
  const baseScore = 8.5;
  const fatigueEffect = setNumber * 0.3; // Form drops slightly each set
  const practiceBonus = Math.min(weekInPhase * 0.1, 0.5); // Improve over the phase
  const phaseEffect = phase.name === "Deload" ? 0.5 : 0; // Better form during deload
  
  const score = baseScore - fatigueEffect + practiceBonus + phaseEffect;
  return Math.max(6.0, Math.min(10.0, Math.round(score * 2) / 2)); // Round to nearest 0.5
}

function generateRestTime(exerciseName: string, setNumber: number): number {
  const baseRestTimes: Record<string, number> = {
    "Bench Press": 180,
    "Dead Lifts": 240,
    "Goblet Squats": 120,
    "Shoulder Press": 150,
    "Bent Over Rows": 150,
    "Incline Bench Press": 150,
    "Neutral Grip Pull-ups": 180,
    "Incline Hammer Curl": 90,
    "Tricep Extension": 90,
    "Dips": 120,
    "Shoulder Shrugs": 120,
    "Glute Bridges": 90,
    "Calf Raises": 60,
    "Kettlebell Swings": 120,
    "Planks": 30,
    "Spider Planks": 60,
    "Bench Situps": 90,
    "Hanging Knee Raises": 120
  };
  
  const baseRest = baseRestTimes[exerciseName] || 120;
  const fatigueIncrease = setNumber * 15; // Need more rest as fatigue builds
  return baseRest + fatigueIncrease + Math.floor(Math.random() * 30); // Add 0-30s variance
}

export function generateSixMonthWorkoutHistory(userId: number): WorkoutHistorySession[] {
  const sessions: WorkoutHistorySession[] = [];
  const startDate = new Date();
  startDate.setMonth(startDate.getMonth() - 6); // 6 months ago
  
  let currentDate = new Date(startDate);
  let weeksPassed = 0;
  let currentPhaseIndex = 0;
  let weekInPhase = 0;
  
  // Generate workouts for 26 weeks (6 months)
  while (weeksPassed < 26) {
    const currentPhase = trainingPhases[currentPhaseIndex];
    
    // 3-4 workouts per week (Mon, Wed, Fri, optional Saturday)
    const workoutsThisWeek = Math.random() > 0.3 ? 4 : 3;
    const workoutDays = workoutsThisWeek === 4 ? [1, 3, 5, 6] : [1, 3, 5]; // Mon, Wed, Fri, Sat
    
    for (let dayIndex = 0; dayIndex < workoutDays.length; dayIndex++) {
      const workoutDay = workoutDays[dayIndex];
      const workoutDate = new Date(currentDate);
      workoutDate.setDate(currentDate.getDate() + workoutDay);
      
      // Skip if workout would be in the future
      if (workoutDate > new Date()) continue;
      
      // Cycle through workout types
      const workoutPattern = workoutPatterns[dayIndex % workoutPatterns.length];
      
      // Generate workout session
      const exercises: WorkoutHistoryExercise[] = [];
      let totalCalories = 0;
      
      for (const exerciseName of workoutPattern.exercises) {
        const baseWeight = baseWeights[exerciseName] || 0;
        const currentWeight = calculateProgressiveWeight(baseWeight, weeksPassed, currentPhase);
        const { reps: repsPerSet, sets } = calculateRepsAndSets(currentPhase, exerciseName, weekInPhase);
        
        const exerciseSets: WorkoutHistorySet[] = [];
        for (let setNum = 0; setNum < sets; setNum++) {
          const reps = repsPerSet[setNum];
          const formScore = calculateFormScore(weekInPhase, setNum, currentPhase);
          const restTime = generateRestTime(exerciseName, setNum);
          
          // Calculate volume for calories
          const volume = currentWeight * reps;
          totalCalories += volume * 0.08; // Rough calorie estimate
          
          const set: WorkoutHistorySet = {
            reps,
            weight: currentWeight || undefined,
            restTime,
            formScore,
            notes: setNum === 0 && Math.random() > 0.7 ? getRandomNote(exerciseName, currentPhase) : undefined
          };
          
          exerciseSets.push(set);
        }
        
        exercises.push({
          exerciseName,
          sets: exerciseSets
        });
      }
      
      // Calculate workout duration based on sets and rest
      const totalSets = exercises.reduce((sum, ex) => sum + ex.sets.length, 0);
      const avgRestTime = exercises.reduce((sum, ex) => 
        sum + ex.sets.reduce((setSum, set) => setSum + set.restTime, 0), 0) / totalSets;
      const duration = Math.round((totalSets * 2.5) + (avgRestTime * totalSets / 60)); // ~2.5 min per set + rest
      
      const endTime = new Date(workoutDate);
      endTime.setMinutes(endTime.getMinutes() + duration);
      
      const session: WorkoutHistorySession = {
        userId,
        workoutTemplateId: null,
        startTime: workoutDate,
        endTime,
        duration,
        exercises,
        caloriesBurned: Math.round(totalCalories),
        notes: Math.random() > 0.6 ? getRandomWorkoutNote(currentPhase, workoutPattern.type) : undefined,
        rating: Math.floor(Math.random() * 2) + 4, // 4-5 star rating
        completionStatus: "completed"
      };
      
      sessions.push(session);
    }
    
    // Move to next week
    currentDate.setDate(currentDate.getDate() + 7);
    weeksPassed++;
    weekInPhase++;
    
    // Check if phase is complete
    if (weekInPhase >= currentPhase.weeks) {
      currentPhaseIndex = (currentPhaseIndex + 1) % trainingPhases.length;
      weekInPhase = 0;
    }
  }
  
  return sessions;
}

function getRandomNote(exerciseName: string, phase: any): string {
  const exerciseNotes: Record<string, string[]> = {
    "Bench Press": ["Felt strong today", "Chest pumped", "Good lockout", "Slight shoulder twinge"],
    "Dead Lifts": ["Heavy but smooth", "Great hip drive", "Back felt tight", "New PR territory"],
    "Goblet Squats": ["Deep range of motion", "Glutes fired well", "Knee tracking good", "Felt balanced"],
    "Shoulder Press": ["Strict form", "Core engaged", "Shoulders pre-fatigued", "Good stability"],
    "Neutral Grip Pull-ups": ["Full range", "Lat focused", "Upper back pumped", "Grip gave out first"]
  };
  
  const phaseNotes: Record<string, string[]> = {
    "Deload": ["Taking it easy", "Focus on form", "Recovery week"],
    "Strength": ["Heavy singles", "Max effort", "Testing limits"],
    "Power": ["Explosive reps", "Speed focus", "Athletic movement"]
  };
  
  const notes = [...(exerciseNotes[exerciseName] || []), ...(phaseNotes[phase.name] || [])];
  return notes[Math.floor(Math.random() * notes.length)] || "Good set";
}

function getRandomWorkoutNote(phase: any, workoutType: string): string {
  const notes = [
    `Great ${workoutType.toLowerCase()} session`,
    `${phase.name} phase going well`,
    `Energy levels good today`,
    `Focused on mind-muscle connection`,
    `Progressive overload working`,
    `Form improvements noticed`,
    `Strength gains evident`,
    `Recovery feeling optimal`
  ];
  
  return notes[Math.floor(Math.random() * notes.length)];
}
</file>
<file path="FitForge/scripts/import-exercise-database.ts">
// Import script for converting Excel exercise database to PostgreSQL

export const exerciseDatabase = [
  // CHEST EXERCISES
  {
    exerciseName: "Bench Press",
    equipmentType: "Barbell",
    category: "Compound",
    movementType: "Push",
    primaryMuscles: [
      { muscle: "Pectoralis Major", percentage: 60 }
    ],
    secondaryMuscles: [
      { muscle: "Triceps Brachii", percentage: 30 },
      { muscle: "Anterior Deltoids", percentage: 10 }
    ],
    stabilizingMuscles: [
      { muscle: "Core", percentage: 5 },
      { muscle: "Serratus Anterior", percentage: 5 }
    ],
    equipment: ["Barbell", "Bench", "Rack"],
    variations: ["Wide Grip", "Close Grip", "Pause Rep", "Touch and Go"],
    difficulty: "Intermediate"
  },
  {
    exerciseName: "Incline Bench Press",
    equipmentType: "Barbell",
    category: "Compound",
    movementType: "Push",
    primaryMuscles: [
      { muscle: "Pectoralis Major (Upper)", percentage: 65 }
    ],
    secondaryMuscles: [
      { muscle: "Anterior Deltoids", percentage: 25 },
      { muscle: "Triceps Brachii", percentage: 10 }
    ],
    equipment: ["Barbell", "Incline Bench", "Rack"],
    variations: ["30°", "45°", "60°"],
    difficulty: "Intermediate"
  },
  {
    exerciseName: "Dumbbell Press",
    equipmentType: "Dumbbell",
    category: "Compound",
    movementType: "Push",
    primaryMuscles: [
      { muscle: "Pectoralis Major", percentage: 65 }
    ],
    secondaryMuscles: [
      { muscle: "Triceps Brachii", percentage: 25 },
      { muscle: "Anterior Deltoids", percentage: 10 }
    ],
    stabilizingMuscles: [
      { muscle: "Core", percentage: 10 }
    ],
    equipment: ["Dumbbells", "Bench"],
    variations: ["Flat", "Incline", "Decline", "Neutral Grip"],
    difficulty: "Beginner"
  },

  // BACK EXERCISES
  {
    exerciseName: "Deadlift",
    equipmentType: "Barbell",
    category: "Compound",
    movementType: "Pull",
    primaryMuscles: [
      { muscle: "Erector Spinae", percentage: 25 },
      { muscle: "Glutes", percentage: 25 },
      { muscle: "Hamstrings", percentage: 20 }
    ],
    secondaryMuscles: [
      { muscle: "Trapezius", percentage: 15 },
      { muscle: "Rhomboids", percentage: 10 },
      { muscle: "Quadriceps", percentage: 5 }
    ],
    stabilizingMuscles: [
      { muscle: "Core", percentage: 15 },
      { muscle: "Grip/Forearms", percentage: 10 }
    ],
    equipment: ["Barbell", "Plates"],
    variations: ["Conventional", "Sumo", "Romanian", "Stiff-Legged"],
    difficulty: "Advanced"
  },
  {
    exerciseName: "Pull-ups",
    equipmentType: "Bodyweight",
    category: "Compound",
    movementType: "Pull",
    primaryMuscles: [
      { muscle: "Latissimus Dorsi", percentage: 65 }
    ],
    secondaryMuscles: [
      { muscle: "Biceps Brachii", percentage: 20 },
      { muscle: "Rhomboids", percentage: 10 },
      { muscle: "Middle Trapezius", percentage: 5 }
    ],
    equipment: ["Pull-up Bar"],
    variations: ["Wide Grip", "Close Grip", "Neutral Grip", "Weighted"],
    difficulty: "Intermediate"
  },
  {
    exerciseName: "Bent Over Row",
    equipmentType: "Barbell",
    category: "Compound",
    movementType: "Pull",
    primaryMuscles: [
      { muscle: "Rhomboids", percentage: 30 },
      { muscle: "Middle Trapezius", percentage: 25 },
      { muscle: "Latissimus Dorsi", percentage: 25 }
    ],
    secondaryMuscles: [
      { muscle: "Biceps Brachii", percentage: 15 },
      { muscle: "Rear Deltoids", percentage: 5 }
    ],
    equipment: ["Barbell"],
    variations: ["Overhand", "Underhand", "Pendlay", "Yates"],
    difficulty: "Intermediate"
  },
  {
    exerciseName: "T-Row",
    equipmentType: "Machine",
    category: "Compound",
    movementType: "Pull",
    primaryMuscles: [
      { muscle: "Rhomboids", percentage: 35 },
      { muscle: "Middle Trapezius", percentage: 30 },
      { muscle: "Latissimus Dorsi", percentage: 20 }
    ],
    secondaryMuscles: [
      { muscle: "Biceps Brachii", percentage: 10 },
      { muscle: "Rear Deltoids", percentage: 5 }
    ],
    equipment: ["T-Bar Row Machine", "Barbell", "V-Handle"],
    variations: ["Wide Grip", "Close Grip", "Single Arm"],
    difficulty: "Intermediate"
  },

  // SHOULDER EXERCISES
  {
    exerciseName: "Shoulder Press",
    equipmentType: "Barbell",
    category: "Compound",
    movementType: "Push",
    primaryMuscles: [
      { muscle: "Anterior Deltoids", percentage: 40 },
      { muscle: "Lateral Deltoids", percentage: 30 }
    ],
    secondaryMuscles: [
      { muscle: "Triceps Brachii", percentage: 20 },
      { muscle: "Upper Trapezius", percentage: 10 }
    ],
    equipment: ["Barbell", "Rack"],
    variations: ["Military", "Behind Neck", "Push Press"],
    difficulty: "Intermediate"
  },
  {
    exerciseName: "Lateral Raises",
    equipmentType: "Dumbbell",
    category: "Isolation",
    movementType: "Push",
    primaryMuscles: [
      { muscle: "Lateral Deltoids", percentage: 80 }
    ],
    secondaryMuscles: [
      { muscle: "Anterior Deltoids", percentage: 10 },
      { muscle: "Upper Trapezius", percentage: 10 }
    ],
    equipment: ["Dumbbells"],
    variations: ["Standing", "Seated", "Cable", "Leaning"],
    difficulty: "Beginner"
  },
  {
    exerciseName: "Face Pulls",
    equipmentType: "Cable",
    category: "Isolation",
    movementType: "Pull",
    primaryMuscles: [
      { muscle: "Rear Deltoids", percentage: 50 },
      { muscle: "Rhomboids", percentage: 30 }
    ],
    secondaryMuscles: [
      { muscle: "Middle Trapezius", percentage: 15 },
      { muscle: "External Rotators", percentage: 5 }
    ],
    equipment: ["Cable Machine", "Rope Attachment"],
    variations: ["High to Low", "Eye Level", "Low to High"],
    difficulty: "Beginner"
  },

  // LEG EXERCISES
  {
    exerciseName: "Squat",
    equipmentType: "Barbell",
    category: "Compound",
    movementType: "Legs",
    primaryMuscles: [
      { muscle: "Quadriceps", percentage: 40 },
      { muscle: "Glutes", percentage: 30 }
    ],
    secondaryMuscles: [
      { muscle: "Hamstrings", percentage: 20 },
      { muscle: "Core", percentage: 10 }
    ],
    equipment: ["Barbell", "Rack"],
    variations: ["Back Squat", "Front Squat", "Box Squat", "Pause Squat"],
    difficulty: "Advanced"
  },
  {
    exerciseName: "Romanian Deadlift",
    equipmentType: "Barbell",
    category: "Compound",
    movementType: "Legs",
    primaryMuscles: [
      { muscle: "Hamstrings", percentage: 50 },
      { muscle: "Glutes", percentage: 30 }
    ],
    secondaryMuscles: [
      { muscle: "Erector Spinae", percentage: 15 },
      { muscle: "Upper Back", percentage: 5 }
    ],
    equipment: ["Barbell"],
    variations: ["Conventional", "Snatch Grip", "Deficit", "Single Leg"],
    difficulty: "Intermediate"
  },
  {
    exerciseName: "Goblet Squat",
    equipmentType: "Dumbbell",
    category: "Compound",
    movementType: "Legs",
    primaryMuscles: [
      { muscle: "Quadriceps", percentage: 45 },
      { muscle: "Glutes", percentage: 35 }
    ],
    secondaryMuscles: [
      { muscle: "Core", percentage: 15 },
      { muscle: "Upper Back", percentage: 5 }
    ],
    equipment: ["Dumbbell", "Kettlebell"],
    variations: ["Standard", "Pulse", "1.5 Rep", "Paused"],
    difficulty: "Beginner"
  },
  {
    exerciseName: "Calf Raises",
    equipmentType: "Machine",
    category: "Isolation",
    movementType: "Legs",
    primaryMuscles: [
      { muscle: "Gastrocnemius", percentage: 70 },
      { muscle: "Soleus", percentage: 30 }
    ],
    equipment: ["Calf Raise Machine", "Smith Machine", "Dumbbells"],
    variations: ["Standing", "Seated", "Single Leg", "Donkey"],
    difficulty: "Beginner"
  },

  // ARM EXERCISES
  {
    exerciseName: "Barbell Curl",
    equipmentType: "Barbell",
    category: "Isolation",
    movementType: "Pull",
    primaryMuscles: [
      { muscle: "Biceps Brachii", percentage: 85 }
    ],
    secondaryMuscles: [
      { muscle: "Brachialis", percentage: 10 },
      { muscle: "Forearms", percentage: 5 }
    ],
    equipment: ["Barbell", "EZ-Bar"],
    variations: ["Straight Bar", "EZ-Bar", "Wide Grip", "Close Grip"],
    difficulty: "Beginner"
  },
  {
    exerciseName: "Tricep Extension",
    equipmentType: "Dumbbell",
    category: "Isolation",
    movementType: "Push",
    primaryMuscles: [
      { muscle: "Triceps Brachii", percentage: 90 }
    ],
    secondaryMuscles: [
      { muscle: "Anconeus", percentage: 10 }
    ],
    equipment: ["Dumbbells", "Barbell", "Cable"],
    variations: ["Overhead", "Lying", "Single Arm", "Cable"],
    difficulty: "Beginner"
  },
  {
    exerciseName: "Close Grip Bench Press",
    equipmentType: "Barbell",
    category: "Compound",
    movementType: "Push",
    primaryMuscles: [
      { muscle: "Triceps Brachii", percentage: 60 }
    ],
    secondaryMuscles: [
      { muscle: "Pectoralis Major", percentage: 30 },
      { muscle: "Anterior Deltoids", percentage: 10 }
    ],
    equipment: ["Barbell", "Bench"],
    variations: ["Flat", "Incline", "Decline"],
    difficulty: "Intermediate"
  },

  // CORE EXERCISES
  {
    exerciseName: "Plank",
    equipmentType: "Bodyweight",
    category: "Isolation",
    movementType: "Core",
    primaryMuscles: [
      { muscle: "Rectus Abdominis", percentage: 30 },
      { muscle: "Transverse Abdominis", percentage: 40 }
    ],
    secondaryMuscles: [
      { muscle: "Obliques", percentage: 20 },
      { muscle: "Erector Spinae", percentage: 10 }
    ],
    equipment: ["None"],
    variations: ["Standard", "Side", "RKC", "Long Lever"],
    difficulty: "Beginner"
  },
  {
    exerciseName: "Spider Plank",
    equipmentType: "Bodyweight",
    category: "Isolation",
    movementType: "Core",
    primaryMuscles: [
      { muscle: "Obliques", percentage: 40 },
      { muscle: "Rectus Abdominis", percentage: 30 }
    ],
    secondaryMuscles: [
      { muscle: "Hip Flexors", percentage: 20 },
      { muscle: "Transverse Abdominis", percentage: 10 }
    ],
    equipment: ["None"],
    variations: ["Alternating", "Hold", "Cross Body"],
    difficulty: "Intermediate"
  },
  {
    exerciseName: "Hanging Knee Raises",
    equipmentType: "Bodyweight",
    category: "Isolation",
    movementType: "Core",
    primaryMuscles: [
      { muscle: "Rectus Abdominis", percentage: 50 },
      { muscle: "Hip Flexors", percentage: 30 }
    ],
    secondaryMuscles: [
      { muscle: "Obliques", percentage: 15 },
      { muscle: "Grip/Forearms", percentage: 5 }
    ],
    equipment: ["Pull-up Bar"],
    variations: ["Bent Knee", "Straight Leg", "Windshield Wipers"],
    difficulty: "Intermediate"
  },

  // FUNCTIONAL/TRX EXERCISES
  {
    exerciseName: "TRX Push-up",
    equipmentType: "TRX",
    category: "Compound",
    movementType: "Push",
    primaryMuscles: [
      { muscle: "Pectoralis Major", percentage: 50 },
      { muscle: "Core", percentage: 25 }
    ],
    secondaryMuscles: [
      { muscle: "Triceps Brachii", percentage: 15 },
      { muscle: "Anterior Deltoids", percentage: 10 }
    ],
    equipment: ["TRX Straps"],
    variations: ["Standard", "Decline", "Atomic", "Wide Grip"],
    difficulty: "Intermediate"
  },
  {
    exerciseName: "TRX Row",
    equipmentType: "TRX",
    category: "Compound",
    movementType: "Pull",
    primaryMuscles: [
      { muscle: "Rhomboids", percentage: 35 },
      { muscle: "Latissimus Dorsi", percentage: 30 }
    ],
    secondaryMuscles: [
      { muscle: "Biceps Brachii", percentage: 20 },
      { muscle: "Core", percentage: 15 }
    ],
    equipment: ["TRX Straps"],
    variations: ["Standard", "Single Arm", "Wide Grip", "Feet Elevated"],
    difficulty: "Beginner"
  },

  // KETTLEBELL EXERCISES
  {
    exerciseName: "Kettlebell Swing",
    equipmentType: "Kettlebell",
    category: "Compound",
    movementType: "Legs",
    primaryMuscles: [
      { muscle: "Glutes", percentage: 40 },
      { muscle: "Hamstrings", percentage: 30 }
    ],
    secondaryMuscles: [
      { muscle: "Core", percentage: 20 },
      { muscle: "Shoulders", percentage: 10 }
    ],
    equipment: ["Kettlebell"],
    variations: ["Russian", "American", "Single Arm", "Double"],
    difficulty: "Intermediate"
  },
  {
    exerciseName: "Turkish Get-up",
    equipmentType: "Kettlebell",
    category: "Compound",
    movementType: "Full Body",
    primaryMuscles: [
      { muscle: "Core", percentage: 30 },
      { muscle: "Shoulders", percentage: 25 }
    ],
    secondaryMuscles: [
      { muscle: "Glutes", percentage: 20 },
      { muscle: "Quadriceps", percentage: 15 },
      { muscle: "Triceps", percentage: 10 }
    ],
    equipment: ["Kettlebell", "Dumbbell"],
    variations: ["Half", "Full", "Reverse", "Weighted"],
    difficulty: "Advanced"
  }
];

// Function to import exercises to database
export async function importExercises(db: any) {
  console.log(`Importing ${exerciseDatabase.length} exercises...`);
  
  for (const exercise of exerciseDatabase) {
    try {
      await db.insert(exerciseLibrary).values(exercise);
      console.log(`✓ Imported: ${exercise.exerciseName}`);
    } catch (error) {
      console.error(`✗ Failed to import ${exercise.exerciseName}:`, error);
    }
  }
  
  console.log("Exercise import complete!");
}

// Analytics calculations from your Excel formulas
export const analyticsFormulas = {
  // Volume calculations
  calculateTotalVolume: (sets: any[]) => {
    return sets.reduce((total, set) => {
      if (!set.isWarmup) {
        return total + (set.weight * set.reps);
      }
      return total;
    }, 0);
  },
  
  // 1RM estimation (Epley formula)
  calculate1RM: (weight: number, reps: number) => {
    if (reps === 1) return weight;
    return weight * (1 + reps / 30);
  },
  
  // Push/Pull ratio
  calculatePushPullRatio: (sessions: any[]) => {
    let pushVolume = 0;
    let pullVolume = 0;
    
    sessions.forEach(session => {
      session.exercisePerformance.forEach((exercise: any) => {
        const exerciseInfo = exerciseDatabase.find(e => e.exerciseName === exercise.name);
        if (exerciseInfo?.movementType === 'Push') {
          pushVolume += calculateTotalVolume(exercise.sets);
        } else if (exerciseInfo?.movementType === 'Pull') {
          pullVolume += calculateTotalVolume(exercise.sets);
        }
      });
    });
    
    return pullVolume > 0 ? pushVolume / pullVolume : 0;
  },
  
  // Muscle group volume distribution
  calculateMuscleGroupVolume: (sessions: any[]) => {
    const muscleVolumes: { [key: string]: number } = {};
    
    sessions.forEach(session => {
      session.exercisePerformance.forEach((exercise: any) => {
        const exerciseInfo = exerciseDatabase.find(e => e.exerciseName === exercise.name);
        const volume = calculateTotalVolume(exercise.sets);
        
        exerciseInfo?.primaryMuscles.forEach(muscle => {
          const muscleVolume = volume * (muscle.percentage / 100);
          muscleVolumes[muscle.muscle] = (muscleVolumes[muscle.muscle] || 0) + muscleVolume;
        });
      });
    });
    
    return muscleVolumes;
  }
};
</file>
<file path="FitForge/scripts/insert-ender-profile.ts">
#!/usr/bin/env tsx

import { storage } from '../server/storage';
import { enderProfile } from './create-ender-profile';
import { setupDatabase } from './setup-database';

async function insertEnderProfile() {
  console.log("🚀 Setting up Ender's FitnessForge profile...");
  
  try {
    // First, ensure database is set up with exercises
    console.log("📚 Setting up exercise database...");
    await setupDatabase();
    
    console.log("👤 Creating Ender's user profile...");
    
    // Check if user already exists
    const existingUser = await storage.db
      .select()
      .from(storage.users)
      .where(storage.eq(storage.users.email, enderProfile.email))
      .limit(1);
    
    if (existingUser.length > 0) {
      console.log(`⏭️  User ${enderProfile.email} already exists, updating profile...`);
      
      // Update existing user with workout formulas and preferences
      await storage.db
        .update(storage.users)
        .set({
          workoutFormulas: enderProfile.workoutFormulas,
          exercisePreferences: enderProfile.exercisePreferences,
          firstName: enderProfile.firstName,
          lastName: enderProfile.lastName,
          username: enderProfile.username
        })
        .where(storage.eq(storage.users.email, enderProfile.email));
        
      console.log("✓ Updated existing user profile");
    } else {
      // Create new user
      const [newUser] = await storage.db
        .insert(storage.users)
        .values({
          username: enderProfile.username,
          email: enderProfile.email,
          firstName: enderProfile.firstName,
          lastName: enderProfile.lastName,
          password: 'demo-password', // For demo purposes
          workoutFormulas: enderProfile.workoutFormulas,
          exercisePreferences: enderProfile.exercisePreferences,
          createdAt: new Date(),
          updatedAt: new Date()
        })
        .returning();
        
      console.log(`✓ Created new user: ${newUser.email}`);
    }
    
    // Verify the profile was created correctly
    const user = await storage.db
      .select()
      .from(storage.users)
      .where(storage.eq(storage.users.email, enderProfile.email))
      .limit(1);
    
    if (user.length > 0) {
      console.log("🎉 Profile setup complete!");
      console.log("📊 Profile Summary:");
      console.log(`   - Email: ${user[0].email}`);
      console.log(`   - Name: ${user[0].firstName} ${user[0].lastName}`);
      console.log(`   - Username: ${user[0].username}`);
      
      const workoutFormulas = user[0].workoutFormulas as any;
      if (workoutFormulas) {
        console.log("💪 Workout Formulas:");
        Object.entries(workoutFormulas).forEach(([type, exercises]: [string, any]) => {
          console.log(`   - ${type}: ${exercises.length} exercises`);
        });
      }
      
      const exercisePrefs = user[0].exercisePreferences as any;
      if (exercisePrefs) {
        console.log(`🎯 Exercise Preferences: ${Object.keys(exercisePrefs).length} exercises configured`);
      }
      
      console.log("\n🔑 Login Credentials:");
      console.log(`   Email: ${enderProfile.email}`);
      console.log(`   Password: Not required for demo (email-only login)`);
      
    } else {
      console.error("❌ Failed to verify profile creation");
    }
    
  } catch (error) {
    console.error("❌ Profile setup failed:", error);
    process.exit(1);
  }
}

// Auto-run if called directly
if (import.meta.url === `file://${process.argv[1]}`) {
  insertEnderProfile();
}

export { insertEnderProfile };
</file>
<file path="FitForge/scripts/parse-real-exercise-data.ts">
// Parse Ender's real exercise data into proper database structure

export interface Exercise {
  id: number;
  name: string;
  workoutType: 'Push' | 'Pull' | 'Legs' | 'Core';
  primaryMuscleGroup: string;
  exerciseType: 'Compound' | 'Isolation';
  variation: 'A' | 'B' | 'A/B';
  equipment: string[];
  muscleActivation: Record<string, number>; // muscle name -> percentage
  restTime?: number; // seconds
}

// Helper function to parse muscle activation percentages
function parseMuscleActivation(muscleString: string): Record<string, number> {
  const muscles: Record<string, number> = {};
  const parts = muscleString.split(',');
  
  for (const part of parts) {
    const cleanPart = part.trim().replace(/_/g, ' ');
    const match = cleanPart.match(/^(.+):\s*(\d+)%$/);
    if (match) {
      const muscleName = match[1].trim();
      const percentage = parseInt(match[2]);
      muscles[muscleName] = percentage;
    }
  }
  
  return muscles;
}

// Helper function to determine primary muscle group
function getPrimaryMuscleGroup(workoutType: string, muscles: Record<string, number>): string {
  const muscleNames = Object.keys(muscles);
  
  switch (workoutType) {
    case 'ChestTriceps':
      if (muscleNames.some(m => m.includes('Pectoralis') || m.includes('Chest'))) return 'Chest';
      if (muscleNames.some(m => m.includes('Triceps'))) return 'Triceps';
      if (muscleNames.some(m => m.includes('Deltoid') || m.includes('Shoulder'))) return 'Shoulders';
      return 'Chest';
      
    case 'BackBiceps':
      if (muscleNames.some(m => m.includes('Latissimus') || m.includes('Rhomboids'))) return 'Lats';
      if (muscleNames.some(m => m.includes('Trapezius') || m.includes('Trap'))) return 'Traps';
      if (muscleNames.some(m => m.includes('Biceps'))) return 'Biceps';
      return 'Lats';
      
    case 'Legs':
      if (muscleNames.some(m => m.includes('Gluteus') || m.includes('Glute'))) return 'Glutes';
      if (muscleNames.some(m => m.includes('Quadriceps') || m.includes('Quad'))) return 'Quads';
      if (muscleNames.some(m => m.includes('Hamstrings') || m.includes('Hamstring'))) return 'Hamstrings';
      if (muscleNames.some(m => m.includes('Gastrocnemius') || m.includes('Soleus') || m.includes('Calf'))) return 'Calves';
      return 'Quads';
      
    case 'Abs':
      return 'Abs';
      
    default:
      return 'Unknown';
  }
}

// Helper function to determine exercise type
function getExerciseType(exerciseName: string, muscles: Record<string, number>): 'Compound' | 'Isolation' {
  const muscleCount = Object.keys(muscles).length;
  
  // Compound movements typically work multiple muscle groups
  const compoundKeywords = ['squat', 'deadlift', 'press', 'pull-up', 'chin-up', 'row', 'dip'];
  const isolationKeywords = ['curl', 'extension', 'raise', 'fly', 'shrug'];
  
  const nameCheck = exerciseName.toLowerCase();
  
  if (compoundKeywords.some(keyword => nameCheck.includes(keyword)) || muscleCount >= 3) {
    return 'Compound';
  }
  
  if (isolationKeywords.some(keyword => nameCheck.includes(keyword)) || muscleCount <= 2) {
    return 'Isolation';
  }
  
  return muscleCount >= 3 ? 'Compound' : 'Isolation';
}

// Parse time string to seconds
function parseRestTime(timeString: string): number {
  if (!timeString || timeString === 'n/a') return 60; // default 1 minute
  
  const match = timeString.match(/(\d+):(\d+)/);
  if (match) {
    const minutes = parseInt(match[1]);
    const seconds = parseInt(match[2]);
    return minutes * 60 + seconds;
  }
  
  return 60;
}

// Raw exercise data from Ender's spreadsheet
const rawExerciseData = [
  { equipment: 'Bodyweight', weights: 'Bodyweight', rest: '0:30', name: 'Planks', variation: 'A', muscles: 'Rectus_Abdominis:_65%,_Transverse_Abdominis:_40%,_Obliques:_20%,_Erector_Spinae:_10%', workoutType: 'Abs' },
  { equipment: 'Bench', weights: '1', rest: '1:00', name: 'Spider_Planks', variation: 'A', muscles: 'Rectus_Abdominis:_60%,_Transverse_Abdominis:_30%,_Obliques:_30%,_Erector_Spinae:_10%,_Shoulders:_10%', workoutType: 'Abs' },
  { equipment: 'TRX', weights: '5', rest: '1:30', name: 'Bench_Situps', variation: 'A', muscles: 'Rectus_Abdominis:_60%,_Hip_Flexors:_25%,_Obliques:_15%', workoutType: 'Abs' },
  { equipment: 'Kettlebell', weights: '10', rest: '2:00', name: 'Hanging_Knee_Raises', variation: 'A', muscles: 'Rectus_Abdominis:_80%,_Hip_Flexors:_23%,_Obliques:_40%,_Grip/Forearms:_10%', workoutType: 'Abs' },
  
  { equipment: 'Dumbbell', weights: '15', rest: '2:30', name: 'Shoulder_Shrugs', variation: 'A/B', muscles: 'Trapezius:_80%,_Levator_Scapulae:_20%', workoutType: 'BackBiceps' },
  { equipment: 'OYA', weights: '20', rest: '3:00', name: 'T_Row', variation: 'B', muscles: 'Latissimus_Dorsi:_85%,_Rhomboids:_25%,_Trapezius:_15%,_Biceps_Brachii:_12%,_Grip/Forearms:_8%', workoutType: 'BackBiceps' },
  { equipment: 'Pull-up_Bar', weights: '25', rest: '3:30', name: 'Incline_Hammer_Curl', variation: 'B', muscles: 'Biceps_Brachii:_70%,_Brachialis:_20%,_Brachioradialis:_10%,_Grip/Forearms:_10%', workoutType: 'BackBiceps' },
  { equipment: 'Countertop', weights: '30', rest: '4:00', name: 'Neutral_Grip_Pull-ups', variation: 'B', muscles: 'Latissimus_Dorsi:_85%,_Biceps_Brachii:_25%,_Rhomboids:_15%,_Trapezius:_15%,_Grip/Forearms:_10%', workoutType: 'BackBiceps' },
  { equipment: 'Plybox', weights: '35', rest: '4:30', name: 'Bent_Over_Rows', variation: 'A', muscles: 'Latissimus_Dorsi:_90%,_Rhomboids:_25%,_Trapezius:_20%,_Biceps_Brachii:_15%,_Grip/Forearms:_10%', workoutType: 'BackBiceps' },
  { equipment: '', weights: '40', rest: '5:00', name: 'Row', variation: 'B', muscles: 'Latissimus_Dorsi:_85%,_Rhomboids:_25%,_Trapezius:_20%,_Biceps_Brachii:_15%,_Core:_10%,_Grip/Forearms:_10%', workoutType: 'BackBiceps' },
  { equipment: '', weights: '45', rest: '5:30', name: 'Renegade_Rows', variation: 'A/B', muscles: 'Latissimus_Dorsi:_70%,_Rhomboids:_25%,_Trapezius:_20%,_Biceps_Brachii:_15%,_Core:_30%,_Grip/Forearms:_10%', workoutType: 'BackBiceps' },
  { equipment: '', weights: '50', rest: '6:00', name: 'Single_Arm_Upright_Row', variation: 'A/B', muscles: 'Trapezius:_60%,_Deltoids:_40%,_Biceps_Brachii:_20%,_Core:_15%,_Grip/Forearms:_10%', workoutType: 'BackBiceps' },
  { equipment: '', weights: '55', rest: '6:30', name: 'TRX_Bicep_Curl', variation: 'A/B', muscles: 'Biceps_Brachii:_80%,_Brachialis:_15%,_Brachioradialis:_5%,_Core:_15%,_Grip/Forearms:_10%', workoutType: 'BackBiceps' },
  { equipment: '', weights: '60', rest: '7:00', name: 'Chin-Ups', variation: 'B', muscles: 'Latissimus_Dorsi:_85%,_Biceps_Brachii:_30%,_Rhomboids:_20%,_Trapezius:_15%,_Grip/Forearms:_10%', workoutType: 'BackBiceps' },
  { equipment: '', weights: '65', rest: '7:30', name: 'Face_Pull', variation: 'A/B', muscles: 'Trapezius:_50%,_Rhomboids:_40%,_Rear_Deltoids:_40%,_Rotator_Cuff:_15%', workoutType: 'BackBiceps' },
  { equipment: '', weights: '70', rest: '8:00', name: 'Concentration_Curl', variation: 'A', muscles: 'Biceps_Brachii:_90%,_Brachialis:_10%,_Grip/Forearms:_10%', workoutType: 'BackBiceps' },
  { equipment: '', weights: '75', rest: '8:30', name: 'Wide_Grip_Pullups', variation: 'A', muscles: 'Latissimus_Dorsi:_90%,_Biceps_Brachii:_20%,_Rhomboids:_15%,_Trapezius:_15%,_Grip/Forearms:_10%', workoutType: 'BackBiceps' },
  
  { equipment: '', weights: '80', rest: '9:00', name: 'Bench_Press', variation: 'A', muscles: 'Pectoralis_Major:_85%,_Triceps_Brachii:_25%,_Anterior_Deltoids:_30%,_Serratus_Anterior:_10%', workoutType: 'ChestTriceps' },
  { equipment: '', weights: '85', rest: '9:30', name: 'Trx_Reverse_Flys', variation: 'A/B', muscles: 'Rhomboids:_70%,_Trapezius:_40%,_Rear_Deltoids:_30%,_Core:_15%', workoutType: 'ChestTriceps' },
  { equipment: '', weights: '90', rest: '10:00', name: 'Tricep_Extension', variation: 'A', muscles: 'Triceps_Brachii:_85%,_Anconeus:_30%', workoutType: 'ChestTriceps' },
  { equipment: '', weights: '95', rest: '', name: 'TRX_Pushup', variation: 'A', muscles: 'Pectoralis_Major:_80%,_Triceps_Brachii:_30%,_Anterior_Deltoids:_25%,_Core:_25%', workoutType: 'ChestTriceps' },
  { equipment: '', weights: '100', rest: '', name: 'Single_Arm_Bench', variation: 'A/B', muscles: 'Pectoralis_Major:_80%,_Triceps_Brachii:_25%,_Anterior_Deltoids:_25%,_Core:_20%', workoutType: 'ChestTriceps' },
  { equipment: '', weights: '105', rest: '', name: 'Single_Arm_Incline', variation: 'A/B', muscles: 'Pectoralis_Major:_75%,_Triceps_Brachii:_25%,_Anterior_Deltoids:_30%,_Core:_20%', workoutType: 'ChestTriceps' },
  { equipment: '', weights: '110', rest: '', name: 'Pullover', variation: 'A/B', muscles: 'Latissimus_Dorsi:_65%,_Pectoralis_Major:_35%,_Triceps_Brachii:_25%,_Serratus_Anterior:_15%', workoutType: 'ChestTriceps' },
  { equipment: '', weights: '115', rest: '', name: 'Claps', variation: 'A/B', muscles: 'Pectoralis_Major:_80%,_Triceps_Brachii:_20%,_Anterior_Deltoids:_20%', workoutType: 'ChestTriceps' },
  { equipment: '', weights: '120', rest: '', name: 'Pushup', variation: 'A/B', muscles: 'Pectoralis_Major:_80%,_Triceps_Brachii:_30%,_Anterior_Deltoids:_25%,_Core:_15%', workoutType: 'ChestTriceps' },
  { equipment: '', weights: '125', rest: '', name: 'Incline_Bench_Press', variation: 'B', muscles: 'Pectoralis_Major:_75%,_Triceps_Brachii:_25%,_Anterior_Deltoids:_35%,_Serratus_Anterior:_10%', workoutType: 'ChestTriceps' },
  { equipment: '', weights: '130', rest: '', name: 'Shoulder_Press', variation: 'A/B', muscles: 'Deltoids:_80%,_Triceps_Brachii:_30%,_Trapezius:_20%,_Serratus_Anterior:_15%', workoutType: 'ChestTriceps' },
  { equipment: '', weights: '135', rest: '', name: 'Dips', variation: 'B', muscles: 'Pectoralis_Major:_65%,_Triceps_Brachii:_70%,_Anterior_Deltoids:_30%,_Core:_10%', workoutType: 'ChestTriceps' },
  { equipment: '', weights: '140', rest: '', name: 'Kettlebell_Halos', variation: 'A/B', muscles: 'Deltoids:_60%,_Trapezius:_30%,_Triceps_Brachii:_25%,_Core:_30%,_Grip/Forearms:_15%', workoutType: 'ChestTriceps' },
  { equipment: '', weights: '145', rest: '', name: 'Kettlebell_Press', variation: 'A/B', muscles: 'Deltoids:_70%,_Triceps_Brachii:_40%,_Core:_35%,_Grip/Forearms:_15%', workoutType: 'ChestTriceps' },
  
  { equipment: '', weights: '150', rest: '', name: 'Goblet_Squats', variation: 'A', muscles: 'Quadriceps:_65%,_Gluteus_Maximus:_50%,_Hamstrings:_20%,_Core:_25%,_Grip/Forearms:_5%', workoutType: 'Legs' },
  { equipment: '', weights: '155', rest: '', name: 'Dead_Lifts', variation: 'A', muscles: 'Hamstrings:_70%,_Gluteus_Maximus:_90%,_Erector_Spinae:_60%,_Core:_30%,_Grip/Forearms:_25%', workoutType: 'Legs' },
  { equipment: '', weights: '160', rest: '', name: 'Calf_Raises', variation: 'A', muscles: 'Gastrocnemius:_80%,_Soleus:_70%', workoutType: 'Legs' },
  { equipment: '', weights: '165', rest: '', name: 'Glute_Bridges', variation: 'B', muscles: 'Gluteus_Maximus:_90%,_Hamstrings:_40%,_Core:_20%,_Quadriceps:_10%', workoutType: 'Legs' },
  { equipment: '', weights: '170', rest: '', name: 'Box_Step-ups', variation: 'B', muscles: 'Quadriceps:_65%,_Gluteus_Maximus:_85%,_Hamstrings:_30%,_Erector_Spinae:_15%', workoutType: 'Legs' },
  { equipment: '', weights: '175', rest: '', name: 'Stiff_Legged_Deadlifts', variation: 'B', muscles: 'Gluteus_Maximus:_75%,_Hamstrings:_85%,_Erector_Spinae:_50%,_Core:_25%,_Grip/Forearms:_15%', workoutType: 'Legs' },
  { equipment: '', weights: '180', rest: '', name: 'Kettlebell_Swings', variation: 'A/B', muscles: 'Gluteus_Maximus:_80%,_Hamstrings:_70%,_Core:_40%,_Shoulders:_15%,_Grip/Forearms:_15%', workoutType: 'Legs' }
];

// Equipment mapping - which equipment can be used for which exercises
const equipmentMapping: Record<string, string[]> = {
  'Planks': ['Bodyweight'],
  'Spider_Planks': ['Bench', 'TRX'],
  'Bench_Situps': ['TRX', 'Bench'],
  'Hanging_Knee_Raises': ['Pull-up Bar', 'Kettlebell'],
  
  'Shoulder_Shrugs': ['Dumbbell', 'Barbell', 'Kettlebell'],
  'T_Row': ['T-Bar', 'Barbell', 'OYA'],
  'Incline_Hammer_Curl': ['Dumbbell', 'Cable'],
  'Neutral_Grip_Pull-ups': ['Pull-up Bar', 'Countertop'],
  'Bent_Over_Rows': ['Barbell', 'Dumbbell', 'Plybox'],
  'Row': ['Cable', 'Resistance Band', 'Barbell'],
  'Renegade_Rows': ['Dumbbell', 'Kettlebell'],
  'Single_Arm_Upright_Row': ['Dumbbell', 'Cable', 'Kettlebell'],
  'TRX_Bicep_Curl': ['TRX'],
  'Chin-Ups': ['Pull-up Bar'],
  'Face_Pull': ['Cable', 'Resistance Band'],
  'Concentration_Curl': ['Dumbbell'],
  'Wide_Grip_Pullups': ['Pull-up Bar'],
  
  'Bench_Press': ['Barbell', 'Dumbbell'],
  'Trx_Reverse_Flys': ['TRX'],
  'Tricep_Extension': ['Dumbbell', 'Cable', 'EZ-Bar'],
  'TRX_Pushup': ['TRX'],
  'Single_Arm_Bench': ['Dumbbell'],
  'Single_Arm_Incline': ['Dumbbell'],
  'Pullover': ['Dumbbell', 'Cable'],
  'Claps': ['Bodyweight'],
  'Pushup': ['Bodyweight'],
  'Incline_Bench_Press': ['Barbell', 'Dumbbell'],
  'Shoulder_Press': ['Barbell', 'Dumbbell'],
  'Dips': ['Bodyweight', 'Dip Station'],
  'Kettlebell_Halos': ['Kettlebell'],
  'Kettlebell_Press': ['Kettlebell'],
  
  'Goblet_Squats': ['Kettlebell', 'Dumbbell'],
  'Dead_Lifts': ['Barbell', 'Dumbbell'],
  'Calf_Raises': ['Bodyweight', 'Dumbbell', 'Barbell'],
  'Glute_Bridges': ['Bodyweight', 'Barbell', 'Dumbbell'],
  'Box_Step-ups': ['Bodyweight', 'Dumbbell', 'Kettlebell'],
  'Stiff_Legged_Deadlifts': ['Barbell', 'Dumbbell'],
  'Kettlebell_Swings': ['Kettlebell']
};

// Process raw data into proper exercise structure
export const processedExercises: Exercise[] = rawExerciseData.map((raw, index) => {
  const muscles = parseMuscleActivation(raw.muscles);
  const name = raw.name.replace(/_/g, ' ');
  const workoutType = raw.workoutType === 'Abs' ? 'Core' : 
                     raw.workoutType === 'BackBiceps' ? 'Pull' : 
                     raw.workoutType === 'ChestTriceps' ? 'Push' : 
                     raw.workoutType as 'Push' | 'Pull' | 'Legs' | 'Core';
  
  return {
    id: index + 1,
    name,
    workoutType,
    primaryMuscleGroup: getPrimaryMuscleGroup(raw.workoutType, muscles),
    exerciseType: getExerciseType(name, muscles),
    variation: raw.variation as 'A' | 'B' | 'A/B',
    equipment: equipmentMapping[raw.name] || ['Bodyweight'],
    muscleActivation: muscles,
    restTime: parseRestTime(raw.rest)
  };
});

// Create muscle group mappings
export const muscleGroupMappings = {
  Push: ['Chest', 'Shoulders', 'Triceps'],
  Pull: ['Lats', 'Traps', 'Biceps', 'Rhomboids'],
  Legs: ['Quads', 'Hamstrings', 'Glutes', 'Calves'],
  Core: ['Abs', 'Obliques', 'Lower Back']
};

// Export everything
export {
  rawExerciseData,
  equipmentMapping,
  parseMuscleActivation,
  getPrimaryMuscleGroup,
  getExerciseType,
  parseRestTime
};

console.log(`Processed ${processedExercises.length} exercises from real data`);
console.log('Workout types:', [...new Set(processedExercises.map(e => e.workoutType))]);
console.log('Primary muscle groups:', [...new Set(processedExercises.map(e => e.primaryMuscleGroup))]);
console.log('Exercise types:', [...new Set(processedExercises.map(e => e.exerciseType))]);
</file>
<file path="FitForge/scripts/seed-global-exercises.ts">
// Seed script to populate global exercise library with Ender's exercise database
import { enderExerciseDatabase } from './ender-real-exercises.js';

// Transform Ender's exercise data to match enhanced schema
export const globalExerciseLibrary = enderExerciseDatabase.map(exercise => ({
  exerciseName: exercise.exerciseName,
  equipmentType: exercise.equipmentType,
  category: exercise.category,
  movementType: exercise.movementType,
  
  // Transform muscle data to match schema format
  primaryMuscles: exercise.primaryMuscles,
  secondaryMuscles: exercise.secondaryMuscles || [],
  stabilizingMuscles: [], // Can be added later
  
  equipment: exercise.equipment,
  variations: [exercise.variation], // Convert single variation to array
  difficulty: exercise.difficulty,
  
  // Will be added later as content is created
  instructions: null,
  videoUrl: null,
  imageUrl: null
}));

// Ender's personal exercise selections (all exercises initially)
export const enderPersonalExercises = enderExerciseDatabase.map((exercise, index) => ({
  // userId will be resolved at runtime (Ender's user ID)
  exerciseId: index + 1, // Matches the global exercise library index
  
  // Personal customizations based on Ender's data
  personalNotes: `Workout Type: ${exercise.workoutType}, Variation: ${exercise.variation}`,
  customWeight: exercise.weight === "Bodyweight" ? null : parseFloat(exercise.weight.toString()),
  customReps: exercise.reps,
  customSets: 3, // Default assumption
  
  // Usage tracking (will be updated as workouts are performed)
  lastPerformed: null,
  timesPerformed: 0,
  isFavorite: ["Bench Press", "Dead Lifts", "Squats", "Pull-ups"].includes(exercise.exerciseName)
}));

// Workout templates based on Ender's workout groupings
export const enderWorkoutTemplates = [
  {
    name: "Ender's Core Workout",
    description: "Comprehensive core strengthening with progressive hold times",
    workoutType: "Abs",
    targetMuscles: ["Rectus Abdominis", "Transverse Abdominis", "Obliques"],
    exercises: enderExerciseDatabase
      .filter(ex => ex.workoutType === "Abs")
      .map((ex, i) => ({
        exerciseId: enderExerciseDatabase.indexOf(ex) + 1,
        sets: 3,
        reps: ex.reps,
        weight: ex.weight === "Bodyweight" ? null : ex.weight,
        restTime: ex.restTime,
        order: i + 1
      })),
    estimatedDuration: 30,
    difficultyLevel: "Intermediate",
    isPublic: true
  },
  {
    name: "Ender's Pull Day",
    description: "Back and bicep development with compound movements", 
    workoutType: "BackBiceps",
    targetMuscles: ["Latissimus Dorsi", "Rhomboids", "Biceps Brachii"],
    exercises: enderExerciseDatabase
      .filter(ex => ex.workoutType === "BackBiceps")
      .map((ex, i) => ({
        exerciseId: enderExerciseDatabase.indexOf(ex) + 1,
        sets: 3,
        reps: ex.reps,
        weight: ex.weight === "Bodyweight" ? null : ex.weight,
        restTime: ex.restTime,
        order: i + 1
      })),
    estimatedDuration: 60,
    difficultyLevel: "Intermediate",
    isPublic: true
  },
  {
    name: "Ender's Push Day",
    description: "Chest and tricep focus with pressing movements",
    workoutType: "ChestTriceps", 
    targetMuscles: ["Pectoralis Major", "Triceps Brachii", "Deltoids"],
    exercises: enderExerciseDatabase
      .filter(ex => ex.workoutType === "ChestTriceps")
      .map((ex, i) => ({
        exerciseId: enderExerciseDatabase.indexOf(ex) + 1,
        sets: 3,
        reps: ex.reps,
        weight: ex.weight === "Bodyweight" ? null : ex.weight,
        restTime: ex.restTime,
        order: i + 1
      })),
    estimatedDuration: 75,
    difficultyLevel: "Intermediate", 
    isPublic: true
  },
  {
    name: "Ender's Leg Day",
    description: "Lower body compound movements and glute activation",
    workoutType: "Legs",
    targetMuscles: ["Quadriceps", "Gluteus Maximus", "Hamstrings"],
    exercises: enderExerciseDatabase
      .filter(ex => ex.workoutType === "Legs")
      .map((ex, i) => ({
        exerciseId: enderExerciseDatabase.indexOf(ex) + 1,
        sets: 3,
        reps: ex.reps,
        weight: ex.weight === "Bodyweight" ? null : ex.weight,
        restTime: ex.restTime,
        order: i + 1
      })),
    estimatedDuration: 50,
    difficultyLevel: "Advanced",
    isPublic: true
  }
];

console.log(`Global Exercise Library: ${globalExerciseLibrary.length} exercises`);
console.log(`Ender's Personal Collection: ${enderPersonalExercises.length} exercises`);
console.log(`Ender's Workout Templates: ${enderWorkoutTemplates.length} templates`);
</file>
<file path="FitForge/scripts/seed-real-exercises.ts">
import { db } from '../server/storage';
import { exerciseLibrary } from '../shared/enhanced-schema';
import { enderExerciseDatabase, enderWorkoutRoutines } from './ender-real-exercises';

async function seedRealExercises() {
  console.log('🌱 Seeding real exercise database...');
  
  try {
    // Clear existing exercises
    await db.delete(exerciseLibrary);
    console.log('✅ Cleared existing exercise data');
    
    // Insert Ender's real exercise database
    for (const exercise of enderExerciseDatabase) {
      await db.insert(exerciseLibrary).values({
        exerciseName: exercise.exerciseName,
        equipmentType: exercise.equipmentType,
        category: exercise.category,
        movementType: exercise.movementType,
        primaryMuscles: exercise.primaryMuscles,
        secondaryMuscles: exercise.secondaryMuscles,
        equipment: exercise.equipment,
        difficulty: exercise.difficulty,
        instructions: `${exercise.exerciseName} - ${exercise.category} ${exercise.movementType} exercise using ${exercise.equipmentType}. Targets ${exercise.primaryMuscles.map(m => m.muscle).join(', ')}.`,
        // Add variation and workout type as metadata
        variations: [exercise.variation],
      });
    }
    
    console.log(`✅ Inserted ${enderExerciseDatabase.length} real exercises`);
    console.log('📊 Exercise breakdown:');
    
    // Show breakdown by workout type
    Object.entries(enderWorkoutRoutines).forEach(([type, routine]) => {
      console.log(`   ${type}: ${routine.exercises.length} exercises (${routine.duration}min)`);
    });
    
    console.log('🎯 Workout type mapping:');
    console.log('   • Abs → Core workouts');
    console.log('   • BackBiceps → Pull workouts');  
    console.log('   • ChestTriceps → Push workouts');
    console.log('   • Legs → Leg workouts');
    
    console.log('🚀 Real exercise database seeded successfully!');
    
  } catch (error) {
    console.error('❌ Error seeding exercises:', error);
    throw error;
  }
}

// Run if called directly
if (require.main === module) {
  seedRealExercises()
    .then(() => process.exit(0))
    .catch((error) => {
      console.error(error);
      process.exit(1);
    });
}

export { seedRealExercises };
</file>
<file path="FitForge/scripts/setup-database.ts">
#!/usr/bin/env tsx

import { exerciseDatabase } from './import-exercise-database';
import { storage } from '../server/storage';

// Enhanced workout templates based on your exercise preferences
const workoutTemplates = [
  {
    name: "Push Day - Chest Focus",
    description: "Comprehensive push day targeting chest, shoulders, and triceps",
    workoutType: "Push",
    targetMuscles: ["Chest", "Shoulders", "Triceps"],
    exercises: [
      {
        exerciseName: "Bench Press",
        targetSets: 4,
        targetReps: "8-10",
        restTime: 180,
        notes: "Focus on controlled eccentric, pause at chest"
      },
      {
        exerciseName: "Incline Bench Press", 
        targetSets: 3,
        targetReps: "10-12",
        restTime: 120,
        notes: "30° incline, full range of motion"
      },
      {
        exerciseName: "Dumbbell Press",
        targetSets: 3,
        targetReps: "12-15",
        restTime: 90,
        notes: "Squeeze at top, slow negative"
      },
      {
        exerciseName: "Shoulder Press",
        targetSets: 3,
        targetReps: "10-12", 
        restTime: 120,
        notes: "Military style, strict form"
      },
      {
        exerciseName: "Lateral Raises",
        targetSets: 3,
        targetReps: "15-20",
        restTime: 60,
        notes: "Light weight, focus on mind-muscle connection"
      },
      {
        exerciseName: "Close Grip Bench Press",
        targetSets: 3,
        targetReps: "10-12",
        restTime: 120,
        notes: "Tricep focused, hands shoulder-width apart"
      }
    ],
    estimatedDuration: 75,
    difficultyLevel: "Intermediate"
  },
  {
    name: "Pull Day - Back Focus", 
    description: "Complete pull day for back, biceps, and rear delts",
    workoutType: "Pull",
    targetMuscles: ["Back", "Biceps", "Rear Delts"],
    exercises: [
      {
        exerciseName: "Deadlift",
        targetSets: 4,
        targetReps: "5-6",
        restTime: 240,
        notes: "Conventional stance, maintain neutral spine"
      },
      {
        exerciseName: "Pull-ups",
        targetSets: 4,
        targetReps: "8-12",
        restTime: 180,
        notes: "Full dead hang, chin over bar"
      },
      {
        exerciseName: "Bent Over Row",
        targetSets: 4,
        targetReps: "8-10",
        restTime: 150,
        notes: "45° torso angle, squeeze shoulder blades"
      },
      {
        exerciseName: "T-Row",
        targetSets: 3,
        targetReps: "12-15",
        restTime: 120,
        notes: "Wide grip, focus on rhomboids"
      },
      {
        exerciseName: "Face Pulls",
        targetSets: 3,
        targetReps: "15-20",
        restTime: 90,
        notes: "High rep, external rotation focus"
      },
      {
        exerciseName: "Barbell Curl",
        targetSets: 3,
        targetReps: "10-12",
        restTime: 90,
        notes: "Strict form, no swinging"
      }
    ],
    estimatedDuration: 80,
    difficultyLevel: "Advanced"
  },
  {
    name: "Leg Day - Compound Focus",
    description: "Heavy compound movements for maximum leg development", 
    workoutType: "Legs",
    targetMuscles: ["Quadriceps", "Hamstrings", "Glutes", "Calves"],
    exercises: [
      {
        exerciseName: "Squat",
        targetSets: 5,
        targetReps: "6-8",
        restTime: 240,
        notes: "Below parallel, drive through heels"
      },
      {
        exerciseName: "Romanian Deadlift",
        targetSets: 4,
        targetReps: "8-10",
        restTime: 180,
        notes: "Hinge at hips, feel hamstring stretch"
      },
      {
        exerciseName: "Goblet Squat",
        targetSets: 3,
        targetReps: "15-20",
        restTime: 120,
        notes: "Goblet hold, ass to grass depth"
      },
      {
        exerciseName: "Calf Raises",
        targetSets: 4,
        targetReps: "15-20",
        restTime: 90,
        notes: "Full range, pause at top"
      }
    ],
    estimatedDuration: 60,
    difficultyLevel: "Advanced"
  }
];

async function setupDatabase() {
  console.log("🚀 Setting up FitForge database with exercise library...");
  
  try {
    // Import exercise database
    console.log(`📚 Importing ${exerciseDatabase.length} exercises...`);
    for (const exercise of exerciseDatabase) {
      try {
        // Check if exercise already exists
        const existing = await storage.db
          .select()
          .from(storage.exerciseLibrary)
          .where(storage.eq(storage.exerciseLibrary.exerciseName, exercise.exerciseName))
          .limit(1);
          
        if (existing.length === 0) {
          await storage.db.insert(storage.exerciseLibrary).values(exercise);
          console.log(`✓ Imported: ${exercise.exerciseName}`);
        } else {
          console.log(`⏭️  Skipped: ${exercise.exerciseName} (already exists)`);
        }
      } catch (error) {
        console.error(`✗ Failed to import ${exercise.exerciseName}:`, error);
      }
    }
    
    // Import workout templates  
    console.log(`💪 Creating ${workoutTemplates.length} workout templates...`);
    for (const template of workoutTemplates) {
      try {
        const existing = await storage.db
          .select()
          .from(storage.workoutTemplates)
          .where(storage.eq(storage.workoutTemplates.name, template.name))
          .limit(1);
          
        if (existing.length === 0) {
          await storage.db.insert(storage.workoutTemplates).values({
            ...template,
            userId: null, // Public templates
            isPublic: true,
            exercises: template.exercises
          });
          console.log(`✓ Created: ${template.name}`);
        } else {
          console.log(`⏭️  Skipped: ${template.name} (already exists)`);
        }
      } catch (error) {
        console.error(`✗ Failed to create ${template.name}:`, error);
      }
    }
    
    console.log("🎉 Database setup complete!");
    console.log("📊 Summary:");
    console.log(`   - ${exerciseDatabase.length} exercises available`);
    console.log(`   - ${workoutTemplates.length} workout templates created`);
    console.log(`   - Ready for workout tracking!`);
    
  } catch (error) {
    console.error("❌ Database setup failed:", error);
    process.exit(1);
  }
}

// Auto-run setup if called directly
setupDatabase();

export { setupDatabase };
</file>
<file path="FitForge/server/index.ts">
import express, { type Request, Response, NextFunction } from "express";
import { registerRoutes } from "./routes";
import { setupVite, serveStatic, log } from "./vite";

const app = express();
app.use(express.json());
app.use(express.urlencoded({ extended: false }));

app.use((req, res, next) => {
  const start = Date.now();
  const path = req.path;
  let capturedJsonResponse: Record<string, any> | undefined = undefined;

  const originalResJson = res.json;
  res.json = function (bodyJson, ...args) {
    capturedJsonResponse = bodyJson;
    return originalResJson.apply(res, [bodyJson, ...args]);
  };

  res.on("finish", () => {
    const duration = Date.now() - start;
    if (path.startsWith("/api")) {
      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;
      if (capturedJsonResponse) {
        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;
      }

      if (logLine.length > 80) {
        logLine = logLine.slice(0, 79) + "…";
      }

      log(logLine);
    }
  });

  next();
});

(async () => {
  const server = await registerRoutes(app);

  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {
    const status = err.status || err.statusCode || 500;
    const message = err.message || "Internal Server Error";

    res.status(status).json({ message });
    throw err;
  });

  // importantly only setup vite in development and after
  // setting up all the other routes so the catch-all route
  // doesn't interfere with the other routes
  if (app.get("env") === "development") {
    await setupVite(app, server);
  } else {
    serveStatic(app);
  }

  // ALWAYS serve the app on port 5000
  // this serves both the API and the client.
  // It is the only port that is not firewalled.
  const port = 5000;
  server.listen({
    port,
    host: "0.0.0.0",
    reusePort: true,
  }, () => {
    log(`serving on port ${port}`);
  });
})();

</file>
<file path="FitForge/server/routes.ts">
import type { Express } from "express";
import { createServer, type Server } from "http";
import { storage } from "./storage";
import bcrypt from "bcrypt";
import jwt from "jsonwebtoken";
import { 
  insertUserSchema, loginSchema, insertWorkoutSchema, 
  insertWorkoutSessionSchema, insertUserStatsSchema,
  insertAchievementSchema, insertChallengeSchema,
  insertChallengeParticipationSchema, insertSocialPostSchema
} from "@shared/schema";

const JWT_SECRET = process.env.JWT_SECRET || "fitforge-secret-key";

interface AuthRequest extends Request {
  userId?: number;
}

// Middleware to auto-assign Ender's user ID (bypasses authentication for testing)
const authenticateToken = (req: any, res: any, next: any) => {
  // Auto-assign Ender's user ID (first user in storage)
  req.userId = 1;
  next();
};

export async function registerRoutes(app: Express): Promise<Server> {
  // Auth routes
  app.post("/api/auth/register", async (req, res) => {
    try {
      const userData = insertUserSchema.parse(req.body);
      
      // Check if user already exists
      const existingUser = await storage.getUserByEmail(userData.email);
      if (existingUser) {
        return res.status(400).json({ message: "User already exists" });
      }

      // Hash password
      const hashedPassword = await bcrypt.hash(userData.password, 10);
      
      // Create user
      const user = await storage.createUser({
        ...userData,
        password: hashedPassword
      });

      // Generate JWT token
      const token = jwt.sign({ userId: user.id }, JWT_SECRET, { expiresIn: '24h' });

      res.json({
        token,
        user: {
          id: user.id,
          username: user.username,
          email: user.email,
          firstName: user.firstName,
          lastName: user.lastName,
          profileImage: user.profileImage
        }
      });
    } catch (error: any) {
      res.status(400).json({ message: error.message });
    }
  });

  app.post("/api/auth/login", async (req, res) => {
    try {
      const { email } = req.body; // Only require email for now
      
      // Find user by email
      const user = await storage.getUserByEmail(email);
      if (!user) {
        return res.status(400).json({ message: "No account found with that email address" });
      }

      // Generate JWT token (skip password verification for now)
      const token = jwt.sign({ userId: user.id }, JWT_SECRET, { expiresIn: '24h' });

      res.json({
        token,
        user: {
          id: user.id,
          username: user.username,
          email: user.email,
          firstName: user.firstName,
          lastName: user.lastName,
          profileImage: user.profileImage
        }
      });
    } catch (error: any) {
      res.status(400).json({ message: error.message });
    }
  });

  app.get("/api/auth/me", async (req: any, res) => {
    try {
      // Auto-return Ender's profile (user ID 1)
      const user = await storage.getUser(1);
      if (!user) {
        return res.status(404).json({ message: "User not found" });
      }

      res.json({
        id: user.id,
        username: user.username,
        email: user.email,
        firstName: user.firstName,
        lastName: user.lastName,
        profileImage: user.profileImage,
        createdAt: user.createdAt
      });
    } catch (error: any) {
      res.status(500).json({ message: error.message });
    }
  });

  // Profile update routes
  app.patch("/api/auth/profile", authenticateToken, async (req: any, res) => {
    try {
      const userId = req.userId;
      const updates = req.body;
      
      // Only allow certain fields to be updated
      const allowedFields = ['firstName', 'lastName', 'email', 'height', 'weight'];
      const filteredUpdates = Object.keys(updates)
        .filter(key => allowedFields.includes(key))
        .reduce((obj, key) => {
          obj[key] = updates[key];
          return obj;
        }, {} as any);

      if (Object.keys(filteredUpdates).length === 0) {
        return res.status(400).json({ message: "No valid fields to update" });
      }

      // For this demo, we'll simulate a successful update
      // In a real app, this would update the database
      const updatedUser = {
        id: userId,
        ...filteredUpdates,
        updatedAt: new Date().toISOString()
      };
      
      res.json({
        message: "Profile updated successfully",
        user: updatedUser
      });
    } catch (error: any) {
      res.status(400).json({ message: error.message });
    }
  });

  app.patch("/api/auth/goals", authenticateToken, async (req: any, res) => {
    try {
      const userId = req.userId;
      const { weeklyWorkouts, targetWeight, dailyCalories } = req.body;
      
      // In a real app, this would save to a user_goals table
      const goals = {
        userId,
        weeklyWorkouts: Number(weeklyWorkouts),
        targetWeight: Number(targetWeight),
        dailyCalories: Number(dailyCalories),
        updatedAt: new Date().toISOString()
      };
      
      res.json({
        message: "Goals updated successfully",
        goals
      });
    } catch (error: any) {
      res.status(400).json({ message: error.message });
    }
  });

  // Exercise library routes
  app.get("/api/exercises", async (req, res) => {
    try {
      const { enderExerciseDatabase } = await import("../scripts/ender-real-exercises");
      
      // Return all exercises with filtering options
      const { category, workoutType, equipment } = req.query;
      let exercises = enderExerciseDatabase;
      
      if (category) {
        exercises = exercises.filter(ex => ex.category === category);
      }
      if (workoutType) {
        exercises = exercises.filter(ex => ex.workoutType === workoutType);
      }
      if (equipment) {
        exercises = exercises.filter(ex => ex.equipmentType === equipment);
      }
      
      res.json(exercises);
    } catch (error: any) {
      res.status(500).json({ message: error.message });
    }
  });

  // Workout routes
  app.get("/api/workouts", async (req, res) => {
    try {
      const { category, difficulty } = req.query;
      const workouts = await storage.getWorkouts({
        category: category as string,
        difficulty: difficulty as string
      });
      res.json(workouts);
    } catch (error: any) {
      res.status(500).json({ message: error.message });
    }
  });

  app.get("/api/workouts/:id", async (req, res) => {
    try {
      const id = parseInt(req.params.id);
      const workout = await storage.getWorkout(id);
      if (!workout) {
        return res.status(404).json({ message: "Workout not found" });
      }
      res.json(workout);
    } catch (error: any) {
      res.status(500).json({ message: error.message });
    }
  });

  app.post("/api/workouts", authenticateToken, async (req: any, res) => {
    try {
      const workoutData = insertWorkoutSchema.parse({
        ...req.body,
        userId: req.userId
      });
      const workout = await storage.createWorkout(workoutData);
      res.json(workout);
    } catch (error: any) {
      res.status(400).json({ message: error.message });
    }
  });

  // Get previous workout data for ghost text (target calculations)
  app.get("/api/exercises/:exerciseName/previous", authenticateToken, async (req, res) => {
    try {
      const { exerciseName } = req.params;
      const userId = (req as any).userId;
      
      // Get user's workout sessions
      const sessions = await storage.getWorkoutSessions(userId);
      
      // Find the most recent session containing this exercise
      for (const session of sessions.reverse()) { // Most recent first
        if (session.exercises) {
          const exerciseData = Array.isArray(session.exercises) ? session.exercises.find((ex: any) => ex.exerciseName === exerciseName) : null;
          if (exerciseData && exerciseData.sets && exerciseData.sets.length > 0) {
            // Calculate +3% targets based on previous performance
            const lastSet = exerciseData.sets[exerciseData.sets.length - 1];
            const targets = {
              weight: lastSet.weight ? Math.ceil(lastSet.weight * 1.03) : lastSet.weight,
              reps: lastSet.reps ? Math.ceil(lastSet.reps * 1.03) : lastSet.reps,
              previous: {
                weight: lastSet.weight,
                reps: lastSet.reps,
                formScore: lastSet.formScore,
                date: session.startTime
              }
            };
            
            return res.json(targets);
          }
        }
      }
      
      // No previous data found
      res.json({ weight: null, reps: null, previous: null });
    } catch (error: any) {
      res.status(500).json({ message: error.message });
    }
  });

  // Workout session routes
  app.get("/api/workout-sessions", authenticateToken, async (req: any, res) => {
    try {
      const sessions = await storage.getWorkoutSessions(req.userId);
      res.json(sessions);
    } catch (error: any) {
      res.status(500).json({ message: error.message });
    }
  });

  app.post("/api/workout-sessions", authenticateToken, async (req: any, res) => {
    try {
      const sessionData = insertWorkoutSessionSchema.parse({
        ...req.body,
        userId: req.userId
      });
      const session = await storage.createWorkoutSession(sessionData);
      res.json(session);
    } catch (error: any) {
      res.status(400).json({ message: error.message });
    }
  });

  app.patch("/api/workout-sessions/:id", authenticateToken, async (req: any, res) => {
    try {
      const id = parseInt(req.params.id);
      const updates = req.body;
      const session = await storage.updateWorkoutSession(id, updates);
      if (!session) {
        return res.status(404).json({ message: "Session not found" });
      }
      res.json(session);
    } catch (error: any) {
      res.status(500).json({ message: error.message });
    }
  });

  // User stats routes
  app.get("/api/user-stats", authenticateToken, async (req: any, res) => {
    try {
      const limit = req.query.limit ? parseInt(req.query.limit as string) : undefined;
      const stats = await storage.getUserStats(req.userId, limit);
      res.json(stats);
    } catch (error: any) {
      res.status(500).json({ message: error.message });
    }
  });

  app.get("/api/user-stats/latest", authenticateToken, async (req: any, res) => {
    try {
      const stats = await storage.getLatestUserStats(req.userId);
      res.json(stats);
    } catch (error: any) {
      res.status(500).json({ message: error.message });
    }
  });

  app.post("/api/user-stats", authenticateToken, async (req: any, res) => {
    try {
      const statsData = insertUserStatsSchema.parse({
        ...req.body,
        userId: req.userId
      });
      const stats = await storage.createUserStats(statsData);
      res.json(stats);
    } catch (error: any) {
      res.status(400).json({ message: error.message });
    }
  });

  // Achievement routes
  app.get("/api/achievements", authenticateToken, async (req: any, res) => {
    try {
      const achievements = await storage.getUserAchievements(req.userId);
      res.json(achievements);
    } catch (error: any) {
      res.status(500).json({ message: error.message });
    }
  });

  app.post("/api/achievements", authenticateToken, async (req: any, res) => {
    try {
      const achievementData = insertAchievementSchema.parse({
        ...req.body,
        userId: req.userId
      });
      const achievement = await storage.createAchievement(achievementData);
      res.json(achievement);
    } catch (error: any) {
      res.status(400).json({ message: error.message });
    }
  });

  // Challenge routes
  app.get("/api/challenges", async (req, res) => {
    try {
      const challenges = await storage.getActiveChallenges();
      res.json(challenges);
    } catch (error: any) {
      res.status(500).json({ message: error.message });
    }
  });

  app.get("/api/challenges/my-participations", authenticateToken, async (req: any, res) => {
    try {
      const participations = await storage.getChallengeParticipations(req.userId);
      res.json(participations);
    } catch (error: any) {
      res.status(500).json({ message: error.message });
    }
  });

  app.post("/api/challenges/:id/join", authenticateToken, async (req: any, res) => {
    try {
      const challengeId = parseInt(req.params.id);
      const participation = await storage.joinChallenge({
        userId: req.userId,
        challengeId,
        progress: 0,
        isCompleted: false
      });
      res.json(participation);
    } catch (error: any) {
      res.status(400).json({ message: error.message });
    }
  });

  app.patch("/api/challenges/:id/progress", authenticateToken, async (req: any, res) => {
    try {
      const challengeId = parseInt(req.params.id);
      const { progress } = req.body;
      const participation = await storage.updateChallengeProgress(req.userId, challengeId, progress);
      if (!participation) {
        return res.status(404).json({ message: "Participation not found" });
      }
      res.json(participation);
    } catch (error: any) {
      res.status(500).json({ message: error.message });
    }
  });

  // Social routes
  app.get("/api/social/posts", async (req, res) => {
    try {
      const limit = req.query.limit ? parseInt(req.query.limit as string) : undefined;
      const posts = await storage.getSocialPosts(limit);
      res.json(posts);
    } catch (error: any) {
      res.status(500).json({ message: error.message });
    }
  });

  app.post("/api/social/posts", authenticateToken, async (req: any, res) => {
    try {
      const postData = insertSocialPostSchema.parse({
        ...req.body,
        userId: req.userId
      });
      const post = await storage.createSocialPost(postData);
      res.json(post);
    } catch (error: any) {
      res.status(400).json({ message: error.message });
    }
  });

  app.post("/api/social/posts/:id/like", authenticateToken, async (req: any, res) => {
    try {
      const postId = parseInt(req.params.id);
      const success = await storage.likeSocialPost(postId);
      if (!success) {
        return res.status(404).json({ message: "Post not found" });
      }
      res.json({ success: true });
    } catch (error: any) {
      res.status(500).json({ message: error.message });
    }
  });

  // Nutrition routes
  app.get("/api/nutrition/foods/search", async (req, res) => {
    try {
      const { q } = req.query;
      if (!q || typeof q !== 'string') {
        return res.status(400).json({ message: "Search query required" });
      }
      
      // Mock food database - in a real app this would be a proper food API
      const mockFoods = [
        { id: 1, name: "Banana", calories: 105, protein: 1.3, carbs: 27, fat: 0.3, serving: "1 medium" },
        { id: 2, name: "Chicken Breast", calories: 231, protein: 43.5, carbs: 0, fat: 5, serving: "4 oz" },
        { id: 3, name: "Brown Rice", calories: 216, protein: 5, carbs: 45, fat: 1.8, serving: "1 cup cooked" },
        { id: 4, name: "Eggs", calories: 140, protein: 12, carbs: 1, fat: 10, serving: "2 large" },
        { id: 5, name: "Almonds", calories: 164, protein: 6, carbs: 6, fat: 14, serving: "1 oz" },
        { id: 6, name: "Avocado", calories: 160, protein: 2, carbs: 9, fat: 15, serving: "1/2 medium" },
        { id: 7, name: "Greek Yogurt", calories: 100, protein: 17, carbs: 6, fat: 0, serving: "6 oz" },
        { id: 8, name: "Oatmeal", calories: 150, protein: 5, carbs: 27, fat: 3, serving: "1/2 cup dry" },
        { id: 9, name: "Salmon", calories: 208, protein: 28, carbs: 0, fat: 10, serving: "4 oz" },
        { id: 10, name: "Quinoa", calories: 222, protein: 8, carbs: 39, fat: 4, serving: "1 cup cooked" }
      ];
      
      const results = mockFoods.filter(food => 
        food.name.toLowerCase().includes(q.toLowerCase())
      );
      
      res.json(results);
    } catch (error: any) {
      res.status(500).json({ message: error.message });
    }
  });

  app.post("/api/nutrition/log", authenticateToken, async (req: any, res) => {
    try {
      const { foodId, foodName, calories, protein, carbs, fat, serving, mealType } = req.body;
      
      // In a real app, this would save to a nutrition_logs table
      // For now, just return success with the logged food data
      const logEntry = {
        id: Date.now(), // Mock ID
        userId: req.userId,
        foodId,
        foodName,
        calories: Number(calories),
        protein: Number(protein),
        carbs: Number(carbs),
        fat: Number(fat),
        serving,
        mealType: mealType || 'snack',
        loggedAt: new Date().toISOString()
      };
      
      res.json(logEntry);
    } catch (error: any) {
      res.status(400).json({ message: error.message });
    }
  });

  app.get("/api/nutrition/daily-intake", authenticateToken, async (req: any, res) => {
    try {
      const { date } = req.query;
      const targetDate = date ? new Date(date as string) : new Date();
      
      // Mock daily intake data - in a real app this would aggregate from nutrition_logs
      const dailyIntake = {
        date: targetDate.toISOString().split('T')[0],
        calories: 1650,
        protein: 98,
        carbs: 180,
        fat: 45,
        meals: [
          {
            type: 'breakfast',
            foods: [
              { name: 'Oatmeal with berries', calories: 320, protein: 12 }
            ]
          },
          {
            type: 'lunch', 
            foods: [
              { name: 'Chicken salad bowl', calories: 450, protein: 35 }
            ]
          },
          {
            type: 'snack',
            foods: [
              { name: 'Greek yogurt', calories: 150, protein: 15 }
            ]
          },
          {
            type: 'dinner',
            foods: [
              { name: 'Salmon with quinoa', calories: 520, protein: 36 }
            ]
          }
        ]
      };
      
      res.json(dailyIntake);
    } catch (error: any) {
      res.status(500).json({ message: error.message });
    }
  });

  const httpServer = createServer(app);
  return httpServer;
}

</file>
<file path="FitForge/server/storage.ts">
import { 
  users, workouts, workoutSessions, userStats, achievements, 
  challenges, challengeParticipations, socialPosts,
  type User, type InsertUser, type Workout, type InsertWorkout,
  type WorkoutSession, type InsertWorkoutSession, type UserStats, type InsertUserStats,
  type Achievement, type InsertAchievement, type Challenge, type InsertChallenge,
  type ChallengeParticipation, type InsertChallengeParticipation,
  type SocialPost, type InsertSocialPost
} from "@shared/schema";
import { enderExerciseDatabase, enderWorkoutRoutines } from "../scripts/ender-real-exercises";
import { generateSixMonthWorkoutHistory } from "../scripts/generate-realistic-workout-history";

export interface IStorage {
  // User methods
  getUser(id: number): Promise<User | undefined>;
  getUserByEmail(email: string): Promise<User | undefined>;
  getUserByUsername(username: string): Promise<User | undefined>;
  createUser(user: InsertUser): Promise<User>;
  updateUser(id: number, updates: Partial<InsertUser>): Promise<User | undefined>;

  // Workout methods
  getWorkouts(filters?: { category?: string; difficulty?: string; userId?: number }): Promise<Workout[]>;
  getWorkout(id: number): Promise<Workout | undefined>;
  createWorkout(workout: InsertWorkout): Promise<Workout>;
  updateWorkout(id: number, updates: Partial<InsertWorkout>): Promise<Workout | undefined>;
  deleteWorkout(id: number): Promise<boolean>;

  // Workout session methods
  getWorkoutSessions(userId: number): Promise<WorkoutSession[]>;
  getWorkoutSession(id: number): Promise<WorkoutSession | undefined>;
  createWorkoutSession(session: InsertWorkoutSession): Promise<WorkoutSession>;
  updateWorkoutSession(id: number, updates: Partial<InsertWorkoutSession>): Promise<WorkoutSession | undefined>;

  // User stats methods
  getUserStats(userId: number, limit?: number): Promise<UserStats[]>;
  createUserStats(stats: InsertUserStats): Promise<UserStats>;
  getLatestUserStats(userId: number): Promise<UserStats | undefined>;

  // Achievement methods
  getUserAchievements(userId: number): Promise<Achievement[]>;
  createAchievement(achievement: InsertAchievement): Promise<Achievement>;

  // Challenge methods
  getActiveChallenges(): Promise<Challenge[]>;
  getChallenge(id: number): Promise<Challenge | undefined>;
  createChallenge(challenge: InsertChallenge): Promise<Challenge>;
  getChallengeParticipations(userId: number): Promise<(ChallengeParticipation & { challenge: Challenge })[]>;
  joinChallenge(participation: InsertChallengeParticipation): Promise<ChallengeParticipation>;
  updateChallengeProgress(userId: number, challengeId: number, progress: number): Promise<ChallengeParticipation | undefined>;

  // Social methods
  getSocialPosts(limit?: number): Promise<(SocialPost & { user: Pick<User, 'id' | 'firstName' | 'lastName' | 'profileImage'> })[]>;
  createSocialPost(post: InsertSocialPost): Promise<SocialPost>;
  likeSocialPost(postId: number): Promise<boolean>;
}

export class MemStorage implements IStorage {
  private users: Map<number, User>;
  private workouts: Map<number, Workout>;
  private workoutSessions: Map<number, WorkoutSession>;
  private userStats: Map<number, UserStats>;
  private achievements: Map<number, Achievement>;
  private challenges: Map<number, Challenge>;
  private challengeParticipations: Map<number, ChallengeParticipation>;
  private socialPosts: Map<number, SocialPost>;
  private currentId: number;

  constructor() {
    this.users = new Map();
    this.workouts = new Map();
    this.workoutSessions = new Map();
    this.userStats = new Map();
    this.achievements = new Map();
    this.challenges = new Map();
    this.challengeParticipations = new Map();
    this.socialPosts = new Map();
    this.currentId = 1;
    
    this.seedData();
  }

  private seedData() {
    // Create real workouts from Ender's exercise database with A/B variations
    const realWorkouts: InsertWorkout[] = [
      // PUSH DAY - Chest & Triceps
      {
        userId: 1,
        name: enderWorkoutRoutines.ChestTriceps.name,
        description: enderWorkoutRoutines.ChestTriceps.description,
        category: "strength",
        difficulty: "intermediate",
        duration: enderWorkoutRoutines.ChestTriceps.duration,
        calories: enderWorkoutRoutines.ChestTriceps.duration * 5.5, // ~5.5 cal/min for strength training
        equipment: ["barbell", "dumbbells", "trx", "bench", "kettlebell"],
        exercises: enderWorkoutRoutines.ChestTriceps.exercises.slice(0, 6).map(ex => ({
          name: ex.exerciseName,
          sets: 3,
          reps: ex.reps <= 5 ? 12 : Math.max(8, 15 - ex.reps),
          weight: ex.weight === "Bodyweight" ? undefined : ex.weight,
          equipment: ex.equipmentType,
          primaryMuscles: ex.primaryMuscles.map(m => `${m.muscle}:${m.percentage}%`).join(", "),
          variation: ex.variation
        })),
        imageUrl: "https://images.unsplash.com/photo-1581009146145-b5ef050c2e1e?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=300",
        isPublic: true
      },
      // PULL DAY - Back & Biceps  
      {
        userId: 1,
        name: enderWorkoutRoutines.BackBiceps.name,
        description: enderWorkoutRoutines.BackBiceps.description,
        category: "strength", 
        difficulty: "intermediate",
        duration: enderWorkoutRoutines.BackBiceps.duration,
        calories: enderWorkoutRoutines.BackBiceps.duration * 5.5,
        equipment: ["dumbbells", "pull-up bar", "trx", "cable", "barbell"],
        exercises: enderWorkoutRoutines.BackBiceps.exercises.slice(0, 6).map(ex => ({
          name: ex.exerciseName,
          sets: 3,
          reps: ex.reps <= 5 ? 12 : Math.max(8, 15 - ex.reps),
          weight: ex.weight === "Bodyweight" ? undefined : ex.weight,
          equipment: ex.equipmentType,
          primaryMuscles: ex.primaryMuscles.map(m => `${m.muscle}:${m.percentage}%`).join(", "),
          variation: ex.variation
        })),
        imageUrl: "https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=300",
        isPublic: true
      },
      // LEG DAY
      {
        userId: 1,
        name: enderWorkoutRoutines.Legs.name,
        description: enderWorkoutRoutines.Legs.description,
        category: "strength",
        difficulty: "intermediate", 
        duration: enderWorkoutRoutines.Legs.duration,
        calories: enderWorkoutRoutines.Legs.duration * 6.5, // Higher calorie burn for legs
        equipment: ["kettlebell", "barbell", "plybox"],
        exercises: enderWorkoutRoutines.Legs.exercises.map(ex => ({
          name: ex.exerciseName,
          sets: ex.exerciseName.includes("Calf") ? 4 : 3,
          reps: ex.exerciseName.includes("Deadlift") ? 6 : ex.exerciseName.includes("Calf") ? 20 : 12,
          weight: ex.weight === "Bodyweight" ? undefined : ex.weight,
          equipment: ex.equipmentType,
          primaryMuscles: ex.primaryMuscles.map(m => `${m.muscle}:${m.percentage}%`).join(", "),
          variation: ex.variation
        })),
        imageUrl: "https://images.unsplash.com/photo-1434608519344-49d77a699e1d?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=300",
        isPublic: true
      },
      // CORE DAY
      {
        userId: 1,
        name: enderWorkoutRoutines.Abs.name,
        description: enderWorkoutRoutines.Abs.description,
        category: "core",
        difficulty: "intermediate",
        duration: enderWorkoutRoutines.Abs.duration,
        calories: enderWorkoutRoutines.Abs.duration * 4.5,
        equipment: ["trx", "bench", "pull-up bar"],
        exercises: enderWorkoutRoutines.Abs.exercises.map(ex => ({
          name: ex.exerciseName,
          sets: 3,
          reps: ex.exerciseName.includes("Plank") ? 1 : 15,
          duration: ex.exerciseName.includes("Plank") ? 60 : undefined,
          equipment: ex.equipmentType,
          primaryMuscles: ex.primaryMuscles.map(m => `${m.muscle}:${m.percentage}%`).join(", "),
          variation: ex.variation
        })),
        imageUrl: "https://images.unsplash.com/photo-1544367567-0f2fcb009e0b?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=300",
        isPublic: true
      },
      // PUSH DAY - Variation A (Focus on Compound Movements)
      {
        userId: 1,
        name: "Ender's Push Day - Variation A",
        description: "Heavy compound focus with barbells and progressive overload",
        category: "strength",
        difficulty: "intermediate",
        duration: 70,
        calories: 385,
        equipment: ["barbell", "bench", "dumbbells"],
        exercises: enderWorkoutRoutines.ChestTriceps.exercises.filter(ex => ex.variation === "A").map(ex => ({
          name: ex.exerciseName,
          sets: 4,
          reps: Math.max(6, 12 - Math.floor(ex.reps / 3)),
          weight: ex.weight === "Bodyweight" ? undefined : ex.weight,
          equipment: ex.equipmentType,
          primaryMuscles: ex.primaryMuscles.map(m => `${m.muscle}:${m.percentage}%`).join(", "),
          variation: ex.variation
        })),
        imageUrl: "https://images.unsplash.com/photo-1581009146145-b5ef050c2e1e?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=300",
        isPublic: true
      },
      // PUSH DAY - Variation B (Focus on Volume & Accessories)  
      {
        userId: 1,
        name: "Ender's Push Day - Variation B",
        description: "Higher volume with accessory movements and isolation work",
        category: "strength", 
        difficulty: "intermediate",
        duration: 75,
        calories: 410,
        equipment: ["dumbbells", "trx", "kettlebell", "incline bench"],
        exercises: enderWorkoutRoutines.ChestTriceps.exercises.filter(ex => ex.variation === "B" || ex.variation === "A/B").map(ex => ({
          name: ex.exerciseName,
          sets: 3,
          reps: Math.max(10, 18 - Math.floor(ex.reps / 2)),
          weight: ex.weight === "Bodyweight" ? undefined : ex.weight,
          equipment: ex.equipmentType,
          primaryMuscles: ex.primaryMuscles.map(m => `${m.muscle}:${m.percentage}%`).join(", "),
          variation: ex.variation
        })),
        imageUrl: "https://images.unsplash.com/photo-1581009146145-b5ef050c2e1e?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=300",
        isPublic: true
      },
      // PULL DAY - Variation A (Heavy Pulling)
      {
        userId: 1,
        name: "Ender's Pull Day - Variation A", 
        description: "Heavy compound pulling with deadlifts and weighted pull-ups",
        category: "strength",
        difficulty: "intermediate", 
        duration: 65,
        calories: 360,
        equipment: ["barbell", "pull-up bar", "dumbbells"],
        exercises: enderWorkoutRoutines.BackBiceps.exercises.filter(ex => ex.variation === "A").map(ex => ({
          name: ex.exerciseName,
          sets: 4,
          reps: ex.exerciseName.includes("Pull") ? 8 : Math.max(6, 12 - Math.floor(ex.reps / 3)),
          weight: ex.weight === "Bodyweight" ? undefined : ex.weight,
          equipment: ex.equipmentType,
          primaryMuscles: ex.primaryMuscles.map(m => `${m.muscle}:${m.percentage}%`).join(", "),
          variation: ex.variation
        })),
        imageUrl: "https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=300",
        isPublic: true
      },
      // PULL DAY - Variation B (Volume & Width Focus)
      {
        userId: 1,
        name: "Ender's Pull Day - Variation B",
        description: "High volume back width and bicep specialization",
        category: "strength",
        difficulty: "intermediate",
        duration: 60,
        calories: 330,
        equipment: ["pull-up bar", "cable", "trx", "dumbbells"],
        exercises: enderWorkoutRoutines.BackBiceps.exercises.filter(ex => ex.variation === "B" || ex.variation === "A/B").slice(0, 7).map(ex => ({
          name: ex.exerciseName,
          sets: 3,
          reps: ex.exerciseName.includes("Curl") ? 15 : Math.max(8, 15 - Math.floor(ex.reps / 3)),
          weight: ex.weight === "Bodyweight" ? undefined : ex.weight,
          equipment: ex.equipmentType,
          primaryMuscles: ex.primaryMuscles.map(m => `${m.muscle}:${m.percentage}%`).join(", "),
          variation: ex.variation
        })),
        imageUrl: "https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=300",
        isPublic: true
      },
      // LEGS - Heavy Compound
      {
        userId: 1,
        name: "Ender's Leg Day - Heavy Compound",
        description: "Heavy squats, deadlifts, and compound leg movements",
        category: "strength",
        difficulty: "intermediate",
        duration: 55,
        calories: 360,
        equipment: ["barbell", "kettlebell"],
        exercises: enderWorkoutRoutines.Legs.exercises.filter(ex => ex.exerciseName.includes("Squat") || ex.exerciseName.includes("Deadlift")).map(ex => ({
          name: ex.exerciseName,
          sets: 4,
          reps: ex.exerciseName.includes("Deadlift") ? 5 : 8,
          weight: ex.weight === "Bodyweight" ? undefined : ex.weight,
          equipment: ex.equipmentType,
          primaryMuscles: ex.primaryMuscles.map(m => `${m.muscle}:${m.percentage}%`).join(", "),
          variation: ex.variation
        })),
        imageUrl: "https://images.unsplash.com/photo-1434608519344-49d77a699e1d?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=300",
        isPublic: true
      },
      // FREEFORM WORKOUT - For custom exercise logging
      {
        userId: 1,
        name: "Freeform Workout",
        description: "Custom exercise selection and logging",
        category: "custom",
        difficulty: "any",
        duration: 60,
        calories: 300,
        equipment: [],
        exercises: [],
        imageUrl: "https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=300",
        isPublic: true
      }
    ];

    // Create sample challenges
    const sampleChallenges: InsertChallenge[] = [
      {
        name: "January Cardio Blitz",
        description: "Complete 20 cardio sessions this month. Win exclusive NFT badges!",
        type: "cardio",
        target: 20,
        unit: "sessions",
        startDate: new Date("2024-01-01"),
        endDate: new Date("2024-01-31"),
        isActive: true,
        participants: 12847
      },
      {
        name: "Mindful Movement",
        description: "Practice yoga or mobility work for 10 minutes daily for 30 days.",
        type: "mindfulness",
        target: 30,
        unit: "days",
        startDate: new Date("2024-01-01"),
        endDate: new Date("2024-01-30"),
        isActive: true,
        participants: 8432
      }
    ];

    // Create sample user for login
    const sampleUser = {
      firstName: "Ender",
      lastName: "Test",
      email: "ender@test.com",
      username: "ender",
      password: "password123", // Simple password for testing
      fitnessLevel: "intermediate",
      goals: ["strength", "endurance"]
    };

    // Seed user
    const userId = this.currentId++;
    this.users.set(userId, {
      ...sampleUser,
      id: userId,
      createdAt: new Date(),
      profileImage: null
    });

    // Generate realistic 6-month workout history with proper periodization
    const realisticWorkoutHistory = generateSixMonthWorkoutHistory(userId);
    console.log(`Generated ${realisticWorkoutHistory.length} realistic workout sessions over 6 months`);

    // Seed workouts
    realWorkouts.forEach(workout => {
      const id = this.currentId++;
      this.workouts.set(id, { 
        ...workout, 
        id, 
        createdAt: new Date(),
        description: workout.description || null,
        equipment: workout.equipment || null,
        imageUrl: workout.imageUrl || null,
        isPublic: workout.isPublic ?? null
      });
    });

    // Seed challenges
    sampleChallenges.forEach(challenge => {
      const id = this.currentId++;
      this.challenges.set(id, { 
        ...challenge, 
        id, 
        createdAt: new Date(),
        isActive: challenge.isActive ?? null,
        participants: challenge.participants ?? null
      });
    });

    // Seed realistic workout sessions with proper periodization
    realisticWorkoutHistory.forEach(session => {
      const id = this.currentId++;
      this.workoutSessions.set(id, {
        ...session,
        id,
        createdAt: session.startTime,
        workoutId: 1, // Use first workout template as fallback
        totalDuration: session.duration,
        formScore: session.exercises.reduce((avg, ex) => 
          avg + ex.sets.reduce((setAvg, set) => setAvg + set.formScore, 0) / ex.sets.length, 0) / session.exercises.length,
        notes: (session as any).notes || null
      });
    });
  }

  // User methods
  async getUser(id: number): Promise<User | undefined> {
    return this.users.get(id);
  }

  async getUserByEmail(email: string): Promise<User | undefined> {
    return Array.from(this.users.values()).find(user => user.email === email);
  }

  async getUserByUsername(username: string): Promise<User | undefined> {
    return Array.from(this.users.values()).find(user => user.username === username);
  }

  async createUser(insertUser: InsertUser): Promise<User> {
    const id = this.currentId++;
    const user: User = { 
      ...insertUser, 
      id, 
      createdAt: new Date(),
      profileImage: insertUser.profileImage || null
    };
    this.users.set(id, user);
    return user;
  }

  async updateUser(id: number, updates: Partial<InsertUser>): Promise<User | undefined> {
    const user = this.users.get(id);
    if (!user) return undefined;
    
    const updatedUser = { ...user, ...updates };
    this.users.set(id, updatedUser);
    return updatedUser;
  }

  // Workout methods
  async getWorkouts(filters?: { category?: string; difficulty?: string; userId?: number }): Promise<Workout[]> {
    let workouts = Array.from(this.workouts.values());
    
    if (filters?.category) {
      workouts = workouts.filter(w => w.category === filters.category);
    }
    if (filters?.difficulty) {
      workouts = workouts.filter(w => w.difficulty === filters.difficulty);
    }
    if (filters?.userId) {
      workouts = workouts.filter(w => w.userId === filters.userId);
    }
    
    return workouts.sort((a, b) => b.createdAt.getTime() - a.createdAt.getTime());
  }

  async getWorkout(id: number): Promise<Workout | undefined> {
    return this.workouts.get(id);
  }

  async createWorkout(workout: InsertWorkout): Promise<Workout> {
    const id = this.currentId++;
    const newWorkout: Workout = { 
      ...workout, 
      id, 
      createdAt: new Date(),
      description: workout.description || null,
      equipment: workout.equipment || null,
      imageUrl: workout.imageUrl || null,
      isPublic: workout.isPublic ?? null
    };
    this.workouts.set(id, newWorkout);
    return newWorkout;
  }

  async updateWorkout(id: number, updates: Partial<InsertWorkout>): Promise<Workout | undefined> {
    const workout = this.workouts.get(id);
    if (!workout) return undefined;
    
    const updatedWorkout = { ...workout, ...updates };
    this.workouts.set(id, updatedWorkout);
    return updatedWorkout;
  }

  async deleteWorkout(id: number): Promise<boolean> {
    return this.workouts.delete(id);
  }

  // Workout session methods
  async getWorkoutSessions(userId: number): Promise<WorkoutSession[]> {
    return Array.from(this.workoutSessions.values())
      .filter(session => session.userId === userId)
      .sort((a, b) => b.createdAt.getTime() - a.createdAt.getTime());
  }

  async getWorkoutSession(id: number): Promise<WorkoutSession | undefined> {
    return this.workoutSessions.get(id);
  }

  async createWorkoutSession(session: InsertWorkoutSession): Promise<WorkoutSession> {
    const id = this.currentId++;
    const newSession: WorkoutSession = { 
      ...session, 
      id, 
      createdAt: new Date(),
      exercises: session.exercises || null,
      endTime: session.endTime || null,
      totalDuration: session.totalDuration || null,
      caloriesBurned: session.caloriesBurned || null,
      formScore: session.formScore || null,
      notes: session.notes || null,
      completionStatus: session.completionStatus || "in_progress"
    };
    this.workoutSessions.set(id, newSession);
    return newSession;
  }

  async updateWorkoutSession(id: number, updates: Partial<InsertWorkoutSession>): Promise<WorkoutSession | undefined> {
    const session = this.workoutSessions.get(id);
    if (!session) return undefined;
    
    const updatedSession = { ...session, ...updates };
    this.workoutSessions.set(id, updatedSession);
    return updatedSession;
  }

  // User stats methods
  async getUserStats(userId: number, limit = 30): Promise<UserStats[]> {
    return Array.from(this.userStats.values())
      .filter(stats => stats.userId === userId)
      .sort((a, b) => b.date.getTime() - a.date.getTime())
      .slice(0, limit);
  }

  async createUserStats(stats: InsertUserStats): Promise<UserStats> {
    const id = this.currentId++;
    const newStats: UserStats = { 
      ...stats, 
      id, 
      createdAt: new Date(),
      weight: stats.weight ?? null,
      bodyFat: stats.bodyFat ?? null,
      muscleMass: stats.muscleMass ?? null,
      caloriesConsumed: stats.caloriesConsumed ?? null,
      proteinConsumed: stats.proteinConsumed ?? null,
      carbsConsumed: stats.carbsConsumed ?? null,
      fatsConsumed: stats.fatsConsumed ?? null,
      sleepHours: stats.sleepHours ?? null,
      stressLevel: stats.stressLevel ?? null,
      energyLevel: stats.energyLevel ?? null
    };
    this.userStats.set(id, newStats);
    return newStats;
  }

  async getLatestUserStats(userId: number): Promise<UserStats | undefined> {
    const userStats = await this.getUserStats(userId, 1);
    return userStats[0];
  }

  // Achievement methods
  async getUserAchievements(userId: number): Promise<Achievement[]> {
    return Array.from(this.achievements.values())
      .filter(achievement => achievement.userId === userId)
      .sort((a, b) => b.unlockedAt.getTime() - a.unlockedAt.getTime());
  }

  async createAchievement(achievement: InsertAchievement): Promise<Achievement> {
    const id = this.currentId++;
    const newAchievement: Achievement = { 
      ...achievement, 
      id, 
      unlockedAt: new Date(),
      value: achievement.value || null
    };
    this.achievements.set(id, newAchievement);
    return newAchievement;
  }

  // Challenge methods
  async getActiveChallenges(): Promise<Challenge[]> {
    const now = new Date();
    return Array.from(this.challenges.values())
      .filter(challenge => challenge.isActive && challenge.endDate > now)
      .sort((a, b) => a.endDate.getTime() - b.endDate.getTime());
  }

  async getChallenge(id: number): Promise<Challenge | undefined> {
    return this.challenges.get(id);
  }

  async createChallenge(challenge: InsertChallenge): Promise<Challenge> {
    const id = this.currentId++;
    const newChallenge: Challenge = { 
      ...challenge, 
      id, 
      createdAt: new Date(),
      isActive: challenge.isActive ?? null,
      participants: challenge.participants ?? null
    };
    this.challenges.set(id, newChallenge);
    return newChallenge;
  }

  async getChallengeParticipations(userId: number): Promise<(ChallengeParticipation & { challenge: Challenge })[]> {
    const participations = Array.from(this.challengeParticipations.values())
      .filter(p => p.userId === userId);
    
    return participations.map(p => {
      const challenge = this.challenges.get(p.challengeId)!;
      return { ...p, challenge };
    });
  }

  async joinChallenge(participation: InsertChallengeParticipation): Promise<ChallengeParticipation> {
    const id = this.currentId++;
    const newParticipation: ChallengeParticipation = { 
      ...participation, 
      id, 
      joinedAt: new Date(),
      progress: participation.progress ?? null,
      isCompleted: participation.isCompleted ?? null
    };
    this.challengeParticipations.set(id, newParticipation);
    
    // Update challenge participant count
    const challenge = this.challenges.get(participation.challengeId);
    if (challenge) {
      challenge.participants = (challenge.participants || 0) + 1;
    }
    
    return newParticipation;
  }

  async updateChallengeProgress(userId: number, challengeId: number, progress: number): Promise<ChallengeParticipation | undefined> {
    const participation = Array.from(this.challengeParticipations.values())
      .find(p => p.userId === userId && p.challengeId === challengeId);
    
    if (!participation) return undefined;
    
    participation.progress = progress;
    const challenge = this.challenges.get(challengeId);
    if (challenge && progress >= challenge.target) {
      participation.isCompleted = true;
    }
    
    return participation;
  }

  // Social methods
  async getSocialPosts(limit = 20): Promise<(SocialPost & { user: Pick<User, 'id' | 'firstName' | 'lastName' | 'profileImage'> })[]> {
    const posts = Array.from(this.socialPosts.values())
      .sort((a, b) => b.createdAt.getTime() - a.createdAt.getTime())
      .slice(0, limit);
    
    return posts.map(post => {
      const user = this.users.get(post.userId)!;
      return {
        ...post,
        user: {
          id: user.id,
          firstName: user.firstName,
          lastName: user.lastName,
          profileImage: user.profileImage
        }
      };
    });
  }

  async createSocialPost(post: InsertSocialPost): Promise<SocialPost> {
    const id = this.currentId++;
    const newPost: SocialPost = { 
      ...post, 
      id, 
      likes: 0, 
      comments: 0, 
      createdAt: new Date(),
      imageUrl: post.imageUrl || null,
      workoutSessionId: post.workoutSessionId || null,
      achievementId: post.achievementId || null
    };
    this.socialPosts.set(id, newPost);
    return newPost;
  }

  async likeSocialPost(postId: number): Promise<boolean> {
    const post = this.socialPosts.get(postId);
    if (!post) return false;
    
    post.likes = (post.likes || 0) + 1;
    return true;
  }
}

export const storage = new MemStorage();

</file>
<file path="FitForge/server/vite.ts">
import express, { type Express } from "express";
import fs from "fs";
import path from "path";
import { createServer as createViteServer, createLogger } from "vite";
import { type Server } from "http";
import viteConfig from "../vite.config";
import { nanoid } from "nanoid";

const viteLogger = createLogger();

export function log(message: string, source = "express") {
  const formattedTime = new Date().toLocaleTimeString("en-US", {
    hour: "numeric",
    minute: "2-digit",
    second: "2-digit",
    hour12: true,
  });

  console.log(`${formattedTime} [${source}] ${message}`);
}

export async function setupVite(app: Express, server: Server) {
  const serverOptions = {
    middlewareMode: true,
    hmr: { server },
    allowedHosts: true as true,
  };

  const vite = await createViteServer({
    ...viteConfig,
    configFile: false,
    customLogger: {
      ...viteLogger,
      error: (msg, options) => {
        viteLogger.error(msg, options);
        process.exit(1);
      },
    },
    server: serverOptions,
    appType: "custom",
  });

  app.use(vite.middlewares);
  app.use("*", async (req, res, next) => {
    const url = req.originalUrl;

    try {
      const clientTemplate = path.resolve(
        path.dirname(new URL(import.meta.url).pathname),
        "..",
        "client",
        "index.html",
      );

      // always reload the index.html file from disk incase it changes
      let template = await fs.promises.readFile(clientTemplate, "utf-8");
      template = template.replace(
        `src="/src/main.tsx"`,
        `src="/src/main.tsx?v=${nanoid()}"`,
      );
      const page = await vite.transformIndexHtml(url, template);
      res.status(200).set({ "Content-Type": "text/html" }).end(page);
    } catch (e) {
      vite.ssrFixStacktrace(e as Error);
      next(e);
    }
  });
}

export function serveStatic(app: Express) {
  const distPath = path.resolve(path.dirname(new URL(import.meta.url).pathname), "public");

  if (!fs.existsSync(distPath)) {
    throw new Error(
      `Could not find the build directory: ${distPath}, make sure to build the client first`,
    );
  }

  app.use(express.static(distPath));

  // fall through to index.html if the file doesn't exist
  app.use("*", (_req, res) => {
    res.sendFile(path.resolve(distPath, "index.html"));
  });
}

</file>
<file path="FitForge/shared/enhanced-schema.ts">
import { pgTable, text, serial, integer, boolean, timestamp, real, jsonb, decimal } from "drizzle-orm/pg-core";
import { createInsertSchema } from "drizzle-zod";
import { z } from "zod";

// Enhanced exercise library with your detailed categorization
export const exerciseLibrary = pgTable("exercise_library", {
  id: serial("id").primaryKey(),
  exerciseName: text("exercise_name").notNull().unique(),
  equipmentType: text("equipment_type").notNull(), // Barbell, Dumbbell, Bodyweight, Cable, etc.
  category: text("category").notNull(), // Compound, Isolation
  movementType: text("movement_type").notNull(), // Push, Pull, Legs, Core
  primaryMuscles: jsonb("primary_muscles").notNull(), // [{muscle: "Chest", percentage: 60}]
  secondaryMuscles: jsonb("secondary_muscles"), // [{muscle: "Triceps", percentage: 30}]
  stabilizingMuscles: jsonb("stabilizing_muscles"), // [{muscle: "Core", percentage: 10}]
  equipment: text("equipment").array(), // Specific equipment needed
  variations: text("variations").array(), // Wide grip, close grip, etc.
  difficulty: text("difficulty").notNull(), // Beginner, Intermediate, Advanced
  instructions: text("instructions"),
  videoUrl: text("video_url"),
  imageUrl: text("image_url"),
  createdAt: timestamp("created_at").defaultNow().notNull(),
});

// Enhanced workouts with structured exercise data
export const workoutTemplates = pgTable("workout_templates", {
  id: serial("id").primaryKey(),
  userId: integer("user_id").references(() => users.id),
  name: text("name").notNull(),
  description: text("description"),
  workoutType: text("workout_type").notNull(), // Push, Pull, Legs, Upper, Lower, Full Body
  targetMuscles: text("target_muscles").array(),
  exercises: jsonb("exercises").notNull(), // Structured exercise plan
  estimatedDuration: integer("estimated_duration"), // minutes
  difficultyLevel: text("difficulty_level"),
  isPublic: boolean("is_public").default(false),
  createdAt: timestamp("created_at").defaultNow().notNull(),
});

// Enhanced workout sessions with detailed tracking
export const enhancedWorkoutSessions = pgTable("enhanced_workout_sessions", {
  id: serial("id").primaryKey(),
  userId: integer("user_id").references(() => users.id).notNull(),
  workoutTemplateId: integer("workout_template_id").references(() => workoutTemplates.id),
  startTime: timestamp("start_time").notNull(),
  endTime: timestamp("end_time"),
  
  // Session metrics
  totalVolume: decimal("total_volume"), // Total weight × reps
  totalSets: integer("total_sets"),
  totalReps: integer("total_reps"),
  
  // Performance tracking
  averageRestTime: integer("average_rest_time"), // seconds
  averageFormScore: real("average_form_score"), // 0-100
  
  // Detailed exercise performance
  exercisePerformance: jsonb("exercise_performance").notNull(),
  /* Structure:
  {
    exerciseId: number,
    sets: [{
      setNumber: number,
      weight: number,
      reps: number,
      restTime: number,
      formScore: number,
      tempo: string, // "2-0-2-0"
      notes: string,
      isWarmup: boolean,
      rpe: number // Rate of Perceived Exertion 1-10
    }]
  }
  */
  
  // Session notes and status
  notes: text("notes"),
  completionStatus: text("completion_status").default("in_progress"),
  muscleGroupsWorked: text("muscle_groups_worked").array(),
  createdAt: timestamp("created_at").defaultNow().notNull(),
});

// Personal records tracking
export const personalRecords = pgTable("personal_records", {
  id: serial("id").primaryKey(),
  userId: integer("user_id").references(() => users.id).notNull(),
  exerciseId: integer("exercise_id").references(() => exerciseLibrary.id).notNull(),
  recordType: text("record_type").notNull(), // 1RM, 3RM, 5RM, Max Reps, Max Volume
  value: decimal("value").notNull(),
  unit: text("unit").notNull(), // lbs, kg, reps
  sessionId: integer("session_id").references(() => enhancedWorkoutSessions.id),
  previousRecord: decimal("previous_record"),
  improvement: decimal("improvement"), // percentage
  achievedAt: timestamp("achieved_at").defaultNow().notNull(),
});

// Advanced analytics tracking
export const workoutAnalytics = pgTable("workout_analytics", {
  id: serial("id").primaryKey(),
  userId: integer("user_id").references(() => users.id).notNull(),
  date: timestamp("date").notNull(),
  
  // Volume metrics
  weeklyVolume: decimal("weekly_volume"),
  monthlyVolume: decimal("monthly_volume"),
  volumeByMuscleGroup: jsonb("volume_by_muscle_group"),
  
  // Balance metrics
  pushPullRatio: decimal("push_pull_ratio"),
  upperLowerRatio: decimal("upper_lower_ratio"),
  compoundIsolationRatio: decimal("compound_isolation_ratio"),
  
  // Progress metrics
  strengthGains: jsonb("strength_gains"), // By exercise
  muscleGroupFrequency: jsonb("muscle_group_frequency"),
  workoutConsistency: real("workout_consistency"), // percentage
  
  // Recovery metrics
  averageRestDays: decimal("average_rest_days"),
  muscleGroupRecovery: jsonb("muscle_group_recovery"),
  
  createdAt: timestamp("created_at").defaultNow().notNull(),
});

// Exercise performance history for progression tracking
export const exerciseHistory = pgTable("exercise_history", {
  id: serial("id").primaryKey(),
  userId: integer("user_id").references(() => users.id).notNull(),
  exerciseId: integer("exercise_id").references(() => exerciseLibrary.id).notNull(),
  sessionId: integer("session_id").references(() => enhancedWorkoutSessions.id).notNull(),
  
  // Performance data
  bestSet: jsonb("best_set"), // {weight, reps, formScore}
  totalVolume: decimal("total_volume"),
  averageWeight: decimal("average_weight"),
  averageReps: decimal("average_reps"),
  
  // Calculated metrics
  estimatedOneRM: decimal("estimated_one_rm"), // Using Epley formula
  volumeProgress: decimal("volume_progress"), // vs last session
  strengthProgress: decimal("strength_progress"), // vs last session
  
  performedAt: timestamp("performed_at").notNull(),
});

// Enhanced users table with workout formulas
export const users = pgTable("users", {
  id: serial("id").primaryKey(),
  username: text("username").notNull().unique(),
  email: text("email").notNull().unique(),
  password: text("password").notNull(),
  firstName: text("first_name").notNull(),
  lastName: text("last_name").notNull(),
  profileImage: text("profile_image"),
  
  // Training preferences
  experienceLevel: text("experience_level"), // Beginner, Intermediate, Advanced
  primaryGoals: text("primary_goals").array(), // Strength, Hypertrophy, Endurance
  preferredEquipment: text("preferred_equipment").array(),
  
  // Workout formulas - arrays of exercise IDs organized by workout type
  workoutFormulas: jsonb("workout_formulas"),
  /* Structure:
  {
    "Abs": [1, 2, 3, 4], // Exercise IDs for core workout
    "BackBiceps": [5, 6, 7, 8, 9], // Exercise IDs for pull day
    "ChestTriceps": [10, 11, 12, 13, 14, 15, 16], // Exercise IDs for push day
    "Legs": [17, 18, 19, 20, 21] // Exercise IDs for leg day
  }
  */
  
  // Personal exercise preferences by exercise ID
  exercisePreferences: jsonb("exercise_preferences"),
  /* Structure:
  {
    "1": { weight: 25, reps: 12, sets: 3, notes: "Hold for 60 seconds" },
    "2": { weight: "bodyweight", reps: 8, sets: 3, notes: "Focus on form" }
  }
  */
  
  createdAt: timestamp("created_at").defaultNow().notNull(),
});

// Create Zod schemas for validation
export const insertExerciseLibrarySchema = createInsertSchema(exerciseLibrary).omit({
  id: true,
  createdAt: true,
});

export const insertWorkoutTemplateSchema = createInsertSchema(workoutTemplates).omit({
  id: true,
  createdAt: true,
});

export const insertEnhancedWorkoutSessionSchema = createInsertSchema(enhancedWorkoutSessions).omit({
  id: true,
  createdAt: true,
});

export const insertPersonalRecordSchema = createInsertSchema(personalRecords).omit({
  id: true,
  achievedAt: true,
});

// Type exports
export type ExerciseLibrary = typeof exerciseLibrary.$inferSelect;
export type WorkoutTemplate = typeof workoutTemplates.$inferSelect;
export type EnhancedWorkoutSession = typeof enhancedWorkoutSessions.$inferSelect;
export type PersonalRecord = typeof personalRecords.$inferSelect;
export type WorkoutAnalytics = typeof workoutAnalytics.$inferSelect;
</file>
<file path="FitForge/shared/schema.ts">
import { pgTable, text, serial, integer, boolean, timestamp, real, jsonb } from "drizzle-orm/pg-core";
import { createInsertSchema } from "drizzle-zod";
import { z } from "zod";

export const users = pgTable("users", {
  id: serial("id").primaryKey(),
  username: text("username").notNull().unique(),
  email: text("email").notNull().unique(),
  password: text("password").notNull(),
  firstName: text("first_name").notNull(),
  lastName: text("last_name").notNull(),
  profileImage: text("profile_image"),
  createdAt: timestamp("created_at").defaultNow().notNull(),
});

export const workouts = pgTable("workouts", {
  id: serial("id").primaryKey(),
  userId: integer("user_id").references(() => users.id).notNull(),
  name: text("name").notNull(),
  description: text("description"),
  category: text("category").notNull(), // strength, cardio, yoga, hiit, etc.
  difficulty: text("difficulty").notNull(), // beginner, intermediate, advanced
  duration: integer("duration").notNull(), // in minutes
  calories: integer("calories").notNull(),
  equipment: text("equipment").array(),
  exercises: jsonb("exercises").notNull(), // array of exercise objects
  imageUrl: text("image_url"),
  isPublic: boolean("is_public").default(true),
  createdAt: timestamp("created_at").defaultNow().notNull(),
});

export const workoutSessions = pgTable("workout_sessions", {
  id: serial("id").primaryKey(),
  userId: integer("user_id").references(() => users.id).notNull(),
  workoutId: integer("workout_id").references(() => workouts.id).notNull(),
  startTime: timestamp("start_time").notNull(),
  endTime: timestamp("end_time"),
  totalDuration: integer("total_duration"), // in minutes
  caloriesBurned: integer("calories_burned"),
  formScore: real("form_score"), // 0-100
  notes: text("notes"),
  exercises: jsonb("exercises"), // detailed exercise performance data
  completionStatus: text("completion_status").notNull().default("in_progress"), // in_progress, completed, paused
  createdAt: timestamp("created_at").defaultNow().notNull(),
});

export const userStats = pgTable("user_stats", {
  id: serial("id").primaryKey(),
  userId: integer("user_id").references(() => users.id).notNull(),
  date: timestamp("date").notNull(),
  weight: real("weight"),
  bodyFat: real("body_fat"),
  muscleMass: real("muscle_mass"),
  caloriesConsumed: integer("calories_consumed"),
  proteinConsumed: real("protein_consumed"),
  carbsConsumed: real("carbs_consumed"),
  fatsConsumed: real("fats_consumed"),
  sleepHours: real("sleep_hours"),
  stressLevel: integer("stress_level"), // 1-10
  energyLevel: integer("energy_level"), // 1-10
  createdAt: timestamp("created_at").defaultNow().notNull(),
});

export const achievements = pgTable("achievements", {
  id: serial("id").primaryKey(),
  userId: integer("user_id").references(() => users.id).notNull(),
  type: text("type").notNull(), // personal_record, streak, form_expert, etc.
  title: text("title").notNull(),
  description: text("description").notNull(),
  iconType: text("icon_type").notNull(), // trophy, fire, medal, etc.
  value: text("value"), // e.g., "225 lbs", "30 days", etc.
  unlockedAt: timestamp("unlocked_at").defaultNow().notNull(),
});

export const challenges = pgTable("challenges", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description").notNull(),
  type: text("type").notNull(), // cardio, strength, mindfulness, etc.
  target: integer("target").notNull(), // target number (reps, sessions, etc.)
  unit: text("unit").notNull(), // sessions, minutes, reps, etc.
  startDate: timestamp("start_date").notNull(),
  endDate: timestamp("end_date").notNull(),
  isActive: boolean("is_active").default(true),
  participants: integer("participants").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
});

export const challengeParticipations = pgTable("challenge_participations", {
  id: serial("id").primaryKey(),
  userId: integer("user_id").references(() => users.id).notNull(),
  challengeId: integer("challenge_id").references(() => challenges.id).notNull(),
  progress: integer("progress").default(0),
  isCompleted: boolean("is_completed").default(false),
  joinedAt: timestamp("joined_at").defaultNow().notNull(),
});

export const socialPosts = pgTable("social_posts", {
  id: serial("id").primaryKey(),
  userId: integer("user_id").references(() => users.id).notNull(),
  content: text("content").notNull(),
  imageUrl: text("image_url"),
  workoutSessionId: integer("workout_session_id").references(() => workoutSessions.id),
  achievementId: integer("achievement_id").references(() => achievements.id),
  likes: integer("likes").default(0),
  comments: integer("comments").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
});

export const insertUserSchema = createInsertSchema(users).omit({
  id: true,
  createdAt: true,
});

export const insertWorkoutSchema = createInsertSchema(workouts).omit({
  id: true,
  createdAt: true,
});

export const insertWorkoutSessionSchema = createInsertSchema(workoutSessions).omit({
  id: true,
  createdAt: true,
});

export const insertUserStatsSchema = createInsertSchema(userStats).omit({
  id: true,
  createdAt: true,
});

export const insertAchievementSchema = createInsertSchema(achievements).omit({
  id: true,
  unlockedAt: true,
});

export const insertChallengeSchema = createInsertSchema(challenges).omit({
  id: true,
  createdAt: true,
});

export const insertChallengeParticipationSchema = createInsertSchema(challengeParticipations).omit({
  id: true,
  joinedAt: true,
});

export const insertSocialPostSchema = createInsertSchema(socialPosts).omit({
  id: true,
  createdAt: true,
  likes: true,
  comments: true,
});

export const loginSchema = z.object({
  email: z.string().email(),
  password: z.string().min(6),
});

export type InsertUser = z.infer<typeof insertUserSchema>;
export type User = typeof users.$inferSelect;
export type InsertWorkout = z.infer<typeof insertWorkoutSchema>;
export type Workout = typeof workouts.$inferSelect;
export type InsertWorkoutSession = z.infer<typeof insertWorkoutSessionSchema>;
export type WorkoutSession = typeof workoutSessions.$inferSelect;
export type InsertUserStats = z.infer<typeof insertUserStatsSchema>;
export type UserStats = typeof userStats.$inferSelect;
export type InsertAchievement = z.infer<typeof insertAchievementSchema>;
export type Achievement = typeof achievements.$inferSelect;
export type InsertChallenge = z.infer<typeof insertChallengeSchema>;
export type Challenge = typeof challenges.$inferSelect;
export type InsertChallengeParticipation = z.infer<typeof insertChallengeParticipationSchema>;
export type ChallengeParticipation = typeof challengeParticipations.$inferSelect;
export type InsertSocialPost = z.infer<typeof insertSocialPostSchema>;
export type SocialPost = typeof socialPosts.$inferSelect;
export type LoginData = z.infer<typeof loginSchema>;

</file>
<file path="FitForge/.gitignore">
node_modules
dist
.DS_Store
server/public
vite.config.ts.*
*.tar.gz
</file>
<file path="FitForge/.replit">
modules = ["nodejs-20", "web", "postgresql-16"]
run = "npm run dev"
hidden = [".config", ".git", "generated-icon.png", "node_modules", "dist"]

[nix]
channel = "stable-24_05"

[deployment]
deploymentTarget = "autoscale"
build = ["npm", "run", "build"]
run = ["npm", "run", "start"]

[[ports]]
localPort = 5000
externalPort = 80

[workflows]
runButton = "Project"

[[workflows.workflow]]
name = "Project"
mode = "parallel"
author = "agent"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Start application"

[[workflows.workflow]]
name = "Start application"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run dev"
waitForPort = 5000

</file>
<file path="FitForge/BRANCH_README.md">
# Branch: feature/phase-4-button-functionality-fixes

## Purpose
Systematically address critical button functionality issues and missing workout logic integration identified in the comprehensive bug analysis report. This branch focuses on transforming FitForge from a non-functional UI into a fully operational workout tracking and building application.

## Success Criteria
- [ ] **Complete Button Functionality Audit** - Document and categorize all non-functional buttons throughout the application
- [ ] **Navigation Event Handlers** - Implement missing onClick handlers for all navigation and action buttons
- [ ] **React Router Integration** - Complete routing configuration for all intended page destinations
- [ ] **Workout Logic Integration** - Connect frontend components to backend workout calculation formulas
- [ ] **API Endpoint Connection** - Establish data flow between frontend workout components and server APIs
- [ ] **User Interface Responsiveness** - Ensure all buttons provide immediate visual feedback and proper navigation
- [ ] **Contextual Workout Calculations** - Implement formulas and logic relevant to workout tracking context
- [ ] **Data Persistence Validation** - Verify workout data is properly saved and retrieved through user interactions
- [ ] **Testing Suite Implementation** - Create comprehensive tests for button functionality and navigation flows
- [ ] **Performance Optimization** - Ensure button interactions and page transitions are smooth and responsive

## Scope & Deliverables

### Primary Components to Fix
- **Navigation Component** (`client/src/components/navigation.tsx`)
  - Add missing event handlers for menu items
  - Implement proper route navigation
  - Ensure responsive mobile navigation

- **Workout Components**
  - `workout-starter.tsx`: Connect to workout initiation logic
  - `workout-library.tsx`: Implement template selection and navigation
  - `live-workout-session.tsx`: Add session control functionality
  - `freeform-workout-logger.tsx`: Complete manual entry workflows

- **Dashboard & Analytics**
  - `dashboard-overview.tsx`: Connect analytics to actual workout data
  - `progress-analytics.tsx`: Implement chart interactions and drill-down

- **Page Components**
  - `workouts.tsx`: Add workout management functionality
  - `profile.tsx`: Implement settings and preference controls
  - `nutrition.tsx`: Connect to nutrition tracking features

### Backend Integration Tasks
- **Server Routes** (`server/routes.ts`)
  - Implement workout calculation endpoints
  - Add user preference management APIs
  - Create workout data persistence endpoints

- **Storage Layer** (`server/storage.ts`)
  - Complete database integration for workout sessions
  - Implement user profile data persistence
  - Add nutrition tracking data management

### Business Logic Implementation
- **Workout Calculation Formulas**
  - Rep/set progression algorithms
  - Calorie expenditure calculations
  - Strength progression tracking
  - Volume and intensity metrics

- **Contextual User Experience**
  - Personalized workout recommendations
  - Progress-based difficulty adjustments
  - Achievement and milestone tracking

## Dependencies
- **Completed Phases**: Phase 3 workout functionality foundation
- **Database Schema**: Enhanced workout tracking schema (`shared/enhanced-schema.ts`)
- **Component Library**: Existing UI components from `components/ui/`
- **Authentication System**: User session management (`hooks/use-auth.tsx`)
- **External APIs**: Any third-party fitness data integrations

## Testing Requirements

### Unit Test Coverage (Minimum 80%)
- Button event handler functions
- Navigation routing logic
- Workout calculation algorithms
- Data validation functions

### Integration Test Requirements
- Complete user workout session flows
- Navigation between all major pages
- Data persistence across user sessions
- API endpoint response validation

### Performance Test Criteria
- Page load times under 2 seconds
- Button response times under 100ms
- Smooth animations and transitions
- Mobile responsiveness across devices

### Manual Testing Checklist
- [ ] All navigation buttons function correctly
- [ ] Workout creation flow works end-to-end
- [ ] Data persists across browser sessions
- [ ] Mobile interface is fully functional
- [ ] Error handling displays appropriate messages
- [ ] Loading states provide proper user feedback

## Merge Criteria
- [ ] All 10 success criteria completed and verified
- [ ] Test suite passing with minimum 80% coverage
- [ ] Code review approved by senior developer
- [ ] Performance benchmarks met for all interactions
- [ ] Documentation updated with new functionality
- [ ] No regression in existing functionality
- [ ] Mobile responsiveness validated on multiple devices
- [ ] Error handling and edge cases covered
- [ ] Database migrations tested and validated
- [ ] Security review completed for new endpoints

## Timeline
- **Estimated Duration**: 3-4 weeks
- **Week 1**: Button audit, event handler implementation, basic navigation fixes
- **Week 2**: Workout logic integration, API endpoint connections
- **Week 3**: Testing implementation, performance optimization
- **Week 4**: Code review, documentation, final validation

### Key Milestones
- **Day 3**: Complete button functionality audit and priority matrix
- **Day 7**: Basic navigation working across all major pages
- **Day 14**: Workout calculation logic integrated and functional
- **Day 21**: Full testing suite implemented with passing coverage
- **Day 28**: Branch ready for merge with all criteria met

### Review Checkpoints
- **Daily**: Progress check against todo list and immediate blockers
- **Weekly**: Milestone review and timeline adjustment if needed
- **Bi-weekly**: Code quality review and technical debt assessment

## Implementation Strategy

### Phase 1: Foundation (Days 1-7)
1. **Systematic Button Audit**: Catalog every non-functional button with priority ranking
2. **Event Handler Implementation**: Add onClick handlers for high-priority navigation
3. **Route Configuration**: Complete React Router setup for missing pages
4. **Basic Navigation**: Ensure core page-to-page navigation works reliably

### Phase 2: Integration (Days 8-14)
1. **Backend Connection**: Connect frontend components to existing server APIs
2. **Workout Logic**: Implement calculation formulas and contextual algorithms
3. **Data Flow**: Establish proper data persistence and retrieval workflows
4. **User Feedback**: Add loading states and error handling for all interactions

### Phase 3: Enhancement (Days 15-21)
1. **Advanced Features**: Implement workout progression and analytics features
2. **Performance Optimization**: Optimize for smooth interactions and fast load times
3. **Testing Implementation**: Create comprehensive test coverage for all functionality
4. **Mobile Polish**: Ensure all features work seamlessly on mobile devices

### Phase 4: Validation (Days 22-28)
1. **Quality Assurance**: Comprehensive testing of all implemented functionality
2. **Code Review**: Technical review and refactoring for maintainability
3. **Documentation**: Update all project documentation with new features
4. **Final Validation**: Verify all success criteria met and branch ready for merge

## Risk Mitigation
- **Technical Debt**: Regular code review and refactoring to maintain quality
- **Scope Creep**: Strict adherence to defined success criteria and timeline
- **Integration Issues**: Early and frequent testing of component interactions
- **Performance Degradation**: Continuous monitoring of load times and responsiveness

## Communication Plan
- **Daily Updates**: Progress summary in todo list and active context
- **Weekly Reports**: Milestone achievement and blocker identification
- **Issue Escalation**: Immediate documentation of any critical blockers
- **Success Celebration**: Clear documentation of completed criteria and achievements
</file>
<file path="FitForge/components.json">
{
    "$schema": "https://ui.shadcn.com/schema.json",
    "style": "new-york",
    "rsc": false,
    "tsx": true,
    "tailwind": {
      "config": "tailwind.config.ts",
      "css": "client/src/index.css",
      "baseColor": "neutral",
      "cssVariables": true,
      "prefix": ""
    },
    "aliases": {
      "components": "@/components",
      "utils": "@/lib/utils",
      "ui": "@/components/ui",
      "lib": "@/lib",
      "hooks": "@/hooks"
    }
}
</file>
<file path="FitForge/CRITICAL_BUG_REPORT.md">
# 🚨 CRITICAL BUG REPORT: Non-Functional Workout Buttons

## Problem Summary
**SEVERITY: P0 - Critical**

All 9 workout cards on the FitnessForge homepage are completely non-functional. Clicking any workout button produces zero response - no navigation, no console logs, no visual feedback.

## Expected vs Actual Behavior

### Expected
1. User clicks workout card → `handleStartWorkout(workout)` fires
2. Console logs show: "🔥 BUTTON CLICKED FOR WORKOUT: [id] [name]"
3. Navigation occurs to `/workout-session` route
4. Live workout session initializes with selected exercises

### Actual
1. User clicks workout card → **NOTHING HAPPENS**
2. Zero console output
3. No navigation
4. Complete silence from application

## Technical Investigation

### Affected Files
- **Primary:** `client/src/components/workout-library.tsx:89-120`
- **Related:** `client/src/hooks/use-workout-session.tsx`
- **Routes:** `client/src/App.tsx`

### Debugging Code Added
```typescript
// Added to workout-library.tsx
onClick={() => {
  console.log("🔥 BUTTON CLICKED FOR WORKOUT:", workout.id, workout.name);
  handleStartWorkout(workout);
}}
```

### Environment Details
- **Stack:** React 18 + TypeScript + Vite
- **Routing:** Wouter library
- **Platform:** WSL2 development environment
- **Server:** Express.js backend with PostgreSQL

## Investigation Results

### ✅ Confirmed Working Components
- Backend API endpoints serving valid workout data
- Routes properly configured in App.tsx
- WorkoutSessionProvider context implementation
- useWorkoutSession hook functionality
- Button elements rendering correctly
- CSS styling applied properly

### ❌ Broken Components
- **Click event handlers not executing**
- **No console output on button clicks**
- **handleStartWorkout function never called**
- **Navigation to /workout-session never occurs**

## Reproduction Steps
1. Start FitnessForge application
2. Navigate to homepage (default route)
3. Scroll to "Popular Workouts" section
4. Click any of the 9 workout cards
5. **Result:** Nothing happens - zero response

## Root Cause Hypotheses

### 1. JavaScript Bundle Corruption
- Vite build process may have corrupted event handlers
- **Test:** Complete rebuild with `npm run build`

### 2. React Context Provider Failure  
- WorkoutSessionProvider may not be properly wrapping components
- **Test:** Check React DevTools for context availability

### 3. Event Propagation Blocked
- CSS overlay or parent element preventing clicks
- **Test:** Add debug button with simple alert() function

### 4. Build Configuration Issue
- Vite configuration preventing proper event binding
- **Test:** Check build output and bundle analysis

## Immediate Next Steps

### 1. Basic Functionality Test
Add debug button to homepage:
```tsx
<button onClick={() => alert("CLICK WORKS!")}>Debug Click Test</button>
```

### 2. Complete Rebuild
```bash
cd FitnessForge
rm -rf node_modules dist
npm install
npm run build
npm run dev
```

### 3. Browser Console Investigation
- Check for JavaScript errors
- Verify React components mounting properly
- Confirm event listeners attached

### 4. Context Provider Verification
- Use React DevTools to verify WorkoutSessionProvider
- Check if useWorkoutSession hook returns valid functions

## Impact Assessment
- **User Impact:** Complete application failure - core functionality blocked
- **Business Impact:** Users cannot start any workouts
- **Development Impact:** Blocks all further testing and development

## Timeline
- **Bug Discovered:** Current session
- **Debugging Attempts:** Multiple console.log additions, button text modifications
- **Status:** Unresolved - requires immediate attention

---

**Created:** $(date)
**Reporter:** Claude Code AI Assistant
**Priority:** P0 - Critical
**Tags:** bug, critical, frontend, react, user-experience, event-handling
</file>
<file path="FitForge/drizzle.config.ts">
import { defineConfig } from "drizzle-kit";

if (!process.env.DATABASE_URL) {
  throw new Error("DATABASE_URL, ensure the database is provisioned");
}

export default defineConfig({
  out: "./migrations",
  schema: "./shared/schema.ts",
  dialect: "postgresql",
  dbCredentials: {
    url: process.env.DATABASE_URL,
  },
});

</file>
<file path="FitForge/package-lock.json">
{
  "name": "rest-express",
  "version": "1.0.0",
  "lockfileVersion": 3,
  "requires": true,
  "packages": {
    "": {
      "name": "rest-express",
      "version": "1.0.0",
      "license": "MIT",
      "dependencies": {
        "@hookform/resolvers": "^3.10.0",
        "@jridgewell/trace-mapping": "^0.3.25",
        "@neondatabase/serverless": "^0.10.4",
        "@radix-ui/react-accordion": "^1.2.4",
        "@radix-ui/react-alert-dialog": "^1.1.7",
        "@radix-ui/react-aspect-ratio": "^1.1.3",
        "@radix-ui/react-avatar": "^1.1.4",
        "@radix-ui/react-checkbox": "^1.1.5",
        "@radix-ui/react-collapsible": "^1.1.4",
        "@radix-ui/react-context-menu": "^2.2.7",
        "@radix-ui/react-dialog": "^1.1.7",
        "@radix-ui/react-dropdown-menu": "^2.1.7",
        "@radix-ui/react-hover-card": "^1.1.7",
        "@radix-ui/react-label": "^2.1.3",
        "@radix-ui/react-menubar": "^1.1.7",
        "@radix-ui/react-navigation-menu": "^1.2.6",
        "@radix-ui/react-popover": "^1.1.7",
        "@radix-ui/react-progress": "^1.1.3",
        "@radix-ui/react-radio-group": "^1.2.4",
        "@radix-ui/react-scroll-area": "^1.2.4",
        "@radix-ui/react-select": "^2.1.7",
        "@radix-ui/react-separator": "^1.1.3",
        "@radix-ui/react-slider": "^1.2.4",
        "@radix-ui/react-slot": "^1.2.0",
        "@radix-ui/react-switch": "^1.1.4",
        "@radix-ui/react-tabs": "^1.1.4",
        "@radix-ui/react-toast": "^1.2.7",
        "@radix-ui/react-toggle": "^1.1.3",
        "@radix-ui/react-toggle-group": "^1.1.3",
        "@radix-ui/react-tooltip": "^1.2.0",
        "@tanstack/react-query": "^5.60.5",
        "@types/bcrypt": "^5.0.2",
        "@types/jsonwebtoken": "^9.0.9",
        "bcrypt": "^6.0.0",
        "class-variance-authority": "^0.7.1",
        "clsx": "^2.1.1",
        "cmdk": "^1.1.1",
        "connect-pg-simple": "^10.0.0",
        "date-fns": "^3.6.0",
        "drizzle-orm": "^0.39.1",
        "drizzle-zod": "^0.7.0",
        "embla-carousel-react": "^8.6.0",
        "express": "^4.21.2",
        "express-session": "^1.18.1",
        "framer-motion": "^11.13.1",
        "input-otp": "^1.4.2",
        "jsonwebtoken": "^9.0.2",
        "lucide-react": "^0.453.0",
        "memorystore": "^1.6.7",
        "next-themes": "^0.4.6",
        "passport": "^0.7.0",
        "passport-local": "^1.0.0",
        "react": "^18.3.1",
        "react-day-picker": "^8.10.1",
        "react-dom": "^18.3.1",
        "react-hook-form": "^7.55.0",
        "react-icons": "^5.4.0",
        "react-resizable-panels": "^2.1.7",
        "recharts": "^2.15.2",
        "tailwind-merge": "^2.6.0",
        "tailwindcss-animate": "^1.0.7",
        "tw-animate-css": "^1.2.5",
        "vaul": "^1.1.2",
        "wouter": "^3.3.5",
        "ws": "^8.18.0",
        "zod": "^3.24.2",
        "zod-validation-error": "^3.4.0"
      },
      "devDependencies": {
        "@replit/vite-plugin-cartographer": "^0.2.5",
        "@replit/vite-plugin-runtime-error-modal": "^0.0.3",
        "@tailwindcss/typography": "^0.5.15",
        "@tailwindcss/vite": "^4.1.3",
        "@types/connect-pg-simple": "^7.0.3",
        "@types/express": "4.17.21",
        "@types/express-session": "^1.18.0",
        "@types/node": "20.16.11",
        "@types/passport": "^1.0.16",
        "@types/passport-local": "^1.0.38",
        "@types/react": "^18.3.11",
        "@types/react-dom": "^18.3.1",
        "@types/ws": "^8.5.13",
        "@vitejs/plugin-react": "^4.3.2",
        "autoprefixer": "^10.4.20",
        "drizzle-kit": "^0.30.4",
        "esbuild": "^0.25.0",
        "postcss": "^8.4.47",
        "tailwindcss": "^3.4.17",
        "tsx": "^4.19.1",
        "typescript": "5.6.3",
        "vite": "^5.4.14"
      },
      "optionalDependencies": {
        "bufferutil": "^4.0.8"
      }
    },
    "node_modules/@alloc/quick-lru": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/@alloc/quick-lru/-/quick-lru-5.2.0.tgz",
      "integrity": "sha512-UrcABB+4bUrFABwbluTIBErXwvbsU/V7TZWfmbgJfbkwiBuziS9gxdODUyuiecfdGQ85jglMW6juS3+z5TsKLw==",
      "license": "MIT",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/@ampproject/remapping": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/@ampproject/remapping/-/remapping-2.3.0.tgz",
      "integrity": "sha512-30iZtAPgz+LTIYoeivqYo853f02jBYSd5uGnGpkFV0M3xOt9aN73erkgYAmZU43x4VfqcnLxW9Kpg3R5LC4YYw==",
      "dev": true,
      "license": "Apache-2.0",
      "dependencies": {
        "@jridgewell/gen-mapping": "^0.3.5",
        "@jridgewell/trace-mapping": "^0.3.24"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@babel/code-frame": {
      "version": "7.26.2",
      "resolved": "https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.26.2.tgz",
      "integrity": "sha512-RJlIHRueQgwWitWgF8OdFYGZX328Ax5BCemNGlqHfplnRT9ESi8JkFlvaVYbS+UubVY6dpv87Fs2u5M29iNFVQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-validator-identifier": "^7.25.9",
        "js-tokens": "^4.0.0",
        "picocolors": "^1.0.0"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/compat-data": {
      "version": "7.26.2",
      "resolved": "https://registry.npmjs.org/@babel/compat-data/-/compat-data-7.26.2.tgz",
      "integrity": "sha512-Z0WgzSEa+aUcdiJuCIqgujCshpMWgUpgOxXotrYPSA53hA3qopNaqcJpyr0hVb1FeWdnqFA35/fUtXgBK8srQg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/core": {
      "version": "7.26.0",
      "resolved": "https://registry.npmjs.org/@babel/core/-/core-7.26.0.tgz",
      "integrity": "sha512-i1SLeK+DzNnQ3LL/CswPCa/E5u4lh1k6IAEphON8F+cXt0t9euTshDru0q7/IqMa1PMPz5RnHuHscF8/ZJsStg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@ampproject/remapping": "^2.2.0",
        "@babel/code-frame": "^7.26.0",
        "@babel/generator": "^7.26.0",
        "@babel/helper-compilation-targets": "^7.25.9",
        "@babel/helper-module-transforms": "^7.26.0",
        "@babel/helpers": "^7.26.0",
        "@babel/parser": "^7.26.0",
        "@babel/template": "^7.25.9",
        "@babel/traverse": "^7.25.9",
        "@babel/types": "^7.26.0",
        "convert-source-map": "^2.0.0",
        "debug": "^4.1.0",
        "gensync": "^1.0.0-beta.2",
        "json5": "^2.2.3",
        "semver": "^6.3.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/babel"
      }
    },
    "node_modules/@babel/generator": {
      "version": "7.26.9",
      "resolved": "https://registry.npmjs.org/@babel/generator/-/generator-7.26.9.tgz",
      "integrity": "sha512-kEWdzjOAUMW4hAyrzJ0ZaTOu9OmpyDIQicIh0zg0EEcEkYXZb2TjtBhnHi2ViX7PKwZqF4xwqfAm299/QMP3lg==",
      "dev": true,
      "dependencies": {
        "@babel/parser": "^7.26.9",
        "@babel/types": "^7.26.9",
        "@jridgewell/gen-mapping": "^0.3.5",
        "@jridgewell/trace-mapping": "^0.3.25",
        "jsesc": "^3.0.2"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-compilation-targets": {
      "version": "7.25.9",
      "resolved": "https://registry.npmjs.org/@babel/helper-compilation-targets/-/helper-compilation-targets-7.25.9.tgz",
      "integrity": "sha512-j9Db8Suy6yV/VHa4qzrj9yZfZxhLWQdVnRlXxmKLYlhWUVB1sB2G5sxuWYXk/whHD9iW76PmNzxZ4UCnTQTVEQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/compat-data": "^7.25.9",
        "@babel/helper-validator-option": "^7.25.9",
        "browserslist": "^4.24.0",
        "lru-cache": "^5.1.1",
        "semver": "^6.3.1"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-module-imports": {
      "version": "7.25.9",
      "resolved": "https://registry.npmjs.org/@babel/helper-module-imports/-/helper-module-imports-7.25.9.tgz",
      "integrity": "sha512-tnUA4RsrmflIM6W6RFTLFSXITtl0wKjgpnLgXyowocVPrbYrLUXSBXDgTs8BlbmIzIdlBySRQjINYs2BAkiLtw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/traverse": "^7.25.9",
        "@babel/types": "^7.25.9"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-module-transforms": {
      "version": "7.26.0",
      "resolved": "https://registry.npmjs.org/@babel/helper-module-transforms/-/helper-module-transforms-7.26.0.tgz",
      "integrity": "sha512-xO+xu6B5K2czEnQye6BHA7DolFFmS3LB7stHZFaOLb1pAwO1HWLS8fXA+eh0A2yIvltPVmx3eNNDBJA2SLHXFw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-module-imports": "^7.25.9",
        "@babel/helper-validator-identifier": "^7.25.9",
        "@babel/traverse": "^7.25.9"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/helper-plugin-utils": {
      "version": "7.25.9",
      "resolved": "https://registry.npmjs.org/@babel/helper-plugin-utils/-/helper-plugin-utils-7.25.9.tgz",
      "integrity": "sha512-kSMlyUVdWe25rEsRGviIgOWnoT/nfABVWlqt9N19/dIPWViAOW2s9wznP5tURbs/IDuNk4gPy3YdYRgH3uxhBw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-string-parser": {
      "version": "7.25.9",
      "resolved": "https://registry.npmjs.org/@babel/helper-string-parser/-/helper-string-parser-7.25.9.tgz",
      "integrity": "sha512-4A/SCr/2KLd5jrtOMFzaKjVtAei3+2r/NChoBNoZ3EyP/+GlhoaEGoWOZUmFmoITP7zOJyHIMm+DYRd8o3PvHA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-validator-identifier": {
      "version": "7.25.9",
      "resolved": "https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.25.9.tgz",
      "integrity": "sha512-Ed61U6XJc3CVRfkERJWDz4dJwKe7iLmmJsbOGu9wSloNSFttHV0I8g6UAgb7qnK5ly5bGLPd4oXZlxCdANBOWQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-validator-option": {
      "version": "7.25.9",
      "resolved": "https://registry.npmjs.org/@babel/helper-validator-option/-/helper-validator-option-7.25.9.tgz",
      "integrity": "sha512-e/zv1co8pp55dNdEcCynfj9X7nyUKUXoUEwfXqaZt0omVOmDe9oOTdKStH4GmAw6zxMFs50ZayuMfHDKlO7Tfw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helpers": {
      "version": "7.26.0",
      "resolved": "https://registry.npmjs.org/@babel/helpers/-/helpers-7.26.0.tgz",
      "integrity": "sha512-tbhNuIxNcVb21pInl3ZSjksLCvgdZy9KwJ8brv993QtIVKJBBkYXz4q4ZbAv31GdnC+R90np23L5FbEBlthAEw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/template": "^7.25.9",
        "@babel/types": "^7.26.0"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/parser": {
      "version": "7.26.9",
      "resolved": "https://registry.npmjs.org/@babel/parser/-/parser-7.26.9.tgz",
      "integrity": "sha512-81NWa1njQblgZbQHxWHpxxCzNsa3ZwvFqpUg7P+NNUU6f3UU2jBEg4OlF/J6rl8+PQGh1q6/zWScd001YwcA5A==",
      "dev": true,
      "dependencies": {
        "@babel/types": "^7.26.9"
      },
      "bin": {
        "parser": "bin/babel-parser.js"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@babel/plugin-transform-react-jsx-self": {
      "version": "7.25.9",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-jsx-self/-/plugin-transform-react-jsx-self-7.25.9.tgz",
      "integrity": "sha512-y8quW6p0WHkEhmErnfe58r7x0A70uKphQm8Sp8cV7tjNQwK56sNVK0M73LK3WuYmsuyrftut4xAkjjgU0twaMg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.25.9"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-react-jsx-source": {
      "version": "7.25.9",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-jsx-source/-/plugin-transform-react-jsx-source-7.25.9.tgz",
      "integrity": "sha512-+iqjT8xmXhhYv4/uiYd8FNQsraMFZIfxVSqxxVSZP0WbbSAWvBXAul0m/zu+7Vv4O/3WtApy9pmaTMiumEZgfg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.25.9"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/runtime": {
      "version": "7.27.0",
      "resolved": "https://registry.npmjs.org/@babel/runtime/-/runtime-7.27.0.tgz",
      "integrity": "sha512-VtPOkrdPHZsKc/clNqyi9WUA8TINkZ4cGk63UUE3u4pmB2k+ZMQRDuIOagv8UVd6j7k0T3+RRIb7beKTebNbcw==",
      "dependencies": {
        "regenerator-runtime": "^0.14.0"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/template": {
      "version": "7.26.9",
      "resolved": "https://registry.npmjs.org/@babel/template/-/template-7.26.9.tgz",
      "integrity": "sha512-qyRplbeIpNZhmzOysF/wFMuP9sctmh2cFzRAZOn1YapxBsE1i9bJIY586R/WBLfLcmcBlM8ROBiQURnnNy+zfA==",
      "dev": true,
      "dependencies": {
        "@babel/code-frame": "^7.26.2",
        "@babel/parser": "^7.26.9",
        "@babel/types": "^7.26.9"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/traverse": {
      "version": "7.26.9",
      "resolved": "https://registry.npmjs.org/@babel/traverse/-/traverse-7.26.9.tgz",
      "integrity": "sha512-ZYW7L+pL8ahU5fXmNbPF+iZFHCv5scFak7MZ9bwaRPLUhHh7QQEMjZUg0HevihoqCM5iSYHN61EyCoZvqC+bxg==",
      "dev": true,
      "dependencies": {
        "@babel/code-frame": "^7.26.2",
        "@babel/generator": "^7.26.9",
        "@babel/parser": "^7.26.9",
        "@babel/template": "^7.26.9",
        "@babel/types": "^7.26.9",
        "debug": "^4.3.1",
        "globals": "^11.1.0"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/types": {
      "version": "7.26.9",
      "resolved": "https://registry.npmjs.org/@babel/types/-/types-7.26.9.tgz",
      "integrity": "sha512-Y3IR1cRnOxOCDvMmNiym7XpXQ93iGDDPHx+Zj+NM+rg0fBaShfQLkg+hKPaZCEvg5N/LeCo4+Rj/i3FuJsIQaw==",
      "dev": true,
      "dependencies": {
        "@babel/helper-string-parser": "^7.25.9",
        "@babel/helper-validator-identifier": "^7.25.9"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@drizzle-team/brocli": {
      "version": "0.10.2",
      "resolved": "https://registry.npmjs.org/@drizzle-team/brocli/-/brocli-0.10.2.tgz",
      "integrity": "sha512-z33Il7l5dKjUgGULTqBsQBQwckHh5AbIuxhdsIxDDiZAzBOrZO6q9ogcWC65kU382AfynTfgNumVcNIjuIua6w==",
      "dev": true,
      "license": "Apache-2.0"
    },
    "node_modules/@esbuild-kit/core-utils": {
      "version": "3.3.2",
      "resolved": "https://registry.npmjs.org/@esbuild-kit/core-utils/-/core-utils-3.3.2.tgz",
      "integrity": "sha512-sPRAnw9CdSsRmEtnsl2WXWdyquogVpB3yZ3dgwJfe8zrOzTsV7cJvmwrKVa+0ma5BoiGJ+BoqkMvawbayKUsqQ==",
      "deprecated": "Merged into tsx: https://tsx.is",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "esbuild": "~0.18.20",
        "source-map-support": "^0.5.21"
      }
    },
    "node_modules/@esbuild-kit/core-utils/node_modules/@esbuild/android-arm": {
      "version": "0.18.20",
      "resolved": "https://registry.npmjs.org/@esbuild/android-arm/-/android-arm-0.18.20.tgz",
      "integrity": "sha512-fyi7TDI/ijKKNZTUJAQqiG5T7YjJXgnzkURqmGj13C6dCqckZBLdl4h7bkhHt/t0WP+zO9/zwroDvANaOqO5Sw==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild-kit/core-utils/node_modules/@esbuild/android-arm64": {
      "version": "0.18.20",
      "resolved": "https://registry.npmjs.org/@esbuild/android-arm64/-/android-arm64-0.18.20.tgz",
      "integrity": "sha512-Nz4rJcchGDtENV0eMKUNa6L12zz2zBDXuhj/Vjh18zGqB44Bi7MBMSXjgunJgjRhCmKOjnPuZp4Mb6OKqtMHLQ==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild-kit/core-utils/node_modules/@esbuild/android-x64": {
      "version": "0.18.20",
      "resolved": "https://registry.npmjs.org/@esbuild/android-x64/-/android-x64-0.18.20.tgz",
      "integrity": "sha512-8GDdlePJA8D6zlZYJV/jnrRAi6rOiNaCC/JclcXpB+KIuvfBN4owLtgzY2bsxnx666XjJx2kDPUmnTtR8qKQUg==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild-kit/core-utils/node_modules/@esbuild/darwin-arm64": {
      "version": "0.18.20",
      "resolved": "https://registry.npmjs.org/@esbuild/darwin-arm64/-/darwin-arm64-0.18.20.tgz",
      "integrity": "sha512-bxRHW5kHU38zS2lPTPOyuyTm+S+eobPUnTNkdJEfAddYgEcll4xkT8DB9d2008DtTbl7uJag2HuE5NZAZgnNEA==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild-kit/core-utils/node_modules/@esbuild/darwin-x64": {
      "version": "0.18.20",
      "resolved": "https://registry.npmjs.org/@esbuild/darwin-x64/-/darwin-x64-0.18.20.tgz",
      "integrity": "sha512-pc5gxlMDxzm513qPGbCbDukOdsGtKhfxD1zJKXjCCcU7ju50O7MeAZ8c4krSJcOIJGFR+qx21yMMVYwiQvyTyQ==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild-kit/core-utils/node_modules/@esbuild/freebsd-arm64": {
      "version": "0.18.20",
      "resolved": "https://registry.npmjs.org/@esbuild/freebsd-arm64/-/freebsd-arm64-0.18.20.tgz",
      "integrity": "sha512-yqDQHy4QHevpMAaxhhIwYPMv1NECwOvIpGCZkECn8w2WFHXjEwrBn3CeNIYsibZ/iZEUemj++M26W3cNR5h+Tw==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "freebsd"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild-kit/core-utils/node_modules/@esbuild/freebsd-x64": {
      "version": "0.18.20",
      "resolved": "https://registry.npmjs.org/@esbuild/freebsd-x64/-/freebsd-x64-0.18.20.tgz",
      "integrity": "sha512-tgWRPPuQsd3RmBZwarGVHZQvtzfEBOreNuxEMKFcd5DaDn2PbBxfwLcj4+aenoh7ctXcbXmOQIn8HI6mCSw5MQ==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "freebsd"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild-kit/core-utils/node_modules/@esbuild/linux-arm": {
      "version": "0.18.20",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-arm/-/linux-arm-0.18.20.tgz",
      "integrity": "sha512-/5bHkMWnq1EgKr1V+Ybz3s1hWXok7mDFUMQ4cG10AfW3wL02PSZi5kFpYKrptDsgb2WAJIvRcDm+qIvXf/apvg==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild-kit/core-utils/node_modules/@esbuild/linux-arm64": {
      "version": "0.18.20",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-arm64/-/linux-arm64-0.18.20.tgz",
      "integrity": "sha512-2YbscF+UL7SQAVIpnWvYwM+3LskyDmPhe31pE7/aoTMFKKzIc9lLbyGUpmmb8a8AixOL61sQ/mFh3jEjHYFvdA==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild-kit/core-utils/node_modules/@esbuild/linux-ia32": {
      "version": "0.18.20",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-ia32/-/linux-ia32-0.18.20.tgz",
      "integrity": "sha512-P4etWwq6IsReT0E1KHU40bOnzMHoH73aXp96Fs8TIT6z9Hu8G6+0SHSw9i2isWrD2nbx2qo5yUqACgdfVGx7TA==",
      "cpu": [
        "ia32"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild-kit/core-utils/node_modules/@esbuild/linux-loong64": {
      "version": "0.18.20",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-loong64/-/linux-loong64-0.18.20.tgz",
      "integrity": "sha512-nXW8nqBTrOpDLPgPY9uV+/1DjxoQ7DoB2N8eocyq8I9XuqJ7BiAMDMf9n1xZM9TgW0J8zrquIb/A7s3BJv7rjg==",
      "cpu": [
        "loong64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild-kit/core-utils/node_modules/@esbuild/linux-mips64el": {
      "version": "0.18.20",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-mips64el/-/linux-mips64el-0.18.20.tgz",
      "integrity": "sha512-d5NeaXZcHp8PzYy5VnXV3VSd2D328Zb+9dEq5HE6bw6+N86JVPExrA6O68OPwobntbNJ0pzCpUFZTo3w0GyetQ==",
      "cpu": [
        "mips64el"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild-kit/core-utils/node_modules/@esbuild/linux-ppc64": {
      "version": "0.18.20",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-ppc64/-/linux-ppc64-0.18.20.tgz",
      "integrity": "sha512-WHPyeScRNcmANnLQkq6AfyXRFr5D6N2sKgkFo2FqguP44Nw2eyDlbTdZwd9GYk98DZG9QItIiTlFLHJHjxP3FA==",
      "cpu": [
        "ppc64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild-kit/core-utils/node_modules/@esbuild/linux-riscv64": {
      "version": "0.18.20",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-riscv64/-/linux-riscv64-0.18.20.tgz",
      "integrity": "sha512-WSxo6h5ecI5XH34KC7w5veNnKkju3zBRLEQNY7mv5mtBmrP/MjNBCAlsM2u5hDBlS3NGcTQpoBvRzqBcRtpq1A==",
      "cpu": [
        "riscv64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild-kit/core-utils/node_modules/@esbuild/linux-s390x": {
      "version": "0.18.20",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-s390x/-/linux-s390x-0.18.20.tgz",
      "integrity": "sha512-+8231GMs3mAEth6Ja1iK0a1sQ3ohfcpzpRLH8uuc5/KVDFneH6jtAJLFGafpzpMRO6DzJ6AvXKze9LfFMrIHVQ==",
      "cpu": [
        "s390x"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild-kit/core-utils/node_modules/@esbuild/linux-x64": {
      "version": "0.18.20",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-x64/-/linux-x64-0.18.20.tgz",
      "integrity": "sha512-UYqiqemphJcNsFEskc73jQ7B9jgwjWrSayxawS6UVFZGWrAAtkzjxSqnoclCXxWtfwLdzU+vTpcNYhpn43uP1w==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild-kit/core-utils/node_modules/@esbuild/netbsd-x64": {
      "version": "0.18.20",
      "resolved": "https://registry.npmjs.org/@esbuild/netbsd-x64/-/netbsd-x64-0.18.20.tgz",
      "integrity": "sha512-iO1c++VP6xUBUmltHZoMtCUdPlnPGdBom6IrO4gyKPFFVBKioIImVooR5I83nTew5UOYrk3gIJhbZh8X44y06A==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "netbsd"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild-kit/core-utils/node_modules/@esbuild/openbsd-x64": {
      "version": "0.18.20",
      "resolved": "https://registry.npmjs.org/@esbuild/openbsd-x64/-/openbsd-x64-0.18.20.tgz",
      "integrity": "sha512-e5e4YSsuQfX4cxcygw/UCPIEP6wbIL+se3sxPdCiMbFLBWu0eiZOJ7WoD+ptCLrmjZBK1Wk7I6D/I3NglUGOxg==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "openbsd"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild-kit/core-utils/node_modules/@esbuild/sunos-x64": {
      "version": "0.18.20",
      "resolved": "https://registry.npmjs.org/@esbuild/sunos-x64/-/sunos-x64-0.18.20.tgz",
      "integrity": "sha512-kDbFRFp0YpTQVVrqUd5FTYmWo45zGaXe0X8E1G/LKFC0v8x0vWrhOWSLITcCn63lmZIxfOMXtCfti/RxN/0wnQ==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "sunos"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild-kit/core-utils/node_modules/@esbuild/win32-arm64": {
      "version": "0.18.20",
      "resolved": "https://registry.npmjs.org/@esbuild/win32-arm64/-/win32-arm64-0.18.20.tgz",
      "integrity": "sha512-ddYFR6ItYgoaq4v4JmQQaAI5s7npztfV4Ag6NrhiaW0RrnOXqBkgwZLofVTlq1daVTQNhtI5oieTvkRPfZrePg==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild-kit/core-utils/node_modules/@esbuild/win32-ia32": {
      "version": "0.18.20",
      "resolved": "https://registry.npmjs.org/@esbuild/win32-ia32/-/win32-ia32-0.18.20.tgz",
      "integrity": "sha512-Wv7QBi3ID/rROT08SABTS7eV4hX26sVduqDOTe1MvGMjNd3EjOz4b7zeexIR62GTIEKrfJXKL9LFxTYgkyeu7g==",
      "cpu": [
        "ia32"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild-kit/core-utils/node_modules/@esbuild/win32-x64": {
      "version": "0.18.20",
      "resolved": "https://registry.npmjs.org/@esbuild/win32-x64/-/win32-x64-0.18.20.tgz",
      "integrity": "sha512-kTdfRcSiDfQca/y9QIkng02avJ+NCaQvrMejlsB3RRv5sE9rRoeBPISaZpKxHELzRxZyLvNts1P27W3wV+8geQ==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild-kit/core-utils/node_modules/esbuild": {
      "version": "0.18.20",
      "resolved": "https://registry.npmjs.org/esbuild/-/esbuild-0.18.20.tgz",
      "integrity": "sha512-ceqxoedUrcayh7Y7ZX6NdbbDzGROiyVBgC4PriJThBKSVPWnnFHZAkfI1lJT8QFkOwH4qOS2SJkS4wvpGl8BpA==",
      "dev": true,
      "hasInstallScript": true,
      "license": "MIT",
      "bin": {
        "esbuild": "bin/esbuild"
      },
      "engines": {
        "node": ">=12"
      },
      "optionalDependencies": {
        "@esbuild/android-arm": "0.18.20",
        "@esbuild/android-arm64": "0.18.20",
        "@esbuild/android-x64": "0.18.20",
        "@esbuild/darwin-arm64": "0.18.20",
        "@esbuild/darwin-x64": "0.18.20",
        "@esbuild/freebsd-arm64": "0.18.20",
        "@esbuild/freebsd-x64": "0.18.20",
        "@esbuild/linux-arm": "0.18.20",
        "@esbuild/linux-arm64": "0.18.20",
        "@esbuild/linux-ia32": "0.18.20",
        "@esbuild/linux-loong64": "0.18.20",
        "@esbuild/linux-mips64el": "0.18.20",
        "@esbuild/linux-ppc64": "0.18.20",
        "@esbuild/linux-riscv64": "0.18.20",
        "@esbuild/linux-s390x": "0.18.20",
        "@esbuild/linux-x64": "0.18.20",
        "@esbuild/netbsd-x64": "0.18.20",
        "@esbuild/openbsd-x64": "0.18.20",
        "@esbuild/sunos-x64": "0.18.20",
        "@esbuild/win32-arm64": "0.18.20",
        "@esbuild/win32-ia32": "0.18.20",
        "@esbuild/win32-x64": "0.18.20"
      }
    },
    "node_modules/@esbuild-kit/esm-loader": {
      "version": "2.6.5",
      "resolved": "https://registry.npmjs.org/@esbuild-kit/esm-loader/-/esm-loader-2.6.5.tgz",
      "integrity": "sha512-FxEMIkJKnodyA1OaCUoEvbYRkoZlLZ4d/eXFu9Fh8CbBBgP5EmZxrfTRyN0qpXZ4vOvqnE5YdRdcrmUUXuU+dA==",
      "deprecated": "Merged into tsx: https://tsx.is",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@esbuild-kit/core-utils": "^3.3.2",
        "get-tsconfig": "^4.7.0"
      }
    },
    "node_modules/@esbuild/aix-ppc64": {
      "version": "0.25.0",
      "resolved": "https://registry.npmjs.org/@esbuild/aix-ppc64/-/aix-ppc64-0.25.0.tgz",
      "integrity": "sha512-O7vun9Sf8DFjH2UtqK8Ku3LkquL9SZL8OLY1T5NZkA34+wG3OQF7cl4Ql8vdNzM6fzBbYfLaiRLIOZ+2FOCgBQ==",
      "cpu": [
        "ppc64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "aix"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/android-arm": {
      "version": "0.25.0",
      "resolved": "https://registry.npmjs.org/@esbuild/android-arm/-/android-arm-0.25.0.tgz",
      "integrity": "sha512-PTyWCYYiU0+1eJKmw21lWtC+d08JDZPQ5g+kFyxP0V+es6VPPSUhM6zk8iImp2jbV6GwjX4pap0JFbUQN65X1g==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/android-arm64": {
      "version": "0.25.0",
      "resolved": "https://registry.npmjs.org/@esbuild/android-arm64/-/android-arm64-0.25.0.tgz",
      "integrity": "sha512-grvv8WncGjDSyUBjN9yHXNt+cq0snxXbDxy5pJtzMKGmmpPxeAmAhWxXI+01lU5rwZomDgD3kJwulEnhTRUd6g==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/android-x64": {
      "version": "0.25.0",
      "resolved": "https://registry.npmjs.org/@esbuild/android-x64/-/android-x64-0.25.0.tgz",
      "integrity": "sha512-m/ix7SfKG5buCnxasr52+LI78SQ+wgdENi9CqyCXwjVR2X4Jkz+BpC3le3AoBPYTC9NHklwngVXvbJ9/Akhrfg==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/darwin-arm64": {
      "version": "0.25.0",
      "resolved": "https://registry.npmjs.org/@esbuild/darwin-arm64/-/darwin-arm64-0.25.0.tgz",
      "integrity": "sha512-mVwdUb5SRkPayVadIOI78K7aAnPamoeFR2bT5nszFUZ9P8UpK4ratOdYbZZXYSqPKMHfS1wdHCJk1P1EZpRdvw==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/darwin-x64": {
      "version": "0.25.0",
      "resolved": "https://registry.npmjs.org/@esbuild/darwin-x64/-/darwin-x64-0.25.0.tgz",
      "integrity": "sha512-DgDaYsPWFTS4S3nWpFcMn/33ZZwAAeAFKNHNa1QN0rI4pUjgqf0f7ONmXf6d22tqTY+H9FNdgeaAa+YIFUn2Rg==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/freebsd-arm64": {
      "version": "0.25.0",
      "resolved": "https://registry.npmjs.org/@esbuild/freebsd-arm64/-/freebsd-arm64-0.25.0.tgz",
      "integrity": "sha512-VN4ocxy6dxefN1MepBx/iD1dH5K8qNtNe227I0mnTRjry8tj5MRk4zprLEdG8WPyAPb93/e4pSgi1SoHdgOa4w==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "freebsd"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/freebsd-x64": {
      "version": "0.25.0",
      "resolved": "https://registry.npmjs.org/@esbuild/freebsd-x64/-/freebsd-x64-0.25.0.tgz",
      "integrity": "sha512-mrSgt7lCh07FY+hDD1TxiTyIHyttn6vnjesnPoVDNmDfOmggTLXRv8Id5fNZey1gl/V2dyVK1VXXqVsQIiAk+A==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "freebsd"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-arm": {
      "version": "0.25.0",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-arm/-/linux-arm-0.25.0.tgz",
      "integrity": "sha512-vkB3IYj2IDo3g9xX7HqhPYxVkNQe8qTK55fraQyTzTX/fxaDtXiEnavv9geOsonh2Fd2RMB+i5cbhu2zMNWJwg==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-arm64": {
      "version": "0.25.0",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-arm64/-/linux-arm64-0.25.0.tgz",
      "integrity": "sha512-9QAQjTWNDM/Vk2bgBl17yWuZxZNQIF0OUUuPZRKoDtqF2k4EtYbpyiG5/Dk7nqeK6kIJWPYldkOcBqjXjrUlmg==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-ia32": {
      "version": "0.25.0",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-ia32/-/linux-ia32-0.25.0.tgz",
      "integrity": "sha512-43ET5bHbphBegyeqLb7I1eYn2P/JYGNmzzdidq/w0T8E2SsYL1U6un2NFROFRg1JZLTzdCoRomg8Rvf9M6W6Gg==",
      "cpu": [
        "ia32"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-loong64": {
      "version": "0.25.0",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-loong64/-/linux-loong64-0.25.0.tgz",
      "integrity": "sha512-fC95c/xyNFueMhClxJmeRIj2yrSMdDfmqJnyOY4ZqsALkDrrKJfIg5NTMSzVBr5YW1jf+l7/cndBfP3MSDpoHw==",
      "cpu": [
        "loong64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-mips64el": {
      "version": "0.25.0",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-mips64el/-/linux-mips64el-0.25.0.tgz",
      "integrity": "sha512-nkAMFju7KDW73T1DdH7glcyIptm95a7Le8irTQNO/qtkoyypZAnjchQgooFUDQhNAy4iu08N79W4T4pMBwhPwQ==",
      "cpu": [
        "mips64el"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-ppc64": {
      "version": "0.25.0",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-ppc64/-/linux-ppc64-0.25.0.tgz",
      "integrity": "sha512-NhyOejdhRGS8Iwv+KKR2zTq2PpysF9XqY+Zk77vQHqNbo/PwZCzB5/h7VGuREZm1fixhs4Q/qWRSi5zmAiO4Fw==",
      "cpu": [
        "ppc64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-riscv64": {
      "version": "0.25.0",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-riscv64/-/linux-riscv64-0.25.0.tgz",
      "integrity": "sha512-5S/rbP5OY+GHLC5qXp1y/Mx//e92L1YDqkiBbO9TQOvuFXM+iDqUNG5XopAnXoRH3FjIUDkeGcY1cgNvnXp/kA==",
      "cpu": [
        "riscv64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-s390x": {
      "version": "0.25.0",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-s390x/-/linux-s390x-0.25.0.tgz",
      "integrity": "sha512-XM2BFsEBz0Fw37V0zU4CXfcfuACMrppsMFKdYY2WuTS3yi8O1nFOhil/xhKTmE1nPmVyvQJjJivgDT+xh8pXJA==",
      "cpu": [
        "s390x"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-x64": {
      "version": "0.25.0",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-x64/-/linux-x64-0.25.0.tgz",
      "integrity": "sha512-9yl91rHw/cpwMCNytUDxwj2XjFpxML0y9HAOH9pNVQDpQrBxHy01Dx+vaMu0N1CKa/RzBD2hB4u//nfc+Sd3Cw==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/netbsd-arm64": {
      "version": "0.25.0",
      "resolved": "https://registry.npmjs.org/@esbuild/netbsd-arm64/-/netbsd-arm64-0.25.0.tgz",
      "integrity": "sha512-RuG4PSMPFfrkH6UwCAqBzauBWTygTvb1nxWasEJooGSJ/NwRw7b2HOwyRTQIU97Hq37l3npXoZGYMy3b3xYvPw==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "netbsd"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/netbsd-x64": {
      "version": "0.25.0",
      "resolved": "https://registry.npmjs.org/@esbuild/netbsd-x64/-/netbsd-x64-0.25.0.tgz",
      "integrity": "sha512-jl+qisSB5jk01N5f7sPCsBENCOlPiS/xptD5yxOx2oqQfyourJwIKLRA2yqWdifj3owQZCL2sn6o08dBzZGQzA==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "netbsd"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/openbsd-arm64": {
      "version": "0.25.0",
      "resolved": "https://registry.npmjs.org/@esbuild/openbsd-arm64/-/openbsd-arm64-0.25.0.tgz",
      "integrity": "sha512-21sUNbq2r84YE+SJDfaQRvdgznTD8Xc0oc3p3iW/a1EVWeNj/SdUCbm5U0itZPQYRuRTW20fPMWMpcrciH2EJw==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "openbsd"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/openbsd-x64": {
      "version": "0.25.0",
      "resolved": "https://registry.npmjs.org/@esbuild/openbsd-x64/-/openbsd-x64-0.25.0.tgz",
      "integrity": "sha512-2gwwriSMPcCFRlPlKx3zLQhfN/2WjJ2NSlg5TKLQOJdV0mSxIcYNTMhk3H3ulL/cak+Xj0lY1Ym9ysDV1igceg==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "openbsd"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/sunos-x64": {
      "version": "0.25.0",
      "resolved": "https://registry.npmjs.org/@esbuild/sunos-x64/-/sunos-x64-0.25.0.tgz",
      "integrity": "sha512-bxI7ThgLzPrPz484/S9jLlvUAHYMzy6I0XiU1ZMeAEOBcS0VePBFxh1JjTQt3Xiat5b6Oh4x7UC7IwKQKIJRIg==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "sunos"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/win32-arm64": {
      "version": "0.25.0",
      "resolved": "https://registry.npmjs.org/@esbuild/win32-arm64/-/win32-arm64-0.25.0.tgz",
      "integrity": "sha512-ZUAc2YK6JW89xTbXvftxdnYy3m4iHIkDtK3CLce8wg8M2L+YZhIvO1DKpxrd0Yr59AeNNkTiic9YLf6FTtXWMw==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/win32-ia32": {
      "version": "0.25.0",
      "resolved": "https://registry.npmjs.org/@esbuild/win32-ia32/-/win32-ia32-0.25.0.tgz",
      "integrity": "sha512-eSNxISBu8XweVEWG31/JzjkIGbGIJN/TrRoiSVZwZ6pkC6VX4Im/WV2cz559/TXLcYbcrDN8JtKgd9DJVIo8GA==",
      "cpu": [
        "ia32"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/win32-x64": {
      "version": "0.25.0",
      "resolved": "https://registry.npmjs.org/@esbuild/win32-x64/-/win32-x64-0.25.0.tgz",
      "integrity": "sha512-ZENoHJBxA20C2zFzh6AI4fT6RraMzjYw4xKWemRTRmRVtN9c5DcH9r/f2ihEkMjOW5eGgrwCslG/+Y/3bL+DHQ==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@floating-ui/core": {
      "version": "1.6.9",
      "resolved": "https://registry.npmjs.org/@floating-ui/core/-/core-1.6.9.tgz",
      "integrity": "sha512-uMXCuQ3BItDUbAMhIXw7UPXRfAlOAvZzdK9BWpE60MCn+Svt3aLn9jsPTi/WNGlRUu2uI0v5S7JiIUsbsvh3fw==",
      "dependencies": {
        "@floating-ui/utils": "^0.2.9"
      }
    },
    "node_modules/@floating-ui/dom": {
      "version": "1.6.13",
      "resolved": "https://registry.npmjs.org/@floating-ui/dom/-/dom-1.6.13.tgz",
      "integrity": "sha512-umqzocjDgNRGTuO7Q8CU32dkHkECqI8ZdMZ5Swb6QAM0t5rnlrN3lGo1hdpscRd3WS8T6DKYK4ephgIH9iRh3w==",
      "dependencies": {
        "@floating-ui/core": "^1.6.0",
        "@floating-ui/utils": "^0.2.9"
      }
    },
    "node_modules/@floating-ui/react-dom": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/@floating-ui/react-dom/-/react-dom-2.1.2.tgz",
      "integrity": "sha512-06okr5cgPzMNBy+Ycse2A6udMi4bqwW/zgBF/rwjcNqWkyr82Mcg8b0vjX8OJpZFy/FKjJmw6wV7t44kK6kW7A==",
      "dependencies": {
        "@floating-ui/dom": "^1.0.0"
      },
      "peerDependencies": {
        "react": ">=16.8.0",
        "react-dom": ">=16.8.0"
      }
    },
    "node_modules/@floating-ui/utils": {
      "version": "0.2.9",
      "resolved": "https://registry.npmjs.org/@floating-ui/utils/-/utils-0.2.9.tgz",
      "integrity": "sha512-MDWhGtE+eHw5JW7lq4qhc5yRLS11ERl1c7Z6Xd0a58DozHES6EnNNwUWbMiG4J9Cgj053Bhk8zvlhFYKVhULwg=="
    },
    "node_modules/@hookform/resolvers": {
      "version": "3.10.0",
      "resolved": "https://registry.npmjs.org/@hookform/resolvers/-/resolvers-3.10.0.tgz",
      "integrity": "sha512-79Dv+3mDF7i+2ajj7SkypSKHhl1cbln1OGavqrsF7p6mbUv11xpqpacPsGDCTRvCSjEEIez2ef1NveSVL3b0Ag==",
      "peerDependencies": {
        "react-hook-form": "^7.0.0"
      }
    },
    "node_modules/@isaacs/cliui": {
      "version": "8.0.2",
      "resolved": "https://registry.npmjs.org/@isaacs/cliui/-/cliui-8.0.2.tgz",
      "integrity": "sha512-O8jcjabXaleOG9DQ0+ARXWZBTfnP4WNAqzuiJK7ll44AmxGKv/J2M4TPjxjY3znBCfvBXFzucm1twdyFybFqEA==",
      "license": "ISC",
      "dependencies": {
        "string-width": "^5.1.2",
        "string-width-cjs": "npm:string-width@^4.2.0",
        "strip-ansi": "^7.0.1",
        "strip-ansi-cjs": "npm:strip-ansi@^6.0.1",
        "wrap-ansi": "^8.1.0",
        "wrap-ansi-cjs": "npm:wrap-ansi@^7.0.0"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@jridgewell/gen-mapping": {
      "version": "0.3.5",
      "resolved": "https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.3.5.tgz",
      "integrity": "sha512-IzL8ZoEDIBRWEzlCcRhOaCupYyN5gdIK+Q6fbFdPDg6HqX6jpkItn7DFIpW9LQzXG6Df9sA7+OKnq0qlz/GaQg==",
      "license": "MIT",
      "dependencies": {
        "@jridgewell/set-array": "^1.2.1",
        "@jridgewell/sourcemap-codec": "^1.4.10",
        "@jridgewell/trace-mapping": "^0.3.24"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@jridgewell/resolve-uri": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.2.tgz",
      "integrity": "sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==",
      "license": "MIT",
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@jridgewell/set-array": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/@jridgewell/set-array/-/set-array-1.2.1.tgz",
      "integrity": "sha512-R8gLRTZeyp03ymzP/6Lil/28tGeGEzhx1q2k703KGWRAI1VdvPIXdG70VJc2pAMw3NA6JKL5hhFu1sJX0Mnn/A==",
      "license": "MIT",
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@jridgewell/sourcemap-codec": {
      "version": "1.5.0",
      "resolved": "https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.5.0.tgz",
      "integrity": "sha512-gv3ZRaISU3fjPAgNsriBRqGWQL6quFx04YMPW/zD8XMLsU32mhCCbfbO6KZFLjvYpCZ8zyDEgqsgf+PwPaM7GQ==",
      "license": "MIT"
    },
    "node_modules/@jridgewell/trace-mapping": {
      "version": "0.3.25",
      "resolved": "https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.25.tgz",
      "integrity": "sha512-vNk6aEwybGtawWmy/PzwnGDOjCkLWSD2wqvjGGAgOAwCGWySYXfYoxt00IJkTF+8Lb57DwOb3Aa0o9CApepiYQ==",
      "license": "MIT",
      "dependencies": {
        "@jridgewell/resolve-uri": "^3.1.0",
        "@jridgewell/sourcemap-codec": "^1.4.14"
      }
    },
    "node_modules/@neondatabase/serverless": {
      "version": "0.10.4",
      "resolved": "https://registry.npmjs.org/@neondatabase/serverless/-/serverless-0.10.4.tgz",
      "integrity": "sha512-2nZuh3VUO9voBauuh+IGYRhGU/MskWHt1IuZvHcJw6GLjDgtqj/KViKo7SIrLdGLdot7vFbiRRw+BgEy3wT9HA==",
      "license": "MIT",
      "dependencies": {
        "@types/pg": "8.11.6"
      }
    },
    "node_modules/@nodelib/fs.scandir": {
      "version": "2.1.5",
      "resolved": "https://registry.npmjs.org/@nodelib/fs.scandir/-/fs.scandir-2.1.5.tgz",
      "integrity": "sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==",
      "license": "MIT",
      "dependencies": {
        "@nodelib/fs.stat": "2.0.5",
        "run-parallel": "^1.1.9"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/@nodelib/fs.stat": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz",
      "integrity": "sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==",
      "license": "MIT",
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/@nodelib/fs.walk": {
      "version": "1.2.8",
      "resolved": "https://registry.npmjs.org/@nodelib/fs.walk/-/fs.walk-1.2.8.tgz",
      "integrity": "sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==",
      "license": "MIT",
      "dependencies": {
        "@nodelib/fs.scandir": "2.1.5",
        "fastq": "^1.6.0"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/@pkgjs/parseargs": {
      "version": "0.11.0",
      "resolved": "https://registry.npmjs.org/@pkgjs/parseargs/-/parseargs-0.11.0.tgz",
      "integrity": "sha512-+1VkjdD0QBLPodGrJUeqarH8VAIvQODIbwh9XpP5Syisf7YoQgsJKPNFoqqLQlu+VQ/tVSshMR6loPMn8U+dPg==",
      "license": "MIT",
      "optional": true,
      "engines": {
        "node": ">=14"
      }
    },
    "node_modules/@radix-ui/number": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/@radix-ui/number/-/number-1.1.1.tgz",
      "integrity": "sha512-MkKCwxlXTgz6CFoJx3pCwn07GKp36+aZyu/u2Ln2VrA5DcdyCZkASEDBTd8x5whTQQL5CiYf4prXKLcgQdv29g=="
    },
    "node_modules/@radix-ui/primitive": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/@radix-ui/primitive/-/primitive-1.1.2.tgz",
      "integrity": "sha512-XnbHrrprsNqZKQhStrSwgRUQzoCI1glLzdw79xiZPoofhGICeZRSQ3dIxAKH1gb3OHfNf4d6f+vAv3kil2eggA=="
    },
    "node_modules/@radix-ui/react-accordion": {
      "version": "1.2.4",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-accordion/-/react-accordion-1.2.4.tgz",
      "integrity": "sha512-SGCxlSBaMvEzDROzyZjsVNzu9XY5E28B3k8jOENyrz6csOv/pG1eHyYfLJai1n9tRjwG61coXDhfpgtxKxUv5g==",
      "dependencies": {
        "@radix-ui/primitive": "1.1.2",
        "@radix-ui/react-collapsible": "1.1.4",
        "@radix-ui/react-collection": "1.1.3",
        "@radix-ui/react-compose-refs": "1.1.2",
        "@radix-ui/react-context": "1.1.2",
        "@radix-ui/react-direction": "1.1.1",
        "@radix-ui/react-id": "1.1.1",
        "@radix-ui/react-primitive": "2.0.3",
        "@radix-ui/react-use-controllable-state": "1.1.1"
      },
      "peerDependencies": {
        "@types/react": "*",
        "@types/react-dom": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "@types/react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-alert-dialog": {
      "version": "1.1.7",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-alert-dialog/-/react-alert-dialog-1.1.7.tgz",
      "integrity": "sha512-7Gx1gcoltd0VxKoR8mc+TAVbzvChJyZryZsTam0UhoL92z0L+W8ovxvcgvd+nkz24y7Qc51JQKBAGe4+825tYw==",
      "dependencies": {
        "@radix-ui/primitive": "1.1.2",
        "@radix-ui/react-compose-refs": "1.1.2",
        "@radix-ui/react-context": "1.1.2",
        "@radix-ui/react-dialog": "1.1.7",
        "@radix-ui/react-primitive": "2.0.3",
        "@radix-ui/react-slot": "1.2.0"
      },
      "peerDependencies": {
        "@types/react": "*",
        "@types/react-dom": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "@types/react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-arrow": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-arrow/-/react-arrow-1.1.3.tgz",
      "integrity": "sha512-2dvVU4jva0qkNZH6HHWuSz5FN5GeU5tymvCgutF8WaXz9WnD1NgUhy73cqzkjkN4Zkn8lfTPv5JIfrC221W+Nw==",
      "dependencies": {
        "@radix-ui/react-primitive": "2.0.3"
      },
      "peerDependencies": {
        "@types/react": "*",
        "@types/react-dom": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "@types/react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-aspect-ratio": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-aspect-ratio/-/react-aspect-ratio-1.1.3.tgz",
      "integrity": "sha512-yIrYZUc2e/JtRkDpuJCmaR6kj/jzekDfQLcPFdEWzSOygCPy8poR4YcszaHP5A7mh25ncofHEpeTwfhxEuBv8Q==",
      "dependencies": {
        "@radix-ui/react-primitive": "2.0.3"
      },
      "peerDependencies": {
        "@types/react": "*",
        "@types/react-dom": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "@types/react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-avatar": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-avatar/-/react-avatar-1.1.4.tgz",
      "integrity": "sha512-+kBesLBzwqyDiYCtYFK+6Ktf+N7+Y6QOTUueLGLIbLZ/YeyFW6bsBGDsN+5HxHpM55C90u5fxsg0ErxzXTcwKA==",
      "dependencies": {
        "@radix-ui/react-context": "1.1.2",
        "@radix-ui/react-primitive": "2.0.3",
        "@radix-ui/react-use-callback-ref": "1.1.1",
        "@radix-ui/react-use-layout-effect": "1.1.1"
      },
      "peerDependencies": {
        "@types/react": "*",
        "@types/react-dom": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "@types/react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-checkbox": {
      "version": "1.1.5",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-checkbox/-/react-checkbox-1.1.5.tgz",
      "integrity": "sha512-B0gYIVxl77KYDR25AY9EGe/G//ef85RVBIxQvK+m5pxAC7XihAc/8leMHhDvjvhDu02SBSb6BuytlWr/G7F3+g==",
      "dependencies": {
        "@radix-ui/primitive": "1.1.2",
        "@radix-ui/react-compose-refs": "1.1.2",
        "@radix-ui/react-context": "1.1.2",
        "@radix-ui/react-presence": "1.1.3",
        "@radix-ui/react-primitive": "2.0.3",
        "@radix-ui/react-use-controllable-state": "1.1.1",
        "@radix-ui/react-use-previous": "1.1.1",
        "@radix-ui/react-use-size": "1.1.1"
      },
      "peerDependencies": {
        "@types/react": "*",
        "@types/react-dom": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "@types/react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-collapsible": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-collapsible/-/react-collapsible-1.1.4.tgz",
      "integrity": "sha512-u7LCw1EYInQtBNLGjm9nZ89S/4GcvX1UR5XbekEgnQae2Hkpq39ycJ1OhdeN1/JDfVNG91kWaWoest127TaEKQ==",
      "dependencies": {
        "@radix-ui/primitive": "1.1.2",
        "@radix-ui/react-compose-refs": "1.1.2",
        "@radix-ui/react-context": "1.1.2",
        "@radix-ui/react-id": "1.1.1",
        "@radix-ui/react-presence": "1.1.3",
        "@radix-ui/react-primitive": "2.0.3",
        "@radix-ui/react-use-controllable-state": "1.1.1",
        "@radix-ui/react-use-layout-effect": "1.1.1"
      },
      "peerDependencies": {
        "@types/react": "*",
        "@types/react-dom": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "@types/react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-collection": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-collection/-/react-collection-1.1.3.tgz",
      "integrity": "sha512-mM2pxoQw5HJ49rkzwOs7Y6J4oYH22wS8BfK2/bBxROlI4xuR0c4jEenQP63LlTlDkO6Buj2Vt+QYAYcOgqtrXA==",
      "dependencies": {
        "@radix-ui/react-compose-refs": "1.1.2",
        "@radix-ui/react-context": "1.1.2",
        "@radix-ui/react-primitive": "2.0.3",
        "@radix-ui/react-slot": "1.2.0"
      },
      "peerDependencies": {
        "@types/react": "*",
        "@types/react-dom": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "@types/react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-compose-refs": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-compose-refs/-/react-compose-refs-1.1.2.tgz",
      "integrity": "sha512-z4eqJvfiNnFMHIIvXP3CY57y2WJs5g2v3X0zm9mEJkrkNv4rDxu+sg9Jh8EkXyeqBkB7SOcboo9dMVqhyrACIg==",
      "peerDependencies": {
        "@types/react": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-context": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-context/-/react-context-1.1.2.tgz",
      "integrity": "sha512-jCi/QKUM2r1Ju5a3J64TH2A5SpKAgh0LpknyqdQ4m6DCV0xJ2HG1xARRwNGPQfi1SLdLWZ1OJz6F4OMBBNiGJA==",
      "peerDependencies": {
        "@types/react": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-context-menu": {
      "version": "2.2.7",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-context-menu/-/react-context-menu-2.2.7.tgz",
      "integrity": "sha512-EwO3tyyqwGaLPg0P64jmIKJnBywD0yjiL1eRuMPyhUXPkWWpa5JPDS+oyeIWHy2JbhF+NUlfUPVq6vE7OqgZww==",
      "dependencies": {
        "@radix-ui/primitive": "1.1.2",
        "@radix-ui/react-context": "1.1.2",
        "@radix-ui/react-menu": "2.1.7",
        "@radix-ui/react-primitive": "2.0.3",
        "@radix-ui/react-use-callback-ref": "1.1.1",
        "@radix-ui/react-use-controllable-state": "1.1.1"
      },
      "peerDependencies": {
        "@types/react": "*",
        "@types/react-dom": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "@types/react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-dialog": {
      "version": "1.1.7",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-dialog/-/react-dialog-1.1.7.tgz",
      "integrity": "sha512-EIdma8C0C/I6kL6sO02avaCRqi3fmWJpxH6mqbVScorW6nNktzKJT/le7VPho3o/7wCsyRg3z0+Q+Obr0Gy/VQ==",
      "dependencies": {
        "@radix-ui/primitive": "1.1.2",
        "@radix-ui/react-compose-refs": "1.1.2",
        "@radix-ui/react-context": "1.1.2",
        "@radix-ui/react-dismissable-layer": "1.1.6",
        "@radix-ui/react-focus-guards": "1.1.2",
        "@radix-ui/react-focus-scope": "1.1.3",
        "@radix-ui/react-id": "1.1.1",
        "@radix-ui/react-portal": "1.1.5",
        "@radix-ui/react-presence": "1.1.3",
        "@radix-ui/react-primitive": "2.0.3",
        "@radix-ui/react-slot": "1.2.0",
        "@radix-ui/react-use-controllable-state": "1.1.1",
        "aria-hidden": "^1.2.4",
        "react-remove-scroll": "^2.6.3"
      },
      "peerDependencies": {
        "@types/react": "*",
        "@types/react-dom": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "@types/react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-direction": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-direction/-/react-direction-1.1.1.tgz",
      "integrity": "sha512-1UEWRX6jnOA2y4H5WczZ44gOOjTEmlqv1uNW4GAJEO5+bauCBhv8snY65Iw5/VOS/ghKN9gr2KjnLKxrsvoMVw==",
      "peerDependencies": {
        "@types/react": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-dismissable-layer": {
      "version": "1.1.6",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-dismissable-layer/-/react-dismissable-layer-1.1.6.tgz",
      "integrity": "sha512-7gpgMT2gyKym9Jz2ZhlRXSg2y6cNQIK8d/cqBZ0RBCaps8pFryCWXiUKI+uHGFrhMrbGUP7U6PWgiXzIxoyF3Q==",
      "dependencies": {
        "@radix-ui/primitive": "1.1.2",
        "@radix-ui/react-compose-refs": "1.1.2",
        "@radix-ui/react-primitive": "2.0.3",
        "@radix-ui/react-use-callback-ref": "1.1.1",
        "@radix-ui/react-use-escape-keydown": "1.1.1"
      },
      "peerDependencies": {
        "@types/react": "*",
        "@types/react-dom": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "@types/react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-dropdown-menu": {
      "version": "2.1.7",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-dropdown-menu/-/react-dropdown-menu-2.1.7.tgz",
      "integrity": "sha512-7/1LiuNZuCQE3IzdicGoHdQOHkS2Q08+7p8w6TXZ6ZjgAULaCI85ZY15yPl4o4FVgoKLRT43/rsfNVN8osClQQ==",
      "dependencies": {
        "@radix-ui/primitive": "1.1.2",
        "@radix-ui/react-compose-refs": "1.1.2",
        "@radix-ui/react-context": "1.1.2",
        "@radix-ui/react-id": "1.1.1",
        "@radix-ui/react-menu": "2.1.7",
        "@radix-ui/react-primitive": "2.0.3",
        "@radix-ui/react-use-controllable-state": "1.1.1"
      },
      "peerDependencies": {
        "@types/react": "*",
        "@types/react-dom": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "@types/react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-focus-guards": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-focus-guards/-/react-focus-guards-1.1.2.tgz",
      "integrity": "sha512-fyjAACV62oPV925xFCrH8DR5xWhg9KYtJT4s3u54jxp+L/hbpTY2kIeEFFbFe+a/HCE94zGQMZLIpVTPVZDhaA==",
      "peerDependencies": {
        "@types/react": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-focus-scope": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-focus-scope/-/react-focus-scope-1.1.3.tgz",
      "integrity": "sha512-4XaDlq0bPt7oJwR+0k0clCiCO/7lO7NKZTAaJBYxDNQT/vj4ig0/UvctrRscZaFREpRvUTkpKR96ov1e6jptQg==",
      "dependencies": {
        "@radix-ui/react-compose-refs": "1.1.2",
        "@radix-ui/react-primitive": "2.0.3",
        "@radix-ui/react-use-callback-ref": "1.1.1"
      },
      "peerDependencies": {
        "@types/react": "*",
        "@types/react-dom": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "@types/react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-hover-card": {
      "version": "1.1.7",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-hover-card/-/react-hover-card-1.1.7.tgz",
      "integrity": "sha512-HwM03kP8psrv21J1+9T/hhxi0f5rARVbqIZl9+IAq13l4j4fX+oGIuxisukZZmebO7J35w9gpoILvtG8bbph0w==",
      "dependencies": {
        "@radix-ui/primitive": "1.1.2",
        "@radix-ui/react-compose-refs": "1.1.2",
        "@radix-ui/react-context": "1.1.2",
        "@radix-ui/react-dismissable-layer": "1.1.6",
        "@radix-ui/react-popper": "1.2.3",
        "@radix-ui/react-portal": "1.1.5",
        "@radix-ui/react-presence": "1.1.3",
        "@radix-ui/react-primitive": "2.0.3",
        "@radix-ui/react-use-controllable-state": "1.1.1"
      },
      "peerDependencies": {
        "@types/react": "*",
        "@types/react-dom": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "@types/react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-id": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-id/-/react-id-1.1.1.tgz",
      "integrity": "sha512-kGkGegYIdQsOb4XjsfM97rXsiHaBwco+hFI66oO4s9LU+PLAC5oJ7khdOVFxkhsmlbpUqDAvXw11CluXP+jkHg==",
      "dependencies": {
        "@radix-ui/react-use-layout-effect": "1.1.1"
      },
      "peerDependencies": {
        "@types/react": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-label": {
      "version": "2.1.3",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-label/-/react-label-2.1.3.tgz",
      "integrity": "sha512-zwSQ1NzSKG95yA0tvBMgv6XPHoqapJCcg9nsUBaQQ66iRBhZNhlpaQG2ERYYX4O4stkYFK5rxj5NsWfO9CS+Hg==",
      "dependencies": {
        "@radix-ui/react-primitive": "2.0.3"
      },
      "peerDependencies": {
        "@types/react": "*",
        "@types/react-dom": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "@types/react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-menu": {
      "version": "2.1.7",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-menu/-/react-menu-2.1.7.tgz",
      "integrity": "sha512-tBODsrk68rOi1/iQzbM54toFF+gSw/y+eQgttFflqlGekuSebNqvFNHjJgjqPhiMb4Fw9A0zNFly1QT6ZFdQ+Q==",
      "dependencies": {
        "@radix-ui/primitive": "1.1.2",
        "@radix-ui/react-collection": "1.1.3",
        "@radix-ui/react-compose-refs": "1.1.2",
        "@radix-ui/react-context": "1.1.2",
        "@radix-ui/react-direction": "1.1.1",
        "@radix-ui/react-dismissable-layer": "1.1.6",
        "@radix-ui/react-focus-guards": "1.1.2",
        "@radix-ui/react-focus-scope": "1.1.3",
        "@radix-ui/react-id": "1.1.1",
        "@radix-ui/react-popper": "1.2.3",
        "@radix-ui/react-portal": "1.1.5",
        "@radix-ui/react-presence": "1.1.3",
        "@radix-ui/react-primitive": "2.0.3",
        "@radix-ui/react-roving-focus": "1.1.3",
        "@radix-ui/react-slot": "1.2.0",
        "@radix-ui/react-use-callback-ref": "1.1.1",
        "aria-hidden": "^1.2.4",
        "react-remove-scroll": "^2.6.3"
      },
      "peerDependencies": {
        "@types/react": "*",
        "@types/react-dom": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "@types/react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-menubar": {
      "version": "1.1.7",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-menubar/-/react-menubar-1.1.7.tgz",
      "integrity": "sha512-YB2zFhGdZ5SWEgRS+PgrF7EkwpsjEHntIFB/LRbT49LJdnIeK/xQQyuwLiRcOCgTDN+ALlPXQ08f0P0+TfR41g==",
      "dependencies": {
        "@radix-ui/primitive": "1.1.2",
        "@radix-ui/react-collection": "1.1.3",
        "@radix-ui/react-compose-refs": "1.1.2",
        "@radix-ui/react-context": "1.1.2",
        "@radix-ui/react-direction": "1.1.1",
        "@radix-ui/react-id": "1.1.1",
        "@radix-ui/react-menu": "2.1.7",
        "@radix-ui/react-primitive": "2.0.3",
        "@radix-ui/react-roving-focus": "1.1.3",
        "@radix-ui/react-use-controllable-state": "1.1.1"
      },
      "peerDependencies": {
        "@types/react": "*",
        "@types/react-dom": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "@types/react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-navigation-menu": {
      "version": "1.2.6",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-navigation-menu/-/react-navigation-menu-1.2.6.tgz",
      "integrity": "sha512-HJqyzqG74Lj7KV58rk73i/B1nnopVyCfUmKgeGWWrZZiCuMNcY0KKugTrmqMbIeMliUnkBUDKCy9J6Mzl6xeWw==",
      "dependencies": {
        "@radix-ui/primitive": "1.1.2",
        "@radix-ui/react-collection": "1.1.3",
        "@radix-ui/react-compose-refs": "1.1.2",
        "@radix-ui/react-context": "1.1.2",
        "@radix-ui/react-direction": "1.1.1",
        "@radix-ui/react-dismissable-layer": "1.1.6",
        "@radix-ui/react-id": "1.1.1",
        "@radix-ui/react-presence": "1.1.3",
        "@radix-ui/react-primitive": "2.0.3",
        "@radix-ui/react-use-callback-ref": "1.1.1",
        "@radix-ui/react-use-controllable-state": "1.1.1",
        "@radix-ui/react-use-layout-effect": "1.1.1",
        "@radix-ui/react-use-previous": "1.1.1",
        "@radix-ui/react-visually-hidden": "1.1.3"
      },
      "peerDependencies": {
        "@types/react": "*",
        "@types/react-dom": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "@types/react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-popover": {
      "version": "1.1.7",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-popover/-/react-popover-1.1.7.tgz",
      "integrity": "sha512-I38OYWDmJF2kbO74LX8UsFydSHWOJuQ7LxPnTefjxxvdvPLempvAnmsyX9UsBlywcbSGpRH7oMLfkUf+ij4nrw==",
      "dependencies": {
        "@radix-ui/primitive": "1.1.2",
        "@radix-ui/react-compose-refs": "1.1.2",
        "@radix-ui/react-context": "1.1.2",
        "@radix-ui/react-dismissable-layer": "1.1.6",
        "@radix-ui/react-focus-guards": "1.1.2",
        "@radix-ui/react-focus-scope": "1.1.3",
        "@radix-ui/react-id": "1.1.1",
        "@radix-ui/react-popper": "1.2.3",
        "@radix-ui/react-portal": "1.1.5",
        "@radix-ui/react-presence": "1.1.3",
        "@radix-ui/react-primitive": "2.0.3",
        "@radix-ui/react-slot": "1.2.0",
        "@radix-ui/react-use-controllable-state": "1.1.1",
        "aria-hidden": "^1.2.4",
        "react-remove-scroll": "^2.6.3"
      },
      "peerDependencies": {
        "@types/react": "*",
        "@types/react-dom": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "@types/react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-popper": {
      "version": "1.2.3",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-popper/-/react-popper-1.2.3.tgz",
      "integrity": "sha512-iNb9LYUMkne9zIahukgQmHlSBp9XWGeQQ7FvUGNk45ywzOb6kQa+Ca38OphXlWDiKvyneo9S+KSJsLfLt8812A==",
      "dependencies": {
        "@floating-ui/react-dom": "^2.0.0",
        "@radix-ui/react-arrow": "1.1.3",
        "@radix-ui/react-compose-refs": "1.1.2",
        "@radix-ui/react-context": "1.1.2",
        "@radix-ui/react-primitive": "2.0.3",
        "@radix-ui/react-use-callback-ref": "1.1.1",
        "@radix-ui/react-use-layout-effect": "1.1.1",
        "@radix-ui/react-use-rect": "1.1.1",
        "@radix-ui/react-use-size": "1.1.1",
        "@radix-ui/rect": "1.1.1"
      },
      "peerDependencies": {
        "@types/react": "*",
        "@types/react-dom": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "@types/react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-portal": {
      "version": "1.1.5",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-portal/-/react-portal-1.1.5.tgz",
      "integrity": "sha512-ps/67ZqsFm+Mb6lSPJpfhRLrVL2i2fntgCmGMqqth4eaGUf+knAuuRtWVJrNjUhExgmdRqftSgzpf0DF0n6yXA==",
      "dependencies": {
        "@radix-ui/react-primitive": "2.0.3",
        "@radix-ui/react-use-layout-effect": "1.1.1"
      },
      "peerDependencies": {
        "@types/react": "*",
        "@types/react-dom": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "@types/react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-presence": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-presence/-/react-presence-1.1.3.tgz",
      "integrity": "sha512-IrVLIhskYhH3nLvtcBLQFZr61tBG7wx7O3kEmdzcYwRGAEBmBicGGL7ATzNgruYJ3xBTbuzEEq9OXJM3PAX3tA==",
      "dependencies": {
        "@radix-ui/react-compose-refs": "1.1.2",
        "@radix-ui/react-use-layout-effect": "1.1.1"
      },
      "peerDependencies": {
        "@types/react": "*",
        "@types/react-dom": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "@types/react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-primitive": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-primitive/-/react-primitive-2.0.3.tgz",
      "integrity": "sha512-Pf/t/GkndH7CQ8wE2hbkXA+WyZ83fhQQn5DDmwDiDo6AwN/fhaH8oqZ0jRjMrO2iaMhDi6P1HRx6AZwyMinY1g==",
      "dependencies": {
        "@radix-ui/react-slot": "1.2.0"
      },
      "peerDependencies": {
        "@types/react": "*",
        "@types/react-dom": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "@types/react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-progress": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-progress/-/react-progress-1.1.3.tgz",
      "integrity": "sha512-F56aZPGTPb4qJQ/vDjnAq63oTu/DRoIG/Asb5XKOWj8rpefNLtUllR969j5QDN2sRrTk9VXIqQDRj5VvAuquaw==",
      "dependencies": {
        "@radix-ui/react-context": "1.1.2",
        "@radix-ui/react-primitive": "2.0.3"
      },
      "peerDependencies": {
        "@types/react": "*",
        "@types/react-dom": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "@types/react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-radio-group": {
      "version": "1.2.4",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-radio-group/-/react-radio-group-1.2.4.tgz",
      "integrity": "sha512-oLz7ATfKgVTUbpr5OBu6Q7hQcnV22uPT306bmG0QwgnKqBStR98RfWfJGCfW/MmhL4ISmrmmBPBW+c77SDwV9g==",
      "dependencies": {
        "@radix-ui/primitive": "1.1.2",
        "@radix-ui/react-compose-refs": "1.1.2",
        "@radix-ui/react-context": "1.1.2",
        "@radix-ui/react-direction": "1.1.1",
        "@radix-ui/react-presence": "1.1.3",
        "@radix-ui/react-primitive": "2.0.3",
        "@radix-ui/react-roving-focus": "1.1.3",
        "@radix-ui/react-use-controllable-state": "1.1.1",
        "@radix-ui/react-use-previous": "1.1.1",
        "@radix-ui/react-use-size": "1.1.1"
      },
      "peerDependencies": {
        "@types/react": "*",
        "@types/react-dom": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "@types/react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-roving-focus": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-roving-focus/-/react-roving-focus-1.1.3.tgz",
      "integrity": "sha512-ufbpLUjZiOg4iYgb2hQrWXEPYX6jOLBbR27bDyAff5GYMRrCzcze8lukjuXVUQvJ6HZe8+oL+hhswDcjmcgVyg==",
      "dependencies": {
        "@radix-ui/primitive": "1.1.2",
        "@radix-ui/react-collection": "1.1.3",
        "@radix-ui/react-compose-refs": "1.1.2",
        "@radix-ui/react-context": "1.1.2",
        "@radix-ui/react-direction": "1.1.1",
        "@radix-ui/react-id": "1.1.1",
        "@radix-ui/react-primitive": "2.0.3",
        "@radix-ui/react-use-callback-ref": "1.1.1",
        "@radix-ui/react-use-controllable-state": "1.1.1"
      },
      "peerDependencies": {
        "@types/react": "*",
        "@types/react-dom": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "@types/react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-scroll-area": {
      "version": "1.2.4",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-scroll-area/-/react-scroll-area-1.2.4.tgz",
      "integrity": "sha512-G9rdWTQjOR4sk76HwSdROhPU0jZWpfozn9skU1v4N0/g9k7TmswrJn8W8WMU+aYktnLLpk5LX6fofj2bGe5NFQ==",
      "dependencies": {
        "@radix-ui/number": "1.1.1",
        "@radix-ui/primitive": "1.1.2",
        "@radix-ui/react-compose-refs": "1.1.2",
        "@radix-ui/react-context": "1.1.2",
        "@radix-ui/react-direction": "1.1.1",
        "@radix-ui/react-presence": "1.1.3",
        "@radix-ui/react-primitive": "2.0.3",
        "@radix-ui/react-use-callback-ref": "1.1.1",
        "@radix-ui/react-use-layout-effect": "1.1.1"
      },
      "peerDependencies": {
        "@types/react": "*",
        "@types/react-dom": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "@types/react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-select": {
      "version": "2.1.7",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-select/-/react-select-2.1.7.tgz",
      "integrity": "sha512-exzGIRtc7S8EIM2KjFg+7lJZsH7O7tpaBaJbBNVDnOZNhtoQ2iV+iSNfi2Wth0m6h3trJkMVvzAehB3c6xj/3Q==",
      "dependencies": {
        "@radix-ui/number": "1.1.1",
        "@radix-ui/primitive": "1.1.2",
        "@radix-ui/react-collection": "1.1.3",
        "@radix-ui/react-compose-refs": "1.1.2",
        "@radix-ui/react-context": "1.1.2",
        "@radix-ui/react-direction": "1.1.1",
        "@radix-ui/react-dismissable-layer": "1.1.6",
        "@radix-ui/react-focus-guards": "1.1.2",
        "@radix-ui/react-focus-scope": "1.1.3",
        "@radix-ui/react-id": "1.1.1",
        "@radix-ui/react-popper": "1.2.3",
        "@radix-ui/react-portal": "1.1.5",
        "@radix-ui/react-primitive": "2.0.3",
        "@radix-ui/react-slot": "1.2.0",
        "@radix-ui/react-use-callback-ref": "1.1.1",
        "@radix-ui/react-use-controllable-state": "1.1.1",
        "@radix-ui/react-use-layout-effect": "1.1.1",
        "@radix-ui/react-use-previous": "1.1.1",
        "@radix-ui/react-visually-hidden": "1.1.3",
        "aria-hidden": "^1.2.4",
        "react-remove-scroll": "^2.6.3"
      },
      "peerDependencies": {
        "@types/react": "*",
        "@types/react-dom": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "@types/react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-separator": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-separator/-/react-separator-1.1.3.tgz",
      "integrity": "sha512-2omrWKJvxR0U/tkIXezcc1nFMwtLU0+b/rDK40gnzJqTLWQ/TD/D5IYVefp9sC3QWfeQbpSbEA6op9MQKyaALQ==",
      "dependencies": {
        "@radix-ui/react-primitive": "2.0.3"
      },
      "peerDependencies": {
        "@types/react": "*",
        "@types/react-dom": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "@types/react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-slider": {
      "version": "1.2.4",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-slider/-/react-slider-1.2.4.tgz",
      "integrity": "sha512-Vr/OgNejNJPAghIhjS7Mf/2F/EXGDT0qgtiHf2BHz71+KqgN+jndFLKq5xAB9JOGejGzejfJLIvT04Do+yzhcg==",
      "dependencies": {
        "@radix-ui/number": "1.1.1",
        "@radix-ui/primitive": "1.1.2",
        "@radix-ui/react-collection": "1.1.3",
        "@radix-ui/react-compose-refs": "1.1.2",
        "@radix-ui/react-context": "1.1.2",
        "@radix-ui/react-direction": "1.1.1",
        "@radix-ui/react-primitive": "2.0.3",
        "@radix-ui/react-use-controllable-state": "1.1.1",
        "@radix-ui/react-use-layout-effect": "1.1.1",
        "@radix-ui/react-use-previous": "1.1.1",
        "@radix-ui/react-use-size": "1.1.1"
      },
      "peerDependencies": {
        "@types/react": "*",
        "@types/react-dom": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "@types/react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-slot": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-slot/-/react-slot-1.2.0.tgz",
      "integrity": "sha512-ujc+V6r0HNDviYqIK3rW4ffgYiZ8g5DEHrGJVk4x7kTlLXRDILnKX9vAUYeIsLOoDpDJ0ujpqMkjH4w2ofuo6w==",
      "dependencies": {
        "@radix-ui/react-compose-refs": "1.1.2"
      },
      "peerDependencies": {
        "@types/react": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-switch": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-switch/-/react-switch-1.1.4.tgz",
      "integrity": "sha512-zGP6W8plLeogoeGMiTHJ/uvf+TE1C2chVsEwfP8YlvpQKJHktG+iCkUtCLGPAuDV8/qDSmIRPm4NggaTxFMVBQ==",
      "dependencies": {
        "@radix-ui/primitive": "1.1.2",
        "@radix-ui/react-compose-refs": "1.1.2",
        "@radix-ui/react-context": "1.1.2",
        "@radix-ui/react-primitive": "2.0.3",
        "@radix-ui/react-use-controllable-state": "1.1.1",
        "@radix-ui/react-use-previous": "1.1.1",
        "@radix-ui/react-use-size": "1.1.1"
      },
      "peerDependencies": {
        "@types/react": "*",
        "@types/react-dom": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "@types/react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-tabs": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-tabs/-/react-tabs-1.1.4.tgz",
      "integrity": "sha512-fuHMHWSf5SRhXke+DbHXj2wVMo+ghVH30vhX3XVacdXqDl+J4XWafMIGOOER861QpBx1jxgwKXL2dQnfrsd8MQ==",
      "dependencies": {
        "@radix-ui/primitive": "1.1.2",
        "@radix-ui/react-context": "1.1.2",
        "@radix-ui/react-direction": "1.1.1",
        "@radix-ui/react-id": "1.1.1",
        "@radix-ui/react-presence": "1.1.3",
        "@radix-ui/react-primitive": "2.0.3",
        "@radix-ui/react-roving-focus": "1.1.3",
        "@radix-ui/react-use-controllable-state": "1.1.1"
      },
      "peerDependencies": {
        "@types/react": "*",
        "@types/react-dom": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "@types/react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-toast": {
      "version": "1.2.7",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-toast/-/react-toast-1.2.7.tgz",
      "integrity": "sha512-0IWTbAUKvzdpOaWDMZisXZvScXzF0phaQjWspK8RUMEUxjLbli+886mB/kXTIC3F+t5vQ0n0vYn+dsX8s+WdfA==",
      "license": "MIT",
      "dependencies": {
        "@radix-ui/primitive": "1.1.2",
        "@radix-ui/react-collection": "1.1.3",
        "@radix-ui/react-compose-refs": "1.1.2",
        "@radix-ui/react-context": "1.1.2",
        "@radix-ui/react-dismissable-layer": "1.1.6",
        "@radix-ui/react-portal": "1.1.5",
        "@radix-ui/react-presence": "1.1.3",
        "@radix-ui/react-primitive": "2.0.3",
        "@radix-ui/react-use-callback-ref": "1.1.1",
        "@radix-ui/react-use-controllable-state": "1.1.1",
        "@radix-ui/react-use-layout-effect": "1.1.1",
        "@radix-ui/react-visually-hidden": "1.1.3"
      },
      "peerDependencies": {
        "@types/react": "*",
        "@types/react-dom": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "@types/react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-toggle": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-toggle/-/react-toggle-1.1.3.tgz",
      "integrity": "sha512-Za5HHd9nvsiZ2t3EI/dVd4Bm/JydK+D22uHKk46fPtvuPxVCJBUo5mQybN+g5sZe35y7I6GDTTfdkVv5SnxlFg==",
      "dependencies": {
        "@radix-ui/primitive": "1.1.2",
        "@radix-ui/react-primitive": "2.0.3",
        "@radix-ui/react-use-controllable-state": "1.1.1"
      },
      "peerDependencies": {
        "@types/react": "*",
        "@types/react-dom": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "@types/react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-toggle-group": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-toggle-group/-/react-toggle-group-1.1.3.tgz",
      "integrity": "sha512-khTzdGIxy8WurYUEUrapvj5aOev/tUA8TDEFi1D0Dn3yX+KR5AqjX0b7E5sL9ngRRpxDN2RRJdn5siasu5jtcg==",
      "dependencies": {
        "@radix-ui/primitive": "1.1.2",
        "@radix-ui/react-context": "1.1.2",
        "@radix-ui/react-direction": "1.1.1",
        "@radix-ui/react-primitive": "2.0.3",
        "@radix-ui/react-roving-focus": "1.1.3",
        "@radix-ui/react-toggle": "1.1.3",
        "@radix-ui/react-use-controllable-state": "1.1.1"
      },
      "peerDependencies": {
        "@types/react": "*",
        "@types/react-dom": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "@types/react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-tooltip": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-tooltip/-/react-tooltip-1.2.0.tgz",
      "integrity": "sha512-b1Sdc75s7zN9B8ONQTGBSHL3XS8+IcjcOIY51fhM4R1Hx8s0YbgqgyNZiri4qcYMVZK8hfCZVBiyCm7N9rs0rw==",
      "dependencies": {
        "@radix-ui/primitive": "1.1.2",
        "@radix-ui/react-compose-refs": "1.1.2",
        "@radix-ui/react-context": "1.1.2",
        "@radix-ui/react-dismissable-layer": "1.1.6",
        "@radix-ui/react-id": "1.1.1",
        "@radix-ui/react-popper": "1.2.3",
        "@radix-ui/react-portal": "1.1.5",
        "@radix-ui/react-presence": "1.1.3",
        "@radix-ui/react-primitive": "2.0.3",
        "@radix-ui/react-slot": "1.2.0",
        "@radix-ui/react-use-controllable-state": "1.1.1",
        "@radix-ui/react-visually-hidden": "1.1.3"
      },
      "peerDependencies": {
        "@types/react": "*",
        "@types/react-dom": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "@types/react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-use-callback-ref": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-use-callback-ref/-/react-use-callback-ref-1.1.1.tgz",
      "integrity": "sha512-FkBMwD+qbGQeMu1cOHnuGB6x4yzPjho8ap5WtbEJ26umhgqVXbhekKUQO+hZEL1vU92a3wHwdp0HAcqAUF5iDg==",
      "peerDependencies": {
        "@types/react": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-use-controllable-state": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-use-controllable-state/-/react-use-controllable-state-1.1.1.tgz",
      "integrity": "sha512-YnEXIy8/ga01Y1PN0VfaNH//MhA91JlEGVBDxDzROqwrAtG5Yr2QGEPz8A/rJA3C7ZAHryOYGaUv8fLSW2H/mg==",
      "dependencies": {
        "@radix-ui/react-use-callback-ref": "1.1.1"
      },
      "peerDependencies": {
        "@types/react": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-use-escape-keydown": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-use-escape-keydown/-/react-use-escape-keydown-1.1.1.tgz",
      "integrity": "sha512-Il0+boE7w/XebUHyBjroE+DbByORGR9KKmITzbR7MyQ4akpORYP/ZmbhAr0DG7RmmBqoOnZdy2QlvajJ2QA59g==",
      "dependencies": {
        "@radix-ui/react-use-callback-ref": "1.1.1"
      },
      "peerDependencies": {
        "@types/react": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-use-layout-effect": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-use-layout-effect/-/react-use-layout-effect-1.1.1.tgz",
      "integrity": "sha512-RbJRS4UWQFkzHTTwVymMTUv8EqYhOp8dOOviLj2ugtTiXRaRQS7GLGxZTLL1jWhMeoSCf5zmcZkqTl9IiYfXcQ==",
      "peerDependencies": {
        "@types/react": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-use-previous": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-use-previous/-/react-use-previous-1.1.1.tgz",
      "integrity": "sha512-2dHfToCj/pzca2Ck724OZ5L0EVrr3eHRNsG/b3xQJLA2hZpVCS99bLAX+hm1IHXDEnzU6by5z/5MIY794/a8NQ==",
      "peerDependencies": {
        "@types/react": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-use-rect": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-use-rect/-/react-use-rect-1.1.1.tgz",
      "integrity": "sha512-QTYuDesS0VtuHNNvMh+CjlKJ4LJickCMUAqjlE3+j8w+RlRpwyX3apEQKGFzbZGdo7XNG1tXa+bQqIE7HIXT2w==",
      "dependencies": {
        "@radix-ui/rect": "1.1.1"
      },
      "peerDependencies": {
        "@types/react": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-use-size": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-use-size/-/react-use-size-1.1.1.tgz",
      "integrity": "sha512-ewrXRDTAqAXlkl6t/fkXWNAhFX9I+CkKlw6zjEwk86RSPKwZr3xpBRso655aqYafwtnbpHLj6toFzmd6xdVptQ==",
      "dependencies": {
        "@radix-ui/react-use-layout-effect": "1.1.1"
      },
      "peerDependencies": {
        "@types/react": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-visually-hidden": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-visually-hidden/-/react-visually-hidden-1.1.3.tgz",
      "integrity": "sha512-oXSF3ZQRd5fvomd9hmUCb2EHSZbPp3ZSHAHJJU/DlF9XoFkJBBW8RHU/E8WEH+RbSfJd/QFA0sl8ClJXknBwHQ==",
      "dependencies": {
        "@radix-ui/react-primitive": "2.0.3"
      },
      "peerDependencies": {
        "@types/react": "*",
        "@types/react-dom": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "@types/react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/rect": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/@radix-ui/rect/-/rect-1.1.1.tgz",
      "integrity": "sha512-HPwpGIzkl28mWyZqG52jiqDJ12waP11Pa1lGoiyUkIEuMLBP0oeK/C89esbXrxsky5we7dfd8U58nm0SgAWpVw=="
    },
    "node_modules/@replit/vite-plugin-cartographer": {
      "version": "0.2.5",
      "resolved": "https://registry.npmjs.org/@replit/vite-plugin-cartographer/-/vite-plugin-cartographer-0.2.5.tgz",
      "integrity": "sha512-488/4xisKv78NdvisspfKteLBwAf3dpuUKlQeTmJiqvUE+d4jjXgOogl7Do2Ad8mHuWAHhA/z5RxKAKtR/5jBw==",
      "dev": true,
      "dependencies": {
        "@babel/parser": "^7.26.9",
        "@babel/traverse": "^7.26.9",
        "@babel/types": "^7.26.9",
        "magic-string": "^0.30.12",
        "modern-screenshot": "^4.6.0"
      }
    },
    "node_modules/@replit/vite-plugin-runtime-error-modal": {
      "version": "0.0.3",
      "resolved": "https://registry.npmjs.org/@replit/vite-plugin-runtime-error-modal/-/vite-plugin-runtime-error-modal-0.0.3.tgz",
      "integrity": "sha512-4wZHGuI9W4o9p8g4Ma/qj++7SP015+FMDGYobj7iap5oEsxXMm0B02TO5Y5PW8eqBPd4wX5l3UGco/hlC0qapw==",
      "dev": true,
      "dependencies": {
        "@jridgewell/trace-mapping": "^0.3.25"
      }
    },
    "node_modules/@rollup/rollup-android-arm-eabi": {
      "version": "4.24.4",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-android-arm-eabi/-/rollup-android-arm-eabi-4.24.4.tgz",
      "integrity": "sha512-jfUJrFct/hTA0XDM5p/htWKoNNTbDLY0KRwEt6pyOA6k2fmk0WVwl65PdUdJZgzGEHWx+49LilkcSaumQRyNQw==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ]
    },
    "node_modules/@rollup/rollup-android-arm64": {
      "version": "4.24.4",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-android-arm64/-/rollup-android-arm64-4.24.4.tgz",
      "integrity": "sha512-j4nrEO6nHU1nZUuCfRKoCcvh7PIywQPUCBa2UsootTHvTHIoIu2BzueInGJhhvQO/2FTRdNYpf63xsgEqH9IhA==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ]
    },
    "node_modules/@rollup/rollup-darwin-arm64": {
      "version": "4.24.4",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-darwin-arm64/-/rollup-darwin-arm64-4.24.4.tgz",
      "integrity": "sha512-GmU/QgGtBTeraKyldC7cDVVvAJEOr3dFLKneez/n7BvX57UdhOqDsVwzU7UOnYA7AAOt+Xb26lk79PldDHgMIQ==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ]
    },
    "node_modules/@rollup/rollup-darwin-x64": {
      "version": "4.24.4",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-darwin-x64/-/rollup-darwin-x64-4.24.4.tgz",
      "integrity": "sha512-N6oDBiZCBKlwYcsEPXGDE4g9RoxZLK6vT98M8111cW7VsVJFpNEqvJeIPfsCzbf0XEakPslh72X0gnlMi4Ddgg==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ]
    },
    "node_modules/@rollup/rollup-freebsd-arm64": {
      "version": "4.24.4",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-freebsd-arm64/-/rollup-freebsd-arm64-4.24.4.tgz",
      "integrity": "sha512-py5oNShCCjCyjWXCZNrRGRpjWsF0ic8f4ieBNra5buQz0O/U6mMXCpC1LvrHuhJsNPgRt36tSYMidGzZiJF6mw==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "freebsd"
      ]
    },
    "node_modules/@rollup/rollup-freebsd-x64": {
      "version": "4.24.4",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-freebsd-x64/-/rollup-freebsd-x64-4.24.4.tgz",
      "integrity": "sha512-L7VVVW9FCnTTp4i7KrmHeDsDvjB4++KOBENYtNYAiYl96jeBThFfhP6HVxL74v4SiZEVDH/1ILscR5U9S4ms4g==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "freebsd"
      ]
    },
    "node_modules/@rollup/rollup-linux-arm-gnueabihf": {
      "version": "4.24.4",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm-gnueabihf/-/rollup-linux-arm-gnueabihf-4.24.4.tgz",
      "integrity": "sha512-10ICosOwYChROdQoQo589N5idQIisxjaFE/PAnX2i0Zr84mY0k9zul1ArH0rnJ/fpgiqfu13TFZR5A5YJLOYZA==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-arm-musleabihf": {
      "version": "4.24.4",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm-musleabihf/-/rollup-linux-arm-musleabihf-4.24.4.tgz",
      "integrity": "sha512-ySAfWs69LYC7QhRDZNKqNhz2UKN8LDfbKSMAEtoEI0jitwfAG2iZwVqGACJT+kfYvvz3/JgsLlcBP+WWoKCLcw==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-arm64-gnu": {
      "version": "4.24.4",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm64-gnu/-/rollup-linux-arm64-gnu-4.24.4.tgz",
      "integrity": "sha512-uHYJ0HNOI6pGEeZ/5mgm5arNVTI0nLlmrbdph+pGXpC9tFHFDQmDMOEqkmUObRfosJqpU8RliYoGz06qSdtcjg==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-arm64-musl": {
      "version": "4.24.4",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm64-musl/-/rollup-linux-arm64-musl-4.24.4.tgz",
      "integrity": "sha512-38yiWLemQf7aLHDgTg85fh3hW9stJ0Muk7+s6tIkSUOMmi4Xbv5pH/5Bofnsb6spIwD5FJiR+jg71f0CH5OzoA==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-powerpc64le-gnu": {
      "version": "4.24.4",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-powerpc64le-gnu/-/rollup-linux-powerpc64le-gnu-4.24.4.tgz",
      "integrity": "sha512-q73XUPnkwt9ZNF2xRS4fvneSuaHw2BXuV5rI4cw0fWYVIWIBeDZX7c7FWhFQPNTnE24172K30I+dViWRVD9TwA==",
      "cpu": [
        "ppc64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-riscv64-gnu": {
      "version": "4.24.4",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-riscv64-gnu/-/rollup-linux-riscv64-gnu-4.24.4.tgz",
      "integrity": "sha512-Aie/TbmQi6UXokJqDZdmTJuZBCU3QBDA8oTKRGtd4ABi/nHgXICulfg1KI6n9/koDsiDbvHAiQO3YAUNa/7BCw==",
      "cpu": [
        "riscv64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-s390x-gnu": {
      "version": "4.24.4",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-s390x-gnu/-/rollup-linux-s390x-gnu-4.24.4.tgz",
      "integrity": "sha512-P8MPErVO/y8ohWSP9JY7lLQ8+YMHfTI4bAdtCi3pC2hTeqFJco2jYspzOzTUB8hwUWIIu1xwOrJE11nP+0JFAQ==",
      "cpu": [
        "s390x"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-x64-gnu": {
      "version": "4.24.4",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-x64-gnu/-/rollup-linux-x64-gnu-4.24.4.tgz",
      "integrity": "sha512-K03TljaaoPK5FOyNMZAAEmhlyO49LaE4qCsr0lYHUKyb6QacTNF9pnfPpXnFlFD3TXuFbFbz7tJ51FujUXkXYA==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-x64-musl": {
      "version": "4.24.4",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-x64-musl/-/rollup-linux-x64-musl-4.24.4.tgz",
      "integrity": "sha512-VJYl4xSl/wqG2D5xTYncVWW+26ICV4wubwN9Gs5NrqhJtayikwCXzPL8GDsLnaLU3WwhQ8W02IinYSFJfyo34Q==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-win32-arm64-msvc": {
      "version": "4.24.4",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-win32-arm64-msvc/-/rollup-win32-arm64-msvc-4.24.4.tgz",
      "integrity": "sha512-ku2GvtPwQfCqoPFIJCqZ8o7bJcj+Y54cZSr43hHca6jLwAiCbZdBUOrqE6y29QFajNAzzpIOwsckaTFmN6/8TA==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ]
    },
    "node_modules/@rollup/rollup-win32-ia32-msvc": {
      "version": "4.24.4",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-win32-ia32-msvc/-/rollup-win32-ia32-msvc-4.24.4.tgz",
      "integrity": "sha512-V3nCe+eTt/W6UYNr/wGvO1fLpHUrnlirlypZfKCT1fG6hWfqhPgQV/K/mRBXBpxc0eKLIF18pIOFVPh0mqHjlg==",
      "cpu": [
        "ia32"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ]
    },
    "node_modules/@rollup/rollup-win32-x64-msvc": {
      "version": "4.24.4",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-win32-x64-msvc/-/rollup-win32-x64-msvc-4.24.4.tgz",
      "integrity": "sha512-LTw1Dfd0mBIEqUVCxbvTE/LLo+9ZxVC9k99v1v4ahg9Aak6FpqOfNu5kRkeTAn0wphoC4JU7No1/rL+bBCEwhg==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ]
    },
    "node_modules/@tailwindcss/node": {
      "version": "4.1.3",
      "resolved": "https://registry.npmjs.org/@tailwindcss/node/-/node-4.1.3.tgz",
      "integrity": "sha512-H/6r6IPFJkCfBJZ2dKZiPJ7Ueb2wbL592+9bQEl2r73qbX6yGnmQVIfiUvDRB2YI0a3PWDrzUwkvQx1XW1bNkA==",
      "dev": true,
      "dependencies": {
        "enhanced-resolve": "^5.18.1",
        "jiti": "^2.4.2",
        "lightningcss": "1.29.2",
        "tailwindcss": "4.1.3"
      }
    },
    "node_modules/@tailwindcss/node/node_modules/jiti": {
      "version": "2.4.2",
      "resolved": "https://registry.npmjs.org/jiti/-/jiti-2.4.2.tgz",
      "integrity": "sha512-rg9zJN+G4n2nfJl5MW3BMygZX56zKPNVEYYqq7adpmMh4Jn2QNEwhvQlFy6jPVdcod7txZtKHWnyZiA3a0zP7A==",
      "dev": true,
      "bin": {
        "jiti": "lib/jiti-cli.mjs"
      }
    },
    "node_modules/@tailwindcss/node/node_modules/tailwindcss": {
      "version": "4.1.3",
      "resolved": "https://registry.npmjs.org/tailwindcss/-/tailwindcss-4.1.3.tgz",
      "integrity": "sha512-2Q+rw9vy1WFXu5cIxlvsabCwhU2qUwodGq03ODhLJ0jW4ek5BUtoCsnLB0qG+m8AHgEsSJcJGDSDe06FXlP74g==",
      "dev": true
    },
    "node_modules/@tailwindcss/oxide": {
      "version": "4.1.3",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide/-/oxide-4.1.3.tgz",
      "integrity": "sha512-t16lpHCU7LBxDe/8dCj9ntyNpXaSTAgxWm1u2XQP5NiIu4KGSyrDJJRlK9hJ4U9yJxx0UKCVI67MJWFNll5mOQ==",
      "dev": true,
      "engines": {
        "node": ">= 10"
      },
      "optionalDependencies": {
        "@tailwindcss/oxide-android-arm64": "4.1.3",
        "@tailwindcss/oxide-darwin-arm64": "4.1.3",
        "@tailwindcss/oxide-darwin-x64": "4.1.3",
        "@tailwindcss/oxide-freebsd-x64": "4.1.3",
        "@tailwindcss/oxide-linux-arm-gnueabihf": "4.1.3",
        "@tailwindcss/oxide-linux-arm64-gnu": "4.1.3",
        "@tailwindcss/oxide-linux-arm64-musl": "4.1.3",
        "@tailwindcss/oxide-linux-x64-gnu": "4.1.3",
        "@tailwindcss/oxide-linux-x64-musl": "4.1.3",
        "@tailwindcss/oxide-win32-arm64-msvc": "4.1.3",
        "@tailwindcss/oxide-win32-x64-msvc": "4.1.3"
      }
    },
    "node_modules/@tailwindcss/oxide-android-arm64": {
      "version": "4.1.3",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-android-arm64/-/oxide-android-arm64-4.1.3.tgz",
      "integrity": "sha512-cxklKjtNLwFl3mDYw4XpEfBY+G8ssSg9ADL4Wm6//5woi3XGqlxFsnV5Zb6v07dxw1NvEX2uoqsxO/zWQsgR+g==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-darwin-arm64": {
      "version": "4.1.3",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-darwin-arm64/-/oxide-darwin-arm64-4.1.3.tgz",
      "integrity": "sha512-mqkf2tLR5VCrjBvuRDwzKNShRu99gCAVMkVsaEOFvv6cCjlEKXRecPu9DEnxp6STk5z+Vlbh1M5zY3nQCXMXhw==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-darwin-x64": {
      "version": "4.1.3",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-darwin-x64/-/oxide-darwin-x64-4.1.3.tgz",
      "integrity": "sha512-7sGraGaWzXvCLyxrc7d+CCpUN3fYnkkcso3rCzwUmo/LteAl2ZGCDlGvDD8Y/1D3ngxT8KgDj1DSwOnNewKhmg==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-freebsd-x64": {
      "version": "4.1.3",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-freebsd-x64/-/oxide-freebsd-x64-4.1.3.tgz",
      "integrity": "sha512-E2+PbcbzIReaAYZe997wb9rId246yDkCwAakllAWSGqe6VTg9hHle67hfH6ExjpV2LSK/siRzBUs5wVff3RW9w==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "freebsd"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-linux-arm-gnueabihf": {
      "version": "4.1.3",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-linux-arm-gnueabihf/-/oxide-linux-arm-gnueabihf-4.1.3.tgz",
      "integrity": "sha512-GvfbJ8wjSSjbLFFE3UYz4Eh8i4L6GiEYqCtA8j2Zd2oXriPuom/Ah/64pg/szWycQpzRnbDiJozoxFU2oJZyfg==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-linux-arm64-gnu": {
      "version": "4.1.3",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-linux-arm64-gnu/-/oxide-linux-arm64-gnu-4.1.3.tgz",
      "integrity": "sha512-35UkuCWQTeG9BHcBQXndDOrpsnt3Pj9NVIB4CgNiKmpG8GnCNXeMczkUpOoqcOhO6Cc/mM2W7kaQ/MTEENDDXg==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-linux-arm64-musl": {
      "version": "4.1.3",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-linux-arm64-musl/-/oxide-linux-arm64-musl-4.1.3.tgz",
      "integrity": "sha512-dm18aQiML5QCj9DQo7wMbt1Z2tl3Giht54uVR87a84X8qRtuXxUqnKQkRDK5B4bCOmcZ580lF9YcoMkbDYTXHQ==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-linux-x64-gnu": {
      "version": "4.1.3",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-linux-x64-gnu/-/oxide-linux-x64-gnu-4.1.3.tgz",
      "integrity": "sha512-LMdTmGe/NPtGOaOfV2HuO7w07jI3cflPrVq5CXl+2O93DCewADK0uW1ORNAcfu2YxDUS035eY2W38TxrsqngxA==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-linux-x64-musl": {
      "version": "4.1.3",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-linux-x64-musl/-/oxide-linux-x64-musl-4.1.3.tgz",
      "integrity": "sha512-aalNWwIi54bbFEizwl1/XpmdDrOaCjRFQRgtbv9slWjmNPuJJTIKPHf5/XXDARc9CneW9FkSTqTbyvNecYAEGw==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-win32-arm64-msvc": {
      "version": "4.1.3",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-win32-arm64-msvc/-/oxide-win32-arm64-msvc-4.1.3.tgz",
      "integrity": "sha512-PEj7XR4OGTGoboTIAdXicKuWl4EQIjKHKuR+bFy9oYN7CFZo0eu74+70O4XuERX4yjqVZGAkCdglBODlgqcCXg==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-win32-x64-msvc": {
      "version": "4.1.3",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-win32-x64-msvc/-/oxide-win32-x64-msvc-4.1.3.tgz",
      "integrity": "sha512-T8gfxECWDBENotpw3HR9SmNiHC9AOJdxs+woasRZ8Q/J4VHN0OMs7F+4yVNZ9EVN26Wv6mZbK0jv7eHYuLJLwA==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/typography": {
      "version": "0.5.15",
      "resolved": "https://registry.npmjs.org/@tailwindcss/typography/-/typography-0.5.15.tgz",
      "integrity": "sha512-AqhlCXl+8grUz8uqExv5OTtgpjuVIwFTSXTrh8y9/pw6q2ek7fJ+Y8ZEVw7EB2DCcuCOtEjf9w3+J3rzts01uA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "lodash.castarray": "^4.4.0",
        "lodash.isplainobject": "^4.0.6",
        "lodash.merge": "^4.6.2",
        "postcss-selector-parser": "6.0.10"
      },
      "peerDependencies": {
        "tailwindcss": ">=3.0.0 || insiders || >=4.0.0-alpha.20"
      }
    },
    "node_modules/@tailwindcss/typography/node_modules/postcss-selector-parser": {
      "version": "6.0.10",
      "resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-6.0.10.tgz",
      "integrity": "sha512-IQ7TZdoaqbT+LCpShg46jnZVlhWD2w6iQYAcYXfHARZ7X1t/UGhhceQDs5X0cGqKvYlHNOuv7Oa1xmb0oQuA3w==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "cssesc": "^3.0.0",
        "util-deprecate": "^1.0.2"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/@tailwindcss/vite": {
      "version": "4.1.3",
      "resolved": "https://registry.npmjs.org/@tailwindcss/vite/-/vite-4.1.3.tgz",
      "integrity": "sha512-lUI/QaDxLtlV52Lho6pu07CG9pSnRYLOPmKGIQjyHdTBagemc6HmgZxyjGAQ/5HMPrNeWBfTVIpQl0/jLXvWHQ==",
      "dev": true,
      "dependencies": {
        "@tailwindcss/node": "4.1.3",
        "@tailwindcss/oxide": "4.1.3",
        "tailwindcss": "4.1.3"
      },
      "peerDependencies": {
        "vite": "^5.2.0 || ^6"
      }
    },
    "node_modules/@tailwindcss/vite/node_modules/tailwindcss": {
      "version": "4.1.3",
      "resolved": "https://registry.npmjs.org/tailwindcss/-/tailwindcss-4.1.3.tgz",
      "integrity": "sha512-2Q+rw9vy1WFXu5cIxlvsabCwhU2qUwodGq03ODhLJ0jW4ek5BUtoCsnLB0qG+m8AHgEsSJcJGDSDe06FXlP74g==",
      "dev": true
    },
    "node_modules/@tanstack/query-core": {
      "version": "5.60.5",
      "resolved": "https://registry.npmjs.org/@tanstack/query-core/-/query-core-5.60.5.tgz",
      "integrity": "sha512-jiS1aC3XI3BJp83ZiTuDLerTmn9P3U95r6p+6/SNauLJaYxfIC4dMuWygwnBHIZxjn2zJqEpj3nysmPieoxfPQ==",
      "license": "MIT",
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/tannerlinsley"
      }
    },
    "node_modules/@tanstack/react-query": {
      "version": "5.60.5",
      "resolved": "https://registry.npmjs.org/@tanstack/react-query/-/react-query-5.60.5.tgz",
      "integrity": "sha512-M77bOsPwj1wYE56gk7iJvxGAr4IC12NWdIDhT+Eo8ldkWRHMvIR8I/rufIvT1OXoV/bl7EECwuRuMlxxWtvW2Q==",
      "license": "MIT",
      "dependencies": {
        "@tanstack/query-core": "5.60.5"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/tannerlinsley"
      },
      "peerDependencies": {
        "react": "^18 || ^19"
      }
    },
    "node_modules/@types/babel__core": {
      "version": "7.20.5",
      "resolved": "https://registry.npmjs.org/@types/babel__core/-/babel__core-7.20.5.tgz",
      "integrity": "sha512-qoQprZvz5wQFJwMDqeseRXWv3rqMvhgpbXFfVyWhbx9X47POIA6i/+dXefEmZKoAgOaTdaIgNSMqMIU61yRyzA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/parser": "^7.20.7",
        "@babel/types": "^7.20.7",
        "@types/babel__generator": "*",
        "@types/babel__template": "*",
        "@types/babel__traverse": "*"
      }
    },
    "node_modules/@types/babel__generator": {
      "version": "7.6.8",
      "resolved": "https://registry.npmjs.org/@types/babel__generator/-/babel__generator-7.6.8.tgz",
      "integrity": "sha512-ASsj+tpEDsEiFr1arWrlN6V3mdfjRMZt6LtK/Vp/kreFLnr5QH5+DhvD5nINYZXzwJvXeGq+05iUXcAzVrqWtw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/types": "^7.0.0"
      }
    },
    "node_modules/@types/babel__template": {
      "version": "7.4.4",
      "resolved": "https://registry.npmjs.org/@types/babel__template/-/babel__template-7.4.4.tgz",
      "integrity": "sha512-h/NUaSyG5EyxBIp8YRxo4RMe2/qQgvyowRwVMzhYhBCONbW8PUsg4lkFMrhgZhUe5z3L3MiLDuvyJ/CaPa2A8A==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/parser": "^7.1.0",
        "@babel/types": "^7.0.0"
      }
    },
    "node_modules/@types/babel__traverse": {
      "version": "7.20.6",
      "resolved": "https://registry.npmjs.org/@types/babel__traverse/-/babel__traverse-7.20.6.tgz",
      "integrity": "sha512-r1bzfrm0tomOI8g1SzvCaQHo6Lcv6zu0EA+W2kHrt8dyrHQxGzBBL4kdkzIS+jBMV+EYcMAEAqXqYaLJq5rOZg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/types": "^7.20.7"
      }
    },
    "node_modules/@types/bcrypt": {
      "version": "5.0.2",
      "resolved": "https://registry.npmjs.org/@types/bcrypt/-/bcrypt-5.0.2.tgz",
      "integrity": "sha512-6atioO8Y75fNcbmj0G7UjI9lXN2pQ/IGJ2FWT4a/btd0Lk9lQalHLKhkgKVZ3r+spnmWUKfbMi1GEe9wyHQfNQ==",
      "license": "MIT",
      "dependencies": {
        "@types/node": "*"
      }
    },
    "node_modules/@types/body-parser": {
      "version": "1.19.5",
      "resolved": "https://registry.npmjs.org/@types/body-parser/-/body-parser-1.19.5.tgz",
      "integrity": "sha512-fB3Zu92ucau0iQ0JMCFQE7b/dv8Ot07NI3KaZIkIUNXq82k4eBAqUaneXfleGY9JWskeS9y+u0nXMyspcuQrCg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@types/connect": "*",
        "@types/node": "*"
      }
    },
    "node_modules/@types/connect": {
      "version": "3.4.38",
      "resolved": "https://registry.npmjs.org/@types/connect/-/connect-3.4.38.tgz",
      "integrity": "sha512-K6uROf1LD88uDQqJCktA4yzL1YYAK6NgfsI0v/mTgyPKWsX1CnJ0XPSDhViejru1GcRkLWb8RlzFYJRqGUbaug==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@types/node": "*"
      }
    },
    "node_modules/@types/connect-pg-simple": {
      "version": "7.0.3",
      "resolved": "https://registry.npmjs.org/@types/connect-pg-simple/-/connect-pg-simple-7.0.3.tgz",
      "integrity": "sha512-NGCy9WBlW2bw+J/QlLnFZ9WjoGs6tMo3LAut6mY4kK+XHzue//lpNVpAvYRpIwM969vBRAM2Re0izUvV6kt+NA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@types/express": "*",
        "@types/express-session": "*",
        "@types/pg": "*"
      }
    },
    "node_modules/@types/d3-array": {
      "version": "3.2.1",
      "resolved": "https://registry.npmjs.org/@types/d3-array/-/d3-array-3.2.1.tgz",
      "integrity": "sha512-Y2Jn2idRrLzUfAKV2LyRImR+y4oa2AntrgID95SHJxuMUrkNXmanDSed71sRNZysveJVt1hLLemQZIady0FpEg==",
      "license": "MIT"
    },
    "node_modules/@types/d3-color": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/@types/d3-color/-/d3-color-3.1.3.tgz",
      "integrity": "sha512-iO90scth9WAbmgv7ogoq57O9YpKmFBbmoEoCHDB2xMBY0+/KVrqAaCDyCE16dUspeOvIxFFRI+0sEtqDqy2b4A==",
      "license": "MIT"
    },
    "node_modules/@types/d3-ease": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/@types/d3-ease/-/d3-ease-3.0.2.tgz",
      "integrity": "sha512-NcV1JjO5oDzoK26oMzbILE6HW7uVXOHLQvHshBUW4UMdZGfiY6v5BeQwh9a9tCzv+CeefZQHJt5SRgK154RtiA==",
      "license": "MIT"
    },
    "node_modules/@types/d3-interpolate": {
      "version": "3.0.4",
      "resolved": "https://registry.npmjs.org/@types/d3-interpolate/-/d3-interpolate-3.0.4.tgz",
      "integrity": "sha512-mgLPETlrpVV1YRJIglr4Ez47g7Yxjl1lj7YKsiMCb27VJH9W8NVM6Bb9d8kkpG/uAQS5AmbA48q2IAolKKo1MA==",
      "license": "MIT",
      "dependencies": {
        "@types/d3-color": "*"
      }
    },
    "node_modules/@types/d3-path": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/@types/d3-path/-/d3-path-3.1.0.tgz",
      "integrity": "sha512-P2dlU/q51fkOc/Gfl3Ul9kicV7l+ra934qBFXCFhrZMOL6du1TM0pm1ThYvENukyOn5h9v+yMJ9Fn5JK4QozrQ==",
      "license": "MIT"
    },
    "node_modules/@types/d3-scale": {
      "version": "4.0.8",
      "resolved": "https://registry.npmjs.org/@types/d3-scale/-/d3-scale-4.0.8.tgz",
      "integrity": "sha512-gkK1VVTr5iNiYJ7vWDI+yUFFlszhNMtVeneJ6lUTKPjprsvLLI9/tgEGiXJOnlINJA8FyA88gfnQsHbybVZrYQ==",
      "license": "MIT",
      "dependencies": {
        "@types/d3-time": "*"
      }
    },
    "node_modules/@types/d3-shape": {
      "version": "3.1.6",
      "resolved": "https://registry.npmjs.org/@types/d3-shape/-/d3-shape-3.1.6.tgz",
      "integrity": "sha512-5KKk5aKGu2I+O6SONMYSNflgiP0WfZIQvVUMan50wHsLG1G94JlxEVnCpQARfTtzytuY0p/9PXXZb3I7giofIA==",
      "license": "MIT",
      "dependencies": {
        "@types/d3-path": "*"
      }
    },
    "node_modules/@types/d3-time": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/@types/d3-time/-/d3-time-3.0.3.tgz",
      "integrity": "sha512-2p6olUZ4w3s+07q3Tm2dbiMZy5pCDfYwtLXXHUnVzXgQlZ/OyPtUz6OL382BkOuGlLXqfT+wqv8Fw2v8/0geBw==",
      "license": "MIT"
    },
    "node_modules/@types/d3-timer": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/@types/d3-timer/-/d3-timer-3.0.2.tgz",
      "integrity": "sha512-Ps3T8E8dZDam6fUyNiMkekK3XUsaUEik+idO9/YjPtfj2qruF8tFBXS7XhtE4iIXBLxhmLjP3SXpLhVf21I9Lw==",
      "license": "MIT"
    },
    "node_modules/@types/estree": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/@types/estree/-/estree-1.0.6.tgz",
      "integrity": "sha512-AYnb1nQyY49te+VRAVgmzfcgjYS91mY5P0TKUDCLEM+gNnA+3T6rWITXRLYCpahpqSQbN5cE+gHpnPyXjHWxcw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/@types/express": {
      "version": "4.17.21",
      "resolved": "https://registry.npmjs.org/@types/express/-/express-4.17.21.tgz",
      "integrity": "sha512-ejlPM315qwLpaQlQDTjPdsUFSc6ZsP4AN6AlWnogPjQ7CVi7PYF3YVz+CY3jE2pwYf7E/7HlDAN0rV2GxTG0HQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@types/body-parser": "*",
        "@types/express-serve-static-core": "^4.17.33",
        "@types/qs": "*",
        "@types/serve-static": "*"
      }
    },
    "node_modules/@types/express-serve-static-core": {
      "version": "4.19.6",
      "resolved": "https://registry.npmjs.org/@types/express-serve-static-core/-/express-serve-static-core-4.19.6.tgz",
      "integrity": "sha512-N4LZ2xG7DatVqhCZzOGb1Yi5lMbXSZcmdLDe9EzSndPV2HpWYWzRbaerl2n27irrm94EPpprqa8KpskPT085+A==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@types/node": "*",
        "@types/qs": "*",
        "@types/range-parser": "*",
        "@types/send": "*"
      }
    },
    "node_modules/@types/express-session": {
      "version": "1.18.0",
      "resolved": "https://registry.npmjs.org/@types/express-session/-/express-session-1.18.0.tgz",
      "integrity": "sha512-27JdDRgor6PoYlURY+Y5kCakqp5ulC0kmf7y+QwaY+hv9jEFuQOThgkjyA53RP3jmKuBsH5GR6qEfFmvb8mwOA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@types/express": "*"
      }
    },
    "node_modules/@types/http-errors": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/@types/http-errors/-/http-errors-2.0.4.tgz",
      "integrity": "sha512-D0CFMMtydbJAegzOyHjtiKPLlvnm3iTZyZRSZoLq2mRhDdmLfIWOCYPfQJ4cu2erKghU++QvjcUjp/5h7hESpA==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/@types/jsonwebtoken": {
      "version": "9.0.9",
      "resolved": "https://registry.npmjs.org/@types/jsonwebtoken/-/jsonwebtoken-9.0.9.tgz",
      "integrity": "sha512-uoe+GxEuHbvy12OUQct2X9JenKM3qAscquYymuQN4fMWG9DBQtykrQEFcAbVACF7qaLw9BePSodUL0kquqBJpQ==",
      "license": "MIT",
      "dependencies": {
        "@types/ms": "*",
        "@types/node": "*"
      }
    },
    "node_modules/@types/mime": {
      "version": "1.3.5",
      "resolved": "https://registry.npmjs.org/@types/mime/-/mime-1.3.5.tgz",
      "integrity": "sha512-/pyBZWSLD2n0dcHE3hq8s8ZvcETHtEuF+3E7XVt0Ig2nvsVQXdghHVcEkIWjy9A0wKfTn97a/PSDYohKIlnP/w==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/@types/ms": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/@types/ms/-/ms-2.1.0.tgz",
      "integrity": "sha512-GsCCIZDE/p3i96vtEqx+7dBUGXrc7zeSK3wwPHIaRThS+9OhWIXRqzs4d6k1SVU8g91DrNRWxWUGhp5KXQb2VA==",
      "license": "MIT"
    },
    "node_modules/@types/node": {
      "version": "20.16.11",
      "resolved": "https://registry.npmjs.org/@types/node/-/node-20.16.11.tgz",
      "integrity": "sha512-y+cTCACu92FyA5fgQSAI8A1H429g7aSK2HsO7K4XYUWc4dY5IUz55JSDIYT6/VsOLfGy8vmvQYC2hfb0iF16Uw==",
      "license": "MIT",
      "dependencies": {
        "undici-types": "~6.19.2"
      }
    },
    "node_modules/@types/passport": {
      "version": "1.0.17",
      "resolved": "https://registry.npmjs.org/@types/passport/-/passport-1.0.17.tgz",
      "integrity": "sha512-aciLyx+wDwT2t2/kJGJR2AEeBz0nJU4WuRX04Wu9Dqc5lSUtwu0WERPHYsLhF9PtseiAMPBGNUOtFjxZ56prsg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@types/express": "*"
      }
    },
    "node_modules/@types/passport-local": {
      "version": "1.0.38",
      "resolved": "https://registry.npmjs.org/@types/passport-local/-/passport-local-1.0.38.tgz",
      "integrity": "sha512-nsrW4A963lYE7lNTv9cr5WmiUD1ibYJvWrpE13oxApFsRt77b0RdtZvKbCdNIY4v/QZ6TRQWaDDEwV1kCTmcXg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@types/express": "*",
        "@types/passport": "*",
        "@types/passport-strategy": "*"
      }
    },
    "node_modules/@types/passport-strategy": {
      "version": "0.2.38",
      "resolved": "https://registry.npmjs.org/@types/passport-strategy/-/passport-strategy-0.2.38.tgz",
      "integrity": "sha512-GC6eMqqojOooq993Tmnmp7AUTbbQSgilyvpCYQjT+H6JfG/g6RGc7nXEniZlp0zyKJ0WUdOiZWLBZft9Yug1uA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@types/express": "*",
        "@types/passport": "*"
      }
    },
    "node_modules/@types/pg": {
      "version": "8.11.6",
      "resolved": "https://registry.npmjs.org/@types/pg/-/pg-8.11.6.tgz",
      "integrity": "sha512-/2WmmBXHLsfRqzfHW7BNZ8SbYzE8OSk7i3WjFYvfgRHj7S1xj+16Je5fUKv3lVdVzk/zn9TXOqf+avFCFIE0yQ==",
      "license": "MIT",
      "dependencies": {
        "@types/node": "*",
        "pg-protocol": "*",
        "pg-types": "^4.0.1"
      }
    },
    "node_modules/@types/prop-types": {
      "version": "15.7.13",
      "resolved": "https://registry.npmjs.org/@types/prop-types/-/prop-types-15.7.13.tgz",
      "integrity": "sha512-hCZTSvwbzWGvhqxp/RqVqwU999pBf2vp7hzIjiYOsl8wqOmUxkQ6ddw1cV3l8811+kdUFus/q4d1Y3E3SyEifA==",
      "devOptional": true,
      "license": "MIT"
    },
    "node_modules/@types/qs": {
      "version": "6.9.16",
      "resolved": "https://registry.npmjs.org/@types/qs/-/qs-6.9.16.tgz",
      "integrity": "sha512-7i+zxXdPD0T4cKDuxCUXJ4wHcsJLwENa6Z3dCu8cfCK743OGy5Nu1RmAGqDPsoTDINVEcdXKRvR/zre+P2Ku1A==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/@types/range-parser": {
      "version": "1.2.7",
      "resolved": "https://registry.npmjs.org/@types/range-parser/-/range-parser-1.2.7.tgz",
      "integrity": "sha512-hKormJbkJqzQGhziax5PItDUTMAM9uE2XXQmM37dyd4hVM+5aVl7oVxMVUiVQn2oCQFN/LKCZdvSM0pFRqbSmQ==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/@types/react": {
      "version": "18.3.12",
      "resolved": "https://registry.npmjs.org/@types/react/-/react-18.3.12.tgz",
      "integrity": "sha512-D2wOSq/d6Agt28q7rSI3jhU7G6aiuzljDGZ2hTZHIkrTLUI+AF3WMeKkEZ9nN2fkBAlcktT6vcZjDFiIhMYEQw==",
      "devOptional": true,
      "license": "MIT",
      "dependencies": {
        "@types/prop-types": "*",
        "csstype": "^3.0.2"
      }
    },
    "node_modules/@types/react-dom": {
      "version": "18.3.1",
      "resolved": "https://registry.npmjs.org/@types/react-dom/-/react-dom-18.3.1.tgz",
      "integrity": "sha512-qW1Mfv8taImTthu4KoXgDfLuk4bydU6Q/TkADnDWWHwi4NX4BR+LWfTp2sVmTqRrsHvyDDTelgelxJ+SsejKKQ==",
      "devOptional": true,
      "license": "MIT",
      "dependencies": {
        "@types/react": "*"
      }
    },
    "node_modules/@types/send": {
      "version": "0.17.4",
      "resolved": "https://registry.npmjs.org/@types/send/-/send-0.17.4.tgz",
      "integrity": "sha512-x2EM6TJOybec7c52BX0ZspPodMsQUd5L6PRwOunVyVUhXiBSKf3AezDL8Dgvgt5o0UfKNfuA0eMLr2wLT4AiBA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@types/mime": "^1",
        "@types/node": "*"
      }
    },
    "node_modules/@types/serve-static": {
      "version": "1.15.7",
      "resolved": "https://registry.npmjs.org/@types/serve-static/-/serve-static-1.15.7.tgz",
      "integrity": "sha512-W8Ym+h8nhuRwaKPaDw34QUkwsGi6Rc4yYqvKFo5rm2FUEhCFbzVWrxXUxuKK8TASjWsysJY0nsmNCGhCOIsrOw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@types/http-errors": "*",
        "@types/node": "*",
        "@types/send": "*"
      }
    },
    "node_modules/@types/ws": {
      "version": "8.5.13",
      "resolved": "https://registry.npmjs.org/@types/ws/-/ws-8.5.13.tgz",
      "integrity": "sha512-osM/gWBTPKgHV8XkTunnegTRIsvF6owmf5w+JtAfOw472dptdm0dlGv4xCt6GwQRcC2XVOvvRE/0bAoQcL2QkA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@types/node": "*"
      }
    },
    "node_modules/@vitejs/plugin-react": {
      "version": "4.3.3",
      "resolved": "https://registry.npmjs.org/@vitejs/plugin-react/-/plugin-react-4.3.3.tgz",
      "integrity": "sha512-NooDe9GpHGqNns1i8XDERg0Vsg5SSYRhRxxyTGogUdkdNt47jal+fbuYi+Yfq6pzRCKXyoPcWisfxE6RIM3GKA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/core": "^7.25.2",
        "@babel/plugin-transform-react-jsx-self": "^7.24.7",
        "@babel/plugin-transform-react-jsx-source": "^7.24.7",
        "@types/babel__core": "^7.20.5",
        "react-refresh": "^0.14.2"
      },
      "engines": {
        "node": "^14.18.0 || >=16.0.0"
      },
      "peerDependencies": {
        "vite": "^4.2.0 || ^5.0.0"
      }
    },
    "node_modules/accepts": {
      "version": "1.3.8",
      "resolved": "https://registry.npmjs.org/accepts/-/accepts-1.3.8.tgz",
      "integrity": "sha512-PYAthTa2m2VKxuvSD3DPC/Gy+U+sOA1LAuT8mkmRuvw+NACSaeXEQ+NHcVF7rONl6qcaxV3Uuemwawk+7+SJLw==",
      "license": "MIT",
      "dependencies": {
        "mime-types": "~2.1.34",
        "negotiator": "0.6.3"
      },
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/ansi-regex": {
      "version": "6.1.0",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-6.1.0.tgz",
      "integrity": "sha512-7HSX4QQb4CspciLpVFwyRe79O3xsIZDDLER21kERQ71oaPodF8jL725AgJMFAYbooIqolJoRLuM81SpeUkpkvA==",
      "license": "MIT",
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/chalk/ansi-regex?sponsor=1"
      }
    },
    "node_modules/ansi-styles": {
      "version": "6.2.1",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-6.2.1.tgz",
      "integrity": "sha512-bN798gFfQX+viw3R7yrGWRqnrN2oRkEkUjjl4JNn4E8GxxbjtG3FbrEIIY3l8/hrwUwIeCZvi4QuOTP4MErVug==",
      "license": "MIT",
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
      }
    },
    "node_modules/any-promise": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/any-promise/-/any-promise-1.3.0.tgz",
      "integrity": "sha512-7UvmKalWRt1wgjL1RrGxoSJW/0QZFIegpeGvZG9kjp8vrRu55XTHbwnqq2GpXm9uLbcuhxm3IqX9OB4MZR1b2A==",
      "license": "MIT"
    },
    "node_modules/anymatch": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/anymatch/-/anymatch-3.1.3.tgz",
      "integrity": "sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==",
      "license": "ISC",
      "dependencies": {
        "normalize-path": "^3.0.0",
        "picomatch": "^2.0.4"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/arg": {
      "version": "5.0.2",
      "resolved": "https://registry.npmjs.org/arg/-/arg-5.0.2.tgz",
      "integrity": "sha512-PYjyFOLKQ9y57JvQ6QLo8dAgNqswh8M1RMJYdQduT6xbWSgK36P/Z/v+p888pM69jMMfS8Xd8F6I1kQ/I9HUGg==",
      "license": "MIT"
    },
    "node_modules/aria-hidden": {
      "version": "1.2.4",
      "resolved": "https://registry.npmjs.org/aria-hidden/-/aria-hidden-1.2.4.tgz",
      "integrity": "sha512-y+CcFFwelSXpLZk/7fMB2mUbGtX9lKycf1MWJ7CaTIERyitVlyQx6C+sxcROU2BAJ24OiZyK+8wj2i8AlBoS3A==",
      "license": "MIT",
      "dependencies": {
        "tslib": "^2.0.0"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/array-flatten": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/array-flatten/-/array-flatten-1.1.1.tgz",
      "integrity": "sha512-PCVAQswWemu6UdxsDFFX/+gVeYqKAod3D3UVm91jHwynguOwAvYPhx8nNlM++NqRcK6CxxpUafjmhIdKiHibqg==",
      "license": "MIT"
    },
    "node_modules/autoprefixer": {
      "version": "10.4.20",
      "resolved": "https://registry.npmjs.org/autoprefixer/-/autoprefixer-10.4.20.tgz",
      "integrity": "sha512-XY25y5xSv/wEoqzDyXXME4AFfkZI0P23z6Fs3YgymDnKJkCGOnkL0iTxCa85UTqaSgfcqyf3UA6+c7wUvx/16g==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/postcss/"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/autoprefixer"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "browserslist": "^4.23.3",
        "caniuse-lite": "^1.0.30001646",
        "fraction.js": "^4.3.7",
        "normalize-range": "^0.1.2",
        "picocolors": "^1.0.1",
        "postcss-value-parser": "^4.2.0"
      },
      "bin": {
        "autoprefixer": "bin/autoprefixer"
      },
      "engines": {
        "node": "^10 || ^12 || >=14"
      },
      "peerDependencies": {
        "postcss": "^8.1.0"
      }
    },
    "node_modules/balanced-match": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz",
      "integrity": "sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==",
      "license": "MIT"
    },
    "node_modules/bcrypt": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/bcrypt/-/bcrypt-6.0.0.tgz",
      "integrity": "sha512-cU8v/EGSrnH+HnxV2z0J7/blxH8gq7Xh2JFT6Aroax7UohdmiJJlxApMxtKfuI7z68NvvVcmR78k2LbT6efhRg==",
      "hasInstallScript": true,
      "license": "MIT",
      "dependencies": {
        "node-addon-api": "^8.3.0",
        "node-gyp-build": "^4.8.4"
      },
      "engines": {
        "node": ">= 18"
      }
    },
    "node_modules/binary-extensions": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/binary-extensions/-/binary-extensions-2.3.0.tgz",
      "integrity": "sha512-Ceh+7ox5qe7LJuLHoY0feh3pHuUDHAcRUeyL2VYghZwfpkNIy/+8Ocg0a3UuSoYzavmylwuLWQOf3hl0jjMMIw==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/body-parser": {
      "version": "1.20.3",
      "resolved": "https://registry.npmjs.org/body-parser/-/body-parser-1.20.3.tgz",
      "integrity": "sha512-7rAxByjUMqQ3/bHJy7D6OGXvx/MMc4IqBn/X0fcM1QUcAItpZrBEYhWGem+tzXH90c+G01ypMcYJBO9Y30203g==",
      "license": "MIT",
      "dependencies": {
        "bytes": "3.1.2",
        "content-type": "~1.0.5",
        "debug": "2.6.9",
        "depd": "2.0.0",
        "destroy": "1.2.0",
        "http-errors": "2.0.0",
        "iconv-lite": "0.4.24",
        "on-finished": "2.4.1",
        "qs": "6.13.0",
        "raw-body": "2.5.2",
        "type-is": "~1.6.18",
        "unpipe": "1.0.0"
      },
      "engines": {
        "node": ">= 0.8",
        "npm": "1.2.8000 || >= 1.4.16"
      }
    },
    "node_modules/body-parser/node_modules/debug": {
      "version": "2.6.9",
      "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
      "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
      "license": "MIT",
      "dependencies": {
        "ms": "2.0.0"
      }
    },
    "node_modules/body-parser/node_modules/ms": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
      "integrity": "sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==",
      "license": "MIT"
    },
    "node_modules/brace-expansion": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.1.tgz",
      "integrity": "sha512-XnAIvQ8eM+kC6aULx6wuQiwVsnzsi9d3WxzV3FpWTGA19F621kwdbsAcFKXgKUHZWsy+mY6iL1sHTxWEFCytDA==",
      "license": "MIT",
      "dependencies": {
        "balanced-match": "^1.0.0"
      }
    },
    "node_modules/braces": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/braces/-/braces-3.0.3.tgz",
      "integrity": "sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==",
      "license": "MIT",
      "dependencies": {
        "fill-range": "^7.1.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/browserslist": {
      "version": "4.24.2",
      "resolved": "https://registry.npmjs.org/browserslist/-/browserslist-4.24.2.tgz",
      "integrity": "sha512-ZIc+Q62revdMcqC6aChtW4jz3My3klmCO1fEmINZY/8J3EpBg5/A/D0AKmBveUh6pgoeycoMkVMko84tuYS+Gg==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/browserslist"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/browserslist"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "caniuse-lite": "^1.0.30001669",
        "electron-to-chromium": "^1.5.41",
        "node-releases": "^2.0.18",
        "update-browserslist-db": "^1.1.1"
      },
      "bin": {
        "browserslist": "cli.js"
      },
      "engines": {
        "node": "^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || >=13.7"
      }
    },
    "node_modules/buffer-equal-constant-time": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/buffer-equal-constant-time/-/buffer-equal-constant-time-1.0.1.tgz",
      "integrity": "sha512-zRpUiDwd/xk6ADqPMATG8vc9VPrkck7T07OIx0gnjmJAnHnTVXNQG3vfvWNuiZIkwu9KrKdA1iJKfsfTVxE6NA==",
      "license": "BSD-3-Clause"
    },
    "node_modules/buffer-from": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/buffer-from/-/buffer-from-1.1.2.tgz",
      "integrity": "sha512-E+XQCRwSbaaiChtv6k6Dwgc+bx+Bs6vuKJHHl5kox/BaKbhiXzqQOwK4cO22yElGp2OCmjwVhT3HmxgyPGnJfQ==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/bufferutil": {
      "version": "4.0.8",
      "resolved": "https://registry.npmjs.org/bufferutil/-/bufferutil-4.0.8.tgz",
      "integrity": "sha512-4T53u4PdgsXqKaIctwF8ifXlRTTmEPJ8iEPWFdGZvcf7sbwYo6FKFEX9eNNAnzFZ7EzJAQ3CJeOtCRA4rDp7Pw==",
      "hasInstallScript": true,
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "node-gyp-build": "^4.3.0"
      },
      "engines": {
        "node": ">=6.14.2"
      }
    },
    "node_modules/bytes": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/bytes/-/bytes-3.1.2.tgz",
      "integrity": "sha512-/Nf7TyzTx6S3yRJObOAV7956r8cr2+Oj8AC5dt8wSP3BQAoeX58NoHyCU8P8zGkNXStjTSi6fzO6F0pBdcYbEg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/call-bind": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/call-bind/-/call-bind-1.0.7.tgz",
      "integrity": "sha512-GHTSNSYICQ7scH7sZ+M2rFopRoLh8t2bLSW6BbgrtLsahOIB5iyAVJf9GjWK3cYTDaMj4XdBpM1cA6pIS0Kv2w==",
      "license": "MIT",
      "dependencies": {
        "es-define-property": "^1.0.0",
        "es-errors": "^1.3.0",
        "function-bind": "^1.1.2",
        "get-intrinsic": "^1.2.4",
        "set-function-length": "^1.2.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/camelcase-css": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/camelcase-css/-/camelcase-css-2.0.1.tgz",
      "integrity": "sha512-QOSvevhslijgYwRx6Rv7zKdMF8lbRmx+uQGx2+vDc+KI/eBnsy9kit5aj23AgGu3pa4t9AgwbnXWqS+iOY+2aA==",
      "license": "MIT",
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/caniuse-lite": {
      "version": "1.0.30001677",
      "resolved": "https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001677.tgz",
      "integrity": "sha512-fmfjsOlJUpMWu+mAAtZZZHz7UEwsUxIIvu1TJfO1HqFQvB/B+ii0xr9B5HpbZY/mC4XZ8SvjHJqtAY6pDPQEog==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/browserslist"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/caniuse-lite"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "CC-BY-4.0"
    },
    "node_modules/chokidar": {
      "version": "3.6.0",
      "resolved": "https://registry.npmjs.org/chokidar/-/chokidar-3.6.0.tgz",
      "integrity": "sha512-7VT13fmjotKpGipCW9JEQAusEPE+Ei8nl6/g4FBAmIm0GOOLMua9NDDo/DWp0ZAxCr3cPq5ZpBqmPAQgDda2Pw==",
      "license": "MIT",
      "dependencies": {
        "anymatch": "~3.1.2",
        "braces": "~3.0.2",
        "glob-parent": "~5.1.2",
        "is-binary-path": "~2.1.0",
        "is-glob": "~4.0.1",
        "normalize-path": "~3.0.0",
        "readdirp": "~3.6.0"
      },
      "engines": {
        "node": ">= 8.10.0"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      },
      "optionalDependencies": {
        "fsevents": "~2.3.2"
      }
    },
    "node_modules/chokidar/node_modules/glob-parent": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz",
      "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
      "license": "ISC",
      "dependencies": {
        "is-glob": "^4.0.1"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/class-variance-authority": {
      "version": "0.7.1",
      "resolved": "https://registry.npmjs.org/class-variance-authority/-/class-variance-authority-0.7.1.tgz",
      "integrity": "sha512-Ka+9Trutv7G8M6WT6SeiRWz792K5qEqIGEGzXKhAE6xOWAY6pPH8U+9IY3oCMv6kqTmLsv7Xh/2w2RigkePMsg==",
      "dependencies": {
        "clsx": "^2.1.1"
      },
      "funding": {
        "url": "https://polar.sh/cva"
      }
    },
    "node_modules/clsx": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/clsx/-/clsx-2.1.1.tgz",
      "integrity": "sha512-eYm0QWBtUrBWZWG0d386OGAw16Z995PiOVo2B7bjWSbHedGl5e0ZWaq65kOGgUSNesEIDkB9ISbTg/JK9dhCZA==",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/cmdk": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/cmdk/-/cmdk-1.1.1.tgz",
      "integrity": "sha512-Vsv7kFaXm+ptHDMZ7izaRsP70GgrW9NBNGswt9OZaVBLlE0SNpDq8eu/VGXyF9r7M0azK3Wy7OlYXsuyYLFzHg==",
      "dependencies": {
        "@radix-ui/react-compose-refs": "^1.1.1",
        "@radix-ui/react-dialog": "^1.1.6",
        "@radix-ui/react-id": "^1.1.0",
        "@radix-ui/react-primitive": "^2.0.2"
      },
      "peerDependencies": {
        "react": "^18 || ^19 || ^19.0.0-rc",
        "react-dom": "^18 || ^19 || ^19.0.0-rc"
      }
    },
    "node_modules/color-convert": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
      "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
      "license": "MIT",
      "dependencies": {
        "color-name": "~1.1.4"
      },
      "engines": {
        "node": ">=7.0.0"
      }
    },
    "node_modules/color-name": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
      "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
      "license": "MIT"
    },
    "node_modules/commander": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/commander/-/commander-4.1.1.tgz",
      "integrity": "sha512-NOKm8xhkzAjzFx8B2v5OAHT+u5pRQc2UCa2Vq9jYL/31o2wi9mxBA7LIFs3sV5VSC49z6pEhfbMULvShKj26WA==",
      "license": "MIT",
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/connect-pg-simple": {
      "version": "10.0.0",
      "resolved": "https://registry.npmjs.org/connect-pg-simple/-/connect-pg-simple-10.0.0.tgz",
      "integrity": "sha512-pBGVazlqiMrackzCr0eKhn4LO5trJXsOX0nQoey9wCOayh80MYtThCbq8eoLsjpiWgiok/h+1/uti9/2/Una8A==",
      "license": "MIT",
      "dependencies": {
        "pg": "^8.12.0"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=22.0.0"
      }
    },
    "node_modules/content-disposition": {
      "version": "0.5.4",
      "resolved": "https://registry.npmjs.org/content-disposition/-/content-disposition-0.5.4.tgz",
      "integrity": "sha512-FveZTNuGw04cxlAiWbzi6zTAL/lhehaWbTtgluJh4/E95DqMwTmha3KZN1aAWA8cFIhHzMZUvLevkw5Rqk+tSQ==",
      "license": "MIT",
      "dependencies": {
        "safe-buffer": "5.2.1"
      },
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/content-type": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/content-type/-/content-type-1.0.5.tgz",
      "integrity": "sha512-nTjqfcBFEipKdXCv4YDQWCfmcLZKm81ldF0pAopTvyrFGVbcR6P/VAAd5G7N+0tTr8QqiU0tFadD6FK4NtJwOA==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/convert-source-map": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/convert-source-map/-/convert-source-map-2.0.0.tgz",
      "integrity": "sha512-Kvp459HrV2FEJ1CAsi1Ku+MY3kasH19TFykTz2xWmMeq6bk2NU3XXvfJ+Q61m0xktWwt+1HSYf3JZsTms3aRJg==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/cookie": {
      "version": "0.7.1",
      "resolved": "https://registry.npmjs.org/cookie/-/cookie-0.7.1.tgz",
      "integrity": "sha512-6DnInpx7SJ2AK3+CTUE/ZM0vWTUboZCegxhC2xiIydHR9jNuTAASBrfEpHhiGOZw/nX51bHt6YQl8jsGo4y/0w==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/cookie-signature": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/cookie-signature/-/cookie-signature-1.0.6.tgz",
      "integrity": "sha512-QADzlaHc8icV8I7vbaJXJwod9HWYp8uCqf1xa4OfNu1T7JVxQIrUgOWtHdNDtPiywmFbiS12VjotIXLrKM3orQ==",
      "license": "MIT"
    },
    "node_modules/cross-spawn": {
      "version": "7.0.6",
      "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.6.tgz",
      "integrity": "sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA==",
      "license": "MIT",
      "dependencies": {
        "path-key": "^3.1.0",
        "shebang-command": "^2.0.0",
        "which": "^2.0.1"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/cssesc": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/cssesc/-/cssesc-3.0.0.tgz",
      "integrity": "sha512-/Tb/JcjK111nNScGob5MNtsntNM1aCNUDipB/TkwZFhyDrrE47SOx/18wF2bbjgc3ZzCSKW1T5nt5EbFoAz/Vg==",
      "license": "MIT",
      "bin": {
        "cssesc": "bin/cssesc"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/csstype": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/csstype/-/csstype-3.1.3.tgz",
      "integrity": "sha512-M1uQkMl8rQK/szD0LNhtqxIPLpimGm8sOBwU7lLnCpSbTyY3yeU1Vc7l4KT5zT4s/yOxHH5O7tIuuLOCnLADRw==",
      "license": "MIT"
    },
    "node_modules/d3-array": {
      "version": "3.2.4",
      "resolved": "https://registry.npmjs.org/d3-array/-/d3-array-3.2.4.tgz",
      "integrity": "sha512-tdQAmyA18i4J7wprpYq8ClcxZy3SC31QMeByyCFyRt7BVHdREQZ5lpzoe5mFEYZUWe+oq8HBvk9JjpibyEV4Jg==",
      "license": "ISC",
      "dependencies": {
        "internmap": "1 - 2"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/d3-color": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/d3-color/-/d3-color-3.1.0.tgz",
      "integrity": "sha512-zg/chbXyeBtMQ1LbD/WSoW2DpC3I0mpmPdW+ynRTj/x2DAWYrIY7qeZIHidozwV24m4iavr15lNwIwLxRmOxhA==",
      "license": "ISC",
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/d3-ease": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/d3-ease/-/d3-ease-3.0.1.tgz",
      "integrity": "sha512-wR/XK3D3XcLIZwpbvQwQ5fK+8Ykds1ip7A2Txe0yxncXSdq1L9skcG7blcedkOX+ZcgxGAmLX1FrRGbADwzi0w==",
      "license": "BSD-3-Clause",
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/d3-format": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/d3-format/-/d3-format-3.1.0.tgz",
      "integrity": "sha512-YyUI6AEuY/Wpt8KWLgZHsIU86atmikuoOmCfommt0LYHiQSPjvX2AcFc38PX0CBpr2RCyZhjex+NS/LPOv6YqA==",
      "license": "ISC",
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/d3-interpolate": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/d3-interpolate/-/d3-interpolate-3.0.1.tgz",
      "integrity": "sha512-3bYs1rOD33uo8aqJfKP3JWPAibgw8Zm2+L9vBKEHJ2Rg+viTR7o5Mmv5mZcieN+FRYaAOWX5SJATX6k1PWz72g==",
      "license": "ISC",
      "dependencies": {
        "d3-color": "1 - 3"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/d3-path": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/d3-path/-/d3-path-3.1.0.tgz",
      "integrity": "sha512-p3KP5HCf/bvjBSSKuXid6Zqijx7wIfNW+J/maPs+iwR35at5JCbLUT0LzF1cnjbCHWhqzQTIN2Jpe8pRebIEFQ==",
      "license": "ISC",
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/d3-scale": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/d3-scale/-/d3-scale-4.0.2.tgz",
      "integrity": "sha512-GZW464g1SH7ag3Y7hXjf8RoUuAFIqklOAq3MRl4OaWabTFJY9PN/E1YklhXLh+OQ3fM9yS2nOkCoS+WLZ6kvxQ==",
      "license": "ISC",
      "dependencies": {
        "d3-array": "2.10.0 - 3",
        "d3-format": "1 - 3",
        "d3-interpolate": "1.2.0 - 3",
        "d3-time": "2.1.1 - 3",
        "d3-time-format": "2 - 4"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/d3-shape": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/d3-shape/-/d3-shape-3.2.0.tgz",
      "integrity": "sha512-SaLBuwGm3MOViRq2ABk3eLoxwZELpH6zhl3FbAoJ7Vm1gofKx6El1Ib5z23NUEhF9AsGl7y+dzLe5Cw2AArGTA==",
      "license": "ISC",
      "dependencies": {
        "d3-path": "^3.1.0"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/d3-time": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/d3-time/-/d3-time-3.1.0.tgz",
      "integrity": "sha512-VqKjzBLejbSMT4IgbmVgDjpkYrNWUYJnbCGo874u7MMKIWsILRX+OpX/gTk8MqjpT1A/c6HY2dCA77ZN0lkQ2Q==",
      "license": "ISC",
      "dependencies": {
        "d3-array": "2 - 3"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/d3-time-format": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/d3-time-format/-/d3-time-format-4.1.0.tgz",
      "integrity": "sha512-dJxPBlzC7NugB2PDLwo9Q8JiTR3M3e4/XANkreKSUxF8vvXKqm1Yfq4Q5dl8budlunRVlUUaDUgFt7eA8D6NLg==",
      "license": "ISC",
      "dependencies": {
        "d3-time": "1 - 3"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/d3-timer": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/d3-timer/-/d3-timer-3.0.1.tgz",
      "integrity": "sha512-ndfJ/JxxMd3nw31uyKoY2naivF+r29V+Lc0svZxe1JvvIRmi8hUsrMvdOwgS1o6uBHmiz91geQ0ylPP0aj1VUA==",
      "license": "ISC",
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/date-fns": {
      "version": "3.6.0",
      "resolved": "https://registry.npmjs.org/date-fns/-/date-fns-3.6.0.tgz",
      "integrity": "sha512-fRHTG8g/Gif+kSh50gaGEdToemgfj74aRX3swtiouboip5JDLAyDE9F11nHMIcvOaXeOC6D7SpNhi7uFyB7Uww==",
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/kossnocorp"
      }
    },
    "node_modules/debug": {
      "version": "4.3.7",
      "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.7.tgz",
      "integrity": "sha512-Er2nc/H7RrMXZBFCEim6TCmMk02Z8vLC2Rbi1KEBggpo0fS6l0S1nnapwmIi3yW/+GOJap1Krg4w0Hg80oCqgQ==",
      "license": "MIT",
      "dependencies": {
        "ms": "^2.1.3"
      },
      "engines": {
        "node": ">=6.0"
      },
      "peerDependenciesMeta": {
        "supports-color": {
          "optional": true
        }
      }
    },
    "node_modules/decimal.js-light": {
      "version": "2.5.1",
      "resolved": "https://registry.npmjs.org/decimal.js-light/-/decimal.js-light-2.5.1.tgz",
      "integrity": "sha512-qIMFpTMZmny+MMIitAB6D7iVPEorVw6YQRWkvarTkT4tBeSLLiHzcwj6q0MmYSFCiVpiqPJTJEYIrpcPzVEIvg==",
      "license": "MIT"
    },
    "node_modules/define-data-property": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/define-data-property/-/define-data-property-1.1.4.tgz",
      "integrity": "sha512-rBMvIzlpA8v6E+SJZoo++HAYqsLrkg7MSfIinMPFhmkorw7X+dOXVJQs+QT69zGkzMyfDnIMN2Wid1+NbL3T+A==",
      "license": "MIT",
      "dependencies": {
        "es-define-property": "^1.0.0",
        "es-errors": "^1.3.0",
        "gopd": "^1.0.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/depd": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/depd/-/depd-2.0.0.tgz",
      "integrity": "sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/destroy": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/destroy/-/destroy-1.2.0.tgz",
      "integrity": "sha512-2sJGJTaXIIaR1w4iJSNoN0hnMY7Gpc/n8D4qSCJw8QqFWXf7cuAgnEHxBpweaVcPevC2l3KpjYCx3NypQQgaJg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.8",
        "npm": "1.2.8000 || >= 1.4.16"
      }
    },
    "node_modules/detect-libc": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/detect-libc/-/detect-libc-2.0.3.tgz",
      "integrity": "sha512-bwy0MGW55bG41VqxxypOsdSdGqLwXPI/focwgTYCFMbdUiBAxLg9CFzG08sz2aqzknwiX7Hkl0bQENjg8iLByw==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/detect-node-es": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/detect-node-es/-/detect-node-es-1.1.0.tgz",
      "integrity": "sha512-ypdmJU/TbBby2Dxibuv7ZLW3Bs1QEmM7nHjEANfohJLvE0XVujisn1qPJcZxg+qDucsr+bP6fLD1rPS3AhJ7EQ=="
    },
    "node_modules/didyoumean": {
      "version": "1.2.2",
      "resolved": "https://registry.npmjs.org/didyoumean/-/didyoumean-1.2.2.tgz",
      "integrity": "sha512-gxtyfqMg7GKyhQmb056K7M3xszy/myH8w+B4RT+QXBQsvAOdc3XymqDDPHx1BgPgsdAA5SIifona89YtRATDzw==",
      "license": "Apache-2.0"
    },
    "node_modules/dlv": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/dlv/-/dlv-1.1.3.tgz",
      "integrity": "sha512-+HlytyjlPKnIG8XuRG8WvmBP8xs8P71y+SKKS6ZXWoEgLuePxtDoUEiH7WkdePWrQ5JBpE6aoVqfZfJUQkjXwA==",
      "license": "MIT"
    },
    "node_modules/dom-helpers": {
      "version": "5.2.1",
      "resolved": "https://registry.npmjs.org/dom-helpers/-/dom-helpers-5.2.1.tgz",
      "integrity": "sha512-nRCa7CK3VTrM2NmGkIy4cbK7IZlgBE/PYMn55rrXefr5xXDP0LdtfPnblFDoVdcAfslJ7or6iqAUnx0CCGIWQA==",
      "dependencies": {
        "@babel/runtime": "^7.8.7",
        "csstype": "^3.0.2"
      }
    },
    "node_modules/drizzle-kit": {
      "version": "0.30.4",
      "resolved": "https://registry.npmjs.org/drizzle-kit/-/drizzle-kit-0.30.4.tgz",
      "integrity": "sha512-B2oJN5UkvwwNHscPWXDG5KqAixu7AUzZ3qbe++KU9SsQ+cZWR4DXEPYcvWplyFAno0dhRJECNEhNxiDmFaPGyQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@drizzle-team/brocli": "^0.10.2",
        "@esbuild-kit/esm-loader": "^2.5.5",
        "esbuild": "^0.19.7",
        "esbuild-register": "^3.5.0"
      },
      "bin": {
        "drizzle-kit": "bin.cjs"
      }
    },
    "node_modules/drizzle-kit/node_modules/@esbuild/aix-ppc64": {
      "version": "0.19.12",
      "resolved": "https://registry.npmjs.org/@esbuild/aix-ppc64/-/aix-ppc64-0.19.12.tgz",
      "integrity": "sha512-bmoCYyWdEL3wDQIVbcyzRyeKLgk2WtWLTWz1ZIAZF/EGbNOwSA6ew3PftJ1PqMiOOGu0OyFMzG53L0zqIpPeNA==",
      "cpu": [
        "ppc64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "aix"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/drizzle-kit/node_modules/@esbuild/android-arm": {
      "version": "0.19.12",
      "resolved": "https://registry.npmjs.org/@esbuild/android-arm/-/android-arm-0.19.12.tgz",
      "integrity": "sha512-qg/Lj1mu3CdQlDEEiWrlC4eaPZ1KztwGJ9B6J+/6G+/4ewxJg7gqj8eVYWvao1bXrqGiW2rsBZFSX3q2lcW05w==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/drizzle-kit/node_modules/@esbuild/android-arm64": {
      "version": "0.19.12",
      "resolved": "https://registry.npmjs.org/@esbuild/android-arm64/-/android-arm64-0.19.12.tgz",
      "integrity": "sha512-P0UVNGIienjZv3f5zq0DP3Nt2IE/3plFzuaS96vihvD0Hd6H/q4WXUGpCxD/E8YrSXfNyRPbpTq+T8ZQioSuPA==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/drizzle-kit/node_modules/@esbuild/android-x64": {
      "version": "0.19.12",
      "resolved": "https://registry.npmjs.org/@esbuild/android-x64/-/android-x64-0.19.12.tgz",
      "integrity": "sha512-3k7ZoUW6Q6YqhdhIaq/WZ7HwBpnFBlW905Fa4s4qWJyiNOgT1dOqDiVAQFwBH7gBRZr17gLrlFCRzF6jFh7Kew==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/drizzle-kit/node_modules/@esbuild/darwin-arm64": {
      "version": "0.19.12",
      "resolved": "https://registry.npmjs.org/@esbuild/darwin-arm64/-/darwin-arm64-0.19.12.tgz",
      "integrity": "sha512-B6IeSgZgtEzGC42jsI+YYu9Z3HKRxp8ZT3cqhvliEHovq8HSX2YX8lNocDn79gCKJXOSaEot9MVYky7AKjCs8g==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/drizzle-kit/node_modules/@esbuild/darwin-x64": {
      "version": "0.19.12",
      "resolved": "https://registry.npmjs.org/@esbuild/darwin-x64/-/darwin-x64-0.19.12.tgz",
      "integrity": "sha512-hKoVkKzFiToTgn+41qGhsUJXFlIjxI/jSYeZf3ugemDYZldIXIxhvwN6erJGlX4t5h417iFuheZ7l+YVn05N3A==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/drizzle-kit/node_modules/@esbuild/freebsd-arm64": {
      "version": "0.19.12",
      "resolved": "https://registry.npmjs.org/@esbuild/freebsd-arm64/-/freebsd-arm64-0.19.12.tgz",
      "integrity": "sha512-4aRvFIXmwAcDBw9AueDQ2YnGmz5L6obe5kmPT8Vd+/+x/JMVKCgdcRwH6APrbpNXsPz+K653Qg8HB/oXvXVukA==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "freebsd"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/drizzle-kit/node_modules/@esbuild/freebsd-x64": {
      "version": "0.19.12",
      "resolved": "https://registry.npmjs.org/@esbuild/freebsd-x64/-/freebsd-x64-0.19.12.tgz",
      "integrity": "sha512-EYoXZ4d8xtBoVN7CEwWY2IN4ho76xjYXqSXMNccFSx2lgqOG/1TBPW0yPx1bJZk94qu3tX0fycJeeQsKovA8gg==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "freebsd"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/drizzle-kit/node_modules/@esbuild/linux-arm": {
      "version": "0.19.12",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-arm/-/linux-arm-0.19.12.tgz",
      "integrity": "sha512-J5jPms//KhSNv+LO1S1TX1UWp1ucM6N6XuL6ITdKWElCu8wXP72l9MM0zDTzzeikVyqFE6U8YAV9/tFyj0ti+w==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/drizzle-kit/node_modules/@esbuild/linux-arm64": {
      "version": "0.19.12",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-arm64/-/linux-arm64-0.19.12.tgz",
      "integrity": "sha512-EoTjyYyLuVPfdPLsGVVVC8a0p1BFFvtpQDB/YLEhaXyf/5bczaGeN15QkR+O4S5LeJ92Tqotve7i1jn35qwvdA==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/drizzle-kit/node_modules/@esbuild/linux-ia32": {
      "version": "0.19.12",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-ia32/-/linux-ia32-0.19.12.tgz",
      "integrity": "sha512-Thsa42rrP1+UIGaWz47uydHSBOgTUnwBwNq59khgIwktK6x60Hivfbux9iNR0eHCHzOLjLMLfUMLCypBkZXMHA==",
      "cpu": [
        "ia32"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/drizzle-kit/node_modules/@esbuild/linux-loong64": {
      "version": "0.19.12",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-loong64/-/linux-loong64-0.19.12.tgz",
      "integrity": "sha512-LiXdXA0s3IqRRjm6rV6XaWATScKAXjI4R4LoDlvO7+yQqFdlr1Bax62sRwkVvRIrwXxvtYEHHI4dm50jAXkuAA==",
      "cpu": [
        "loong64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/drizzle-kit/node_modules/@esbuild/linux-mips64el": {
      "version": "0.19.12",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-mips64el/-/linux-mips64el-0.19.12.tgz",
      "integrity": "sha512-fEnAuj5VGTanfJ07ff0gOA6IPsvrVHLVb6Lyd1g2/ed67oU1eFzL0r9WL7ZzscD+/N6i3dWumGE1Un4f7Amf+w==",
      "cpu": [
        "mips64el"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/drizzle-kit/node_modules/@esbuild/linux-ppc64": {
      "version": "0.19.12",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-ppc64/-/linux-ppc64-0.19.12.tgz",
      "integrity": "sha512-nYJA2/QPimDQOh1rKWedNOe3Gfc8PabU7HT3iXWtNUbRzXS9+vgB0Fjaqr//XNbd82mCxHzik2qotuI89cfixg==",
      "cpu": [
        "ppc64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/drizzle-kit/node_modules/@esbuild/linux-riscv64": {
      "version": "0.19.12",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-riscv64/-/linux-riscv64-0.19.12.tgz",
      "integrity": "sha512-2MueBrlPQCw5dVJJpQdUYgeqIzDQgw3QtiAHUC4RBz9FXPrskyyU3VI1hw7C0BSKB9OduwSJ79FTCqtGMWqJHg==",
      "cpu": [
        "riscv64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/drizzle-kit/node_modules/@esbuild/linux-s390x": {
      "version": "0.19.12",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-s390x/-/linux-s390x-0.19.12.tgz",
      "integrity": "sha512-+Pil1Nv3Umes4m3AZKqA2anfhJiVmNCYkPchwFJNEJN5QxmTs1uzyy4TvmDrCRNT2ApwSari7ZIgrPeUx4UZDg==",
      "cpu": [
        "s390x"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/drizzle-kit/node_modules/@esbuild/linux-x64": {
      "version": "0.19.12",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-x64/-/linux-x64-0.19.12.tgz",
      "integrity": "sha512-B71g1QpxfwBvNrfyJdVDexenDIt1CiDN1TIXLbhOw0KhJzE78KIFGX6OJ9MrtC0oOqMWf+0xop4qEU8JrJTwCg==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/drizzle-kit/node_modules/@esbuild/netbsd-x64": {
      "version": "0.19.12",
      "resolved": "https://registry.npmjs.org/@esbuild/netbsd-x64/-/netbsd-x64-0.19.12.tgz",
      "integrity": "sha512-3ltjQ7n1owJgFbuC61Oj++XhtzmymoCihNFgT84UAmJnxJfm4sYCiSLTXZtE00VWYpPMYc+ZQmB6xbSdVh0JWA==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "netbsd"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/drizzle-kit/node_modules/@esbuild/openbsd-x64": {
      "version": "0.19.12",
      "resolved": "https://registry.npmjs.org/@esbuild/openbsd-x64/-/openbsd-x64-0.19.12.tgz",
      "integrity": "sha512-RbrfTB9SWsr0kWmb9srfF+L933uMDdu9BIzdA7os2t0TXhCRjrQyCeOt6wVxr79CKD4c+p+YhCj31HBkYcXebw==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "openbsd"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/drizzle-kit/node_modules/@esbuild/sunos-x64": {
      "version": "0.19.12",
      "resolved": "https://registry.npmjs.org/@esbuild/sunos-x64/-/sunos-x64-0.19.12.tgz",
      "integrity": "sha512-HKjJwRrW8uWtCQnQOz9qcU3mUZhTUQvi56Q8DPTLLB+DawoiQdjsYq+j+D3s9I8VFtDr+F9CjgXKKC4ss89IeA==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "sunos"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/drizzle-kit/node_modules/@esbuild/win32-arm64": {
      "version": "0.19.12",
      "resolved": "https://registry.npmjs.org/@esbuild/win32-arm64/-/win32-arm64-0.19.12.tgz",
      "integrity": "sha512-URgtR1dJnmGvX864pn1B2YUYNzjmXkuJOIqG2HdU62MVS4EHpU2946OZoTMnRUHklGtJdJZ33QfzdjGACXhn1A==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/drizzle-kit/node_modules/@esbuild/win32-ia32": {
      "version": "0.19.12",
      "resolved": "https://registry.npmjs.org/@esbuild/win32-ia32/-/win32-ia32-0.19.12.tgz",
      "integrity": "sha512-+ZOE6pUkMOJfmxmBZElNOx72NKpIa/HFOMGzu8fqzQJ5kgf6aTGrcJaFsNiVMH4JKpMipyK+7k0n2UXN7a8YKQ==",
      "cpu": [
        "ia32"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/drizzle-kit/node_modules/@esbuild/win32-x64": {
      "version": "0.19.12",
      "resolved": "https://registry.npmjs.org/@esbuild/win32-x64/-/win32-x64-0.19.12.tgz",
      "integrity": "sha512-T1QyPSDCyMXaO3pzBkF96E8xMkiRYbUEZADd29SyPGabqxMViNoii+NcK7eWJAEoU6RZyEm5lVSIjTmcdoB9HA==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/drizzle-kit/node_modules/esbuild": {
      "version": "0.19.12",
      "resolved": "https://registry.npmjs.org/esbuild/-/esbuild-0.19.12.tgz",
      "integrity": "sha512-aARqgq8roFBj054KvQr5f1sFu0D65G+miZRCuJyJ0G13Zwx7vRar5Zhn2tkQNzIXcBrNVsv/8stehpj+GAjgbg==",
      "dev": true,
      "hasInstallScript": true,
      "license": "MIT",
      "bin": {
        "esbuild": "bin/esbuild"
      },
      "engines": {
        "node": ">=12"
      },
      "optionalDependencies": {
        "@esbuild/aix-ppc64": "0.19.12",
        "@esbuild/android-arm": "0.19.12",
        "@esbuild/android-arm64": "0.19.12",
        "@esbuild/android-x64": "0.19.12",
        "@esbuild/darwin-arm64": "0.19.12",
        "@esbuild/darwin-x64": "0.19.12",
        "@esbuild/freebsd-arm64": "0.19.12",
        "@esbuild/freebsd-x64": "0.19.12",
        "@esbuild/linux-arm": "0.19.12",
        "@esbuild/linux-arm64": "0.19.12",
        "@esbuild/linux-ia32": "0.19.12",
        "@esbuild/linux-loong64": "0.19.12",
        "@esbuild/linux-mips64el": "0.19.12",
        "@esbuild/linux-ppc64": "0.19.12",
        "@esbuild/linux-riscv64": "0.19.12",
        "@esbuild/linux-s390x": "0.19.12",
        "@esbuild/linux-x64": "0.19.12",
        "@esbuild/netbsd-x64": "0.19.12",
        "@esbuild/openbsd-x64": "0.19.12",
        "@esbuild/sunos-x64": "0.19.12",
        "@esbuild/win32-arm64": "0.19.12",
        "@esbuild/win32-ia32": "0.19.12",
        "@esbuild/win32-x64": "0.19.12"
      }
    },
    "node_modules/drizzle-orm": {
      "version": "0.39.1",
      "resolved": "https://registry.npmjs.org/drizzle-orm/-/drizzle-orm-0.39.1.tgz",
      "integrity": "sha512-2bDHlzTY31IDmrYn8i+ZZrxK8IyBD4mPZ7JmZdVDQj2tpBZXs/gxB/1kK5pSvkjxPUMNOVsTnoGkSltgjuJwcA==",
      "license": "Apache-2.0",
      "peerDependencies": {
        "@aws-sdk/client-rds-data": ">=3",
        "@cloudflare/workers-types": ">=4",
        "@electric-sql/pglite": ">=0.2.0",
        "@libsql/client": ">=0.10.0",
        "@libsql/client-wasm": ">=0.10.0",
        "@neondatabase/serverless": ">=0.10.0",
        "@op-engineering/op-sqlite": ">=2",
        "@opentelemetry/api": "^1.4.1",
        "@planetscale/database": ">=1",
        "@prisma/client": "*",
        "@tidbcloud/serverless": "*",
        "@types/better-sqlite3": "*",
        "@types/pg": "*",
        "@types/react": ">=18",
        "@types/sql.js": "*",
        "@vercel/postgres": ">=0.8.0",
        "@xata.io/client": "*",
        "better-sqlite3": ">=7",
        "bun-types": "*",
        "expo-sqlite": ">=14.0.0",
        "knex": "*",
        "kysely": "*",
        "mysql2": ">=2",
        "pg": ">=8",
        "postgres": ">=3",
        "react": ">=18",
        "sql.js": ">=1",
        "sqlite3": ">=5"
      },
      "peerDependenciesMeta": {
        "@aws-sdk/client-rds-data": {
          "optional": true
        },
        "@cloudflare/workers-types": {
          "optional": true
        },
        "@electric-sql/pglite": {
          "optional": true
        },
        "@libsql/client": {
          "optional": true
        },
        "@libsql/client-wasm": {
          "optional": true
        },
        "@neondatabase/serverless": {
          "optional": true
        },
        "@op-engineering/op-sqlite": {
          "optional": true
        },
        "@opentelemetry/api": {
          "optional": true
        },
        "@planetscale/database": {
          "optional": true
        },
        "@prisma/client": {
          "optional": true
        },
        "@tidbcloud/serverless": {
          "optional": true
        },
        "@types/better-sqlite3": {
          "optional": true
        },
        "@types/pg": {
          "optional": true
        },
        "@types/react": {
          "optional": true
        },
        "@types/sql.js": {
          "optional": true
        },
        "@vercel/postgres": {
          "optional": true
        },
        "@xata.io/client": {
          "optional": true
        },
        "better-sqlite3": {
          "optional": true
        },
        "bun-types": {
          "optional": true
        },
        "expo-sqlite": {
          "optional": true
        },
        "knex": {
          "optional": true
        },
        "kysely": {
          "optional": true
        },
        "mysql2": {
          "optional": true
        },
        "pg": {
          "optional": true
        },
        "postgres": {
          "optional": true
        },
        "prisma": {
          "optional": true
        },
        "react": {
          "optional": true
        },
        "sql.js": {
          "optional": true
        },
        "sqlite3": {
          "optional": true
        }
      }
    },
    "node_modules/drizzle-zod": {
      "version": "0.7.0",
      "resolved": "https://registry.npmjs.org/drizzle-zod/-/drizzle-zod-0.7.0.tgz",
      "integrity": "sha512-xgCRYYVEzRkeXTS33GSMgoowe3vKsMNBjSI+cwG1oLQVEhAWWbqtb/AAMlm7tkmV4fG/uJjEmWzdzlEmTgWOoQ==",
      "license": "Apache-2.0",
      "peerDependencies": {
        "drizzle-orm": ">=0.36.0",
        "zod": ">=3.0.0"
      }
    },
    "node_modules/eastasianwidth": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/eastasianwidth/-/eastasianwidth-0.2.0.tgz",
      "integrity": "sha512-I88TYZWc9XiYHRQ4/3c5rjjfgkjhLyW2luGIheGERbNQ6OY7yTybanSpDXZa8y7VUP9YmDcYa+eyq4ca7iLqWA==",
      "license": "MIT"
    },
    "node_modules/ecdsa-sig-formatter": {
      "version": "1.0.11",
      "resolved": "https://registry.npmjs.org/ecdsa-sig-formatter/-/ecdsa-sig-formatter-1.0.11.tgz",
      "integrity": "sha512-nagl3RYrbNv6kQkeJIpt6NJZy8twLB/2vtz6yN9Z4vRKHN4/QZJIEbqohALSgwKdnksuY3k5Addp5lg8sVoVcQ==",
      "license": "Apache-2.0",
      "dependencies": {
        "safe-buffer": "^5.0.1"
      }
    },
    "node_modules/ee-first": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/ee-first/-/ee-first-1.1.1.tgz",
      "integrity": "sha512-WMwm9LhRUo+WUaRN+vRuETqG89IgZphVSNkdFgeb6sS/E4OrDIN7t48CAewSHXc6C8lefD8KKfr5vY61brQlow==",
      "license": "MIT"
    },
    "node_modules/electron-to-chromium": {
      "version": "1.5.51",
      "resolved": "https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.5.51.tgz",
      "integrity": "sha512-kKeWV57KSS8jH4alKt/jKnvHPmJgBxXzGUSbMd4eQF+iOsVPl7bz2KUmu6eo80eMP8wVioTfTyTzdMgM15WXNg==",
      "dev": true,
      "license": "ISC"
    },
    "node_modules/embla-carousel": {
      "version": "8.6.0",
      "resolved": "https://registry.npmjs.org/embla-carousel/-/embla-carousel-8.6.0.tgz",
      "integrity": "sha512-SjWyZBHJPbqxHOzckOfo8lHisEaJWmwd23XppYFYVh10bU66/Pn5tkVkbkCMZVdbUE5eTCI2nD8OyIP4Z+uwkA=="
    },
    "node_modules/embla-carousel-react": {
      "version": "8.6.0",
      "resolved": "https://registry.npmjs.org/embla-carousel-react/-/embla-carousel-react-8.6.0.tgz",
      "integrity": "sha512-0/PjqU7geVmo6F734pmPqpyHqiM99olvyecY7zdweCw+6tKEXnrE90pBiBbMMU8s5tICemzpQ3hi5EpxzGW+JA==",
      "dependencies": {
        "embla-carousel": "8.6.0",
        "embla-carousel-reactive-utils": "8.6.0"
      },
      "peerDependencies": {
        "react": "^16.8.0 || ^17.0.1 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc"
      }
    },
    "node_modules/embla-carousel-reactive-utils": {
      "version": "8.6.0",
      "resolved": "https://registry.npmjs.org/embla-carousel-reactive-utils/-/embla-carousel-reactive-utils-8.6.0.tgz",
      "integrity": "sha512-fMVUDUEx0/uIEDM0Mz3dHznDhfX+znCCDCeIophYb1QGVM7YThSWX+wz11zlYwWFOr74b4QLGg0hrGPJeG2s4A==",
      "peerDependencies": {
        "embla-carousel": "8.6.0"
      }
    },
    "node_modules/emoji-regex": {
      "version": "9.2.2",
      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-9.2.2.tgz",
      "integrity": "sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg==",
      "license": "MIT"
    },
    "node_modules/encodeurl": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/encodeurl/-/encodeurl-2.0.0.tgz",
      "integrity": "sha512-Q0n9HRi4m6JuGIV1eFlmvJB7ZEVxu93IrMyiMsGC0lrMJMWzRgx6WGquyfQgZVb31vhGgXnfmPNNXmxnOkRBrg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/enhanced-resolve": {
      "version": "5.18.1",
      "resolved": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-5.18.1.tgz",
      "integrity": "sha512-ZSW3ma5GkcQBIpwZTSRAI8N71Uuwgs93IezB7mf7R60tC8ZbJideoDNKjHn2O9KIlx6rkGTTEk1xUCK2E1Y2Yg==",
      "dev": true,
      "dependencies": {
        "graceful-fs": "^4.2.4",
        "tapable": "^2.2.0"
      },
      "engines": {
        "node": ">=10.13.0"
      }
    },
    "node_modules/es-define-property": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/es-define-property/-/es-define-property-1.0.0.tgz",
      "integrity": "sha512-jxayLKShrEqqzJ0eumQbVhTYQM27CfT1T35+gCgDFoL82JLsXqTJ76zv6A0YLOgEnLUMvLzsDsGIrl8NFpT2gQ==",
      "license": "MIT",
      "dependencies": {
        "get-intrinsic": "^1.2.4"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-errors": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/es-errors/-/es-errors-1.3.0.tgz",
      "integrity": "sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/esbuild": {
      "version": "0.25.0",
      "resolved": "https://registry.npmjs.org/esbuild/-/esbuild-0.25.0.tgz",
      "integrity": "sha512-BXq5mqc8ltbaN34cDqWuYKyNhX8D/Z0J1xdtdQ8UcIIIyJyz+ZMKUt58tF3SrZ85jcfN/PZYhjR5uDQAYNVbuw==",
      "dev": true,
      "hasInstallScript": true,
      "license": "MIT",
      "bin": {
        "esbuild": "bin/esbuild"
      },
      "engines": {
        "node": ">=18"
      },
      "optionalDependencies": {
        "@esbuild/aix-ppc64": "0.25.0",
        "@esbuild/android-arm": "0.25.0",
        "@esbuild/android-arm64": "0.25.0",
        "@esbuild/android-x64": "0.25.0",
        "@esbuild/darwin-arm64": "0.25.0",
        "@esbuild/darwin-x64": "0.25.0",
        "@esbuild/freebsd-arm64": "0.25.0",
        "@esbuild/freebsd-x64": "0.25.0",
        "@esbuild/linux-arm": "0.25.0",
        "@esbuild/linux-arm64": "0.25.0",
        "@esbuild/linux-ia32": "0.25.0",
        "@esbuild/linux-loong64": "0.25.0",
        "@esbuild/linux-mips64el": "0.25.0",
        "@esbuild/linux-ppc64": "0.25.0",
        "@esbuild/linux-riscv64": "0.25.0",
        "@esbuild/linux-s390x": "0.25.0",
        "@esbuild/linux-x64": "0.25.0",
        "@esbuild/netbsd-arm64": "0.25.0",
        "@esbuild/netbsd-x64": "0.25.0",
        "@esbuild/openbsd-arm64": "0.25.0",
        "@esbuild/openbsd-x64": "0.25.0",
        "@esbuild/sunos-x64": "0.25.0",
        "@esbuild/win32-arm64": "0.25.0",
        "@esbuild/win32-ia32": "0.25.0",
        "@esbuild/win32-x64": "0.25.0"
      }
    },
    "node_modules/esbuild-register": {
      "version": "3.6.0",
      "resolved": "https://registry.npmjs.org/esbuild-register/-/esbuild-register-3.6.0.tgz",
      "integrity": "sha512-H2/S7Pm8a9CL1uhp9OvjwrBh5Pvx0H8qVOxNu8Wed9Y7qv56MPtq+GGM8RJpq6glYJn9Wspr8uw7l55uyinNeg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "debug": "^4.3.4"
      },
      "peerDependencies": {
        "esbuild": ">=0.12 <1"
      }
    },
    "node_modules/escalade": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/escalade/-/escalade-3.2.0.tgz",
      "integrity": "sha512-WUj2qlxaQtO4g6Pq5c29GTcWGDyd8itL8zTlipgECz3JesAiiOKotd8JU6otB3PACgG6xkJUyVhboMS+bje/jA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/escape-html": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/escape-html/-/escape-html-1.0.3.tgz",
      "integrity": "sha512-NiSupZ4OeuGwr68lGIeym/ksIZMJodUGOSCZ/FSnTxcrekbvqrgdUxlJOMpijaKZVjAJrWrGs/6Jy8OMuyj9ow==",
      "license": "MIT"
    },
    "node_modules/etag": {
      "version": "1.8.1",
      "resolved": "https://registry.npmjs.org/etag/-/etag-1.8.1.tgz",
      "integrity": "sha512-aIL5Fx7mawVa300al2BnEE4iNvo1qETxLrPI/o05L7z6go7fCw1J6EQmbK4FmJ2AS7kgVF/KEZWufBfdClMcPg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/eventemitter3": {
      "version": "4.0.7",
      "resolved": "https://registry.npmjs.org/eventemitter3/-/eventemitter3-4.0.7.tgz",
      "integrity": "sha512-8guHBZCwKnFhYdHr2ysuRWErTwhoN2X8XELRlrRwpmfeY2jjuUN4taQMsULKUVo1K4DvZl+0pgfyoysHxvmvEw==",
      "license": "MIT"
    },
    "node_modules/express": {
      "version": "4.21.2",
      "resolved": "https://registry.npmjs.org/express/-/express-4.21.2.tgz",
      "integrity": "sha512-28HqgMZAmih1Czt9ny7qr6ek2qddF4FclbMzwhCREB6OFfH+rXAnuNCwo1/wFvrtbgsQDb4kSbX9de9lFbrXnA==",
      "license": "MIT",
      "dependencies": {
        "accepts": "~1.3.8",
        "array-flatten": "1.1.1",
        "body-parser": "1.20.3",
        "content-disposition": "0.5.4",
        "content-type": "~1.0.4",
        "cookie": "0.7.1",
        "cookie-signature": "1.0.6",
        "debug": "2.6.9",
        "depd": "2.0.0",
        "encodeurl": "~2.0.0",
        "escape-html": "~1.0.3",
        "etag": "~1.8.1",
        "finalhandler": "1.3.1",
        "fresh": "0.5.2",
        "http-errors": "2.0.0",
        "merge-descriptors": "1.0.3",
        "methods": "~1.1.2",
        "on-finished": "2.4.1",
        "parseurl": "~1.3.3",
        "path-to-regexp": "0.1.12",
        "proxy-addr": "~2.0.7",
        "qs": "6.13.0",
        "range-parser": "~1.2.1",
        "safe-buffer": "5.2.1",
        "send": "0.19.0",
        "serve-static": "1.16.2",
        "setprototypeof": "1.2.0",
        "statuses": "2.0.1",
        "type-is": "~1.6.18",
        "utils-merge": "1.0.1",
        "vary": "~1.1.2"
      },
      "engines": {
        "node": ">= 0.10.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/express"
      }
    },
    "node_modules/express-session": {
      "version": "1.18.1",
      "resolved": "https://registry.npmjs.org/express-session/-/express-session-1.18.1.tgz",
      "integrity": "sha512-a5mtTqEaZvBCL9A9aqkrtfz+3SMDhOVUnjafjo+s7A9Txkq+SVX2DLvSp1Zrv4uCXa3lMSK3viWnh9Gg07PBUA==",
      "license": "MIT",
      "dependencies": {
        "cookie": "0.7.2",
        "cookie-signature": "1.0.7",
        "debug": "2.6.9",
        "depd": "~2.0.0",
        "on-headers": "~1.0.2",
        "parseurl": "~1.3.3",
        "safe-buffer": "5.2.1",
        "uid-safe": "~2.1.5"
      },
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/express-session/node_modules/cookie": {
      "version": "0.7.2",
      "resolved": "https://registry.npmjs.org/cookie/-/cookie-0.7.2.tgz",
      "integrity": "sha512-yki5XnKuf750l50uGTllt6kKILY4nQ1eNIQatoXEByZ5dWgnKqbnqmTrBE5B4N7lrMJKQ2ytWMiTO2o0v6Ew/w==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/express-session/node_modules/cookie-signature": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/cookie-signature/-/cookie-signature-1.0.7.tgz",
      "integrity": "sha512-NXdYc3dLr47pBkpUCHtKSwIOQXLVn8dZEuywboCOJY/osA0wFSLlSawr3KN8qXJEyX66FcONTH8EIlVuK0yyFA==",
      "license": "MIT"
    },
    "node_modules/express-session/node_modules/debug": {
      "version": "2.6.9",
      "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
      "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
      "license": "MIT",
      "dependencies": {
        "ms": "2.0.0"
      }
    },
    "node_modules/express-session/node_modules/ms": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
      "integrity": "sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==",
      "license": "MIT"
    },
    "node_modules/express/node_modules/debug": {
      "version": "2.6.9",
      "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
      "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
      "license": "MIT",
      "dependencies": {
        "ms": "2.0.0"
      }
    },
    "node_modules/express/node_modules/ms": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
      "integrity": "sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==",
      "license": "MIT"
    },
    "node_modules/fast-equals": {
      "version": "5.2.2",
      "resolved": "https://registry.npmjs.org/fast-equals/-/fast-equals-5.2.2.tgz",
      "integrity": "sha512-V7/RktU11J3I36Nwq2JnZEM7tNm17eBJz+u25qdxBZeCKiX6BkVSZQjwWIr+IobgnZy+ag73tTZgZi7tr0LrBw==",
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/fast-glob": {
      "version": "3.3.2",
      "resolved": "https://registry.npmjs.org/fast-glob/-/fast-glob-3.3.2.tgz",
      "integrity": "sha512-oX2ruAFQwf/Orj8m737Y5adxDQO0LAB7/S5MnxCdTNDd4p6BsyIVsv9JQsATbTSq8KHRpLwIHbVlUNatxd+1Ow==",
      "license": "MIT",
      "dependencies": {
        "@nodelib/fs.stat": "^2.0.2",
        "@nodelib/fs.walk": "^1.2.3",
        "glob-parent": "^5.1.2",
        "merge2": "^1.3.0",
        "micromatch": "^4.0.4"
      },
      "engines": {
        "node": ">=8.6.0"
      }
    },
    "node_modules/fast-glob/node_modules/glob-parent": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz",
      "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
      "license": "ISC",
      "dependencies": {
        "is-glob": "^4.0.1"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/fastq": {
      "version": "1.17.1",
      "resolved": "https://registry.npmjs.org/fastq/-/fastq-1.17.1.tgz",
      "integrity": "sha512-sRVD3lWVIXWg6By68ZN7vho9a1pQcN/WBFaAAsDDFzlJjvoGx0P8z7V1t72grFJfJhu3YPZBuu25f7Kaw2jN1w==",
      "license": "ISC",
      "dependencies": {
        "reusify": "^1.0.4"
      }
    },
    "node_modules/fill-range": {
      "version": "7.1.1",
      "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-7.1.1.tgz",
      "integrity": "sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==",
      "license": "MIT",
      "dependencies": {
        "to-regex-range": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/finalhandler": {
      "version": "1.3.1",
      "resolved": "https://registry.npmjs.org/finalhandler/-/finalhandler-1.3.1.tgz",
      "integrity": "sha512-6BN9trH7bp3qvnrRyzsBz+g3lZxTNZTbVO2EV1CS0WIcDbawYVdYvGflME/9QP0h0pYlCDBCTjYa9nZzMDpyxQ==",
      "license": "MIT",
      "dependencies": {
        "debug": "2.6.9",
        "encodeurl": "~2.0.0",
        "escape-html": "~1.0.3",
        "on-finished": "2.4.1",
        "parseurl": "~1.3.3",
        "statuses": "2.0.1",
        "unpipe": "~1.0.0"
      },
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/finalhandler/node_modules/debug": {
      "version": "2.6.9",
      "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
      "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
      "license": "MIT",
      "dependencies": {
        "ms": "2.0.0"
      }
    },
    "node_modules/finalhandler/node_modules/ms": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
      "integrity": "sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==",
      "license": "MIT"
    },
    "node_modules/foreground-child": {
      "version": "3.3.0",
      "resolved": "https://registry.npmjs.org/foreground-child/-/foreground-child-3.3.0.tgz",
      "integrity": "sha512-Ld2g8rrAyMYFXBhEqMz8ZAHBi4J4uS1i/CxGMDnjyFWddMXLVcDp051DZfu+t7+ab7Wv6SMqpWmyFIj5UbfFvg==",
      "license": "ISC",
      "dependencies": {
        "cross-spawn": "^7.0.0",
        "signal-exit": "^4.0.1"
      },
      "engines": {
        "node": ">=14"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/forwarded": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/forwarded/-/forwarded-0.2.0.tgz",
      "integrity": "sha512-buRG0fpBtRHSTCOASe6hD258tEubFoRLb4ZNA6NxMVHNw2gOcwHo9wyablzMzOA5z9xA9L1KNjk/Nt6MT9aYow==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/fraction.js": {
      "version": "4.3.7",
      "resolved": "https://registry.npmjs.org/fraction.js/-/fraction.js-4.3.7.tgz",
      "integrity": "sha512-ZsDfxO51wGAXREY55a7la9LScWpwv9RxIrYABrlvOFBlH/ShPnrtsXeuUIfXKKOVicNxQ+o8JTbJvjS4M89yew==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": "*"
      },
      "funding": {
        "type": "patreon",
        "url": "https://github.com/sponsors/rawify"
      }
    },
    "node_modules/framer-motion": {
      "version": "11.13.1",
      "resolved": "https://registry.npmjs.org/framer-motion/-/framer-motion-11.13.1.tgz",
      "integrity": "sha512-F40tpGTHByhn9h3zdBQPcEro+pSLtzARcocbNqAyfBI+u9S+KZuHH/7O9+z+GEkoF3eqFxfvVw0eBDytohwqmQ==",
      "license": "MIT",
      "dependencies": {
        "motion-dom": "^11.13.0",
        "motion-utils": "^11.13.0",
        "tslib": "^2.4.0"
      },
      "peerDependencies": {
        "@emotion/is-prop-valid": "*",
        "react": "^18.0.0",
        "react-dom": "^18.0.0"
      },
      "peerDependenciesMeta": {
        "@emotion/is-prop-valid": {
          "optional": true
        },
        "react": {
          "optional": true
        },
        "react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/fresh": {
      "version": "0.5.2",
      "resolved": "https://registry.npmjs.org/fresh/-/fresh-0.5.2.tgz",
      "integrity": "sha512-zJ2mQYM18rEFOudeV4GShTGIQ7RbzA7ozbU9I/XBpm7kqgMywgmylMwXHxZJmkVoYkna9d2pVXVXPdYTP9ej8Q==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/fsevents": {
      "version": "2.3.3",
      "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz",
      "integrity": "sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==",
      "hasInstallScript": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": "^8.16.0 || ^10.6.0 || >=11.0.0"
      }
    },
    "node_modules/function-bind": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz",
      "integrity": "sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==",
      "license": "MIT",
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/gensync": {
      "version": "1.0.0-beta.2",
      "resolved": "https://registry.npmjs.org/gensync/-/gensync-1.0.0-beta.2.tgz",
      "integrity": "sha512-3hN7NaskYvMDLQY55gnW3NQ+mesEAepTqlg+VEbj7zzqEMBVNhzcGYYeqFo/TlYz6eQiFcp1HcsCZO+nGgS8zg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/get-intrinsic": {
      "version": "1.2.4",
      "resolved": "https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.2.4.tgz",
      "integrity": "sha512-5uYhsJH8VJBTv7oslg4BznJYhDoRI6waYCxMmCdnTrcCrHA/fCFKoTFz2JKKE0HdDFUF7/oQuhzumXJK7paBRQ==",
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0",
        "function-bind": "^1.1.2",
        "has-proto": "^1.0.1",
        "has-symbols": "^1.0.3",
        "hasown": "^2.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/get-nonce": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/get-nonce/-/get-nonce-1.0.1.tgz",
      "integrity": "sha512-FJhYRoDaiatfEkUK8HKlicmu/3SGFD51q3itKDGoSTysQJBnfOcxU5GxnhE1E6soB76MbT0MBtnKJuXyAx+96Q==",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/get-tsconfig": {
      "version": "4.8.1",
      "resolved": "https://registry.npmjs.org/get-tsconfig/-/get-tsconfig-4.8.1.tgz",
      "integrity": "sha512-k9PN+cFBmaLWtVz29SkUoqU5O0slLuHJXt/2P+tMVFT+phsSGXGkp9t3rQIqdz0e+06EHNGs3oM6ZX1s2zHxRg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "resolve-pkg-maps": "^1.0.0"
      },
      "funding": {
        "url": "https://github.com/privatenumber/get-tsconfig?sponsor=1"
      }
    },
    "node_modules/glob": {
      "version": "10.4.5",
      "resolved": "https://registry.npmjs.org/glob/-/glob-10.4.5.tgz",
      "integrity": "sha512-7Bv8RF0k6xjo7d4A/PxYLbUCfb6c+Vpd2/mB2yRDlew7Jb5hEXiCD9ibfO7wpk8i4sevK6DFny9h7EYbM3/sHg==",
      "license": "ISC",
      "dependencies": {
        "foreground-child": "^3.1.0",
        "jackspeak": "^3.1.2",
        "minimatch": "^9.0.4",
        "minipass": "^7.1.2",
        "package-json-from-dist": "^1.0.0",
        "path-scurry": "^1.11.1"
      },
      "bin": {
        "glob": "dist/esm/bin.mjs"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/glob-parent": {
      "version": "6.0.2",
      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-6.0.2.tgz",
      "integrity": "sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==",
      "license": "ISC",
      "dependencies": {
        "is-glob": "^4.0.3"
      },
      "engines": {
        "node": ">=10.13.0"
      }
    },
    "node_modules/globals": {
      "version": "11.12.0",
      "resolved": "https://registry.npmjs.org/globals/-/globals-11.12.0.tgz",
      "integrity": "sha512-WOBp/EEGUiIsJSp7wcv/y6MO+lV9UoncWqxuFfm8eBwzWNgyfBd6Gz+IeKQ9jCmyhoH99g15M3T+QaVHFjizVA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/gopd": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/gopd/-/gopd-1.0.1.tgz",
      "integrity": "sha512-d65bNlIadxvpb/A2abVdlqKqV563juRnZ1Wtk6s1sIR8uNsXR70xqIzVqxVf1eTqDunwT2MkczEeaezCKTZhwA==",
      "license": "MIT",
      "dependencies": {
        "get-intrinsic": "^1.1.3"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/graceful-fs": {
      "version": "4.2.11",
      "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.11.tgz",
      "integrity": "sha512-RbJ5/jmFcNNCcDV5o9eTnBLJ/HszWV0P73bc+Ff4nS/rJj+YaS6IGyiOL0VoBYX+l1Wrl3k63h/KrH+nhJ0XvQ==",
      "dev": true
    },
    "node_modules/has-property-descriptors": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/has-property-descriptors/-/has-property-descriptors-1.0.2.tgz",
      "integrity": "sha512-55JNKuIW+vq4Ke1BjOTjM2YctQIvCT7GFzHwmfZPGo5wnrgkid0YQtnAleFSqumZm4az3n2BS+erby5ipJdgrg==",
      "license": "MIT",
      "dependencies": {
        "es-define-property": "^1.0.0"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/has-proto": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/has-proto/-/has-proto-1.0.3.tgz",
      "integrity": "sha512-SJ1amZAJUiZS+PhsVLf5tGydlaVB8EdFpaSO4gmiUKUOxk8qzn5AIy4ZeJUmh22znIdk/uMAUT2pl3FxzVUH+Q==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/has-symbols": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/has-symbols/-/has-symbols-1.0.3.tgz",
      "integrity": "sha512-l3LCuF6MgDNwTDKkdYGEihYjt5pRPbEg46rtlmnSPlUbgmB8LOIrKJbYYFBSbnPaJexMKtiPO8hmeRjRz2Td+A==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/hasown": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/hasown/-/hasown-2.0.2.tgz",
      "integrity": "sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==",
      "license": "MIT",
      "dependencies": {
        "function-bind": "^1.1.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/http-errors": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/http-errors/-/http-errors-2.0.0.tgz",
      "integrity": "sha512-FtwrG/euBzaEjYeRqOgly7G0qviiXoJWnvEH2Z1plBdXgbyjv34pHTSb9zoeHMyDy33+DWy5Wt9Wo+TURtOYSQ==",
      "license": "MIT",
      "dependencies": {
        "depd": "2.0.0",
        "inherits": "2.0.4",
        "setprototypeof": "1.2.0",
        "statuses": "2.0.1",
        "toidentifier": "1.0.1"
      },
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/iconv-lite": {
      "version": "0.4.24",
      "resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.24.tgz",
      "integrity": "sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==",
      "license": "MIT",
      "dependencies": {
        "safer-buffer": ">= 2.1.2 < 3"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/inherits": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
      "integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==",
      "license": "ISC"
    },
    "node_modules/input-otp": {
      "version": "1.4.2",
      "resolved": "https://registry.npmjs.org/input-otp/-/input-otp-1.4.2.tgz",
      "integrity": "sha512-l3jWwYNvrEa6NTCt7BECfCm48GvwuZzkoeG3gBL2w4CHeOXW3eKFmf9UNYkNfYc3mxMrthMnxjIE07MT0zLBQA==",
      "peerDependencies": {
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0.0 || ^19.0.0-rc"
      }
    },
    "node_modules/internmap": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/internmap/-/internmap-2.0.3.tgz",
      "integrity": "sha512-5Hh7Y1wQbvY5ooGgPbDaL5iYLAPzMTUrjMulskHLH6wnv/A+1q5rgEaiuqEjB+oxGXIVZs1FF+R/KPN3ZSQYYg==",
      "license": "ISC",
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/ipaddr.js": {
      "version": "1.9.1",
      "resolved": "https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-1.9.1.tgz",
      "integrity": "sha512-0KI/607xoxSToH7GjN1FfSbLoU0+btTicjsQSWQlh/hZykN8KpmMf7uYwPW3R+akZ6R/w18ZlXSHBYXiYUPO3g==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.10"
      }
    },
    "node_modules/is-binary-path": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/is-binary-path/-/is-binary-path-2.1.0.tgz",
      "integrity": "sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==",
      "license": "MIT",
      "dependencies": {
        "binary-extensions": "^2.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/is-core-module": {
      "version": "2.15.1",
      "resolved": "https://registry.npmjs.org/is-core-module/-/is-core-module-2.15.1.tgz",
      "integrity": "sha512-z0vtXSwucUJtANQWldhbtbt7BnL0vxiFjIdDLAatwhDYty2bad6s+rijD6Ri4YuYJubLzIJLUidCh09e1djEVQ==",
      "license": "MIT",
      "dependencies": {
        "hasown": "^2.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-extglob": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz",
      "integrity": "sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-fullwidth-code-point": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
      "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/is-glob": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz",
      "integrity": "sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==",
      "license": "MIT",
      "dependencies": {
        "is-extglob": "^2.1.1"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-number": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz",
      "integrity": "sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==",
      "license": "MIT",
      "engines": {
        "node": ">=0.12.0"
      }
    },
    "node_modules/isexe": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz",
      "integrity": "sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==",
      "license": "ISC"
    },
    "node_modules/jackspeak": {
      "version": "3.4.3",
      "resolved": "https://registry.npmjs.org/jackspeak/-/jackspeak-3.4.3.tgz",
      "integrity": "sha512-OGlZQpz2yfahA/Rd1Y8Cd9SIEsqvXkLVoSw/cgwhnhFMDbsQFeZYoJJ7bIZBS9BcamUW96asq/npPWugM+RQBw==",
      "license": "BlueOak-1.0.0",
      "dependencies": {
        "@isaacs/cliui": "^8.0.2"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      },
      "optionalDependencies": {
        "@pkgjs/parseargs": "^0.11.0"
      }
    },
    "node_modules/jiti": {
      "version": "1.21.6",
      "resolved": "https://registry.npmjs.org/jiti/-/jiti-1.21.6.tgz",
      "integrity": "sha512-2yTgeWTWzMWkHu6Jp9NKgePDaYHbntiwvYuuJLbbN9vl7DC9DvXKOB2BC3ZZ92D3cvV/aflH0osDfwpHepQ53w==",
      "license": "MIT",
      "bin": {
        "jiti": "bin/jiti.js"
      }
    },
    "node_modules/js-tokens": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz",
      "integrity": "sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==",
      "license": "MIT"
    },
    "node_modules/jsesc": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/jsesc/-/jsesc-3.0.2.tgz",
      "integrity": "sha512-xKqzzWXDttJuOcawBt4KnKHHIf5oQ/Cxax+0PWFG+DFDgHNAdi+TXECADI+RYiFUMmx8792xsMbbgXj4CwnP4g==",
      "dev": true,
      "license": "MIT",
      "bin": {
        "jsesc": "bin/jsesc"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/json5": {
      "version": "2.2.3",
      "resolved": "https://registry.npmjs.org/json5/-/json5-2.2.3.tgz",
      "integrity": "sha512-XmOWe7eyHYH14cLdVPoyg+GOH3rYX++KpzrylJwSW98t3Nk+U8XOl8FWKOgwtzdb8lXGf6zYwDUzeHMWfxasyg==",
      "dev": true,
      "license": "MIT",
      "bin": {
        "json5": "lib/cli.js"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/jsonwebtoken": {
      "version": "9.0.2",
      "resolved": "https://registry.npmjs.org/jsonwebtoken/-/jsonwebtoken-9.0.2.tgz",
      "integrity": "sha512-PRp66vJ865SSqOlgqS8hujT5U4AOgMfhrwYIuIhfKaoSCZcirrmASQr8CX7cUg+RMih+hgznrjp99o+W4pJLHQ==",
      "license": "MIT",
      "dependencies": {
        "jws": "^3.2.2",
        "lodash.includes": "^4.3.0",
        "lodash.isboolean": "^3.0.3",
        "lodash.isinteger": "^4.0.4",
        "lodash.isnumber": "^3.0.3",
        "lodash.isplainobject": "^4.0.6",
        "lodash.isstring": "^4.0.1",
        "lodash.once": "^4.0.0",
        "ms": "^2.1.1",
        "semver": "^7.5.4"
      },
      "engines": {
        "node": ">=12",
        "npm": ">=6"
      }
    },
    "node_modules/jsonwebtoken/node_modules/semver": {
      "version": "7.7.2",
      "resolved": "https://registry.npmjs.org/semver/-/semver-7.7.2.tgz",
      "integrity": "sha512-RF0Fw+rO5AMf9MAyaRXI4AV0Ulj5lMHqVxxdSgiVbixSCXoEmmX/jk0CuJw4+3SqroYO9VoUh+HcuJivvtJemA==",
      "license": "ISC",
      "bin": {
        "semver": "bin/semver.js"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/jwa": {
      "version": "1.4.2",
      "resolved": "https://registry.npmjs.org/jwa/-/jwa-1.4.2.tgz",
      "integrity": "sha512-eeH5JO+21J78qMvTIDdBXidBd6nG2kZjg5Ohz/1fpa28Z4CcsWUzJ1ZZyFq/3z3N17aZy+ZuBoHljASbL1WfOw==",
      "license": "MIT",
      "dependencies": {
        "buffer-equal-constant-time": "^1.0.1",
        "ecdsa-sig-formatter": "1.0.11",
        "safe-buffer": "^5.0.1"
      }
    },
    "node_modules/jws": {
      "version": "3.2.2",
      "resolved": "https://registry.npmjs.org/jws/-/jws-3.2.2.tgz",
      "integrity": "sha512-YHlZCB6lMTllWDtSPHz/ZXTsi8S00usEV6v1tjq8tOUZzw7DpSDWVXjXDre6ed1w/pd495ODpHZYSdkRTsa0HA==",
      "license": "MIT",
      "dependencies": {
        "jwa": "^1.4.1",
        "safe-buffer": "^5.0.1"
      }
    },
    "node_modules/lightningcss": {
      "version": "1.29.2",
      "resolved": "https://registry.npmjs.org/lightningcss/-/lightningcss-1.29.2.tgz",
      "integrity": "sha512-6b6gd/RUXKaw5keVdSEtqFVdzWnU5jMxTUjA2bVcMNPLwSQ08Sv/UodBVtETLCn7k4S1Ibxwh7k68IwLZPgKaA==",
      "dev": true,
      "dependencies": {
        "detect-libc": "^2.0.3"
      },
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      },
      "optionalDependencies": {
        "lightningcss-darwin-arm64": "1.29.2",
        "lightningcss-darwin-x64": "1.29.2",
        "lightningcss-freebsd-x64": "1.29.2",
        "lightningcss-linux-arm-gnueabihf": "1.29.2",
        "lightningcss-linux-arm64-gnu": "1.29.2",
        "lightningcss-linux-arm64-musl": "1.29.2",
        "lightningcss-linux-x64-gnu": "1.29.2",
        "lightningcss-linux-x64-musl": "1.29.2",
        "lightningcss-win32-arm64-msvc": "1.29.2",
        "lightningcss-win32-x64-msvc": "1.29.2"
      }
    },
    "node_modules/lightningcss-darwin-arm64": {
      "version": "1.29.2",
      "resolved": "https://registry.npmjs.org/lightningcss-darwin-arm64/-/lightningcss-darwin-arm64-1.29.2.tgz",
      "integrity": "sha512-cK/eMabSViKn/PG8U/a7aCorpeKLMlK0bQeNHmdb7qUnBkNPnL+oV5DjJUo0kqWsJUapZsM4jCfYItbqBDvlcA==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-darwin-x64": {
      "version": "1.29.2",
      "resolved": "https://registry.npmjs.org/lightningcss-darwin-x64/-/lightningcss-darwin-x64-1.29.2.tgz",
      "integrity": "sha512-j5qYxamyQw4kDXX5hnnCKMf3mLlHvG44f24Qyi2965/Ycz829MYqjrVg2H8BidybHBp9kom4D7DR5VqCKDXS0w==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-freebsd-x64": {
      "version": "1.29.2",
      "resolved": "https://registry.npmjs.org/lightningcss-freebsd-x64/-/lightningcss-freebsd-x64-1.29.2.tgz",
      "integrity": "sha512-wDk7M2tM78Ii8ek9YjnY8MjV5f5JN2qNVO+/0BAGZRvXKtQrBC4/cn4ssQIpKIPP44YXw6gFdpUF+Ps+RGsCwg==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "freebsd"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-linux-arm-gnueabihf": {
      "version": "1.29.2",
      "resolved": "https://registry.npmjs.org/lightningcss-linux-arm-gnueabihf/-/lightningcss-linux-arm-gnueabihf-1.29.2.tgz",
      "integrity": "sha512-IRUrOrAF2Z+KExdExe3Rz7NSTuuJ2HvCGlMKoquK5pjvo2JY4Rybr+NrKnq0U0hZnx5AnGsuFHjGnNT14w26sg==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-linux-arm64-gnu": {
      "version": "1.29.2",
      "resolved": "https://registry.npmjs.org/lightningcss-linux-arm64-gnu/-/lightningcss-linux-arm64-gnu-1.29.2.tgz",
      "integrity": "sha512-KKCpOlmhdjvUTX/mBuaKemp0oeDIBBLFiU5Fnqxh1/DZ4JPZi4evEH7TKoSBFOSOV3J7iEmmBaw/8dpiUvRKlQ==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-linux-arm64-musl": {
      "version": "1.29.2",
      "resolved": "https://registry.npmjs.org/lightningcss-linux-arm64-musl/-/lightningcss-linux-arm64-musl-1.29.2.tgz",
      "integrity": "sha512-Q64eM1bPlOOUgxFmoPUefqzY1yV3ctFPE6d/Vt7WzLW4rKTv7MyYNky+FWxRpLkNASTnKQUaiMJ87zNODIrrKQ==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-linux-x64-gnu": {
      "version": "1.29.2",
      "resolved": "https://registry.npmjs.org/lightningcss-linux-x64-gnu/-/lightningcss-linux-x64-gnu-1.29.2.tgz",
      "integrity": "sha512-0v6idDCPG6epLXtBH/RPkHvYx74CVziHo6TMYga8O2EiQApnUPZsbR9nFNrg2cgBzk1AYqEd95TlrsL7nYABQg==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-linux-x64-musl": {
      "version": "1.29.2",
      "resolved": "https://registry.npmjs.org/lightningcss-linux-x64-musl/-/lightningcss-linux-x64-musl-1.29.2.tgz",
      "integrity": "sha512-rMpz2yawkgGT8RULc5S4WiZopVMOFWjiItBT7aSfDX4NQav6M44rhn5hjtkKzB+wMTRlLLqxkeYEtQ3dd9696w==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-win32-arm64-msvc": {
      "version": "1.29.2",
      "resolved": "https://registry.npmjs.org/lightningcss-win32-arm64-msvc/-/lightningcss-win32-arm64-msvc-1.29.2.tgz",
      "integrity": "sha512-nL7zRW6evGQqYVu/bKGK+zShyz8OVzsCotFgc7judbt6wnB2KbiKKJwBE4SGoDBQ1O94RjW4asrCjQL4i8Fhbw==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-win32-x64-msvc": {
      "version": "1.29.2",
      "resolved": "https://registry.npmjs.org/lightningcss-win32-x64-msvc/-/lightningcss-win32-x64-msvc-1.29.2.tgz",
      "integrity": "sha512-EdIUW3B2vLuHmv7urfzMI/h2fmlnOQBk1xlsDxkN1tCWKjNFjfLhGxYk8C8mzpSfr+A6jFFIi8fU6LbQGsRWjA==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lilconfig": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/lilconfig/-/lilconfig-3.1.3.tgz",
      "integrity": "sha512-/vlFKAoH5Cgt3Ie+JLhRbwOsCQePABiU3tJ1egGvyQ+33R/vcwM2Zl2QR/LzjsBeItPt3oSVXapn+m4nQDvpzw==",
      "engines": {
        "node": ">=14"
      },
      "funding": {
        "url": "https://github.com/sponsors/antonk52"
      }
    },
    "node_modules/lines-and-columns": {
      "version": "1.2.4",
      "resolved": "https://registry.npmjs.org/lines-and-columns/-/lines-and-columns-1.2.4.tgz",
      "integrity": "sha512-7ylylesZQ/PV29jhEDl3Ufjo6ZX7gCqJr5F7PKrqc93v7fzSymt1BpwEU8nAUXs8qzzvqhbjhK5QZg6Mt/HkBg==",
      "license": "MIT"
    },
    "node_modules/lodash": {
      "version": "4.17.21",
      "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.21.tgz",
      "integrity": "sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==",
      "license": "MIT"
    },
    "node_modules/lodash.castarray": {
      "version": "4.4.0",
      "resolved": "https://registry.npmjs.org/lodash.castarray/-/lodash.castarray-4.4.0.tgz",
      "integrity": "sha512-aVx8ztPv7/2ULbArGJ2Y42bG1mEQ5mGjpdvrbJcJFU3TbYybe+QlLS4pst9zV52ymy2in1KpFPiZnAOATxD4+Q==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/lodash.includes": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/lodash.includes/-/lodash.includes-4.3.0.tgz",
      "integrity": "sha512-W3Bx6mdkRTGtlJISOvVD/lbqjTlPPUDTMnlXZFnVwi9NKJ6tiAk6LVdlhZMm17VZisqhKcgzpO5Wz91PCt5b0w==",
      "license": "MIT"
    },
    "node_modules/lodash.isboolean": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/lodash.isboolean/-/lodash.isboolean-3.0.3.tgz",
      "integrity": "sha512-Bz5mupy2SVbPHURB98VAcw+aHh4vRV5IPNhILUCsOzRmsTmSQ17jIuqopAentWoehktxGd9e/hbIXq980/1QJg==",
      "license": "MIT"
    },
    "node_modules/lodash.isinteger": {
      "version": "4.0.4",
      "resolved": "https://registry.npmjs.org/lodash.isinteger/-/lodash.isinteger-4.0.4.tgz",
      "integrity": "sha512-DBwtEWN2caHQ9/imiNeEA5ys1JoRtRfY3d7V9wkqtbycnAmTvRRmbHKDV4a0EYc678/dia0jrte4tjYwVBaZUA==",
      "license": "MIT"
    },
    "node_modules/lodash.isnumber": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/lodash.isnumber/-/lodash.isnumber-3.0.3.tgz",
      "integrity": "sha512-QYqzpfwO3/CWf3XP+Z+tkQsfaLL/EnUlXWVkIk5FUPc4sBdTehEqZONuyRt2P67PXAk+NXmTBcc97zw9t1FQrw==",
      "license": "MIT"
    },
    "node_modules/lodash.isplainobject": {
      "version": "4.0.6",
      "resolved": "https://registry.npmjs.org/lodash.isplainobject/-/lodash.isplainobject-4.0.6.tgz",
      "integrity": "sha512-oSXzaWypCMHkPC3NvBEaPHf0KsA5mvPrOPgQWDsbg8n7orZ290M0BmC/jgRZ4vcJ6DTAhjrsSYgdsW/F+MFOBA==",
      "license": "MIT"
    },
    "node_modules/lodash.isstring": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/lodash.isstring/-/lodash.isstring-4.0.1.tgz",
      "integrity": "sha512-0wJxfxH1wgO3GrbuP+dTTk7op+6L41QCXbGINEmD+ny/G/eCqGzxyCsh7159S+mgDDcoarnBw6PC1PS5+wUGgw==",
      "license": "MIT"
    },
    "node_modules/lodash.merge": {
      "version": "4.6.2",
      "resolved": "https://registry.npmjs.org/lodash.merge/-/lodash.merge-4.6.2.tgz",
      "integrity": "sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/lodash.once": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/lodash.once/-/lodash.once-4.1.1.tgz",
      "integrity": "sha512-Sb487aTOCr9drQVL8pIxOzVhafOjZN9UU54hiN8PU3uAiSV7lx1yYNpbNmex2PK6dSJoNTSJUUswT651yww3Mg==",
      "license": "MIT"
    },
    "node_modules/loose-envify": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/loose-envify/-/loose-envify-1.4.0.tgz",
      "integrity": "sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==",
      "license": "MIT",
      "dependencies": {
        "js-tokens": "^3.0.0 || ^4.0.0"
      },
      "bin": {
        "loose-envify": "cli.js"
      }
    },
    "node_modules/lru-cache": {
      "version": "5.1.1",
      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-5.1.1.tgz",
      "integrity": "sha512-KpNARQA3Iwv+jTA0utUVVbrh+Jlrr1Fv0e56GGzAFOXN7dk/FviaDW8LHmK52DlcH4WP2n6gI8vN1aesBFgo9w==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "yallist": "^3.0.2"
      }
    },
    "node_modules/lucide-react": {
      "version": "0.453.0",
      "resolved": "https://registry.npmjs.org/lucide-react/-/lucide-react-0.453.0.tgz",
      "integrity": "sha512-kL+RGZCcJi9BvJtzg2kshO192Ddy9hv3ij+cPrVPWSRzgCWCVazoQJxOjAwgK53NomL07HB7GPHW120FimjNhQ==",
      "peerDependencies": {
        "react": "^16.5.1 || ^17.0.0 || ^18.0.0 || ^19.0.0-rc"
      }
    },
    "node_modules/magic-string": {
      "version": "0.30.17",
      "resolved": "https://registry.npmjs.org/magic-string/-/magic-string-0.30.17.tgz",
      "integrity": "sha512-sNPKHvyjVf7gyjwS4xGTaW/mCnF8wnjtifKBEhxfZ7E/S8tQ0rssrwGNn6q8JH/ohItJfSQp9mBtQYuTlH5QnA==",
      "dev": true,
      "dependencies": {
        "@jridgewell/sourcemap-codec": "^1.5.0"
      }
    },
    "node_modules/media-typer": {
      "version": "0.3.0",
      "resolved": "https://registry.npmjs.org/media-typer/-/media-typer-0.3.0.tgz",
      "integrity": "sha512-dq+qelQ9akHpcOl/gUVRTxVIOkAJ1wR3QAvb4RsVjS8oVoFjDGTc679wJYmUmknUF5HwMLOgb5O+a3KxfWapPQ==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/memorystore": {
      "version": "1.6.7",
      "resolved": "https://registry.npmjs.org/memorystore/-/memorystore-1.6.7.tgz",
      "integrity": "sha512-OZnmNY/NDrKohPQ+hxp0muBcBKrzKNtHr55DbqSx9hLsYVNnomSAMRAtI7R64t3gf3ID7tHQA7mG4oL3Hu9hdw==",
      "license": "MIT",
      "dependencies": {
        "debug": "^4.3.0",
        "lru-cache": "^4.0.3"
      },
      "engines": {
        "node": ">=0.10"
      }
    },
    "node_modules/memorystore/node_modules/lru-cache": {
      "version": "4.1.5",
      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-4.1.5.tgz",
      "integrity": "sha512-sWZlbEP2OsHNkXrMl5GYk/jKk70MBng6UU4YI/qGDYbgf6YbP4EvmqISbXCoJiRKs+1bSpFHVgQxvJ17F2li5g==",
      "license": "ISC",
      "dependencies": {
        "pseudomap": "^1.0.2",
        "yallist": "^2.1.2"
      }
    },
    "node_modules/memorystore/node_modules/yallist": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/yallist/-/yallist-2.1.2.tgz",
      "integrity": "sha512-ncTzHV7NvsQZkYe1DW7cbDLm0YpzHmZF5r/iyP3ZnQtMiJ+pjzisCiMNI+Sj+xQF5pXhSHxSB3uDbsBTzY/c2A==",
      "license": "ISC"
    },
    "node_modules/merge-descriptors": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/merge-descriptors/-/merge-descriptors-1.0.3.tgz",
      "integrity": "sha512-gaNvAS7TZ897/rVaZ0nMtAyxNyi/pdbjbAwUpFQpN70GqnVfOiXpeUUMKRBmzXaSQ8DdTX4/0ms62r2K+hE6mQ==",
      "license": "MIT",
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/merge2": {
      "version": "1.4.1",
      "resolved": "https://registry.npmjs.org/merge2/-/merge2-1.4.1.tgz",
      "integrity": "sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==",
      "license": "MIT",
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/methods": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/methods/-/methods-1.1.2.tgz",
      "integrity": "sha512-iclAHeNqNm68zFtnZ0e+1L2yUIdvzNoauKU4WBA3VvH/vPFieF7qfRlwUZU+DA9P9bPXIS90ulxoUoCH23sV2w==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/micromatch": {
      "version": "4.0.8",
      "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-4.0.8.tgz",
      "integrity": "sha512-PXwfBhYu0hBCPw8Dn0E+WDYb7af3dSLVWKi3HGv84IdF4TyFoC0ysxFd0Goxw7nSv4T/PzEJQxsYsEiFCKo2BA==",
      "license": "MIT",
      "dependencies": {
        "braces": "^3.0.3",
        "picomatch": "^2.3.1"
      },
      "engines": {
        "node": ">=8.6"
      }
    },
    "node_modules/mime": {
      "version": "1.6.0",
      "resolved": "https://registry.npmjs.org/mime/-/mime-1.6.0.tgz",
      "integrity": "sha512-x0Vn8spI+wuJ1O6S7gnbaQg8Pxh4NNHb7KSINmEWKiPE4RKOplvijn+NkmYmmRgP68mc70j2EbeTFRsrswaQeg==",
      "license": "MIT",
      "bin": {
        "mime": "cli.js"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/mime-db": {
      "version": "1.52.0",
      "resolved": "https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz",
      "integrity": "sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/mime-types": {
      "version": "2.1.35",
      "resolved": "https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz",
      "integrity": "sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==",
      "license": "MIT",
      "dependencies": {
        "mime-db": "1.52.0"
      },
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/minimatch": {
      "version": "9.0.5",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-9.0.5.tgz",
      "integrity": "sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==",
      "license": "ISC",
      "dependencies": {
        "brace-expansion": "^2.0.1"
      },
      "engines": {
        "node": ">=16 || 14 >=14.17"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/minipass": {
      "version": "7.1.2",
      "resolved": "https://registry.npmjs.org/minipass/-/minipass-7.1.2.tgz",
      "integrity": "sha512-qOOzS1cBTWYF4BH8fVePDBOO9iptMnGUEZwNc/cMWnTV2nVLZ7VoNWEPHkYczZA0pdoA7dl6e7FL659nX9S2aw==",
      "license": "ISC",
      "engines": {
        "node": ">=16 || 14 >=14.17"
      }
    },
    "node_modules/mitt": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/mitt/-/mitt-3.0.1.tgz",
      "integrity": "sha512-vKivATfr97l2/QBCYAkXYDbrIWPM2IIKEl7YPhjCvKlG3kE2gm+uBo6nEXK3M5/Ffh/FLpKExzOQ3JJoJGFKBw==",
      "license": "MIT"
    },
    "node_modules/modern-screenshot": {
      "version": "4.6.0",
      "resolved": "https://registry.npmjs.org/modern-screenshot/-/modern-screenshot-4.6.0.tgz",
      "integrity": "sha512-L7osQAWpJiWY1ST1elhLRSGD5i7og5uoICqiXs38whAjWtIayp3cBMJmyML4iyJcBhRfHOyciq1g1Ft5G0QvSg==",
      "dev": true
    },
    "node_modules/motion-dom": {
      "version": "11.13.0",
      "resolved": "https://registry.npmjs.org/motion-dom/-/motion-dom-11.13.0.tgz",
      "integrity": "sha512-Oc1MLGJQ6nrvXccXA89lXtOqFyBmvHtaDcTRGT66o8Czl7nuA8BeHAd9MQV1pQKX0d2RHFBFaw5g3k23hQJt0w=="
    },
    "node_modules/motion-utils": {
      "version": "11.13.0",
      "resolved": "https://registry.npmjs.org/motion-utils/-/motion-utils-11.13.0.tgz",
      "integrity": "sha512-lq6TzXkH5c/ysJQBxgLXgM01qwBH1b4goTPh57VvZWJbVJZF/0SB31UWEn4EIqbVPf3au88n2rvK17SpDTja1A=="
    },
    "node_modules/ms": {
      "version": "2.1.3",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
      "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==",
      "license": "MIT"
    },
    "node_modules/mz": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/mz/-/mz-2.7.0.tgz",
      "integrity": "sha512-z81GNO7nnYMEhrGh9LeymoE4+Yr0Wn5McHIZMK5cfQCl+NDX08sCZgUc9/6MHni9IWuFLm1Z3HTCXu2z9fN62Q==",
      "license": "MIT",
      "dependencies": {
        "any-promise": "^1.0.0",
        "object-assign": "^4.0.1",
        "thenify-all": "^1.0.0"
      }
    },
    "node_modules/nanoid": {
      "version": "3.3.8",
      "resolved": "https://registry.npmjs.org/nanoid/-/nanoid-3.3.8.tgz",
      "integrity": "sha512-WNLf5Sd8oZxOm+TzppcYk8gVOgP+l58xNy58D0nbUnOxOWRWvlcCV4kUF7ltmI6PsrLl/BgKEyS4mqsGChFN0w==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "bin": {
        "nanoid": "bin/nanoid.cjs"
      },
      "engines": {
        "node": "^10 || ^12 || ^13.7 || ^14 || >=15.0.1"
      }
    },
    "node_modules/negotiator": {
      "version": "0.6.3",
      "resolved": "https://registry.npmjs.org/negotiator/-/negotiator-0.6.3.tgz",
      "integrity": "sha512-+EUsqGPLsM+j/zdChZjsnX51g4XrHFOIXwfnCVPGlQk/k5giakcKsuxCObBRu6DSm9opw/O6slWbJdghQM4bBg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/next-themes": {
      "version": "0.4.6",
      "resolved": "https://registry.npmjs.org/next-themes/-/next-themes-0.4.6.tgz",
      "integrity": "sha512-pZvgD5L0IEvX5/9GWyHMf3m8BKiVQwsCMHfoFosXtXBMnaS0ZnIJ9ST4b4NqLVKDEm8QBxoNNGNaBv2JNF6XNA==",
      "peerDependencies": {
        "react": "^16.8 || ^17 || ^18 || ^19 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17 || ^18 || ^19 || ^19.0.0-rc"
      }
    },
    "node_modules/node-addon-api": {
      "version": "8.3.1",
      "resolved": "https://registry.npmjs.org/node-addon-api/-/node-addon-api-8.3.1.tgz",
      "integrity": "sha512-lytcDEdxKjGJPTLEfW4mYMigRezMlyJY8W4wxJK8zE533Jlb8L8dRuObJFWg2P+AuOIxoCgKF+2Oq4d4Zd0OUA==",
      "license": "MIT",
      "engines": {
        "node": "^18 || ^20 || >= 21"
      }
    },
    "node_modules/node-gyp-build": {
      "version": "4.8.4",
      "resolved": "https://registry.npmjs.org/node-gyp-build/-/node-gyp-build-4.8.4.tgz",
      "integrity": "sha512-LA4ZjwlnUblHVgq0oBF3Jl/6h/Nvs5fzBLwdEF4nuxnFdsfajde4WfxtJr3CaiH+F6ewcIB/q4jQ4UzPyid+CQ==",
      "license": "MIT",
      "bin": {
        "node-gyp-build": "bin.js",
        "node-gyp-build-optional": "optional.js",
        "node-gyp-build-test": "build-test.js"
      }
    },
    "node_modules/node-releases": {
      "version": "2.0.18",
      "resolved": "https://registry.npmjs.org/node-releases/-/node-releases-2.0.18.tgz",
      "integrity": "sha512-d9VeXT4SJ7ZeOqGX6R5EM022wpL+eWPooLI+5UpWn2jCT1aosUQEhQP214x33Wkwx3JQMvIm+tIoVOdodFS40g==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/normalize-path": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz",
      "integrity": "sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/normalize-range": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/normalize-range/-/normalize-range-0.1.2.tgz",
      "integrity": "sha512-bdok/XvKII3nUpklnV6P2hxtMNrCboOjAcyBuQnWEhO665FwrSNRxU+AqpsyvO6LgGYPspN+lu5CLtw4jPRKNA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/object-assign": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
      "integrity": "sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/object-hash": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/object-hash/-/object-hash-3.0.0.tgz",
      "integrity": "sha512-RSn9F68PjH9HqtltsSnqYC1XXoWe9Bju5+213R98cNGttag9q9yAOTzdbsqvIa7aNm5WffBZFpWYr2aWrklWAw==",
      "license": "MIT",
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/object-inspect": {
      "version": "1.13.2",
      "resolved": "https://registry.npmjs.org/object-inspect/-/object-inspect-1.13.2.tgz",
      "integrity": "sha512-IRZSRuzJiynemAXPYtPe5BoI/RESNYR7TYm50MC5Mqbd3Jmw5y790sErYw3V6SryFJD64b74qQQs9wn5Bg/k3g==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/obuf": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/obuf/-/obuf-1.1.2.tgz",
      "integrity": "sha512-PX1wu0AmAdPqOL1mWhqmlOd8kOIZQwGZw6rh7uby9fTc5lhaOWFLX3I6R1hrF9k3zUY40e6igsLGkDXK92LJNg==",
      "license": "MIT"
    },
    "node_modules/on-finished": {
      "version": "2.4.1",
      "resolved": "https://registry.npmjs.org/on-finished/-/on-finished-2.4.1.tgz",
      "integrity": "sha512-oVlzkg3ENAhCk2zdv7IJwd/QUD4z2RxRwpkcGY8psCVcCYZNq4wYnVWALHM+brtuJjePWiYF/ClmuDr8Ch5+kg==",
      "license": "MIT",
      "dependencies": {
        "ee-first": "1.1.1"
      },
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/on-headers": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/on-headers/-/on-headers-1.0.2.tgz",
      "integrity": "sha512-pZAE+FJLoyITytdqK0U5s+FIpjN0JP3OzFi/u8Rx+EV5/W+JTWGXG8xFzevE7AjBfDqHv/8vL8qQsIhHnqRkrA==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/package-json-from-dist": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/package-json-from-dist/-/package-json-from-dist-1.0.1.tgz",
      "integrity": "sha512-UEZIS3/by4OC8vL3P2dTXRETpebLI2NiI5vIrjaD/5UtrkFX/tNbwjTSRAGC/+7CAo2pIcBaRgWmcBBHcsaCIw==",
      "license": "BlueOak-1.0.0"
    },
    "node_modules/parseurl": {
      "version": "1.3.3",
      "resolved": "https://registry.npmjs.org/parseurl/-/parseurl-1.3.3.tgz",
      "integrity": "sha512-CiyeOxFT/JZyN5m0z9PfXw4SCBJ6Sygz1Dpl0wqjlhDEGGBP1GnsUVEL0p63hoG1fcj3fHynXi9NYO4nWOL+qQ==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/passport": {
      "version": "0.7.0",
      "resolved": "https://registry.npmjs.org/passport/-/passport-0.7.0.tgz",
      "integrity": "sha512-cPLl+qZpSc+ireUvt+IzqbED1cHHkDoVYMo30jbJIdOOjQ1MQYZBPiNvmi8UM6lJuOpTPXJGZQk0DtC4y61MYQ==",
      "license": "MIT",
      "dependencies": {
        "passport-strategy": "1.x.x",
        "pause": "0.0.1",
        "utils-merge": "^1.0.1"
      },
      "engines": {
        "node": ">= 0.4.0"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/jaredhanson"
      }
    },
    "node_modules/passport-local": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/passport-local/-/passport-local-1.0.0.tgz",
      "integrity": "sha512-9wCE6qKznvf9mQYYbgJ3sVOHmCWoUNMVFoZzNoznmISbhnNNPhN9xfY3sLmScHMetEJeoY7CXwfhCe7argfQow==",
      "dependencies": {
        "passport-strategy": "1.x.x"
      },
      "engines": {
        "node": ">= 0.4.0"
      }
    },
    "node_modules/passport-strategy": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/passport-strategy/-/passport-strategy-1.0.0.tgz",
      "integrity": "sha512-CB97UUvDKJde2V0KDWWB3lyf6PC3FaZP7YxZ2G8OAtn9p4HI9j9JLP9qjOGZFvyl8uwNT8qM+hGnz/n16NI7oA==",
      "engines": {
        "node": ">= 0.4.0"
      }
    },
    "node_modules/path-key": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz",
      "integrity": "sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/path-parse": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/path-parse/-/path-parse-1.0.7.tgz",
      "integrity": "sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==",
      "license": "MIT"
    },
    "node_modules/path-scurry": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/path-scurry/-/path-scurry-1.11.1.tgz",
      "integrity": "sha512-Xa4Nw17FS9ApQFJ9umLiJS4orGjm7ZzwUrwamcGQuHSzDyth9boKDaycYdDcZDuqYATXw4HFXgaqWTctW/v1HA==",
      "license": "BlueOak-1.0.0",
      "dependencies": {
        "lru-cache": "^10.2.0",
        "minipass": "^5.0.0 || ^6.0.2 || ^7.0.0"
      },
      "engines": {
        "node": ">=16 || 14 >=14.18"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/path-scurry/node_modules/lru-cache": {
      "version": "10.4.3",
      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-10.4.3.tgz",
      "integrity": "sha512-JNAzZcXrCt42VGLuYz0zfAzDfAvJWW6AfYlDBQyDV5DClI2m5sAmK+OIO7s59XfsRsWHp02jAJrRadPRGTt6SQ==",
      "license": "ISC"
    },
    "node_modules/path-to-regexp": {
      "version": "0.1.12",
      "resolved": "https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-0.1.12.tgz",
      "integrity": "sha512-RA1GjUVMnvYFxuqovrEqZoxxW5NUZqbwKtYz/Tt7nXerk0LbLblQmrsgdeOxV5SFHf0UDggjS/bSeOZwt1pmEQ==",
      "license": "MIT"
    },
    "node_modules/pause": {
      "version": "0.0.1",
      "resolved": "https://registry.npmjs.org/pause/-/pause-0.0.1.tgz",
      "integrity": "sha512-KG8UEiEVkR3wGEb4m5yZkVCzigAD+cVEJck2CzYZO37ZGJfctvVptVO192MwrtPhzONn6go8ylnOdMhKqi4nfg=="
    },
    "node_modules/pg": {
      "version": "8.13.1",
      "resolved": "https://registry.npmjs.org/pg/-/pg-8.13.1.tgz",
      "integrity": "sha512-OUir1A0rPNZlX//c7ksiu7crsGZTKSOXJPgtNiHGIlC9H0lO+NC6ZDYksSgBYY/thSWhnSRBv8w1lieNNGATNQ==",
      "license": "MIT",
      "dependencies": {
        "pg-connection-string": "^2.7.0",
        "pg-pool": "^3.7.0",
        "pg-protocol": "^1.7.0",
        "pg-types": "^2.1.0",
        "pgpass": "1.x"
      },
      "engines": {
        "node": ">= 8.0.0"
      },
      "optionalDependencies": {
        "pg-cloudflare": "^1.1.1"
      },
      "peerDependencies": {
        "pg-native": ">=3.0.1"
      },
      "peerDependenciesMeta": {
        "pg-native": {
          "optional": true
        }
      }
    },
    "node_modules/pg-cloudflare": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/pg-cloudflare/-/pg-cloudflare-1.1.1.tgz",
      "integrity": "sha512-xWPagP/4B6BgFO+EKz3JONXv3YDgvkbVrGw2mTo3D6tVDQRh1e7cqVGvyR3BE+eQgAvx1XhW/iEASj4/jCWl3Q==",
      "license": "MIT",
      "optional": true
    },
    "node_modules/pg-connection-string": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/pg-connection-string/-/pg-connection-string-2.7.0.tgz",
      "integrity": "sha512-PI2W9mv53rXJQEOb8xNR8lH7Hr+EKa6oJa38zsK0S/ky2er16ios1wLKhZyxzD7jUReiWokc9WK5nxSnC7W1TA==",
      "license": "MIT"
    },
    "node_modules/pg-int8": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/pg-int8/-/pg-int8-1.0.1.tgz",
      "integrity": "sha512-WCtabS6t3c8SkpDBUlb1kjOs7l66xsGdKpIPZsg4wR+B3+u9UAum2odSsF9tnvxg80h4ZxLWMy4pRjOsFIqQpw==",
      "license": "ISC",
      "engines": {
        "node": ">=4.0.0"
      }
    },
    "node_modules/pg-numeric": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/pg-numeric/-/pg-numeric-1.0.2.tgz",
      "integrity": "sha512-BM/Thnrw5jm2kKLE5uJkXqqExRUY/toLHda65XgFTBTFYZyopbKjBe29Ii3RbkvlsMoFwD+tHeGaCjjv0gHlyw==",
      "license": "ISC",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/pg-pool": {
      "version": "3.7.0",
      "resolved": "https://registry.npmjs.org/pg-pool/-/pg-pool-3.7.0.tgz",
      "integrity": "sha512-ZOBQForurqh4zZWjrgSwwAtzJ7QiRX0ovFkZr2klsen3Nm0aoh33Ls0fzfv3imeH/nw/O27cjdz5kzYJfeGp/g==",
      "license": "MIT",
      "peerDependencies": {
        "pg": ">=8.0"
      }
    },
    "node_modules/pg-protocol": {
      "version": "1.7.0",
      "resolved": "https://registry.npmjs.org/pg-protocol/-/pg-protocol-1.7.0.tgz",
      "integrity": "sha512-hTK/mE36i8fDDhgDFjy6xNOG+LCorxLG3WO17tku+ij6sVHXh1jQUJ8hYAnRhNla4QVD2H8er/FOjc/+EgC6yQ==",
      "license": "MIT"
    },
    "node_modules/pg-types": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/pg-types/-/pg-types-4.0.2.tgz",
      "integrity": "sha512-cRL3JpS3lKMGsKaWndugWQoLOCoP+Cic8oseVcbr0qhPzYD5DWXK+RZ9LY9wxRf7RQia4SCwQlXk0q6FCPrVng==",
      "license": "MIT",
      "dependencies": {
        "pg-int8": "1.0.1",
        "pg-numeric": "1.0.2",
        "postgres-array": "~3.0.1",
        "postgres-bytea": "~3.0.0",
        "postgres-date": "~2.1.0",
        "postgres-interval": "^3.0.0",
        "postgres-range": "^1.1.1"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/pg/node_modules/pg-types": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/pg-types/-/pg-types-2.2.0.tgz",
      "integrity": "sha512-qTAAlrEsl8s4OiEQY69wDvcMIdQN6wdz5ojQiOy6YRMuynxenON0O5oCpJI6lshc6scgAY8qvJ2On/p+CXY0GA==",
      "license": "MIT",
      "dependencies": {
        "pg-int8": "1.0.1",
        "postgres-array": "~2.0.0",
        "postgres-bytea": "~1.0.0",
        "postgres-date": "~1.0.4",
        "postgres-interval": "^1.1.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/pg/node_modules/postgres-array": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/postgres-array/-/postgres-array-2.0.0.tgz",
      "integrity": "sha512-VpZrUqU5A69eQyW2c5CA1jtLecCsN2U/bD6VilrFDWq5+5UIEVO7nazS3TEcHf1zuPYO/sqGvUvW62g86RXZuA==",
      "license": "MIT",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/pg/node_modules/postgres-bytea": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/postgres-bytea/-/postgres-bytea-1.0.0.tgz",
      "integrity": "sha512-xy3pmLuQqRBZBXDULy7KbaitYqLcmxigw14Q5sj8QBVLqEwXfeybIKVWiqAXTlcvdvb0+xkOtDbfQMOf4lST1w==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/pg/node_modules/postgres-date": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/postgres-date/-/postgres-date-1.0.7.tgz",
      "integrity": "sha512-suDmjLVQg78nMK2UZ454hAG+OAW+HQPZ6n++TNDUX+L0+uUlLywnoxJKDou51Zm+zTCjrCl0Nq6J9C5hP9vK/Q==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/pg/node_modules/postgres-interval": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/postgres-interval/-/postgres-interval-1.2.0.tgz",
      "integrity": "sha512-9ZhXKM/rw350N1ovuWHbGxnGh/SNJ4cnxHiM0rxE4VN41wsg8P8zWn9hv/buK00RP4WvlOyr/RBDiptyxVbkZQ==",
      "license": "MIT",
      "dependencies": {
        "xtend": "^4.0.0"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/pgpass": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/pgpass/-/pgpass-1.0.5.tgz",
      "integrity": "sha512-FdW9r/jQZhSeohs1Z3sI1yxFQNFvMcnmfuj4WBMUTxOrAyLMaTcE1aAMBiTlbMNaXvBCQuVi0R7hd8udDSP7ug==",
      "license": "MIT",
      "dependencies": {
        "split2": "^4.1.0"
      }
    },
    "node_modules/picocolors": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/picocolors/-/picocolors-1.1.1.tgz",
      "integrity": "sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==",
      "license": "ISC"
    },
    "node_modules/picomatch": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz",
      "integrity": "sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==",
      "license": "MIT",
      "engines": {
        "node": ">=8.6"
      },
      "funding": {
        "url": "https://github.com/sponsors/jonschlinkert"
      }
    },
    "node_modules/pify": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/pify/-/pify-2.3.0.tgz",
      "integrity": "sha512-udgsAY+fTnvv7kI7aaxbqwWNb0AHiB0qBO89PZKPkoTmGOgdbrHDKD+0B2X4uTfJ/FT1R09r9gTsjUjNJotuog==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/pirates": {
      "version": "4.0.6",
      "resolved": "https://registry.npmjs.org/pirates/-/pirates-4.0.6.tgz",
      "integrity": "sha512-saLsH7WeYYPiD25LDuLRRY/i+6HaPYr6G1OUlN39otzkSTxKnubR9RTxS3/Kk50s1g2JTgFwWQDQyplC5/SHZg==",
      "license": "MIT",
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/postcss": {
      "version": "8.4.47",
      "resolved": "https://registry.npmjs.org/postcss/-/postcss-8.4.47.tgz",
      "integrity": "sha512-56rxCq7G/XfB4EkXq9Egn5GCqugWvDFjafDOThIdMBsI15iqPqR5r15TfSr1YPYeEI19YeaXMCbY6u88Y76GLQ==",
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/postcss/"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/postcss"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "nanoid": "^3.3.7",
        "picocolors": "^1.1.0",
        "source-map-js": "^1.2.1"
      },
      "engines": {
        "node": "^10 || ^12 || >=14"
      }
    },
    "node_modules/postcss-import": {
      "version": "15.1.0",
      "resolved": "https://registry.npmjs.org/postcss-import/-/postcss-import-15.1.0.tgz",
      "integrity": "sha512-hpr+J05B2FVYUAXHeK1YyI267J/dDDhMU6B6civm8hSY1jYJnBXxzKDKDswzJmtLHryrjhnDjqqp/49t8FALew==",
      "license": "MIT",
      "dependencies": {
        "postcss-value-parser": "^4.0.0",
        "read-cache": "^1.0.0",
        "resolve": "^1.1.7"
      },
      "engines": {
        "node": ">=14.0.0"
      },
      "peerDependencies": {
        "postcss": "^8.0.0"
      }
    },
    "node_modules/postcss-js": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/postcss-js/-/postcss-js-4.0.1.tgz",
      "integrity": "sha512-dDLF8pEO191hJMtlHFPRa8xsizHaM82MLfNkUHdUtVEV3tgTp5oj+8qbEqYM57SLfc74KSbw//4SeJma2LRVIw==",
      "license": "MIT",
      "dependencies": {
        "camelcase-css": "^2.0.1"
      },
      "engines": {
        "node": "^12 || ^14 || >= 16"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/postcss/"
      },
      "peerDependencies": {
        "postcss": "^8.4.21"
      }
    },
    "node_modules/postcss-load-config": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/postcss-load-config/-/postcss-load-config-4.0.2.tgz",
      "integrity": "sha512-bSVhyJGL00wMVoPUzAVAnbEoWyqRxkjv64tUl427SKnPrENtq6hJwUojroMz2VB+Q1edmi4IfrAPpami5VVgMQ==",
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/postcss/"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "lilconfig": "^3.0.0",
        "yaml": "^2.3.4"
      },
      "engines": {
        "node": ">= 14"
      },
      "peerDependencies": {
        "postcss": ">=8.0.9",
        "ts-node": ">=9.0.0"
      },
      "peerDependenciesMeta": {
        "postcss": {
          "optional": true
        },
        "ts-node": {
          "optional": true
        }
      }
    },
    "node_modules/postcss-nested": {
      "version": "6.2.0",
      "resolved": "https://registry.npmjs.org/postcss-nested/-/postcss-nested-6.2.0.tgz",
      "integrity": "sha512-HQbt28KulC5AJzG+cZtj9kvKB93CFCdLvog1WFLf1D+xmMvPGlBstkpTEZfK5+AN9hfJocyBFCNiqyS48bpgzQ==",
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/postcss/"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "postcss-selector-parser": "^6.1.1"
      },
      "engines": {
        "node": ">=12.0"
      },
      "peerDependencies": {
        "postcss": "^8.2.14"
      }
    },
    "node_modules/postcss-selector-parser": {
      "version": "6.1.2",
      "resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-6.1.2.tgz",
      "integrity": "sha512-Q8qQfPiZ+THO/3ZrOrO0cJJKfpYCagtMUkXbnEfmgUjwXg6z/WBeOyS9APBBPCTSiDV+s4SwQGu8yFsiMRIudg==",
      "license": "MIT",
      "dependencies": {
        "cssesc": "^3.0.0",
        "util-deprecate": "^1.0.2"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/postcss-value-parser": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-4.2.0.tgz",
      "integrity": "sha512-1NNCs6uurfkVbeXG4S8JFT9t19m45ICnif8zWLd5oPSZ50QnwMfK+H3jv408d4jw/7Bttv5axS5IiHoLaVNHeQ==",
      "license": "MIT"
    },
    "node_modules/postgres-array": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/postgres-array/-/postgres-array-3.0.2.tgz",
      "integrity": "sha512-6faShkdFugNQCLwucjPcY5ARoW1SlbnrZjmGl0IrrqewpvxvhSLHimCVzqeuULCbG0fQv7Dtk1yDbG3xv7Veog==",
      "license": "MIT",
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/postgres-bytea": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/postgres-bytea/-/postgres-bytea-3.0.0.tgz",
      "integrity": "sha512-CNd4jim9RFPkObHSjVHlVrxoVQXz7quwNFpz7RY1okNNme49+sVyiTvTRobiLV548Hx/hb1BG+iE7h9493WzFw==",
      "license": "MIT",
      "dependencies": {
        "obuf": "~1.1.2"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/postgres-date": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/postgres-date/-/postgres-date-2.1.0.tgz",
      "integrity": "sha512-K7Juri8gtgXVcDfZttFKVmhglp7epKb1K4pgrkLxehjqkrgPhfG6OO8LHLkfaqkbpjNRnra018XwAr1yQFWGcA==",
      "license": "MIT",
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/postgres-interval": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/postgres-interval/-/postgres-interval-3.0.0.tgz",
      "integrity": "sha512-BSNDnbyZCXSxgA+1f5UU2GmwhoI0aU5yMxRGO8CdFEcY2BQF9xm/7MqKnYoM1nJDk8nONNWDk9WeSmePFhQdlw==",
      "license": "MIT",
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/postgres-range": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/postgres-range/-/postgres-range-1.1.4.tgz",
      "integrity": "sha512-i/hbxIE9803Alj/6ytL7UHQxRvZkI9O4Sy+J3HGc4F4oo/2eQAjTSNJ0bfxyse3bH0nuVesCk+3IRLaMtG3H6w==",
      "license": "MIT"
    },
    "node_modules/prop-types": {
      "version": "15.8.1",
      "resolved": "https://registry.npmjs.org/prop-types/-/prop-types-15.8.1.tgz",
      "integrity": "sha512-oj87CgZICdulUohogVAR7AjlC0327U4el4L6eAvOqCeudMDVU0NThNaV+b9Df4dXgSP1gXMTnPdhfe/2qDH5cg==",
      "dependencies": {
        "loose-envify": "^1.4.0",
        "object-assign": "^4.1.1",
        "react-is": "^16.13.1"
      }
    },
    "node_modules/prop-types/node_modules/react-is": {
      "version": "16.13.1",
      "resolved": "https://registry.npmjs.org/react-is/-/react-is-16.13.1.tgz",
      "integrity": "sha512-24e6ynE2H+OKt4kqsOvNd8kBpV65zoxbA4BVsEOB3ARVWQki/DHzaUoC5KuON/BiccDaCCTZBuOcfZs70kR8bQ=="
    },
    "node_modules/proxy-addr": {
      "version": "2.0.7",
      "resolved": "https://registry.npmjs.org/proxy-addr/-/proxy-addr-2.0.7.tgz",
      "integrity": "sha512-llQsMLSUDUPT44jdrU/O37qlnifitDP+ZwrmmZcoSKyLKvtZxpyV0n2/bD/N4tBAAZ/gJEdZU7KMraoK1+XYAg==",
      "license": "MIT",
      "dependencies": {
        "forwarded": "0.2.0",
        "ipaddr.js": "1.9.1"
      },
      "engines": {
        "node": ">= 0.10"
      }
    },
    "node_modules/pseudomap": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/pseudomap/-/pseudomap-1.0.2.tgz",
      "integrity": "sha512-b/YwNhb8lk1Zz2+bXXpS/LK9OisiZZ1SNsSLxN1x2OXVEhW2Ckr/7mWE5vrC1ZTiJlD9g19jWszTmJsB+oEpFQ==",
      "license": "ISC"
    },
    "node_modules/qs": {
      "version": "6.13.0",
      "resolved": "https://registry.npmjs.org/qs/-/qs-6.13.0.tgz",
      "integrity": "sha512-+38qI9SOr8tfZ4QmJNplMUxqjbe7LKvvZgWdExBOmd+egZTtjLB67Gu0HRX3u/XOq7UU2Nx6nsjvS16Z9uwfpg==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "side-channel": "^1.0.6"
      },
      "engines": {
        "node": ">=0.6"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/queue-microtask": {
      "version": "1.2.3",
      "resolved": "https://registry.npmjs.org/queue-microtask/-/queue-microtask-1.2.3.tgz",
      "integrity": "sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "license": "MIT"
    },
    "node_modules/random-bytes": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/random-bytes/-/random-bytes-1.0.0.tgz",
      "integrity": "sha512-iv7LhNVO047HzYR3InF6pUcUsPQiHTM1Qal51DcGSuZFBil1aBBWG5eHPNek7bvILMaYJ/8RU1e8w1AMdHmLQQ==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/range-parser": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/range-parser/-/range-parser-1.2.1.tgz",
      "integrity": "sha512-Hrgsx+orqoygnmhFbKaHE6c296J+HTAQXoxEF6gNupROmmGJRoyzfG3ccAveqCBrwr/2yxQ5BVd/GTl5agOwSg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/raw-body": {
      "version": "2.5.2",
      "resolved": "https://registry.npmjs.org/raw-body/-/raw-body-2.5.2.tgz",
      "integrity": "sha512-8zGqypfENjCIqGhgXToC8aB2r7YrBX+AQAfIPs/Mlk+BtPTztOvTS01NRW/3Eh60J+a48lt8qsCzirQ6loCVfA==",
      "license": "MIT",
      "dependencies": {
        "bytes": "3.1.2",
        "http-errors": "2.0.0",
        "iconv-lite": "0.4.24",
        "unpipe": "1.0.0"
      },
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/react": {
      "version": "18.3.1",
      "resolved": "https://registry.npmjs.org/react/-/react-18.3.1.tgz",
      "integrity": "sha512-wS+hAgJShR0KhEvPJArfuPVN1+Hz1t0Y6n5jLrGQbkb4urgPE/0Rve+1kMB1v/oWgHgm4WIcV+i7F2pTVj+2iQ==",
      "license": "MIT",
      "dependencies": {
        "loose-envify": "^1.1.0"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/react-day-picker": {
      "version": "8.10.1",
      "resolved": "https://registry.npmjs.org/react-day-picker/-/react-day-picker-8.10.1.tgz",
      "integrity": "sha512-TMx7fNbhLk15eqcMt+7Z7S2KF7mfTId/XJDjKE8f+IUcFn0l08/kI4FiYTL/0yuOLmEcbR4Fwe3GJf/NiiMnPA==",
      "funding": {
        "type": "individual",
        "url": "https://github.com/sponsors/gpbl"
      },
      "peerDependencies": {
        "date-fns": "^2.28.0 || ^3.0.0",
        "react": "^16.8.0 || ^17.0.0 || ^18.0.0"
      }
    },
    "node_modules/react-dom": {
      "version": "18.3.1",
      "resolved": "https://registry.npmjs.org/react-dom/-/react-dom-18.3.1.tgz",
      "integrity": "sha512-5m4nQKp+rZRb09LNH59GM4BxTh9251/ylbKIbpe7TpGxfJ+9kv6BLkLBXIjjspbgbnIBNqlI23tRnTWT0snUIw==",
      "license": "MIT",
      "dependencies": {
        "loose-envify": "^1.1.0",
        "scheduler": "^0.23.2"
      },
      "peerDependencies": {
        "react": "^18.3.1"
      }
    },
    "node_modules/react-hook-form": {
      "version": "7.55.0",
      "resolved": "https://registry.npmjs.org/react-hook-form/-/react-hook-form-7.55.0.tgz",
      "integrity": "sha512-XRnjsH3GVMQz1moZTW53MxfoWN7aDpUg/GpVNc4A3eXRVNdGXfbzJ4vM4aLQ8g6XCUh1nIbx70aaNCl7kxnjog==",
      "engines": {
        "node": ">=18.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/react-hook-form"
      },
      "peerDependencies": {
        "react": "^16.8.0 || ^17 || ^18 || ^19"
      }
    },
    "node_modules/react-icons": {
      "version": "5.4.0",
      "resolved": "https://registry.npmjs.org/react-icons/-/react-icons-5.4.0.tgz",
      "integrity": "sha512-7eltJxgVt7X64oHh6wSWNwwbKTCtMfK35hcjvJS0yxEAhPM8oUKdS3+kqaW1vicIltw+kR2unHaa12S9pPALoQ==",
      "license": "MIT",
      "peerDependencies": {
        "react": "*"
      }
    },
    "node_modules/react-is": {
      "version": "18.3.1",
      "resolved": "https://registry.npmjs.org/react-is/-/react-is-18.3.1.tgz",
      "integrity": "sha512-/LLMVyas0ljjAtoYiPqYiL8VWXzUUdThrmU5+n20DZv+a+ClRoevUzw5JxU+Ieh5/c87ytoTBV9G1FiKfNJdmg==",
      "license": "MIT"
    },
    "node_modules/react-refresh": {
      "version": "0.14.2",
      "resolved": "https://registry.npmjs.org/react-refresh/-/react-refresh-0.14.2.tgz",
      "integrity": "sha512-jCvmsr+1IUSMUyzOkRcvnVbX3ZYC6g9TDrDbFuFmRDq7PD4yaGbLKNQL6k2jnArV8hjYxh7hVhAZB6s9HDGpZA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/react-remove-scroll": {
      "version": "2.6.3",
      "resolved": "https://registry.npmjs.org/react-remove-scroll/-/react-remove-scroll-2.6.3.tgz",
      "integrity": "sha512-pnAi91oOk8g8ABQKGF5/M9qxmmOPxaAnopyTHYfqYEwJhyFrbbBtHuSgtKEoH0jpcxx5o3hXqH1mNd9/Oi+8iQ==",
      "dependencies": {
        "react-remove-scroll-bar": "^2.3.7",
        "react-style-singleton": "^2.2.3",
        "tslib": "^2.1.0",
        "use-callback-ref": "^1.3.3",
        "use-sidecar": "^1.1.3"
      },
      "engines": {
        "node": ">=10"
      },
      "peerDependencies": {
        "@types/react": "*",
        "react": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/react-remove-scroll-bar": {
      "version": "2.3.8",
      "resolved": "https://registry.npmjs.org/react-remove-scroll-bar/-/react-remove-scroll-bar-2.3.8.tgz",
      "integrity": "sha512-9r+yi9+mgU33AKcj6IbT9oRCO78WriSj6t/cF8DWBZJ9aOGPOTEDvdUDz1FwKim7QXWwmHqtdHnRJfhAxEG46Q==",
      "dependencies": {
        "react-style-singleton": "^2.2.2",
        "tslib": "^2.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "peerDependencies": {
        "@types/react": "*",
        "react": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/react-resizable-panels": {
      "version": "2.1.7",
      "resolved": "https://registry.npmjs.org/react-resizable-panels/-/react-resizable-panels-2.1.7.tgz",
      "integrity": "sha512-JtT6gI+nURzhMYQYsx8DKkx6bSoOGFp7A3CwMrOb8y5jFHFyqwo9m68UhmXRw57fRVJksFn1TSlm3ywEQ9vMgA==",
      "peerDependencies": {
        "react": "^16.14.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc",
        "react-dom": "^16.14.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc"
      }
    },
    "node_modules/react-smooth": {
      "version": "4.0.4",
      "resolved": "https://registry.npmjs.org/react-smooth/-/react-smooth-4.0.4.tgz",
      "integrity": "sha512-gnGKTpYwqL0Iii09gHobNolvX4Kiq4PKx6eWBCYYix+8cdw+cGo3do906l1NBPKkSWx1DghC1dlWG9L2uGd61Q==",
      "dependencies": {
        "fast-equals": "^5.0.1",
        "prop-types": "^15.8.1",
        "react-transition-group": "^4.4.5"
      },
      "peerDependencies": {
        "react": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0",
        "react-dom": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0"
      }
    },
    "node_modules/react-style-singleton": {
      "version": "2.2.3",
      "resolved": "https://registry.npmjs.org/react-style-singleton/-/react-style-singleton-2.2.3.tgz",
      "integrity": "sha512-b6jSvxvVnyptAiLjbkWLE/lOnR4lfTtDAl+eUC7RZy+QQWc6wRzIV2CE6xBuMmDxc2qIihtDCZD5NPOFl7fRBQ==",
      "dependencies": {
        "get-nonce": "^1.0.0",
        "tslib": "^2.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "peerDependencies": {
        "@types/react": "*",
        "react": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/react-transition-group": {
      "version": "4.4.5",
      "resolved": "https://registry.npmjs.org/react-transition-group/-/react-transition-group-4.4.5.tgz",
      "integrity": "sha512-pZcd1MCJoiKiBR2NRxeCRg13uCXbydPnmB4EOeRrY7480qNWO8IIgQG6zlDkm6uRMsURXPuKq0GWtiM59a5Q6g==",
      "dependencies": {
        "@babel/runtime": "^7.5.5",
        "dom-helpers": "^5.0.1",
        "loose-envify": "^1.4.0",
        "prop-types": "^15.6.2"
      },
      "peerDependencies": {
        "react": ">=16.6.0",
        "react-dom": ">=16.6.0"
      }
    },
    "node_modules/read-cache": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/read-cache/-/read-cache-1.0.0.tgz",
      "integrity": "sha512-Owdv/Ft7IjOgm/i0xvNDZ1LrRANRfew4b2prF3OWMQLxLfu3bS8FVhCsrSCMK4lR56Y9ya+AThoTpDCTxCmpRA==",
      "license": "MIT",
      "dependencies": {
        "pify": "^2.3.0"
      }
    },
    "node_modules/readdirp": {
      "version": "3.6.0",
      "resolved": "https://registry.npmjs.org/readdirp/-/readdirp-3.6.0.tgz",
      "integrity": "sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==",
      "license": "MIT",
      "dependencies": {
        "picomatch": "^2.2.1"
      },
      "engines": {
        "node": ">=8.10.0"
      }
    },
    "node_modules/recharts": {
      "version": "2.15.2",
      "resolved": "https://registry.npmjs.org/recharts/-/recharts-2.15.2.tgz",
      "integrity": "sha512-xv9lVztv3ingk7V3Jf05wfAZbM9Q2umJzu5t/cfnAK7LUslNrGT7LPBr74G+ok8kSCeFMaePmWMg0rcYOnczTw==",
      "dependencies": {
        "clsx": "^2.0.0",
        "eventemitter3": "^4.0.1",
        "lodash": "^4.17.21",
        "react-is": "^18.3.1",
        "react-smooth": "^4.0.4",
        "recharts-scale": "^0.4.4",
        "tiny-invariant": "^1.3.1",
        "victory-vendor": "^36.6.8"
      },
      "engines": {
        "node": ">=14"
      },
      "peerDependencies": {
        "react": "^16.0.0 || ^17.0.0 || ^18.0.0 || ^19.0.0",
        "react-dom": "^16.0.0 || ^17.0.0 || ^18.0.0 || ^19.0.0"
      }
    },
    "node_modules/recharts-scale": {
      "version": "0.4.5",
      "resolved": "https://registry.npmjs.org/recharts-scale/-/recharts-scale-0.4.5.tgz",
      "integrity": "sha512-kivNFO+0OcUNu7jQquLXAxz1FIwZj8nrj+YkOKc5694NbjCvcT6aSZiIzNzd2Kul4o4rTto8QVR9lMNtxD4G1w==",
      "license": "MIT",
      "dependencies": {
        "decimal.js-light": "^2.4.1"
      }
    },
    "node_modules/regenerator-runtime": {
      "version": "0.14.1",
      "resolved": "https://registry.npmjs.org/regenerator-runtime/-/regenerator-runtime-0.14.1.tgz",
      "integrity": "sha512-dYnhHh0nJoMfnkZs6GmmhFknAGRrLznOu5nc9ML+EJxGvrx6H7teuevqVqCuPcPK//3eDrrjQhehXVx9cnkGdw=="
    },
    "node_modules/regexparam": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/regexparam/-/regexparam-3.0.0.tgz",
      "integrity": "sha512-RSYAtP31mvYLkAHrOlh25pCNQ5hWnT106VukGaaFfuJrZFkGRX5GhUAdPqpSDXxOhA2c4akmRuplv1mRqnBn6Q==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/resolve": {
      "version": "1.22.8",
      "resolved": "https://registry.npmjs.org/resolve/-/resolve-1.22.8.tgz",
      "integrity": "sha512-oKWePCxqpd6FlLvGV1VU0x7bkPmmCNolxzjMf4NczoDnQcIWrAF+cPtZn5i6n+RfD2d9i0tzpKnG6Yk168yIyw==",
      "license": "MIT",
      "dependencies": {
        "is-core-module": "^2.13.0",
        "path-parse": "^1.0.7",
        "supports-preserve-symlinks-flag": "^1.0.0"
      },
      "bin": {
        "resolve": "bin/resolve"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/resolve-pkg-maps": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/resolve-pkg-maps/-/resolve-pkg-maps-1.0.0.tgz",
      "integrity": "sha512-seS2Tj26TBVOC2NIc2rOe2y2ZO7efxITtLZcGSOnHHNOQ7CkiUBfw0Iw2ck6xkIhPwLhKNLS8BO+hEpngQlqzw==",
      "dev": true,
      "license": "MIT",
      "funding": {
        "url": "https://github.com/privatenumber/resolve-pkg-maps?sponsor=1"
      }
    },
    "node_modules/reusify": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/reusify/-/reusify-1.0.4.tgz",
      "integrity": "sha512-U9nH88a3fc/ekCF1l0/UP1IosiuIjyTh7hBvXVMHYgVcfGvt897Xguj2UOLDeI5BG2m7/uwyaLVT6fbtCwTyzw==",
      "license": "MIT",
      "engines": {
        "iojs": ">=1.0.0",
        "node": ">=0.10.0"
      }
    },
    "node_modules/rollup": {
      "version": "4.24.4",
      "resolved": "https://registry.npmjs.org/rollup/-/rollup-4.24.4.tgz",
      "integrity": "sha512-vGorVWIsWfX3xbcyAS+I047kFKapHYivmkaT63Smj77XwvLSJos6M1xGqZnBPFQFBRZDOcG1QnYEIxAvTr/HjA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@types/estree": "1.0.6"
      },
      "bin": {
        "rollup": "dist/bin/rollup"
      },
      "engines": {
        "node": ">=18.0.0",
        "npm": ">=8.0.0"
      },
      "optionalDependencies": {
        "@rollup/rollup-android-arm-eabi": "4.24.4",
        "@rollup/rollup-android-arm64": "4.24.4",
        "@rollup/rollup-darwin-arm64": "4.24.4",
        "@rollup/rollup-darwin-x64": "4.24.4",
        "@rollup/rollup-freebsd-arm64": "4.24.4",
        "@rollup/rollup-freebsd-x64": "4.24.4",
        "@rollup/rollup-linux-arm-gnueabihf": "4.24.4",
        "@rollup/rollup-linux-arm-musleabihf": "4.24.4",
        "@rollup/rollup-linux-arm64-gnu": "4.24.4",
        "@rollup/rollup-linux-arm64-musl": "4.24.4",
        "@rollup/rollup-linux-powerpc64le-gnu": "4.24.4",
        "@rollup/rollup-linux-riscv64-gnu": "4.24.4",
        "@rollup/rollup-linux-s390x-gnu": "4.24.4",
        "@rollup/rollup-linux-x64-gnu": "4.24.4",
        "@rollup/rollup-linux-x64-musl": "4.24.4",
        "@rollup/rollup-win32-arm64-msvc": "4.24.4",
        "@rollup/rollup-win32-ia32-msvc": "4.24.4",
        "@rollup/rollup-win32-x64-msvc": "4.24.4",
        "fsevents": "~2.3.2"
      }
    },
    "node_modules/run-parallel": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/run-parallel/-/run-parallel-1.2.0.tgz",
      "integrity": "sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "queue-microtask": "^1.2.2"
      }
    },
    "node_modules/safe-buffer": {
      "version": "5.2.1",
      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.1.tgz",
      "integrity": "sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "license": "MIT"
    },
    "node_modules/safer-buffer": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz",
      "integrity": "sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==",
      "license": "MIT"
    },
    "node_modules/scheduler": {
      "version": "0.23.2",
      "resolved": "https://registry.npmjs.org/scheduler/-/scheduler-0.23.2.tgz",
      "integrity": "sha512-UOShsPwz7NrMUqhR6t0hWjFduvOzbtv7toDH1/hIrfRNIDBnnBWd0CwJTGvTpngVlmwGCdP9/Zl/tVrDqcuYzQ==",
      "license": "MIT",
      "dependencies": {
        "loose-envify": "^1.1.0"
      }
    },
    "node_modules/semver": {
      "version": "6.3.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.1.tgz",
      "integrity": "sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==",
      "dev": true,
      "license": "ISC",
      "bin": {
        "semver": "bin/semver.js"
      }
    },
    "node_modules/send": {
      "version": "0.19.0",
      "resolved": "https://registry.npmjs.org/send/-/send-0.19.0.tgz",
      "integrity": "sha512-dW41u5VfLXu8SJh5bwRmyYUbAoSB3c9uQh6L8h/KtsFREPWpbX1lrljJo186Jc4nmci/sGUZ9a0a0J2zgfq2hw==",
      "license": "MIT",
      "dependencies": {
        "debug": "2.6.9",
        "depd": "2.0.0",
        "destroy": "1.2.0",
        "encodeurl": "~1.0.2",
        "escape-html": "~1.0.3",
        "etag": "~1.8.1",
        "fresh": "0.5.2",
        "http-errors": "2.0.0",
        "mime": "1.6.0",
        "ms": "2.1.3",
        "on-finished": "2.4.1",
        "range-parser": "~1.2.1",
        "statuses": "2.0.1"
      },
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/send/node_modules/debug": {
      "version": "2.6.9",
      "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
      "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
      "license": "MIT",
      "dependencies": {
        "ms": "2.0.0"
      }
    },
    "node_modules/send/node_modules/debug/node_modules/ms": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
      "integrity": "sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==",
      "license": "MIT"
    },
    "node_modules/send/node_modules/encodeurl": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/encodeurl/-/encodeurl-1.0.2.tgz",
      "integrity": "sha512-TPJXq8JqFaVYm2CWmPvnP2Iyo4ZSM7/QKcSmuMLDObfpH5fi7RUGmd/rTDf+rut/saiDiQEeVTNgAmJEdAOx0w==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/serve-static": {
      "version": "1.16.2",
      "resolved": "https://registry.npmjs.org/serve-static/-/serve-static-1.16.2.tgz",
      "integrity": "sha512-VqpjJZKadQB/PEbEwvFdO43Ax5dFBZ2UECszz8bQ7pi7wt//PWe1P6MN7eCnjsatYtBT6EuiClbjSWP2WrIoTw==",
      "license": "MIT",
      "dependencies": {
        "encodeurl": "~2.0.0",
        "escape-html": "~1.0.3",
        "parseurl": "~1.3.3",
        "send": "0.19.0"
      },
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/set-function-length": {
      "version": "1.2.2",
      "resolved": "https://registry.npmjs.org/set-function-length/-/set-function-length-1.2.2.tgz",
      "integrity": "sha512-pgRc4hJ4/sNjWCSS9AmnS40x3bNMDTknHgL5UaMBTMyJnU90EgWh1Rz+MC9eFu4BuN/UwZjKQuY/1v3rM7HMfg==",
      "license": "MIT",
      "dependencies": {
        "define-data-property": "^1.1.4",
        "es-errors": "^1.3.0",
        "function-bind": "^1.1.2",
        "get-intrinsic": "^1.2.4",
        "gopd": "^1.0.1",
        "has-property-descriptors": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/setprototypeof": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.2.0.tgz",
      "integrity": "sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw==",
      "license": "ISC"
    },
    "node_modules/shebang-command": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz",
      "integrity": "sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==",
      "license": "MIT",
      "dependencies": {
        "shebang-regex": "^3.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/shebang-regex": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz",
      "integrity": "sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/side-channel": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/side-channel/-/side-channel-1.0.6.tgz",
      "integrity": "sha512-fDW/EZ6Q9RiO8eFG8Hj+7u/oW+XrPTIChwCOM2+th2A6OblDtYYIpve9m+KvI9Z4C9qSEXlaGR6bTEYHReuglA==",
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.7",
        "es-errors": "^1.3.0",
        "get-intrinsic": "^1.2.4",
        "object-inspect": "^1.13.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/signal-exit": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/signal-exit/-/signal-exit-4.1.0.tgz",
      "integrity": "sha512-bzyZ1e88w9O1iNJbKnOlvYTrWPDl46O1bG0D3XInv+9tkPrxrN8jUUTiFlDkkmKWgn1M6CfIA13SuGqOa9Korw==",
      "license": "ISC",
      "engines": {
        "node": ">=14"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/source-map": {
      "version": "0.6.1",
      "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
      "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
      "dev": true,
      "license": "BSD-3-Clause",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/source-map-js": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/source-map-js/-/source-map-js-1.2.1.tgz",
      "integrity": "sha512-UXWMKhLOwVKb728IUtQPXxfYU+usdybtUrK/8uGE8CQMvrhOpwvzDBwj0QhSL7MQc7vIsISBG8VQ8+IDQxpfQA==",
      "license": "BSD-3-Clause",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/source-map-support": {
      "version": "0.5.21",
      "resolved": "https://registry.npmjs.org/source-map-support/-/source-map-support-0.5.21.tgz",
      "integrity": "sha512-uBHU3L3czsIyYXKX88fdrGovxdSCoTGDRZ6SYXtSRxLZUzHg5P/66Ht6uoUlHu9EZod+inXhKo3qQgwXUT/y1w==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "buffer-from": "^1.0.0",
        "source-map": "^0.6.0"
      }
    },
    "node_modules/split2": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/split2/-/split2-4.2.0.tgz",
      "integrity": "sha512-UcjcJOWknrNkF6PLX83qcHM6KHgVKNkV62Y8a5uYDVv9ydGQVwAHMKqHdJje1VTWpljG0WYpCDhrCdAOYH4TWg==",
      "license": "ISC",
      "engines": {
        "node": ">= 10.x"
      }
    },
    "node_modules/statuses": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/statuses/-/statuses-2.0.1.tgz",
      "integrity": "sha512-RwNA9Z/7PrK06rYLIzFMlaF+l73iwpzsqRIFgbMLbTcLD6cOao82TaWefPXQvB2fOC4AjuYSEndS7N/mTCbkdQ==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/string-width": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-5.1.2.tgz",
      "integrity": "sha512-HnLOCR3vjcY8beoNLtcjZ5/nxn2afmME6lhrDrebokqMap+XbeW8n9TXpPDOqdGK5qcI3oT0GKTW6wC7EMiVqA==",
      "license": "MIT",
      "dependencies": {
        "eastasianwidth": "^0.2.0",
        "emoji-regex": "^9.2.2",
        "strip-ansi": "^7.0.1"
      },
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/string-width-cjs": {
      "name": "string-width",
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
      "license": "MIT",
      "dependencies": {
        "emoji-regex": "^8.0.0",
        "is-fullwidth-code-point": "^3.0.0",
        "strip-ansi": "^6.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/string-width-cjs/node_modules/ansi-regex": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/string-width-cjs/node_modules/emoji-regex": {
      "version": "8.0.0",
      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
      "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
      "license": "MIT"
    },
    "node_modules/string-width-cjs/node_modules/strip-ansi": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "license": "MIT",
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/strip-ansi": {
      "version": "7.1.0",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-7.1.0.tgz",
      "integrity": "sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==",
      "license": "MIT",
      "dependencies": {
        "ansi-regex": "^6.0.1"
      },
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/chalk/strip-ansi?sponsor=1"
      }
    },
    "node_modules/strip-ansi-cjs": {
      "name": "strip-ansi",
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "license": "MIT",
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/strip-ansi-cjs/node_modules/ansi-regex": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/sucrase": {
      "version": "3.35.0",
      "resolved": "https://registry.npmjs.org/sucrase/-/sucrase-3.35.0.tgz",
      "integrity": "sha512-8EbVDiu9iN/nESwxeSxDKe0dunta1GOlHufmSSXxMD2z2/tMZpDMpvXQGsc+ajGo8y2uYUmixaSRUc/QPoQ0GA==",
      "license": "MIT",
      "dependencies": {
        "@jridgewell/gen-mapping": "^0.3.2",
        "commander": "^4.0.0",
        "glob": "^10.3.10",
        "lines-and-columns": "^1.1.6",
        "mz": "^2.7.0",
        "pirates": "^4.0.1",
        "ts-interface-checker": "^0.1.9"
      },
      "bin": {
        "sucrase": "bin/sucrase",
        "sucrase-node": "bin/sucrase-node"
      },
      "engines": {
        "node": ">=16 || 14 >=14.17"
      }
    },
    "node_modules/supports-preserve-symlinks-flag": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/supports-preserve-symlinks-flag/-/supports-preserve-symlinks-flag-1.0.0.tgz",
      "integrity": "sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/tailwind-merge": {
      "version": "2.6.0",
      "resolved": "https://registry.npmjs.org/tailwind-merge/-/tailwind-merge-2.6.0.tgz",
      "integrity": "sha512-P+Vu1qXfzediirmHOC3xKGAYeZtPcV9g76X+xg2FD4tYgR71ewMA35Y3sCz3zhiN/dwefRpJX0yBcgwi1fXNQA==",
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/dcastil"
      }
    },
    "node_modules/tailwindcss": {
      "version": "3.4.17",
      "resolved": "https://registry.npmjs.org/tailwindcss/-/tailwindcss-3.4.17.tgz",
      "integrity": "sha512-w33E2aCvSDP0tW9RZuNXadXlkHXqFzSkQew/aIa2i/Sj8fThxwovwlXHSPXTbAHwEIhBFXAedUhP2tueAKP8Og==",
      "dependencies": {
        "@alloc/quick-lru": "^5.2.0",
        "arg": "^5.0.2",
        "chokidar": "^3.6.0",
        "didyoumean": "^1.2.2",
        "dlv": "^1.1.3",
        "fast-glob": "^3.3.2",
        "glob-parent": "^6.0.2",
        "is-glob": "^4.0.3",
        "jiti": "^1.21.6",
        "lilconfig": "^3.1.3",
        "micromatch": "^4.0.8",
        "normalize-path": "^3.0.0",
        "object-hash": "^3.0.0",
        "picocolors": "^1.1.1",
        "postcss": "^8.4.47",
        "postcss-import": "^15.1.0",
        "postcss-js": "^4.0.1",
        "postcss-load-config": "^4.0.2",
        "postcss-nested": "^6.2.0",
        "postcss-selector-parser": "^6.1.2",
        "resolve": "^1.22.8",
        "sucrase": "^3.35.0"
      },
      "bin": {
        "tailwind": "lib/cli.js",
        "tailwindcss": "lib/cli.js"
      },
      "engines": {
        "node": ">=14.0.0"
      }
    },
    "node_modules/tailwindcss-animate": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/tailwindcss-animate/-/tailwindcss-animate-1.0.7.tgz",
      "integrity": "sha512-bl6mpH3T7I3UFxuvDEXLxy/VuFxBk5bbzplh7tXI68mwMokNYd1t9qPBHlnyTwfa4JGC4zP516I1hYYtQ/vspA==",
      "peerDependencies": {
        "tailwindcss": ">=3.0.0 || insiders"
      }
    },
    "node_modules/tapable": {
      "version": "2.2.1",
      "resolved": "https://registry.npmjs.org/tapable/-/tapable-2.2.1.tgz",
      "integrity": "sha512-GNzQvQTOIP6RyTfE2Qxb8ZVlNmw0n88vp1szwWRimP02mnTsx3Wtn5qRdqY9w2XduFNUgvOwhNnQsjwCp+kqaQ==",
      "dev": true,
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/thenify": {
      "version": "3.3.1",
      "resolved": "https://registry.npmjs.org/thenify/-/thenify-3.3.1.tgz",
      "integrity": "sha512-RVZSIV5IG10Hk3enotrhvz0T9em6cyHBLkH/YAZuKqd8hRkKhSfCGIcP2KUY0EPxndzANBmNllzWPwak+bheSw==",
      "license": "MIT",
      "dependencies": {
        "any-promise": "^1.0.0"
      }
    },
    "node_modules/thenify-all": {
      "version": "1.6.0",
      "resolved": "https://registry.npmjs.org/thenify-all/-/thenify-all-1.6.0.tgz",
      "integrity": "sha512-RNxQH/qI8/t3thXJDwcstUO4zeqo64+Uy/+sNVRBx4Xn2OX+OZ9oP+iJnNFqplFra2ZUVeKCSa2oVWi3T4uVmA==",
      "license": "MIT",
      "dependencies": {
        "thenify": ">= 3.1.0 < 4"
      },
      "engines": {
        "node": ">=0.8"
      }
    },
    "node_modules/tiny-invariant": {
      "version": "1.3.3",
      "resolved": "https://registry.npmjs.org/tiny-invariant/-/tiny-invariant-1.3.3.tgz",
      "integrity": "sha512-+FbBPE1o9QAYvviau/qC5SE3caw21q3xkvWKBtja5vgqOWIHHJ3ioaq1VPfn/Szqctz2bU/oYeKd9/z5BL+PVg==",
      "license": "MIT"
    },
    "node_modules/to-regex-range": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz",
      "integrity": "sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==",
      "license": "MIT",
      "dependencies": {
        "is-number": "^7.0.0"
      },
      "engines": {
        "node": ">=8.0"
      }
    },
    "node_modules/toidentifier": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/toidentifier/-/toidentifier-1.0.1.tgz",
      "integrity": "sha512-o5sSPKEkg/DIQNmH43V0/uerLrpzVedkUh8tGNvaeXpfpuwjKenlSox/2O/BTlZUtEe+JG7s5YhEz608PlAHRA==",
      "license": "MIT",
      "engines": {
        "node": ">=0.6"
      }
    },
    "node_modules/ts-interface-checker": {
      "version": "0.1.13",
      "resolved": "https://registry.npmjs.org/ts-interface-checker/-/ts-interface-checker-0.1.13.tgz",
      "integrity": "sha512-Y/arvbn+rrz3JCKl9C4kVNfTfSm2/mEp5FSz5EsZSANGPSlQrpRI5M4PKF+mJnE52jOO90PnPSc3Ur3bTQw0gA==",
      "license": "Apache-2.0"
    },
    "node_modules/tslib": {
      "version": "2.8.1",
      "resolved": "https://registry.npmjs.org/tslib/-/tslib-2.8.1.tgz",
      "integrity": "sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w==",
      "license": "0BSD"
    },
    "node_modules/tsx": {
      "version": "4.19.2",
      "resolved": "https://registry.npmjs.org/tsx/-/tsx-4.19.2.tgz",
      "integrity": "sha512-pOUl6Vo2LUq/bSa8S5q7b91cgNSjctn9ugq/+Mvow99qW6x/UZYwzxy/3NmqoT66eHYfCVvFvACC58UBPFf28g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "esbuild": "~0.23.0",
        "get-tsconfig": "^4.7.5"
      },
      "bin": {
        "tsx": "dist/cli.mjs"
      },
      "engines": {
        "node": ">=18.0.0"
      },
      "optionalDependencies": {
        "fsevents": "~2.3.3"
      }
    },
    "node_modules/tsx/node_modules/@esbuild/aix-ppc64": {
      "version": "0.23.1",
      "resolved": "https://registry.npmjs.org/@esbuild/aix-ppc64/-/aix-ppc64-0.23.1.tgz",
      "integrity": "sha512-6VhYk1diRqrhBAqpJEdjASR/+WVRtfjpqKuNw11cLiaWpAT/Uu+nokB+UJnevzy/P9C/ty6AOe0dwueMrGh/iQ==",
      "cpu": [
        "ppc64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "aix"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/tsx/node_modules/@esbuild/android-arm": {
      "version": "0.23.1",
      "resolved": "https://registry.npmjs.org/@esbuild/android-arm/-/android-arm-0.23.1.tgz",
      "integrity": "sha512-uz6/tEy2IFm9RYOyvKl88zdzZfwEfKZmnX9Cj1BHjeSGNuGLuMD1kR8y5bteYmwqKm1tj8m4cb/aKEorr6fHWQ==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/tsx/node_modules/@esbuild/android-arm64": {
      "version": "0.23.1",
      "resolved": "https://registry.npmjs.org/@esbuild/android-arm64/-/android-arm64-0.23.1.tgz",
      "integrity": "sha512-xw50ipykXcLstLeWH7WRdQuysJqejuAGPd30vd1i5zSyKK3WE+ijzHmLKxdiCMtH1pHz78rOg0BKSYOSB/2Khw==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/tsx/node_modules/@esbuild/android-x64": {
      "version": "0.23.1",
      "resolved": "https://registry.npmjs.org/@esbuild/android-x64/-/android-x64-0.23.1.tgz",
      "integrity": "sha512-nlN9B69St9BwUoB+jkyU090bru8L0NA3yFvAd7k8dNsVH8bi9a8cUAUSEcEEgTp2z3dbEDGJGfP6VUnkQnlReg==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/tsx/node_modules/@esbuild/darwin-arm64": {
      "version": "0.23.1",
      "resolved": "https://registry.npmjs.org/@esbuild/darwin-arm64/-/darwin-arm64-0.23.1.tgz",
      "integrity": "sha512-YsS2e3Wtgnw7Wq53XXBLcV6JhRsEq8hkfg91ESVadIrzr9wO6jJDMZnCQbHm1Guc5t/CdDiFSSfWP58FNuvT3Q==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/tsx/node_modules/@esbuild/darwin-x64": {
      "version": "0.23.1",
      "resolved": "https://registry.npmjs.org/@esbuild/darwin-x64/-/darwin-x64-0.23.1.tgz",
      "integrity": "sha512-aClqdgTDVPSEGgoCS8QDG37Gu8yc9lTHNAQlsztQ6ENetKEO//b8y31MMu2ZaPbn4kVsIABzVLXYLhCGekGDqw==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/tsx/node_modules/@esbuild/freebsd-arm64": {
      "version": "0.23.1",
      "resolved": "https://registry.npmjs.org/@esbuild/freebsd-arm64/-/freebsd-arm64-0.23.1.tgz",
      "integrity": "sha512-h1k6yS8/pN/NHlMl5+v4XPfikhJulk4G+tKGFIOwURBSFzE8bixw1ebjluLOjfwtLqY0kewfjLSrO6tN2MgIhA==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "freebsd"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/tsx/node_modules/@esbuild/freebsd-x64": {
      "version": "0.23.1",
      "resolved": "https://registry.npmjs.org/@esbuild/freebsd-x64/-/freebsd-x64-0.23.1.tgz",
      "integrity": "sha512-lK1eJeyk1ZX8UklqFd/3A60UuZ/6UVfGT2LuGo3Wp4/z7eRTRYY+0xOu2kpClP+vMTi9wKOfXi2vjUpO1Ro76g==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "freebsd"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/tsx/node_modules/@esbuild/linux-arm": {
      "version": "0.23.1",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-arm/-/linux-arm-0.23.1.tgz",
      "integrity": "sha512-CXXkzgn+dXAPs3WBwE+Kvnrf4WECwBdfjfeYHpMeVxWE0EceB6vhWGShs6wi0IYEqMSIzdOF1XjQ/Mkm5d7ZdQ==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/tsx/node_modules/@esbuild/linux-arm64": {
      "version": "0.23.1",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-arm64/-/linux-arm64-0.23.1.tgz",
      "integrity": "sha512-/93bf2yxencYDnItMYV/v116zff6UyTjo4EtEQjUBeGiVpMmffDNUyD9UN2zV+V3LRV3/on4xdZ26NKzn6754g==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/tsx/node_modules/@esbuild/linux-ia32": {
      "version": "0.23.1",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-ia32/-/linux-ia32-0.23.1.tgz",
      "integrity": "sha512-VTN4EuOHwXEkXzX5nTvVY4s7E/Krz7COC8xkftbbKRYAl96vPiUssGkeMELQMOnLOJ8k3BY1+ZY52tttZnHcXQ==",
      "cpu": [
        "ia32"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/tsx/node_modules/@esbuild/linux-loong64": {
      "version": "0.23.1",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-loong64/-/linux-loong64-0.23.1.tgz",
      "integrity": "sha512-Vx09LzEoBa5zDnieH8LSMRToj7ir/Jeq0Gu6qJ/1GcBq9GkfoEAoXvLiW1U9J1qE/Y/Oyaq33w5p2ZWrNNHNEw==",
      "cpu": [
        "loong64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/tsx/node_modules/@esbuild/linux-mips64el": {
      "version": "0.23.1",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-mips64el/-/linux-mips64el-0.23.1.tgz",
      "integrity": "sha512-nrFzzMQ7W4WRLNUOU5dlWAqa6yVeI0P78WKGUo7lg2HShq/yx+UYkeNSE0SSfSure0SqgnsxPvmAUu/vu0E+3Q==",
      "cpu": [
        "mips64el"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/tsx/node_modules/@esbuild/linux-ppc64": {
      "version": "0.23.1",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-ppc64/-/linux-ppc64-0.23.1.tgz",
      "integrity": "sha512-dKN8fgVqd0vUIjxuJI6P/9SSSe/mB9rvA98CSH2sJnlZ/OCZWO1DJvxj8jvKTfYUdGfcq2dDxoKaC6bHuTlgcw==",
      "cpu": [
        "ppc64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/tsx/node_modules/@esbuild/linux-riscv64": {
      "version": "0.23.1",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-riscv64/-/linux-riscv64-0.23.1.tgz",
      "integrity": "sha512-5AV4Pzp80fhHL83JM6LoA6pTQVWgB1HovMBsLQ9OZWLDqVY8MVobBXNSmAJi//Csh6tcY7e7Lny2Hg1tElMjIA==",
      "cpu": [
        "riscv64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/tsx/node_modules/@esbuild/linux-s390x": {
      "version": "0.23.1",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-s390x/-/linux-s390x-0.23.1.tgz",
      "integrity": "sha512-9ygs73tuFCe6f6m/Tb+9LtYxWR4c9yg7zjt2cYkjDbDpV/xVn+68cQxMXCjUpYwEkze2RcU/rMnfIXNRFmSoDw==",
      "cpu": [
        "s390x"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/tsx/node_modules/@esbuild/linux-x64": {
      "version": "0.23.1",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-x64/-/linux-x64-0.23.1.tgz",
      "integrity": "sha512-EV6+ovTsEXCPAp58g2dD68LxoP/wK5pRvgy0J/HxPGB009omFPv3Yet0HiaqvrIrgPTBuC6wCH1LTOY91EO5hQ==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/tsx/node_modules/@esbuild/netbsd-x64": {
      "version": "0.23.1",
      "resolved": "https://registry.npmjs.org/@esbuild/netbsd-x64/-/netbsd-x64-0.23.1.tgz",
      "integrity": "sha512-aevEkCNu7KlPRpYLjwmdcuNz6bDFiE7Z8XC4CPqExjTvrHugh28QzUXVOZtiYghciKUacNktqxdpymplil1beA==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "netbsd"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/tsx/node_modules/@esbuild/openbsd-arm64": {
      "version": "0.23.1",
      "resolved": "https://registry.npmjs.org/@esbuild/openbsd-arm64/-/openbsd-arm64-0.23.1.tgz",
      "integrity": "sha512-3x37szhLexNA4bXhLrCC/LImN/YtWis6WXr1VESlfVtVeoFJBRINPJ3f0a/6LV8zpikqoUg4hyXw0sFBt5Cr+Q==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "openbsd"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/tsx/node_modules/@esbuild/openbsd-x64": {
      "version": "0.23.1",
      "resolved": "https://registry.npmjs.org/@esbuild/openbsd-x64/-/openbsd-x64-0.23.1.tgz",
      "integrity": "sha512-aY2gMmKmPhxfU+0EdnN+XNtGbjfQgwZj43k8G3fyrDM/UdZww6xrWxmDkuz2eCZchqVeABjV5BpildOrUbBTqA==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "openbsd"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/tsx/node_modules/@esbuild/sunos-x64": {
      "version": "0.23.1",
      "resolved": "https://registry.npmjs.org/@esbuild/sunos-x64/-/sunos-x64-0.23.1.tgz",
      "integrity": "sha512-RBRT2gqEl0IKQABT4XTj78tpk9v7ehp+mazn2HbUeZl1YMdaGAQqhapjGTCe7uw7y0frDi4gS0uHzhvpFuI1sA==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "sunos"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/tsx/node_modules/@esbuild/win32-arm64": {
      "version": "0.23.1",
      "resolved": "https://registry.npmjs.org/@esbuild/win32-arm64/-/win32-arm64-0.23.1.tgz",
      "integrity": "sha512-4O+gPR5rEBe2FpKOVyiJ7wNDPA8nGzDuJ6gN4okSA1gEOYZ67N8JPk58tkWtdtPeLz7lBnY6I5L3jdsr3S+A6A==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/tsx/node_modules/@esbuild/win32-ia32": {
      "version": "0.23.1",
      "resolved": "https://registry.npmjs.org/@esbuild/win32-ia32/-/win32-ia32-0.23.1.tgz",
      "integrity": "sha512-BcaL0Vn6QwCwre3Y717nVHZbAa4UBEigzFm6VdsVdT/MbZ38xoj1X9HPkZhbmaBGUD1W8vxAfffbDe8bA6AKnQ==",
      "cpu": [
        "ia32"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/tsx/node_modules/@esbuild/win32-x64": {
      "version": "0.23.1",
      "resolved": "https://registry.npmjs.org/@esbuild/win32-x64/-/win32-x64-0.23.1.tgz",
      "integrity": "sha512-BHpFFeslkWrXWyUPnbKm+xYYVYruCinGcftSBaa8zoF9hZO4BcSCFUvHVTtzpIY6YzUnYtuEhZ+C9iEXjxnasg==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/tsx/node_modules/esbuild": {
      "version": "0.23.1",
      "resolved": "https://registry.npmjs.org/esbuild/-/esbuild-0.23.1.tgz",
      "integrity": "sha512-VVNz/9Sa0bs5SELtn3f7qhJCDPCF5oMEl5cO9/SSinpE9hbPVvxbd572HH5AKiP7WD8INO53GgfDDhRjkylHEg==",
      "dev": true,
      "hasInstallScript": true,
      "license": "MIT",
      "bin": {
        "esbuild": "bin/esbuild"
      },
      "engines": {
        "node": ">=18"
      },
      "optionalDependencies": {
        "@esbuild/aix-ppc64": "0.23.1",
        "@esbuild/android-arm": "0.23.1",
        "@esbuild/android-arm64": "0.23.1",
        "@esbuild/android-x64": "0.23.1",
        "@esbuild/darwin-arm64": "0.23.1",
        "@esbuild/darwin-x64": "0.23.1",
        "@esbuild/freebsd-arm64": "0.23.1",
        "@esbuild/freebsd-x64": "0.23.1",
        "@esbuild/linux-arm": "0.23.1",
        "@esbuild/linux-arm64": "0.23.1",
        "@esbuild/linux-ia32": "0.23.1",
        "@esbuild/linux-loong64": "0.23.1",
        "@esbuild/linux-mips64el": "0.23.1",
        "@esbuild/linux-ppc64": "0.23.1",
        "@esbuild/linux-riscv64": "0.23.1",
        "@esbuild/linux-s390x": "0.23.1",
        "@esbuild/linux-x64": "0.23.1",
        "@esbuild/netbsd-x64": "0.23.1",
        "@esbuild/openbsd-arm64": "0.23.1",
        "@esbuild/openbsd-x64": "0.23.1",
        "@esbuild/sunos-x64": "0.23.1",
        "@esbuild/win32-arm64": "0.23.1",
        "@esbuild/win32-ia32": "0.23.1",
        "@esbuild/win32-x64": "0.23.1"
      }
    },
    "node_modules/tw-animate-css": {
      "version": "1.2.5",
      "resolved": "https://registry.npmjs.org/tw-animate-css/-/tw-animate-css-1.2.5.tgz",
      "integrity": "sha512-ABzjfgVo+fDbhRREGL4KQZUqqdPgvc5zVrLyeW9/6mVqvaDepXc7EvedA+pYmMnIOsUAQMwcWzNvom26J2qYvQ==",
      "funding": {
        "url": "https://github.com/sponsors/Wombosvideo"
      }
    },
    "node_modules/type-is": {
      "version": "1.6.18",
      "resolved": "https://registry.npmjs.org/type-is/-/type-is-1.6.18.tgz",
      "integrity": "sha512-TkRKr9sUTxEH8MdfuCSP7VizJyzRNMjj2J2do2Jr3Kym598JVdEksuzPQCnlFPW4ky9Q+iA+ma9BGm06XQBy8g==",
      "license": "MIT",
      "dependencies": {
        "media-typer": "0.3.0",
        "mime-types": "~2.1.24"
      },
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/typescript": {
      "version": "5.6.3",
      "resolved": "https://registry.npmjs.org/typescript/-/typescript-5.6.3.tgz",
      "integrity": "sha512-hjcS1mhfuyi4WW8IWtjP7brDrG2cuDZukyrYrSauoXGNgx0S7zceP07adYkJycEr56BOUTNPzbInooiN3fn1qw==",
      "dev": true,
      "license": "Apache-2.0",
      "bin": {
        "tsc": "bin/tsc",
        "tsserver": "bin/tsserver"
      },
      "engines": {
        "node": ">=14.17"
      }
    },
    "node_modules/uid-safe": {
      "version": "2.1.5",
      "resolved": "https://registry.npmjs.org/uid-safe/-/uid-safe-2.1.5.tgz",
      "integrity": "sha512-KPHm4VL5dDXKz01UuEd88Df+KzynaohSL9fBh096KWAxSKZQDI2uBrVqtvRM4rwrIrRRKsdLNML/lnaaVSRioA==",
      "license": "MIT",
      "dependencies": {
        "random-bytes": "~1.0.0"
      },
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/undici-types": {
      "version": "6.19.8",
      "resolved": "https://registry.npmjs.org/undici-types/-/undici-types-6.19.8.tgz",
      "integrity": "sha512-ve2KP6f/JnbPBFyobGHuerC9g1FYGn/F8n1LWTwNxCEzd6IfqTwUQcNXgEtmmQ6DlRrC1hrSrBnCZPokRrDHjw==",
      "license": "MIT"
    },
    "node_modules/unpipe": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/unpipe/-/unpipe-1.0.0.tgz",
      "integrity": "sha512-pjy2bYhSsufwWlKwPc+l3cN7+wuJlK6uz0YdJEOlQDbl6jo/YlPi4mb8agUkVC8BF7V8NuzeyPNqRksA3hztKQ==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/update-browserslist-db": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/update-browserslist-db/-/update-browserslist-db-1.1.1.tgz",
      "integrity": "sha512-R8UzCaa9Az+38REPiJ1tXlImTJXlVfgHZsglwBD/k6nj76ctsH1E3q4doGrukiLQd3sGQYu56r5+lo5r94l29A==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/browserslist"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/browserslist"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "escalade": "^3.2.0",
        "picocolors": "^1.1.0"
      },
      "bin": {
        "update-browserslist-db": "cli.js"
      },
      "peerDependencies": {
        "browserslist": ">= 4.21.0"
      }
    },
    "node_modules/use-callback-ref": {
      "version": "1.3.3",
      "resolved": "https://registry.npmjs.org/use-callback-ref/-/use-callback-ref-1.3.3.tgz",
      "integrity": "sha512-jQL3lRnocaFtu3V00JToYz/4QkNWswxijDaCVNZRiRTO3HQDLsdu1ZtmIUvV4yPp+rvWm5j0y0TG/S61cuijTg==",
      "dependencies": {
        "tslib": "^2.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "peerDependencies": {
        "@types/react": "*",
        "react": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/use-sidecar": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/use-sidecar/-/use-sidecar-1.1.3.tgz",
      "integrity": "sha512-Fedw0aZvkhynoPYlA5WXrMCAMm+nSWdZt6lzJQ7Ok8S6Q+VsHmHpRWndVRJ8Be0ZbkfPc5LRYH+5XrzXcEeLRQ==",
      "dependencies": {
        "detect-node-es": "^1.1.0",
        "tslib": "^2.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "peerDependencies": {
        "@types/react": "*",
        "react": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/use-sync-external-store": {
      "version": "1.2.2",
      "resolved": "https://registry.npmjs.org/use-sync-external-store/-/use-sync-external-store-1.2.2.tgz",
      "integrity": "sha512-PElTlVMwpblvbNqQ82d2n6RjStvdSoNe9FG28kNfz3WiXilJm4DdNkEzRhCZuIDwY8U08WVihhGR5iRqAwfDiw==",
      "license": "MIT",
      "peerDependencies": {
        "react": "^16.8.0 || ^17.0.0 || ^18.0.0"
      }
    },
    "node_modules/util-deprecate": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz",
      "integrity": "sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==",
      "license": "MIT"
    },
    "node_modules/utils-merge": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/utils-merge/-/utils-merge-1.0.1.tgz",
      "integrity": "sha512-pMZTvIkT1d+TFGvDOqodOclx0QWkkgi6Tdoa8gC8ffGAAqz9pzPTZWAybbsHHoED/ztMtkv/VoYTYyShUn81hA==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4.0"
      }
    },
    "node_modules/vary": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/vary/-/vary-1.1.2.tgz",
      "integrity": "sha512-BNGbWLfd0eUPabhkXUVm0j8uuvREyTh5ovRa/dyow/BqAbZJyC+5fU+IzQOzmAKzYqYRAISoRhdQr3eIZ/PXqg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/vaul": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/vaul/-/vaul-1.1.2.tgz",
      "integrity": "sha512-ZFkClGpWyI2WUQjdLJ/BaGuV6AVQiJ3uELGk3OYtP+B6yCO7Cmn9vPFXVJkRaGkOJu3m8bQMgtyzNHixULceQA==",
      "dependencies": {
        "@radix-ui/react-dialog": "^1.1.1"
      },
      "peerDependencies": {
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0.0 || ^19.0.0-rc"
      }
    },
    "node_modules/victory-vendor": {
      "version": "36.9.2",
      "resolved": "https://registry.npmjs.org/victory-vendor/-/victory-vendor-36.9.2.tgz",
      "integrity": "sha512-PnpQQMuxlwYdocC8fIJqVXvkeViHYzotI+NJrCuav0ZYFoq912ZHBk3mCeuj+5/VpodOjPe1z0Fk2ihgzlXqjQ==",
      "license": "MIT AND ISC",
      "dependencies": {
        "@types/d3-array": "^3.0.3",
        "@types/d3-ease": "^3.0.0",
        "@types/d3-interpolate": "^3.0.1",
        "@types/d3-scale": "^4.0.2",
        "@types/d3-shape": "^3.1.0",
        "@types/d3-time": "^3.0.0",
        "@types/d3-timer": "^3.0.0",
        "d3-array": "^3.1.6",
        "d3-ease": "^3.0.1",
        "d3-interpolate": "^3.0.1",
        "d3-scale": "^4.0.2",
        "d3-shape": "^3.1.0",
        "d3-time": "^3.0.0",
        "d3-timer": "^3.0.1"
      }
    },
    "node_modules/vite": {
      "version": "5.4.14",
      "resolved": "https://registry.npmjs.org/vite/-/vite-5.4.14.tgz",
      "integrity": "sha512-EK5cY7Q1D8JNhSaPKVK4pwBFvaTmZxEnoKXLG/U9gmdDcihQGNzFlgIvaxezFR4glP1LsuiedwMBqCXH3wZccA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "esbuild": "^0.21.3",
        "postcss": "^8.4.43",
        "rollup": "^4.20.0"
      },
      "bin": {
        "vite": "bin/vite.js"
      },
      "engines": {
        "node": "^18.0.0 || >=20.0.0"
      },
      "funding": {
        "url": "https://github.com/vitejs/vite?sponsor=1"
      },
      "optionalDependencies": {
        "fsevents": "~2.3.3"
      },
      "peerDependencies": {
        "@types/node": "^18.0.0 || >=20.0.0",
        "less": "*",
        "lightningcss": "^1.21.0",
        "sass": "*",
        "sass-embedded": "*",
        "stylus": "*",
        "sugarss": "*",
        "terser": "^5.4.0"
      },
      "peerDependenciesMeta": {
        "@types/node": {
          "optional": true
        },
        "less": {
          "optional": true
        },
        "lightningcss": {
          "optional": true
        },
        "sass": {
          "optional": true
        },
        "sass-embedded": {
          "optional": true
        },
        "stylus": {
          "optional": true
        },
        "sugarss": {
          "optional": true
        },
        "terser": {
          "optional": true
        }
      }
    },
    "node_modules/vite/node_modules/@esbuild/aix-ppc64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/aix-ppc64/-/aix-ppc64-0.21.5.tgz",
      "integrity": "sha512-1SDgH6ZSPTlggy1yI6+Dbkiz8xzpHJEVAlF/AM1tHPLsf5STom9rwtjE4hKAF20FfXXNTFqEYXyJNWh1GiZedQ==",
      "cpu": [
        "ppc64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "aix"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/vite/node_modules/@esbuild/android-arm": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/android-arm/-/android-arm-0.21.5.tgz",
      "integrity": "sha512-vCPvzSjpPHEi1siZdlvAlsPxXl7WbOVUBBAowWug4rJHb68Ox8KualB+1ocNvT5fjv6wpkX6o/iEpbDrf68zcg==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/vite/node_modules/@esbuild/android-arm64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/android-arm64/-/android-arm64-0.21.5.tgz",
      "integrity": "sha512-c0uX9VAUBQ7dTDCjq+wdyGLowMdtR/GoC2U5IYk/7D1H1JYC0qseD7+11iMP2mRLN9RcCMRcjC4YMclCzGwS/A==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/vite/node_modules/@esbuild/android-x64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/android-x64/-/android-x64-0.21.5.tgz",
      "integrity": "sha512-D7aPRUUNHRBwHxzxRvp856rjUHRFW1SdQATKXH2hqA0kAZb1hKmi02OpYRacl0TxIGz/ZmXWlbZgjwWYaCakTA==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/vite/node_modules/@esbuild/darwin-arm64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/darwin-arm64/-/darwin-arm64-0.21.5.tgz",
      "integrity": "sha512-DwqXqZyuk5AiWWf3UfLiRDJ5EDd49zg6O9wclZ7kUMv2WRFr4HKjXp/5t8JZ11QbQfUS6/cRCKGwYhtNAY88kQ==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/vite/node_modules/@esbuild/darwin-x64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/darwin-x64/-/darwin-x64-0.21.5.tgz",
      "integrity": "sha512-se/JjF8NlmKVG4kNIuyWMV/22ZaerB+qaSi5MdrXtd6R08kvs2qCN4C09miupktDitvh8jRFflwGFBQcxZRjbw==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/vite/node_modules/@esbuild/freebsd-arm64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/freebsd-arm64/-/freebsd-arm64-0.21.5.tgz",
      "integrity": "sha512-5JcRxxRDUJLX8JXp/wcBCy3pENnCgBR9bN6JsY4OmhfUtIHe3ZW0mawA7+RDAcMLrMIZaf03NlQiX9DGyB8h4g==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "freebsd"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/vite/node_modules/@esbuild/freebsd-x64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/freebsd-x64/-/freebsd-x64-0.21.5.tgz",
      "integrity": "sha512-J95kNBj1zkbMXtHVH29bBriQygMXqoVQOQYA+ISs0/2l3T9/kj42ow2mpqerRBxDJnmkUDCaQT/dfNXWX/ZZCQ==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "freebsd"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/vite/node_modules/@esbuild/linux-arm": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-arm/-/linux-arm-0.21.5.tgz",
      "integrity": "sha512-bPb5AHZtbeNGjCKVZ9UGqGwo8EUu4cLq68E95A53KlxAPRmUyYv2D6F0uUI65XisGOL1hBP5mTronbgo+0bFcA==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/vite/node_modules/@esbuild/linux-arm64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-arm64/-/linux-arm64-0.21.5.tgz",
      "integrity": "sha512-ibKvmyYzKsBeX8d8I7MH/TMfWDXBF3db4qM6sy+7re0YXya+K1cem3on9XgdT2EQGMu4hQyZhan7TeQ8XkGp4Q==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/vite/node_modules/@esbuild/linux-ia32": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-ia32/-/linux-ia32-0.21.5.tgz",
      "integrity": "sha512-YvjXDqLRqPDl2dvRODYmmhz4rPeVKYvppfGYKSNGdyZkA01046pLWyRKKI3ax8fbJoK5QbxblURkwK/MWY18Tg==",
      "cpu": [
        "ia32"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/vite/node_modules/@esbuild/linux-loong64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-loong64/-/linux-loong64-0.21.5.tgz",
      "integrity": "sha512-uHf1BmMG8qEvzdrzAqg2SIG/02+4/DHB6a9Kbya0XDvwDEKCoC8ZRWI5JJvNdUjtciBGFQ5PuBlpEOXQj+JQSg==",
      "cpu": [
        "loong64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/vite/node_modules/@esbuild/linux-mips64el": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-mips64el/-/linux-mips64el-0.21.5.tgz",
      "integrity": "sha512-IajOmO+KJK23bj52dFSNCMsz1QP1DqM6cwLUv3W1QwyxkyIWecfafnI555fvSGqEKwjMXVLokcV5ygHW5b3Jbg==",
      "cpu": [
        "mips64el"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/vite/node_modules/@esbuild/linux-ppc64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-ppc64/-/linux-ppc64-0.21.5.tgz",
      "integrity": "sha512-1hHV/Z4OEfMwpLO8rp7CvlhBDnjsC3CttJXIhBi+5Aj5r+MBvy4egg7wCbe//hSsT+RvDAG7s81tAvpL2XAE4w==",
      "cpu": [
        "ppc64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/vite/node_modules/@esbuild/linux-riscv64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-riscv64/-/linux-riscv64-0.21.5.tgz",
      "integrity": "sha512-2HdXDMd9GMgTGrPWnJzP2ALSokE/0O5HhTUvWIbD3YdjME8JwvSCnNGBnTThKGEB91OZhzrJ4qIIxk/SBmyDDA==",
      "cpu": [
        "riscv64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/vite/node_modules/@esbuild/linux-s390x": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-s390x/-/linux-s390x-0.21.5.tgz",
      "integrity": "sha512-zus5sxzqBJD3eXxwvjN1yQkRepANgxE9lgOW2qLnmr8ikMTphkjgXu1HR01K4FJg8h1kEEDAqDcZQtbrRnB41A==",
      "cpu": [
        "s390x"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/vite/node_modules/@esbuild/linux-x64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-x64/-/linux-x64-0.21.5.tgz",
      "integrity": "sha512-1rYdTpyv03iycF1+BhzrzQJCdOuAOtaqHTWJZCWvijKD2N5Xu0TtVC8/+1faWqcP9iBCWOmjmhoH94dH82BxPQ==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/vite/node_modules/@esbuild/netbsd-x64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/netbsd-x64/-/netbsd-x64-0.21.5.tgz",
      "integrity": "sha512-Woi2MXzXjMULccIwMnLciyZH4nCIMpWQAs049KEeMvOcNADVxo0UBIQPfSmxB3CWKedngg7sWZdLvLczpe0tLg==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "netbsd"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/vite/node_modules/@esbuild/openbsd-x64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/openbsd-x64/-/openbsd-x64-0.21.5.tgz",
      "integrity": "sha512-HLNNw99xsvx12lFBUwoT8EVCsSvRNDVxNpjZ7bPn947b8gJPzeHWyNVhFsaerc0n3TsbOINvRP2byTZ5LKezow==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "openbsd"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/vite/node_modules/@esbuild/sunos-x64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/sunos-x64/-/sunos-x64-0.21.5.tgz",
      "integrity": "sha512-6+gjmFpfy0BHU5Tpptkuh8+uw3mnrvgs+dSPQXQOv3ekbordwnzTVEb4qnIvQcYXq6gzkyTnoZ9dZG+D4garKg==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "sunos"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/vite/node_modules/@esbuild/win32-arm64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/win32-arm64/-/win32-arm64-0.21.5.tgz",
      "integrity": "sha512-Z0gOTd75VvXqyq7nsl93zwahcTROgqvuAcYDUr+vOv8uHhNSKROyU961kgtCD1e95IqPKSQKH7tBTslnS3tA8A==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/vite/node_modules/@esbuild/win32-ia32": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/win32-ia32/-/win32-ia32-0.21.5.tgz",
      "integrity": "sha512-SWXFF1CL2RVNMaVs+BBClwtfZSvDgtL//G/smwAc5oVK/UPu2Gu9tIaRgFmYFFKrmg3SyAjSrElf0TiJ1v8fYA==",
      "cpu": [
        "ia32"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/vite/node_modules/@esbuild/win32-x64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/win32-x64/-/win32-x64-0.21.5.tgz",
      "integrity": "sha512-tQd/1efJuzPC6rCFwEvLtci/xNFcTZknmXs98FYDfGE4wP9ClFV98nyKrzJKVPMhdDnjzLhdUyMX4PsQAPjwIw==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/vite/node_modules/esbuild": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/esbuild/-/esbuild-0.21.5.tgz",
      "integrity": "sha512-mg3OPMV4hXywwpoDxu3Qda5xCKQi+vCTZq8S9J/EpkhB2HzKXq4SNFZE3+NK93JYxc8VMSep+lOUSC/RVKaBqw==",
      "dev": true,
      "hasInstallScript": true,
      "license": "MIT",
      "bin": {
        "esbuild": "bin/esbuild"
      },
      "engines": {
        "node": ">=12"
      },
      "optionalDependencies": {
        "@esbuild/aix-ppc64": "0.21.5",
        "@esbuild/android-arm": "0.21.5",
        "@esbuild/android-arm64": "0.21.5",
        "@esbuild/android-x64": "0.21.5",
        "@esbuild/darwin-arm64": "0.21.5",
        "@esbuild/darwin-x64": "0.21.5",
        "@esbuild/freebsd-arm64": "0.21.5",
        "@esbuild/freebsd-x64": "0.21.5",
        "@esbuild/linux-arm": "0.21.5",
        "@esbuild/linux-arm64": "0.21.5",
        "@esbuild/linux-ia32": "0.21.5",
        "@esbuild/linux-loong64": "0.21.5",
        "@esbuild/linux-mips64el": "0.21.5",
        "@esbuild/linux-ppc64": "0.21.5",
        "@esbuild/linux-riscv64": "0.21.5",
        "@esbuild/linux-s390x": "0.21.5",
        "@esbuild/linux-x64": "0.21.5",
        "@esbuild/netbsd-x64": "0.21.5",
        "@esbuild/openbsd-x64": "0.21.5",
        "@esbuild/sunos-x64": "0.21.5",
        "@esbuild/win32-arm64": "0.21.5",
        "@esbuild/win32-ia32": "0.21.5",
        "@esbuild/win32-x64": "0.21.5"
      }
    },
    "node_modules/which": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
      "integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==",
      "license": "ISC",
      "dependencies": {
        "isexe": "^2.0.0"
      },
      "bin": {
        "node-which": "bin/node-which"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/wouter": {
      "version": "3.3.5",
      "resolved": "https://registry.npmjs.org/wouter/-/wouter-3.3.5.tgz",
      "integrity": "sha512-bx3fLQAMn+EhYbBdY3W1gw9ZfO/uchudxYMwOIBzF3HVgqNEEIT199vEoh7FLTC0Vz5+rpMO6NdFsOkGX1QQCw==",
      "license": "Unlicense",
      "dependencies": {
        "mitt": "^3.0.1",
        "regexparam": "^3.0.0",
        "use-sync-external-store": "^1.0.0"
      },
      "peerDependencies": {
        "react": ">=16.8.0"
      }
    },
    "node_modules/wrap-ansi": {
      "version": "8.1.0",
      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-8.1.0.tgz",
      "integrity": "sha512-si7QWI6zUMq56bESFvagtmzMdGOtoxfR+Sez11Mobfc7tm+VkUckk9bW2UeffTGVUbOksxmSw0AA2gs8g71NCQ==",
      "license": "MIT",
      "dependencies": {
        "ansi-styles": "^6.1.0",
        "string-width": "^5.0.1",
        "strip-ansi": "^7.0.1"
      },
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/chalk/wrap-ansi?sponsor=1"
      }
    },
    "node_modules/wrap-ansi-cjs": {
      "name": "wrap-ansi",
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz",
      "integrity": "sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==",
      "license": "MIT",
      "dependencies": {
        "ansi-styles": "^4.0.0",
        "string-width": "^4.1.0",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/chalk/wrap-ansi?sponsor=1"
      }
    },
    "node_modules/wrap-ansi-cjs/node_modules/ansi-regex": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/wrap-ansi-cjs/node_modules/ansi-styles": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
      "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
      "license": "MIT",
      "dependencies": {
        "color-convert": "^2.0.1"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
      }
    },
    "node_modules/wrap-ansi-cjs/node_modules/emoji-regex": {
      "version": "8.0.0",
      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
      "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
      "license": "MIT"
    },
    "node_modules/wrap-ansi-cjs/node_modules/string-width": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
      "license": "MIT",
      "dependencies": {
        "emoji-regex": "^8.0.0",
        "is-fullwidth-code-point": "^3.0.0",
        "strip-ansi": "^6.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/wrap-ansi-cjs/node_modules/strip-ansi": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "license": "MIT",
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/ws": {
      "version": "8.18.0",
      "resolved": "https://registry.npmjs.org/ws/-/ws-8.18.0.tgz",
      "integrity": "sha512-8VbfWfHLbbwu3+N6OKsOMpBdT4kXPDDB9cJk2bJ6mh9ucxdlnNvH1e+roYkKmN9Nxw2yjz7VzeO9oOz2zJ04Pw==",
      "license": "MIT",
      "engines": {
        "node": ">=10.0.0"
      },
      "peerDependencies": {
        "bufferutil": "^4.0.1",
        "utf-8-validate": ">=5.0.2"
      },
      "peerDependenciesMeta": {
        "bufferutil": {
          "optional": true
        },
        "utf-8-validate": {
          "optional": true
        }
      }
    },
    "node_modules/xtend": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/xtend/-/xtend-4.0.2.tgz",
      "integrity": "sha512-LKYU1iAXJXUgAXn9URjiu+MWhyUXHsvfp7mcuYm9dSUKK0/CjtrUwFAxD82/mCWbtLsGjFIad0wIsod4zrTAEQ==",
      "license": "MIT",
      "engines": {
        "node": ">=0.4"
      }
    },
    "node_modules/yallist": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/yallist/-/yallist-3.1.1.tgz",
      "integrity": "sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g==",
      "dev": true,
      "license": "ISC"
    },
    "node_modules/yaml": {
      "version": "2.6.0",
      "resolved": "https://registry.npmjs.org/yaml/-/yaml-2.6.0.tgz",
      "integrity": "sha512-a6ae//JvKDEra2kdi1qzCyrJW/WZCgFi8ydDV+eXExl95t+5R+ijnqHJbz9tmMh8FUjx3iv2fCQ4dclAQlO2UQ==",
      "license": "ISC",
      "bin": {
        "yaml": "bin.mjs"
      },
      "engines": {
        "node": ">= 14"
      }
    },
    "node_modules/zod": {
      "version": "3.24.2",
      "resolved": "https://registry.npmjs.org/zod/-/zod-3.24.2.tgz",
      "integrity": "sha512-lY7CDW43ECgW9u1TcT3IoXHflywfVqDYze4waEz812jR/bZ8FHDsl7pFQoSZTz5N+2NqRXs8GBwnAwo3ZNxqhQ==",
      "funding": {
        "url": "https://github.com/sponsors/colinhacks"
      }
    },
    "node_modules/zod-validation-error": {
      "version": "3.4.0",
      "resolved": "https://registry.npmjs.org/zod-validation-error/-/zod-validation-error-3.4.0.tgz",
      "integrity": "sha512-ZOPR9SVY6Pb2qqO5XHt+MkkTRxGXb4EVtnjc9JpXUOtUB1T9Ru7mZOT361AN3MsetVe7R0a1KZshJDZdgp9miQ==",
      "license": "MIT",
      "engines": {
        "node": ">=18.0.0"
      },
      "peerDependencies": {
        "zod": "^3.18.0"
      }
    }
  }
}

</file>
<file path="FitForge/package.json">
{
  "name": "rest-express",
  "version": "1.0.0",
  "type": "module",
  "license": "MIT",
  "scripts": {
    "dev": "NODE_ENV=development tsx server/index.ts",
    "build": "vite build && esbuild server/index.ts --platform=node --packages=external --bundle --format=esm --outdir=dist",
    "start": "NODE_ENV=production node dist/index.js",
    "check": "tsc",
    "db:push": "drizzle-kit push"
  },
  "dependencies": {
    "@hookform/resolvers": "^3.10.0",
    "@jridgewell/trace-mapping": "^0.3.25",
    "@neondatabase/serverless": "^0.10.4",
    "@radix-ui/react-accordion": "^1.2.4",
    "@radix-ui/react-alert-dialog": "^1.1.7",
    "@radix-ui/react-aspect-ratio": "^1.1.3",
    "@radix-ui/react-avatar": "^1.1.4",
    "@radix-ui/react-checkbox": "^1.1.5",
    "@radix-ui/react-collapsible": "^1.1.4",
    "@radix-ui/react-context-menu": "^2.2.7",
    "@radix-ui/react-dialog": "^1.1.7",
    "@radix-ui/react-dropdown-menu": "^2.1.7",
    "@radix-ui/react-hover-card": "^1.1.7",
    "@radix-ui/react-label": "^2.1.3",
    "@radix-ui/react-menubar": "^1.1.7",
    "@radix-ui/react-navigation-menu": "^1.2.6",
    "@radix-ui/react-popover": "^1.1.7",
    "@radix-ui/react-progress": "^1.1.3",
    "@radix-ui/react-radio-group": "^1.2.4",
    "@radix-ui/react-scroll-area": "^1.2.4",
    "@radix-ui/react-select": "^2.1.7",
    "@radix-ui/react-separator": "^1.1.3",
    "@radix-ui/react-slider": "^1.2.4",
    "@radix-ui/react-slot": "^1.2.0",
    "@radix-ui/react-switch": "^1.1.4",
    "@radix-ui/react-tabs": "^1.1.4",
    "@radix-ui/react-toast": "^1.2.7",
    "@radix-ui/react-toggle": "^1.1.3",
    "@radix-ui/react-toggle-group": "^1.1.3",
    "@radix-ui/react-tooltip": "^1.2.0",
    "@tanstack/react-query": "^5.60.5",
    "@types/bcrypt": "^5.0.2",
    "@types/jsonwebtoken": "^9.0.9",
    "bcrypt": "^6.0.0",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "cmdk": "^1.1.1",
    "connect-pg-simple": "^10.0.0",
    "date-fns": "^3.6.0",
    "drizzle-orm": "^0.39.1",
    "drizzle-zod": "^0.7.0",
    "embla-carousel-react": "^8.6.0",
    "express": "^4.21.2",
    "express-session": "^1.18.1",
    "framer-motion": "^11.13.1",
    "input-otp": "^1.4.2",
    "jsonwebtoken": "^9.0.2",
    "lucide-react": "^0.453.0",
    "memorystore": "^1.6.7",
    "next-themes": "^0.4.6",
    "passport": "^0.7.0",
    "passport-local": "^1.0.0",
    "react": "^18.3.1",
    "react-day-picker": "^8.10.1",
    "react-dom": "^18.3.1",
    "react-hook-form": "^7.55.0",
    "react-icons": "^5.4.0",
    "react-resizable-panels": "^2.1.7",
    "recharts": "^2.15.2",
    "tailwind-merge": "^2.6.0",
    "tailwindcss-animate": "^1.0.7",
    "tw-animate-css": "^1.2.5",
    "vaul": "^1.1.2",
    "wouter": "^3.3.5",
    "ws": "^8.18.0",
    "zod": "^3.24.2",
    "zod-validation-error": "^3.4.0"
  },
  "devDependencies": {
    "@replit/vite-plugin-cartographer": "^0.2.5",
    "@replit/vite-plugin-runtime-error-modal": "^0.0.3",
    "@tailwindcss/typography": "^0.5.15",
    "@tailwindcss/vite": "^4.1.3",
    "@types/connect-pg-simple": "^7.0.3",
    "@types/express": "4.17.21",
    "@types/express-session": "^1.18.0",
    "@types/node": "20.16.11",
    "@types/passport": "^1.0.16",
    "@types/passport-local": "^1.0.38",
    "@types/react": "^18.3.11",
    "@types/react-dom": "^18.3.1",
    "@types/ws": "^8.5.13",
    "@vitejs/plugin-react": "^4.3.2",
    "autoprefixer": "^10.4.20",
    "drizzle-kit": "^0.30.4",
    "esbuild": "^0.25.0",
    "postcss": "^8.4.47",
    "tailwindcss": "^3.4.17",
    "tsx": "^4.19.1",
    "typescript": "5.6.3",
    "vite": "^5.4.14"
  },
  "optionalDependencies": {
    "bufferutil": "^4.0.8"
  }
}

</file>
<file path="FitForge/postcss.config.js">
export default {
  plugins: {
    tailwindcss: {},
    autoprefixer: {},
  },
}

</file>
<file path="FitForge/server.log">

> rest-express@1.0.0 start
> NODE_ENV=production node dist/index.js

Ender's Exercise Database Summary:
Total exercises: 38
Workout types: [ 'Abs', 'BackBiceps', 'ChestTriceps', 'Legs' ]
Abs: 4 exercises, 30min
BackBiceps: 13 exercises, 60min
ChestTriceps: 14 exercises, 75min
Legs: 7 exercises, 50min
5:23:59 PM [express] serving on port 5000
5:24:13 PM [express] GET /api/auth/me 304 in 2ms :: {"id":1,"username":"ender","email":"ender@test.c…
5:24:13 PM [express] GET /api/auth/me 304 in 0ms :: {"id":1,"username":"ender","email":"ender@test.c…
5:24:13 PM [express] GET /api/auth/me 304 in 1ms :: {"id":1,"username":"ender","email":"ender@test.c…
5:24:15 PM [express] GET /api/auth/me 304 in 0ms :: {"id":1,"username":"ender","email":"ender@test.c…
5:24:16 PM [express] GET /api/auth/me 304 in 0ms :: {"id":1,"username":"ender","email":"ender@test.c…
5:24:17 PM [express] GET /api/auth/me 304 in 0ms :: {"id":1,"username":"ender","email":"ender@test.c…
5:24:17 PM [express] GET /api/auth/me 304 in 1ms :: {"id":1,"username":"ender","email":"ender@test.c…
5:24:17 PM [express] GET /api/auth/me 304 in 0ms :: {"id":1,"username":"ender","email":"ender@test.c…
5:24:17 PM [express] GET /api/auth/me 304 in 1ms :: {"id":1,"username":"ender","email":"ender@test.c…
5:24:17 PM [express] GET /api/auth/me 304 in 1ms :: {"id":1,"username":"ender","email":"ender@test.c…
5:24:18 PM [express] GET /api/auth/me 304 in 1ms :: {"id":1,"username":"ender","email":"ender@test.c…
5:24:18 PM [express] GET /api/auth/me 304 in 0ms :: {"id":1,"username":"ender","email":"ender@test.c…
5:24:18 PM [express] GET /api/auth/me 304 in 0ms :: {"id":1,"username":"ender","email":"ender@test.c…
5:24:18 PM [express] GET /api/auth/me 304 in 1ms :: {"id":1,"username":"ender","email":"ender@test.c…
5:24:19 PM [express] GET /api/auth/me 304 in 0ms :: {"id":1,"username":"ender","email":"ender@test.c…
5:24:19 PM [express] GET /api/auth/me 304 in 1ms :: {"id":1,"username":"ender","email":"ender@test.c…
5:24:19 PM [express] GET /api/auth/me 304 in 1ms :: {"id":1,"username":"ender","email":"ender@test.c…
5:24:19 PM [express] GET /api/auth/me 304 in 2ms :: {"id":1,"username":"ender","email":"ender@test.c…
5:24:19 PM [express] GET /api/auth/me 304 in 1ms :: {"id":1,"username":"ender","email":"ender@test.c…
5:24:19 PM [express] GET /api/auth/me 304 in 0ms :: {"id":1,"username":"ender","email":"ender@test.c…
5:24:20 PM [express] GET /api/auth/me 304 in 1ms :: {"id":1,"username":"ender","email":"ender@test.c…
5:24:20 PM [express] GET /api/auth/me 304 in 0ms :: {"id":1,"username":"ender","email":"ender@test.c…
5:24:20 PM [express] GET /api/auth/me 304 in 1ms :: {"id":1,"username":"ender","email":"ender@test.c…
5:24:20 PM [express] GET /api/auth/me 304 in 1ms :: {"id":1,"username":"ender","email":"ender@test.c…
5:24:20 PM [express] GET /api/auth/me 304 in 1ms :: {"id":1,"username":"ender","email":"ender@test.c…
5:24:21 PM [express] GET /api/auth/me 304 in 0ms :: {"id":1,"username":"ender","email":"ender@test.c…
5:24:21 PM [express] GET /api/auth/me 304 in 1ms :: {"id":1,"username":"ender","email":"ender@test.c…
5:24:21 PM [express] GET /api/auth/me 304 in 0ms :: {"id":1,"username":"ender","email":"ender@test.c…
5:24:21 PM [express] GET /api/auth/me 304 in 1ms :: {"id":1,"username":"ender","email":"ender@test.c…
5:24:21 PM [express] GET /api/auth/me 304 in 0ms :: {"id":1,"username":"ender","email":"ender@test.c…
5:24:21 PM [express] GET /api/auth/me 304 in 0ms :: {"id":1,"username":"ender","email":"ender@test.c…
5:24:22 PM [express] GET /api/auth/me 304 in 1ms :: {"id":1,"username":"ender","email":"ender@test.c…
5:24:22 PM [express] GET /api/auth/me 304 in 1ms :: {"id":1,"username":"ender","email":"ender@test.c…
5:24:22 PM [express] GET /api/auth/me 304 in 1ms :: {"id":1,"username":"ender","email":"ender@test.c…
5:24:22 PM [express] GET /api/auth/me 304 in 1ms :: {"id":1,"username":"ender","email":"ender@test.c…
5:24:22 PM [express] GET /api/auth/me 304 in 1ms :: {"id":1,"username":"ender","email":"ender@test.c…
5:24:22 PM [express] GET /api/auth/me 304 in 0ms :: {"id":1,"username":"ender","email":"ender@test.c…
5:24:23 PM [express] GET /api/auth/me 304 in 0ms :: {"id":1,"username":"ender","email":"ender@test.c…
5:24:23 PM [express] GET /api/auth/me 304 in 0ms :: {"id":1,"username":"ender","email":"ender@test.c…
5:24:23 PM [express] GET /api/auth/me 304 in 2ms :: {"id":1,"username":"ender","email":"ender@test.c…
5:24:23 PM [express] GET /api/auth/me 304 in 0ms :: {"id":1,"username":"ender","email":"ender@test.c…
5:24:23 PM [express] GET /api/auth/me 304 in 1ms :: {"id":1,"username":"ender","email":"ender@test.c…
5:24:23 PM [express] GET /api/auth/me 304 in 1ms :: {"id":1,"username":"ender","email":"ender@test.c…
5:24:24 PM [express] GET /api/auth/me 304 in 1ms :: {"id":1,"username":"ender","email":"ender@test.c…
5:24:24 PM [express] GET /api/auth/me 304 in 0ms :: {"id":1,"username":"ender","email":"ender@test.c…
5:24:24 PM [express] GET /api/auth/me 304 in 1ms :: {"id":1,"username":"ender","email":"ender@test.c…
5:24:24 PM [express] GET /api/auth/me 304 in 0ms :: {"id":1,"username":"ender","email":"ender@test.c…
5:24:24 PM [express] GET /api/auth/me 304 in 0ms :: {"id":1,"username":"ender","email":"ender@test.c…
5:24:28 PM [express] GET /api/workouts 200 in 1ms :: [{"userId":1,"name":"Ender's Push Day","descrip…
5:24:28 PM [express] GET /api/auth/me 304 in 1ms :: {"id":1,"username":"ender","email":"ender@test.c…
5:24:31 PM [express] GET /api/workout-sessions 200 in 1ms :: [{"userId":1,"workoutTemplateId":null,"…
5:26:13 PM [express] GET /api/user-stats 200 in 0ms :: []
5:26:13 PM [express] GET /api/achievements 200 in 0ms :: []
5:26:33 PM [express] GET /api/auth/me 304 in 0ms :: {"id":1,"username":"ender","email":"ender@test.c…
5:26:33 PM [express] GET /api/workouts 304 in 1ms :: [{"userId":1,"name":"Ender's Push Day","descrip…
5:26:33 PM [express] GET /api/workout-sessions 304 in 1ms :: [{"userId":1,"workoutTemplateId":null,"…
5:26:36 PM [express] GET /api/auth/me 304 in 0ms :: {"id":1,"username":"ender","email":"ender@test.c…
5:26:37 PM [express] GET /api/auth/me 304 in 1ms :: {"id":1,"username":"ender","email":"ender@test.c…
5:26:37 PM [express] GET /api/auth/me 304 in 0ms :: {"id":1,"username":"ender","email":"ender@test.c…
5:26:37 PM [express] GET /api/auth/me 304 in 1ms :: {"id":1,"username":"ender","email":"ender@test.c…
5:26:37 PM [express] GET /api/auth/me 304 in 1ms :: {"id":1,"username":"ender","email":"ender@test.c…
5:26:38 PM [express] GET /api/auth/me 304 in 2ms :: {"id":1,"username":"ender","email":"ender@test.c…
5:26:38 PM [express] GET /api/auth/me 304 in 0ms :: {"id":1,"username":"ender","email":"ender@test.c…
5:26:38 PM [express] GET /api/auth/me 304 in 0ms :: {"id":1,"username":"ender","email":"ender@test.c…
5:33:35 PM [express] GET /api/auth/me 304 in 1ms :: {"id":1,"username":"ender","email":"ender@test.c…
6:50:11 PM [express] GET /api/workouts 304 in 1ms :: [{"userId":1,"name":"Ender's Push Day","descrip…
6:50:11 PM [express] GET /api/auth/me 304 in 0ms :: {"id":1,"username":"ender","email":"ender@test.c…
6:50:18 PM [express] GET /api/user-stats/latest 200 in 0ms
6:50:18 PM [express] GET /api/workout-sessions 304 in 0ms :: [{"userId":1,"workoutTemplateId":null,"…
6:50:18 PM [express] GET /api/challenges 304 in 0ms :: []
6:50:18 PM [express] GET /api/achievements 304 in 1ms :: []
6:50:40 PM [express] GET /api/user-stats/latest 200 in 0ms
6:51:14 PM [express] GET /api/workouts 304 in 0ms :: [{"userId":1,"name":"Ender's Push Day","descrip…
6:51:14 PM [express] GET /api/auth/me 304 in 0ms :: {"id":1,"username":"ender","email":"ender@test.c…
6:51:19 PM [express] GET /api/auth/me 304 in 0ms :: {"id":1,"username":"ender","email":"ender@test.c…
6:51:20 PM [express] GET /api/auth/me 304 in 0ms :: {"id":1,"username":"ender","email":"ender@test.c…
6:51:20 PM [express] GET /api/auth/me 304 in 0ms :: {"id":1,"username":"ender","email":"ender@test.c…
6:52:50 PM [express] GET /api/workouts 200 in 1ms :: [{"userId":1,"name":"Ender's Push Day","descrip…
6:52:53 PM [express] GET /api/workouts 200 in 2ms :: [{"userId":1,"name":"Ender's Push Day","descrip…
6:57:17 PM [express] GET /api/workouts 304 in 1ms :: [{"userId":1,"name":"Ender's Push Day","descrip…
6:57:17 PM [express] GET /api/auth/me 304 in 0ms :: {"id":1,"username":"ender","email":"ender@test.c…
7:01:33 PM [express] GET /api/workouts 304 in 1ms :: [{"userId":1,"name":"Ender's Push Day","descrip…
7:01:33 PM [express] GET /api/auth/me 304 in 0ms :: {"id":1,"username":"ender","email":"ender@test.c…
7:01:47 PM [express] GET /api/workouts 304 in 1ms :: [{"userId":1,"name":"Ender's Push Day","descrip…
7:01:47 PM [express] GET /api/auth/me 304 in 0ms :: {"id":1,"username":"ender","email":"ender@test.c…
7:09:48 PM [express] GET /api/workouts 200 in 1ms :: [{"userId":1,"name":"Ender's Push Day","descrip…
7:09:48 PM [express] GET /api/workouts 200 in 1ms :: [{"userId":1,"name":"Ender's Push Day","descrip…
7:10:16 PM [express] GET /api/auth/me 200 in 0ms :: {"id":1,"username":"ender","email":"ender@test.c…
7:10:16 PM [express] GET /api/auth/me 200 in 0ms :: {"id":1,"username":"ender","email":"ender@test.c…
7:11:35 PM [express] GET /api/workouts 304 in 1ms :: [{"userId":1,"name":"Ender's Push Day","descrip…
7:11:35 PM [express] GET /api/auth/me 304 in 1ms :: {"id":1,"username":"ender","email":"ender@test.c…
7:36:39 PM [express] GET /api/health 200 in 1ms
7:36:44 PM [express] GET /api/workouts 200 in 1ms :: [{"userId":1,"name":"Ender's Push Day","descrip…
7:36:44 PM [express] GET /api/workouts 200 in 3ms :: [{"userId":1,"name":"Ender's Push Day","descrip…
7:36:45 PM [express] GET /api/exercises 200 in 2ms :: [{"exerciseName":"Planks","equipmentType":"Bod…
Killed

</file>
<file path="FitForge/tailwind.config.ts">
import type { Config } from "tailwindcss";

export default {
  darkMode: ["class"],
  content: ["./client/index.html", "./client/src/**/*.{js,jsx,ts,tsx}"],
  theme: {
    extend: {
      borderRadius: {
        lg: "var(--radius)",
        md: "calc(var(--radius) - 2px)",
        sm: "calc(var(--radius) - 4px)",
      },
      colors: {
        background: "hsl(var(--background))",
        foreground: "hsl(var(--foreground))",
        card: {
          DEFAULT: "hsl(var(--card))",
          foreground: "hsl(var(--card-foreground))",
        },
        popover: {
          DEFAULT: "hsl(var(--popover))",
          foreground: "hsl(var(--popover-foreground))",
        },
        primary: {
          DEFAULT: "hsl(var(--primary))",
          foreground: "hsl(var(--primary-foreground))",
        },
        secondary: {
          DEFAULT: "hsl(var(--secondary))",
          foreground: "hsl(var(--secondary-foreground))",
        },
        muted: {
          DEFAULT: "hsl(var(--muted))",
          foreground: "hsl(var(--muted-foreground))",
        },
        accent: {
          DEFAULT: "hsl(var(--accent))",
          foreground: "hsl(var(--accent-foreground))",
        },
        destructive: {
          DEFAULT: "hsl(var(--destructive))",
          foreground: "hsl(var(--destructive-foreground))",
        },
        border: "hsl(var(--border))",
        input: "hsl(var(--input))",
        ring: "hsl(var(--ring))",
        chart: {
          "1": "hsl(var(--chart-1))",
          "2": "hsl(var(--chart-2))",
          "3": "hsl(var(--chart-3))",
          "4": "hsl(var(--chart-4))",
          "5": "hsl(var(--chart-5))",
        },
        sidebar: {
          DEFAULT: "hsl(var(--sidebar-background))",
          foreground: "hsl(var(--sidebar-foreground))",
          primary: "hsl(var(--sidebar-primary))",
          "primary-foreground": "hsl(var(--sidebar-primary-foreground))",
          accent: "hsl(var(--sidebar-accent))",
          "accent-foreground": "hsl(var(--sidebar-accent-foreground))",
          border: "hsl(var(--sidebar-border))",
          ring: "hsl(var(--sidebar-ring))",
        },
      },
      keyframes: {
        "accordion-down": {
          from: {
            height: "0",
          },
          to: {
            height: "var(--radix-accordion-content-height)",
          },
        },
        "accordion-up": {
          from: {
            height: "var(--radix-accordion-content-height)",
          },
          to: {
            height: "0",
          },
        },
      },
      animation: {
        "accordion-down": "accordion-down 0.2s ease-out",
        "accordion-up": "accordion-up 0.2s ease-out",
      },
    },
  },
  plugins: [require("tailwindcss-animate"), require("@tailwindcss/typography")],
} satisfies Config;

</file>
<file path="FitForge/tsconfig.json">
{
  "include": ["client/src/**/*", "shared/**/*", "server/**/*"],
  "exclude": ["node_modules", "build", "dist", "**/*.test.ts"],
  "compilerOptions": {
    "incremental": true,
    "tsBuildInfoFile": "./node_modules/typescript/tsbuildinfo",
    "noEmit": true,
    "module": "ESNext",
    "strict": true,
    "lib": ["esnext", "dom", "dom.iterable"],
    "jsx": "preserve",
    "esModuleInterop": true,
    "skipLibCheck": true,
    "allowImportingTsExtensions": true,
    "moduleResolution": "bundler",
    "baseUrl": ".",
    "types": ["node", "vite/client"],
    "paths": {
      "@/*": ["./client/src/*"],
      "@shared/*": ["./shared/*"]
    }
  }
}

</file>
<file path="FitForge/vite.config.ts">
import { defineConfig } from "vite";
import react from "@vitejs/plugin-react";
import path from "path";
import runtimeErrorOverlay from "@replit/vite-plugin-runtime-error-modal";
import { fileURLToPath } from "url";

const __dirname = path.dirname(fileURLToPath(import.meta.url));

export default defineConfig({
  plugins: [
    react(),
    runtimeErrorOverlay(),
  ],
  resolve: {
    alias: {
      "@": path.resolve(__dirname, "client", "src"),
      "@shared": path.resolve(__dirname, "shared"),
      "@assets": path.resolve(__dirname, "attached_assets"),
    },
  },
  root: path.resolve(__dirname, "client"),
  build: {
    outDir: path.resolve(__dirname, "dist/public"),
    emptyOutDir: true,
  },
});

</file>
<file path="memory-bank/ai_integration_module.md">
# Module: AI Integration (Google AI Studio)

## Purpose & Responsibility
Handles AI model integration, code generation, and intelligent automation across the workflow platform. Provides natural language to code translation, design analysis and optimization recommendations, automated testing generation, and AI-powered development assistance. Coordinates with other modules to enhance productivity through machine learning capabilities.

## Interfaces
* `GoogleAIStudioAPI`: AI model access and generation capabilities
  * `generateCode()`: Natural language to code transformation using Gemini models
  * `analyzeDesign()`: AI-powered design analysis and optimization suggestions
  * `createTests()`: Automated test generation from specifications
  * `optimizeWorkflow()`: AI-driven workflow improvement recommendations
* Input: [Natural language specifications, design files, code repositories, user requirements]
* Output: [Generated code, design recommendations, test suites, workflow optimizations, AI insights]

## Implementation Details
* Files: 
  * `gemini_client.py` - Google AI Studio API client and model management
  * `code_generator.py` - Natural language to code transformation logic
  * `design_analyzer.py` - AI-powered design analysis and recommendations
  * `workflow_optimizer.py` - AI-driven process improvement suggestions
* Important algorithms: 
  * Prompt engineering for optimal code generation results
  * Multi-modal AI analysis combining text, images, and code
  * Context-aware AI assistance and recommendation engines
* Data Models
  * `AIModel`: Model configuration and capability metadata
  * `GenerationRequest`: User input and context for AI processing
  * `AIResponse`: Generated content and confidence metrics

## Current Implementation Status
* Completed: [Google AI Studio platform research, API capability analysis]
* In Progress: [API client development, prompt engineering optimization]
* Pending: [Multi-modal integration, workflow automation, performance optimization]

## Implementation Plans & Tasks
* `implementation_plan_ai_code_generation.md`
  * [Setup Gemini API Client]: Configure authenticated access to Google AI models
  * [Build Code Generation Pipeline]: Create natural language to code workflows
* `implementation_plan_ai_design_analysis.md`
  * [Design Intelligence Engine]: AI-powered design analysis and optimization
  * [Automated Recommendation System]: Generate actionable insights for design improvement

## Mini Dependency Tracker
---mini_tracker_start---


---mini_tracker_end---
</file>
<file path="memory-bank/cloud_development_module.md">
# Module: Cloud Development (Replit Integration)

## Purpose & Responsibility
Provides cloud-based development environment integration for rapid prototyping, collaborative development, and instant deployment workflows. Manages code generation from AI and design inputs, handles real-time development collaboration, and automates deployment pipelines from development to production environments.

## Interfaces
* `ReplitAPI`: Cloud development environment management
  * `createRepl()`: Initialize new development projects from templates
  * `deployCode()`: Automated deployment and hosting workflows
  * `collaborateInRealtime()`: Multi-developer synchronization and sharing
  * `manageEnvironments()`: Development, staging, and production environment control
* Input: [Generated code, design specifications, AI model outputs, collaboration requests]
* Output: [Live applications, deployment URLs, collaborative development sessions, performance metrics]

## Implementation Details
* Files: 
  * `replit_client.py` - API client and environment management
  * `deployment_manager.py` - Automated deployment and CI/CD workflows
  * `collaboration_handler.py` - Real-time development session coordination
  * `template_generator.py` - Project scaffolding and boilerplate creation
* Important algorithms: 
  * Automated code deployment and environment provisioning
  * Real-time collaborative editing synchronization
  * Template-based project initialization and configuration
* Data Models
  * `ReplitProject`: Development environment configuration and metadata
  * `DeploymentConfig`: Hosting and environment variable management
  * `CollaborationSession`: Multi-user development coordination data

## Current Implementation Status
* Completed: [Replit platform research, development workflow design]
* In Progress: [API client setup, deployment automation planning]
* Pending: [Real-time collaboration integration, template library creation, performance monitoring]

## Implementation Plans & Tasks
* `implementation_plan_replit_deployment.md`
  * [Setup Deployment Pipeline]: Configure automated deployment from code generation
  * [Build Template System]: Create reusable project templates for different tech stacks
* `implementation_plan_collaborative_development.md`
  * [Real-time Code Sync]: Enable multi-developer collaboration workflows
  * [Environment Management]: Automate development, staging, and production environments

## Mini Dependency Tracker
---mini_tracker_start---


---mini_tracker_end---
</file>
<file path="memory-bank/code_to_figma_bridge_module.md">
# Code-to-Figma Bridge Module

## Purpose
Bridge the gap between AI-generated code and design tools for bi-directional workflows.

## Current Limitations

### Figma MCP Server
- **Read-only access** to existing Figma files
- **No creation APIs** for new designs
- **Comment/collaboration** features only
- **Cannot import** code or components directly

### Manual Bridge Process
1. **Screenshot Generation**
   - Run the application locally
   - Capture UI states and interactions
   - Document component variations

2. **Component Extraction**
   ```typescript
   // Example: Extract design tokens from code
   const extractDesignTokens = (component) => {
     return {
       colors: extractColors(component),
       spacing: extractSpacing(component),
       typography: extractTypography(component),
       shadows: extractShadows(component)
     }
   }
   ```

3. **Figma Import Process**
   - Create new Figma file
   - Import screenshots as references
   - Rebuild components using extracted tokens
   - Create component library

## Automated Solutions

### Option 1: React-to-Figma Tools
- **Figma Plugin API** - Build custom importers
- **React Figma** - Generate Figma files from React
- **Figma Tokens** - Sync design tokens bi-directionally

### Option 2: Screenshot Automation
```bash
# Playwright script to capture all component states
npx playwright test --headed
# Generates screenshots of every route/component
```

### Option 3: Storybook Bridge
1. Generate Storybook from components
2. Use Figma Storybook plugin
3. Import component library automatically

## Implementation Strategy

### Phase 1: Manual Documentation
- Screenshot key UI states
- Document component props
- Extract design system values
- Create Figma component library

### Phase 2: Semi-Automation
- Build screenshot generation scripts
- Extract design tokens programmatically
- Create Figma templates for common patterns
- Use MCP for version tracking

### Phase 3: Full Automation
- Develop React-to-Figma converter
- Implement bi-directional sync
- Create design system bridge
- Automate component updates

## Code Examples

### Design Token Extraction
```typescript
// Extract from Tailwind config
const theme = require('./tailwind.config.ts').theme;

const figmaTokens = {
  colors: Object.entries(theme.colors).map(([name, value]) => ({
    name,
    value,
    type: 'color'
  })),
  spacing: Object.entries(theme.spacing).map(([name, value]) => ({
    name,
    value,
    type: 'spacing'
  }))
};
```

### Component Documentation
```typescript
// Auto-generate component specs
interface ComponentSpec {
  name: string;
  props: PropTypes;
  variants: Variant[];
  states: State[];
  tokens: DesignTokens;
}
```

## Workflow Integration

### Development → Design
1. AI generates functional code
2. Extract components and tokens
3. Import to Figma for refinement
4. Collaborate on design improvements
5. Sync changes back to code

### Design → Development
1. Create design in Figma
2. Export design tokens
3. Generate component scaffolding
4. AI implements functionality
5. Validate against design

## Future Enhancements

### MCP Server Extensions
- Add `create_figma_file` function
- Implement `import_components` capability
- Enable `sync_design_tokens` feature
- Support `export_to_code` functionality

### AI Integration
- Train models on code↔design mappings
- Generate Figma designs from descriptions
- Convert Figma to production code
- Maintain design-code consistency

## Conclusion
While current tools have limitations, the code-to-Figma workflow is achievable through manual processes and emerging automation tools. The key is recognizing that modern AI code generation has flipped the traditional design-first paradigm.
</file>
<file path="memory-bank/data_pipeline_module.md">
# Module: Stitch Design Integration (Google Stitch)

## Purpose & Responsibility
Integrates with Google's Stitch AI design tool for automated UI design generation and workflow automation. Handles design prompt processing, AI-generated design retrieval, and seamless export to Figma for further development. Provides the design generation foundation for the complete design-to-code pipeline.

## Interfaces
* `StitchAPI`: ETL pipeline management and data integration
  * `createDataSource()`: Configure new data connectors and sources
  * `setupReplication()`: Establish automated data sync schedules
  * `monitorPipelines()`: Track data flow health and error handling
  * `transformData()`: Apply custom data transformation logic
* Input: [Design metrics, user analytics, performance data, API responses]
* Output: [Normalized datasets, analytics dashboards, AI training data, insights reports]

## Implementation Details
* Files: 
  * `stitch_client.py` - API client and pipeline configuration
  * `data_transformer.py` - Custom transformation logic and validation
  * `analytics_collector.py` - Design and user behavior data aggregation
  * `insight_generator.py` - AI-powered data analysis and recommendations
* Important algorithms: 
  * Real-time data streaming and batching optimization
  * Data quality validation and error recovery
  * Cross-platform data correlation and joining
* Data Models
  * `DataPipeline`: ETL workflow configuration and status
  * `DataSource`: External system connection metadata
  * `AnalyticsEvent`: Normalized event tracking structure

## Current Implementation Status
* Completed: [Stitch platform research, data flow architecture design]
* In Progress: [API client development, pipeline configuration templates]
* Pending: [Real-time data ingestion, AI insight generation, dashboard integration]

## Implementation Plans & Tasks
* `implementation_plan_data_ingestion.md`
  * [Configure Stitch Connectors]: Setup data sources for design and user analytics
  * [Build Transformation Pipeline]: Create data normalization and validation workflows
* `implementation_plan_analytics_insights.md`
  * [Design Metrics Collection]: Track design system usage and performance
  * [AI-Driven Recommendations]: Generate insights for design optimization

## Mini Dependency Tracker
---mini_tracker_start---


---mini_tracker_end---
</file>
<file path="memory-bank/figma_integration_module.md">
# Module: Figma Integration

## Purpose & Responsibility
Handles design asset extraction, component analysis, and design-to-code generation workflows. Provides seamless integration between Figma designs and development workflows through REST API access and MCP server connectivity. Manages design tokens, component specifications, and automated asset optimization for downstream development processes.

## Interfaces
* `FigmaAPI`: Design asset and metadata access
  * `getFile()`: Extract complete design file structure and components
  * `getImages()`: Generate optimized assets in multiple formats
  * `getComments()`: Access design feedback and collaboration data
  * `getVersions()`: Track design evolution and changes
* Input: [Figma file URLs, design tokens, component specifications]
* Output: [Optimized assets, React components, CSS variables, design metadata]

## Implementation Details
* Files: 
  * `figma_client.py` - API client and authentication handling
  * `asset_processor.py` - Image optimization and format conversion
  * `component_generator.py` - Design-to-code transformation logic
  * `design_token_parser.py` - Extract and normalize design system tokens
* Important algorithms: 
  * Design component tree traversal and analysis
  * Automated CSS generation from Figma styles
  * Asset optimization pipeline (SVG, PNG, WebP conversion)
* Data Models
  * `FigmaFile`: Complete file structure representation
  * `DesignComponent`: Component metadata and properties
  * `DesignToken`: Normalized design system variables

## Current Implementation Status
* Completed: [MCP server configuration, API authentication, basic file access]
* In Progress: [Design asset extraction workflow, component analysis pipeline]
* Pending: [Automated code generation, design token synchronization, asset optimization]

## Implementation Plans & Tasks
* `implementation_plan_figma_asset_extraction.md`
  * [Setup Figma API Client]: Configure authenticated API access and error handling
  * [Build Asset Processing Pipeline]: Create optimized asset generation workflow
* `implementation_plan_design_to_code.md`
  * [Component Analysis Engine]: Extract component specifications from Figma
  * [Code Generation Pipeline]: Transform designs into React/CSS components

## Mini Dependency Tracker
---mini_tracker_start---


---mini_tracker_end---
</file>
<file path="memory-bank/fitforge_application_module.md">
# Module: FitForge Application

## Purpose & Responsibility
FitForge is a production-ready fitness tracking application that serves as the primary example of code-first AI development workflow. Built with React + TypeScript + Vite frontend and Express.js + PostgreSQL backend, it demonstrates how modern AI code generation tools can create sophisticated applications with domain expertise integration (180+ exercise database). The module encompasses the complete application stack from authentication and session management to real-time workout tracking and progress analytics.

## Interfaces
* `WorkoutSession API`: Real-time workout session management
  * `startWorkout(workoutType, exercises)`: Initialize new workout session
  * `logExercise(exercise, sets, reps, weight)`: Record exercise completion
  * `pauseSession()`: Pause active workout
  * `completeSession()`: Finalize and save workout
* `Exercise Database API`: Professional exercise library integration
  * `getWorkouts()`: Retrieve curated workout templates
  * `searchExercises(filters)`: Find exercises by muscle group, equipment, difficulty
  * `getExerciseDetails(id)`: Detailed exercise information with muscle targeting
* `Authentication API`: User management and session handling
  * `login(credentials)`: User authentication
  * `register(userInfo)`: New user registration
  * `getProfile()`: User profile and progress data
* Input: User interactions, workout data, exercise selections
* Output: Real-time workout sessions, progress tracking, exercise recommendations

## Implementation Details
* Files:
  * `client/src/App.tsx`: Main application router and context providers
  * `client/src/components/workout-library.tsx`: Workout selection and display (CRITICAL BUG)
  * `client/src/hooks/use-workout-session.tsx`: Workout session state management
  * `client/src/hooks/use-auth.tsx`: Authentication state management
  * `server/routes.ts`: REST API endpoints for workouts, exercises, auth
  * `server/storage.ts`: Database queries and data access layer
  * `shared/schema.ts`: TypeScript types and Zod validation schemas
  * `scripts/seed-*.ts`: Database seeding with 180+ exercise data
* Important algorithms:
  * Workout session state management with localStorage persistence
  * Exercise muscle targeting percentage calculations
  * Real-time progress tracking and analytics
  * JWT-based authentication with session management
* Data Models:
  * `Workout`: Template workouts with exercise collections
  * `Exercise`: Individual exercises with muscle targeting data
  * `WorkoutSession`: Active workout tracking with timing
  * `User`: Authentication and profile information

## Current Implementation Status
* Completed:
  * Full React + TypeScript frontend with Radix UI components
  * Express.js backend with PostgreSQL database
  * 180+ exercise database with professional muscle targeting data
  * User authentication and session management
  * Responsive design with mobile-first approach
  * Database seeding scripts and migration tools
* In Progress:
  * **CRITICAL BUG**: Workout buttons completely non-functional (0 response to clicks)
  * Debug button testing for basic JavaScript functionality
  * Browser automation testing with browsermcp
* Pending:
  * Production deployment and stress testing
  * Advanced progress analytics and reporting
  * Social features and community integration

## Implementation Plans & Tasks
* `implementation_plan_workout_button_fix.md`
  * [Debug Basic Click Events]: Test fundamental JavaScript event handling
  * [Investigate React Context]: Verify WorkoutSessionProvider functionality
  * [Rebuild Application]: Complete npm rebuild to rule out build issues
  * [Browser Testing]: Use browsermcp for comprehensive user interaction testing
* `implementation_plan_production_deployment.md`
  * [WSL Network Configuration]: Proper localhost/IP address handling
  * [Database Optimization]: Query performance and indexing
  * [Error Handling]: Comprehensive error boundaries and logging
  * [Performance Testing]: Load testing and optimization

## Mini Dependency Tracker
---mini_tracker_start---
Critical Dependencies:
- React 18.3.1 + TypeScript 5.6.3
- Vite 5.4.14 (build system)
- Wouter 3.3.5 (routing)
- Express.js 4.21.2 + PostgreSQL
- @radix-ui components for UI
- @tanstack/react-query for data fetching
- Drizzle ORM for database management

Current Blocking Issues:
- workout-library.tsx onClick handlers not firing
- Zero console output on button interactions
- Navigation to /workout-session failing
---mini_tracker_end---
</file>
<file path="memory-bank/implementation_plan_figma_stress_test.md">
# Implementation Plan: Figma Integration Stress Test

**Parent Module(s)**: [figma_integration_module.md]
**Status**: [x] Proposed / [ ] Planned / [ ] In Progress / [ ] Completed / [ ] Deferred

## 1. Objective / Goal
Validate the Figma integration workflow by building a minimal prototype that extracts real design assets, identifies potential workflow weaknesses, and tests the design-to-code pipeline assumptions under realistic conditions.

## 2. Affected Components / Files
*   **Code:**
    *   `stress_test/figma_test_client.py` - Minimal API client for testing
    *   `stress_test/asset_extraction_test.py` - Design asset processing validation
*   **Documentation:**
    *   `stress_test/workflow_weakness_report.md` - Identified issues and limitations
*   **Data Structures / Schemas:**
    *   FigmaFile structure validation and edge case handling

## 3. High-Level Approach / Design Decisions
*   **Approach:** Build minimal viable prototype using existing Figma API token to test real-world scenarios
*   **Design Decisions:**
    *   Focus on identifying workflow breakpoints rather than complete implementation
    *   Test with both simple and complex Figma files to find edge cases
    *   Document every failure point and limitation discovered
*   **Algorithms:**
    *   API response parsing and error handling validation
    *   Design component tree traversal testing
*   **Data Flow:**
    *   Figma API → Asset Extraction → Component Analysis → Weakness Documentation

## 4. Task Decomposition (Roadmap Steps)
*   [ ] [Strategy_Setup_Test_Environment](memory-bank/task_setup_figma_test_env.md): Create isolated testing environment for Figma API experiments
*   [ ] [Execution_Test_Basic_API](memory-bank/task_test_figma_basic_api.md): Validate basic API connectivity and response handling
*   [ ] [Execution_Test_Asset_Extraction](memory-bank/task_test_asset_extraction.md): Test design asset extraction with various file types and complexities
*   [ ] [Execution_Document_Weaknesses](memory-bank/task_document_workflow_weaknesses.md): Comprehensive documentation of all discovered issues and limitations

## 5. Task Sequence / Build Order
1.  Strategy_Setup_Test_Environment - *Reason: Need isolated environment before testing*
2.  Execution_Test_Basic_API - *Reason: Validate foundation before complex operations*
3.  Execution_Test_Asset_Extraction - *Reason: Core functionality testing*
4.  Execution_Document_Weaknesses - *Reason: Consolidate findings after all tests*

## 6. Prioritization within Sequence
*   Strategy_Setup_Test_Environment: P1 (Critical Path)
*   Execution_Test_Basic_API: P1 (Critical Path)
*   Execution_Test_Asset_Extraction: P1 (Core Testing)
*   Execution_Document_Weaknesses: P2 (Documentation)

## 7. Open Questions / Risks
*   What types of Figma files will break the current workflow assumptions?
*   How does the API handle large files or complex component libraries?
*   What are the rate limits and authentication edge cases?
*   How reliable is the MCP server connection under sustained usage?
</file>
<file path="memory-bank/implementation_plan_workout_button_fix.md">
# Implementation Plan: Critical Workout Button Functionality Fix

**Parent Module(s)**: [fitforge_application_module.md]
**Status**: [X] In Progress

## 1. Objective / Goal
Resolve the critical bug where all 9 workout cards on the FitForge homepage are completely non-functional. Currently, clicking any workout button produces zero response - no navigation, no console logs, no visual feedback. This blocks the core functionality of the entire fitness application.

## 2. Affected Components / Files
*   **Code:**
    *   `FitForge/client/src/components/workout-library.tsx` - Primary file containing non-functional workout cards
    *   `FitForge/client/src/hooks/use-workout-session.tsx` - Workout session state management
    *   `FitForge/client/src/App.tsx` - Route configuration and context providers
    *   `FitForge/client/src/components/live-workout-session.tsx` - Target navigation component
*   **Documentation:**
    *   `FitForge/CRITICAL_BUG_REPORT.md` - Detailed bug analysis and investigation
*   **Data Structures / Schemas:**
    *   WorkoutSessionState - Session management interface
    *   Workout - Exercise collection data model

## 3. High-Level Approach / Design Decisions
*   **Approach:** Systematic debugging from basic JavaScript functionality to complex React context integration
*   **Design Decisions:**
    *   Add debug button to test fundamental click event handling
    *   Comprehensive console logging to track event flow
    *   Complete application rebuild to rule out build corruption
    *   Browser automation testing to simulate real user interactions
*   **Algorithms:**
    *   Event propagation analysis for click handling
    *   React Context Provider verification
    *   JavaScript bundle integrity checking
*   **Data Flow:**
    *   User Click → onClick Handler → handleStartWorkout → startWorkout → Navigation

## 4. Task Decomposition (Roadmap Steps)
*   [X] [Debug Button Creation](FitForge/CRITICAL_BUG_REPORT.md): Added red debug button to test basic JavaScript click functionality
*   [ ] [Basic Click Testing](task_test_basic_click_events.md): Verify fundamental event handling works
*   [ ] [Context Provider Verification](task_verify_workout_context.md): Ensure WorkoutSessionProvider is properly connected
*   [ ] [Application Rebuild](task_complete_app_rebuild.md): Full npm rebuild to eliminate build corruption
*   [ ] [Browser Automation Testing](task_browsermcp_testing.md): Use browsermcp for comprehensive user interaction testing
*   [ ] [Root Cause Analysis](task_root_cause_analysis.md): Identify and fix the underlying issue

## 5. Task Sequence / Build Order
1.  Basic Click Testing - *Reason: Must verify fundamental JavaScript functionality first*
2.  Context Provider Verification - *Reason: React context issues are common cause*
3.  Application Rebuild - *Reason: Build corruption could affect event binding*
4.  Browser Automation Testing - *Reason: Comprehensive testing after basic fixes*
5.  Root Cause Analysis - *Reason: Address specific issue once environment is validated*

## 6. Prioritization within Sequence
*   Basic Click Testing: P0 (Critical - blocks all other work)
*   Context Provider Verification: P0 (Critical path)
*   Application Rebuild: P1 (High priority - common fix)
*   Browser Automation Testing: P1 (High - comprehensive validation)
*   Root Cause Analysis: P0 (Critical - final resolution)

## 7. Open Questions / Risks
*   **Risk**: JavaScript bundle corruption preventing all event handlers
*   **Risk**: React Context Provider not properly wrapping components
*   **Risk**: CSS overlay or z-index issues blocking click events
*   **Question**: Is this specific to workout buttons or all click events?
*   **Question**: Are there JavaScript errors in browser console during clicks?
*   **Risk**: Vite build configuration preventing proper event binding
</file>
<file path="memory-bank/mcp_infrastructure_module.md">
# Module: MCP Infrastructure

## Purpose & Responsibility
Manages Model Context Protocol server infrastructure, configuration, and connectivity across the AI tools platform. Handles MCP server lifecycle management, authentication, error handling, and provides standardized interfaces for all external tool integrations. Ensures reliable and secure communication between Claude and all integrated services.

## Interfaces
* `MCPManager`: Server management and coordination
  * `configureServers()`: Setup and configure MCP server connections
  * `monitorHealth()`: Track server connectivity and performance
  * `handleAuthentication()`: Manage API keys and authentication tokens
  * `routeRequests()`: Distribute requests across available MCP servers
* Input: [Server configurations, API credentials, health check requests, user commands]
* Output: [Server status reports, connectivity metrics, error logs, routed responses]

## Implementation Details
* Files: 
  * `mcp_manager.py` - Central MCP server coordination and management
  * `server_config.py` - Configuration management for all MCP servers
  * `health_monitor.py` - Connectivity and performance monitoring
  * `auth_handler.py` - API key and token management system
* Important algorithms: 
  * Server health monitoring and automatic failover
  * Load balancing and request routing across multiple servers
  * Secure credential management and rotation
* Data Models
  * `MCPServer`: Server configuration and status metadata
  * `ServerHealth`: Connectivity and performance metrics
  * `AuthCredential`: Secure API key and token storage

## Current Implementation Status
* Completed: [15 MCP servers configured, basic connectivity established]
* In Progress: [Health monitoring system, error handling improvements]
* Pending: [Automated failover, performance optimization, security hardening]

## Implementation Plans & Tasks
* `implementation_plan_mcp_reliability.md`
  * [Build Health Monitoring]: Create comprehensive server health tracking
  * [Implement Failover System]: Automated server failover and recovery
* `implementation_plan_mcp_security.md`
  * [Secure Credential Management]: Enhanced API key storage and rotation
  * [Access Control System]: Role-based access to MCP server capabilities

## Mini Dependency Tracker
---mini_tracker_start---


---mini_tracker_end---
</file>
<file path="memory-bank/project_roadmap.md">
# Project Roadmap: AI Tools Workflow Integration Platform

**Last Updated**: 2025-01-27

## 🚨 CURRENT STATUS: Critical Bug Resolution - FitForge Application

**SESSION FOCUS**: Resolving non-functional workout buttons blocking core application functionality

### Critical Issue
- **FitForge Application**: Renamed from FitnessForge, production fitness tracking platform
- **BLOCKING BUG**: All 9 workout cards completely non-functional (zero response to clicks)
- **Debug Status**: Added debug button and comprehensive logging for systematic investigation
- **Architecture**: React + TypeScript + Vite frontend, Express.js + PostgreSQL backend

### Previous Major Breakthrough: Code-First Workflow Paradigm
- **Discovery**: AI code generation tools produce more sophisticated UI/UX than dedicated design tools
- **180+ Exercise Database**: Professional muscle targeting data integrated
- **Production Architecture**: Modern tech stack with authentication and session management

## 1. Overall Project Vision & Goals
*   Create seamless integration workflows between Figma (design), Stitch (data), Replit (cloud development), and Google AI Studio (AI models)
*   Enable automated design-to-deployment pipelines with AI-powered optimization
*   Establish reusable patterns for cross-platform AI tool integration
*   Build comprehensive documentation and examples for community adoption

## 2. Major Project Phases / Epics

### Phase/Epic 1: Foundation & Infrastructure
*   **Description**: Establish core MCP infrastructure, API integrations, and basic connectivity across all four platforms
*   **Status**: In Progress (Architecture Phase)
*   **Key Objectives**:
    *   Complete MCP server configuration and health monitoring
    *   Establish authenticated API access to all four platforms
    *   Create basic integration testing framework
    *   Document core architecture and module interfaces
*   **Primary HDTA Links**: 
    *   `mcp_infrastructure_module.md` - Server management and connectivity
    *   `figma_integration_module.md` - Design platform API access
*   **Notes/Key Deliverables for this Phase/Epic**:
    *   Working MCP server infrastructure with 15+ configured servers
    *   Authenticated Figma API access with token management
    *   Basic health monitoring and error handling systems

### Phase/Epic 2: Core Workflow Development  
*   **Description**: Build fundamental workflows for design-to-code, data pipeline automation, and AI-powered development assistance
*   **Status**: ✅ COMPLETED with breakthrough discoveries → PRODUCTION TESTING
*   **Key Objectives**:
    *   Implement Figma design asset extraction and component analysis
    *   Create Stitch data pipeline templates and automation
    *   Develop Google AI Studio code generation workflows
    *   Build Replit deployment and collaboration systems
*   **Primary HDTA Links**: 
    *   `workflow_orchestration_module.md` - Cross-platform coordination
    *   `ai_integration_module.md` - AI model integration and code generation
*   **Notes/Key Deliverables for this Phase/Epic**:
    *   Working design-to-code pipeline prototypes
    *   Automated data flow between all four platforms
    *   AI-powered code generation and optimization tools

### Phase/Epic 3: Advanced Integration & Automation
*   **Description**: Implement sophisticated workflow automation, real-time collaboration, and AI-driven optimization across the entire platform
*   **Status**: Ready to Start (awaiting Phase 2 validation completion)
*   **Key Objectives**:
    *   Create end-to-end automated deployment pipelines
    *   Implement real-time design-development synchronization
    *   Build AI-powered workflow optimization and recommendation systems
    *   Establish comprehensive monitoring and analytics dashboards
*   **Primary HDTA Links**: 
    *   `data_pipeline_module.md` - Advanced analytics and insights
    *   `cloud_development_module.md` - Collaborative development workflows
*   **Notes/Key Deliverables for this Phase/Epic**:
    *   Fully automated design-to-deployment workflows
    *   Real-time collaboration features across all platforms
    *   AI-driven workflow optimization and performance analytics

### Phase/Epic 4: Production Hardening & Community
*   **Description**: Prepare the platform for production use, create comprehensive documentation, and build community adoption resources
*   **Status**: Not Started
*   **Key Objectives**:
    *   Implement enterprise-grade security and access controls
    *   Create comprehensive user documentation and tutorials
    *   Build template library and community examples
    *   Establish support and maintenance workflows
*   **Primary HDTA Links**: 
    *   TBD - Security and access control implementations
    *   TBD - Documentation and community resource modules
*   **Notes/Key Deliverables for this Phase/Epic**:
    *   Production-ready platform with security hardening
    *   Complete documentation and tutorial library
    *   Community templates and integration examples

## 3. High-Level Inter-Phase/Epic Dependencies
```mermaid
graph TD
    Phase1["Foundation & Infrastructure"] --> Phase2["Core Workflow Development"];
    Phase2 --> Phase3["Advanced Integration & Automation"];
    Phase3 --> Phase4["Production Hardening & Community"];
    Phase1 -.-> Phase4;
```

## 4. Key Project-Wide Milestones
*   **MCP Infrastructure Complete**: All 15+ servers configured and monitored - Status: In Progress
*   **First Working Workflow**: End-to-end design-to-code pipeline operational - Status: Planned
*   **AI Integration Functional**: Google AI Studio code generation workflows active - Status: Planned  
*   **Multi-Platform Sync**: Real-time synchronization between all four platforms - Status: Planned
*   **Community Launch**: Public documentation and examples available - Status: Planned

## 5. Overall Project Notes / Strategic Considerations
*   Focus on stress-testing initial workflow assumptions to identify and address weak points early
*   Prioritize modular architecture to enable independent development and testing of each platform integration
*   Maintain comprehensive documentation throughout development for community adoption
*   Emphasize security and authentication from the foundation phase to avoid technical debt
</file>
<file path="memory-bank/system_manifest.md">
# System: AI Tools Workflow Integration Platform with FitForge

## Purpose
Creates seamless integration workflows between AI tools (Figma, Stitch, Replit, Google AI Studio) for design-to-deployment automation, featuring FitForge as a production-ready fitness tracking application built with modern web technologies.

## Architecture
```
[Design Layer]     [Data Layer]        [Development Layer]    [AI Layer]
    Figma    <---> Stitch Data     <--->    Replit       <---> Google AI Studio
      |             Integration            Cloud IDE              AI Models
      |                 |                     |                     |
      v                 v                     v                     v
[Design Assets]  [Data Pipelines]     [Live Applications]   [AI-Generated Code]
      |                 |                     |                     |
      +<----------- Integration Bus ---------+<--------------------+
                         |
                 [MCP Server Layer]
              (browsermcp, figma, github, 
               memory, playwright, etc.)
                         |
                         v
                   [FitForge App]
              React + TypeScript + Vite
              Express.js + PostgreSQL
              180+ Exercise Database
```

## Module Registry
- [Figma Integration (`figma_integration_module.md`)]: Design asset extraction and component generation
- [Data Pipeline (`data_pipeline_module.md`)]: ETL workflows and data synchronization  
- [Cloud Development (`cloud_development_module.md`)]: Replit-based development and deployment
- [AI Integration (`ai_integration_module.md`)]: Google AI Studio model integration and code generation
- [Workflow Orchestration (`workflow_orchestration_module.md`)]: Cross-platform automation and coordination
- [MCP Infrastructure (`mcp_infrastructure_module.md`)]: Model Context Protocol server management
- [FitForge Application (`fitforge_application_module.md`)]: Production fitness tracking platform
- [Code to Figma Bridge (`code_to_figma_bridge_module.md`)]: Reverse engineering code components to design assets

## Development Workflow
1. **AI-powered application generation** via Claude Code + Replit (PRIMARY)
2. **Domain expertise integration** with professional databases (180+ exercises)
3. **Real-time bug diagnosis and resolution** using MCP tools
4. **Production deployment** and stress testing
5. **Design extraction and iteration** via Figma (SECONDARY)
6. **Cross-platform validation** and workflow documentation

## Major Discovery: Code Generation > Design Tools
**BREAKTHROUGH**: Modern AI code generation tools (Claude Code) produce more sophisticated UI/UX than dedicated design tools for complex applications, enabling code-first development paradigm.

## Current Focus: FitForge Production Debugging
- **Critical Issue**: Workout buttons completely non-functional (0 response to clicks)
- React + TypeScript + Vite + Wouter routing architecture
- PostgreSQL database with 180+ exercise library
- Express.js backend with session management
- Production-ready fitness platform with authentication

## Version: 0.4 | Status: Critical Bug Resolution
</file>
<file path="memory-bank/task_test_basic_click_events.md">
# Task: Test Basic Click Events Functionality
   **Parent:** `implementation_plan_workout_button_fix.md`

## Objective
Verify that fundamental JavaScript click event handling works in the FitForge application by testing the debug button and confirming basic event listeners are functioning properly.

## Context
All workout buttons on the FitForge homepage are completely non-functional, producing zero response to clicks. A red debug button has been added to the workout-library.tsx component with a simple alert() function to test if basic JavaScript click events work at all. This is the first step in isolating whether the issue is specific to workout buttons or affects all click functionality.

## Steps
1. Start the FitForge development server (`npm run dev`)
2. Navigate to the homepage in browser (using WSL IP address for Windows browser access)
3. Locate the red "🚨 CLICK TEST - BASIC FUNCTIONALITY" button at the top of the workout library section
4. Click the debug button and verify:
   - Alert popup appears with message "🔥 DEBUG: Basic click functionality WORKS!"
   - Console log shows "🔥 DEBUG: Basic click test successful"
5. If debug button works:
   - Test other UI elements (navigation links, other buttons) to verify general click functionality
   - Focus investigation on workout-specific button handlers
6. If debug button fails:
   - Check browser console for JavaScript errors
   - Verify JavaScript bundle loaded properly
   - Investigate broader JavaScript/React issues

## Dependencies
- Requires: FitForge development server running
- Requires: Debug button implementation in workout-library.tsx (completed)
- Blocks: Context Provider Verification, Application Rebuild

## Expected Output
Clear determination of whether basic JavaScript click events function properly, providing direction for subsequent debugging steps. Either confirms the issue is specific to workout buttons or reveals a broader JavaScript/React problem.
</file>
<file path="memory-bank/task_test_figma_basic_api.md">
# Task: Test Figma Basic API Connectivity
   **Parent:** `implementation_plan_figma_stress_test.md`

## Objective
Validate basic Figma API connectivity using the configured MCP server and personal access token, test error handling, and identify any authentication or connection issues that could affect the broader workflow.

## Context
We have a configured Figma MCP server with personal access token (stored securely in environment variables) and successful direct API access confirmed. Need to test the MCP server integration and identify any workflow-breaking issues.

## Steps
1. Test basic Figma MCP server connectivity and status
2. Validate user account access and permissions through MCP
3. Test error handling for invalid file keys and requests
4. Identify rate limiting and authentication edge cases
5. Document any MCP server-specific limitations or issues
6. Compare MCP server responses with direct API calls

## Dependencies
- Requires: [Figma MCP server configured and connected]
- Blocks: [Asset extraction testing, workflow automation]

## Expected Output
Comprehensive test report documenting:
- MCP server connectivity status and reliability
- Authentication and permission validation results
- Error handling behavior and edge cases
- Rate limiting characteristics and constraints
- Any identified issues or limitations for workflow integration
</file>
<file path="memory-bank/workflow_orchestration_module.md">
# Module: Workflow Orchestration

## Purpose & Responsibility
Coordinates and automates cross-platform workflows between all integrated AI tools. Manages workflow state, handles error recovery, orchestrates data flow between modules, and provides centralized monitoring and control of the entire integration platform. Ensures seamless coordination between design, data, development, and AI processes.

## Interfaces
* `WorkflowEngine`: Cross-platform automation and coordination
  * `executeWorkflow()`: Run end-to-end automation sequences
  * `monitorProgress()`: Track workflow state and performance metrics
  * `handleErrors()`: Automated error recovery and fallback strategies
  * `coordinateModules()`: Synchronize activities across all platform modules
* Input: [Workflow definitions, trigger events, user commands, module status updates]
* Output: [Workflow execution reports, performance metrics, error logs, coordination signals]

## Implementation Details
* Files: 
  * `workflow_engine.py` - Core orchestration logic and state management
  * `event_dispatcher.py` - Cross-module event handling and coordination
  * `error_handler.py` - Automated error recovery and retry logic
  * `monitor_dashboard.py` - Real-time workflow monitoring and analytics
* Important algorithms: 
  * Workflow state machine management and transitions
  * Event-driven architecture for loose coupling between modules
  * Intelligent error recovery and retry strategies
* Data Models
  * `WorkflowDefinition`: Automation sequence configuration and rules
  * `WorkflowExecution`: Runtime state and progress tracking
  * `ModuleCoordination`: Inter-module communication and synchronization

## Current Implementation Status
* Completed: [Workflow architecture design, module coordination patterns]
* In Progress: [Core orchestration engine development, event system design]
* Pending: [Error recovery automation, performance monitoring, dashboard creation]

## Implementation Plans & Tasks
* `implementation_plan_workflow_automation.md`
  * [Build Orchestration Engine]: Create core workflow coordination system
  * [Implement Event System]: Enable cross-module communication and coordination
* `implementation_plan_monitoring_dashboard.md`
  * [Create Monitoring System]: Real-time workflow tracking and analytics
  * [Build Error Recovery]: Automated error handling and recovery workflows

## Mini Dependency Tracker
---mini_tracker_start---


---mini_tracker_end---
</file>
<file path="stress_test/figma_connectivity_test.md">
# Figma MCP Server Connectivity Test Results

**Test Date**: 2025-05-26
**Test Purpose**: Validate Figma MCP server basic connectivity and error handling

## Test 1: Basic MCP Server Status
- **Status**: Figma MCP server shows as "connected" in mcp status
- **Result**: ✅ PASS - Server is connected and responding

## Test 2: File Access Attempt
- **Test**: Attempted to add public Figma community file
- **URL Tested**: https://www.figma.com/design/fZYOZ9jUn7fUlqkM7uOKz2/Community
- **Result**: ❌ FAIL - 404 error returned
- **Error**: "Request failed with status code 404"

## Identified Issues
1. **File Access Permissions**: The test file may not be accessible or may require different permissions
2. **URL Format**: The URL format might not be compatible with the MCP server expectations
3. **Authentication Scope**: The configured token may not have access to community files

## Next Steps Required
1. Test with a known accessible Figma file (personal or team file)
2. Verify token permissions and scope
3. Test different URL formats or file access methods
4. Document specific MCP server requirements for Figma file access

## API Connectivity Assessment
- **MCP Server Connection**: ✅ Working
- **Authentication**: ⚠️ Unknown - needs validation with accessible file
- **Error Handling**: ✅ Working - returns clear error messages
- **File Access**: ❌ Failed - requires accessible test file

## Recommendations
1. Create or identify a test Figma file with confirmed public access
2. Test with personal Figma files if available
3. Validate API token scope includes necessary permissions
4. Consider alternative test approaches for API validation
</file>
<file path="stress_test/phase2_workflow_test_report.md">
# Phase 2 Workflow Testing Report

**Date**: 2025-05-26
**Branch**: feature/phase-2-workouttrackr-workflow-test
**Purpose**: Real-world workflow validation using WorkoutTrackr test project

## Executive Summary

Phase 2 testing has successfully validated core infrastructure readiness and identified key user action requirements for real-world deployment. The theoretical workflow architecture proves viable but requires specific user interventions for complete end-to-end functionality.

## Test Results Summary

### ✅ Successful Components
1. **MCP Infrastructure**: 9/15 servers connected including critical platforms (figma, github, memory, playwright)
2. **Project Configuration**: WorkoutTrackr is optimally configured for Replit deployment
3. **Documentation Pipeline**: Comprehensive guides and logs created
4. **Git Workflow**: Branch management and remote tracking operational

### ⚠️ Identified Limitations
1. **Figma File Access**: API connectivity works but requires accessible test files
2. **Database Dependencies**: Replit deployment requires user-provided DATABASE_URL
3. **Platform Access**: User accounts required for actual deployment testing

### ❌ Blocked Components
1. **Complete End-to-End Testing**: Requires user authentication and account access
2. **Stitch Integration**: Platform exploration not yet attempted
3. **Live Deployment Validation**: Needs user action to complete

## Detailed Test Analysis

### Figma Integration Test
**Status**: Partial Success
- **MCP Server**: ✅ Connected and responsive
- **Error Handling**: ✅ Clear error messages
- **File Access**: ❌ Requires accessible test file or proper permissions
- **Recommendation**: Test with user's personal Figma files

### WorkoutTrackr Replit Deployment Test  
**Status**: Ready for Execution
- **Project Analysis**: ✅ Complete - well-configured for Replit
- **Configuration Files**: ✅ Proper .replit setup present
- **Build Pipeline**: ✅ Established npm build → start process
- **Blocker**: Requires user to import project and configure DATABASE_URL

### Cross-Platform Integration Assessment
**Status**: Architecture Validated
- **Module Coordination**: ✅ Framework established
- **Documentation**: ✅ Comprehensive guides created
- **Workflow Orchestration**: ✅ Patterns documented
- **Missing**: Live testing across platforms requires user account access

## Key Insights & Lessons Learned

### Architectural Strengths
1. **Modular Design**: HDTA structure enables independent testing and development
2. **MCP Infrastructure**: Robust server management with clear status monitoring
3. **Documentation First**: Comprehensive guides enable effective handoff to users
4. **Error Resilience**: Clear error reporting and fallback documentation

### Workflow Assumptions Validated
1. **Project Readiness**: Real-world projects can be effectively analyzed and prepared
2. **Configuration Management**: Automated detection of deployment requirements
3. **Risk Assessment**: Systematic identification of deployment dependencies
4. **Process Documentation**: Step-by-step guides enable user execution

### Workflow Assumptions Challenged
1. **Full Automation**: Complete hands-off deployment not achievable due to authentication requirements
2. **Universal File Access**: Platform-specific permissions limit automated testing
3. **Account Dependencies**: Each platform requires individual user authentication
4. **Real-Time Testing**: Live workflow validation requires user participation

## Identified Pain Points

### High Priority Issues
1. **Authentication Barriers**: Each platform requires user-specific authentication
2. **Environment Dependencies**: Database URLs and API keys must be user-provided
3. **Platform Access**: Testing limited by available user accounts

### Medium Priority Issues
1. **File Access Permissions**: Figma and other platforms have file-specific access controls
2. **Deployment Complexity**: Multiple steps required for complete deployment
3. **Error Recovery**: Manual intervention required for certain failure scenarios

### Low Priority Issues
1. **Documentation Volume**: Comprehensive guides may overwhelm simple use cases
2. **Testing Isolation**: Some tests require live platform access

## Recommendations

### For Immediate Action
1. **User Deployment Testing**: User should execute Replit deployment with provided guides
2. **Figma File Testing**: Test with user's accessible Figma files
3. **Cross-Platform Coordination**: Test workflow with user's platform accounts

### For Next Phase Development
1. **Authentication Automation**: Explore secure credential management patterns
2. **Deployment Simplification**: Reduce user action requirements where possible
3. **Error Recovery Automation**: Build automated fallback strategies

### For Production Readiness
1. **Onboarding Flow**: Create guided setup for new users
2. **Template Library**: Build pre-configured project templates
3. **Monitoring Dashboard**: Real-time workflow status and health monitoring

## Success Metrics Achieved

### Phase 2 Goals Met
- ✅ Real-world project analysis completed (WorkoutTrackr)
- ✅ Infrastructure validation completed (MCP servers)
- ✅ Deployment readiness assessment completed
- ✅ Comprehensive documentation created
- ✅ Risk assessment and mitigation strategies documented

### Phase 2 Goals Requiring User Action
- 🔄 Live deployment testing (user must execute)
- 🔄 Cross-platform workflow validation (requires user accounts)
- 🔄 End-to-end integration testing (depends on user participation)

## Next Steps

### Immediate (User Actions Required)
1. Import WorkoutTrackr to Replit and complete deployment
2. Test Figma integration with accessible files
3. Explore Stitch platform capabilities

### Short Term (Development)
1. Document user deployment results
2. Refine workflow based on real-world feedback  
3. Build automation for identified manual steps

### Long Term (Production)
1. Implement authentication management system
2. Create comprehensive template library
3. Build monitoring and analytics dashboard

## Conclusion

Phase 2 testing validates the theoretical workflow architecture and demonstrates practical viability. The HDTA structure enables effective modular development and testing. Key insight: the workflow requires strategic user participation but provides substantial automation and guidance. The platform is ready for real-world testing with user account access.
</file>
<file path="stress_test/phase3_code_to_design_workflow.md">
# Phase 3: Code-to-Design Reverse Workflow Test

## Executive Summary
Testing revealed a fundamental workflow reversal: Replit's code generation tool produced more sophisticated UI/UX than dedicated design tools (Stitch, Galileo).

## Test Results

### Replit Output Analysis
**FitnessForge App** - Enterprise-grade fitness platform with:

#### Technical Architecture
- **Full-stack TypeScript** with type safety throughout
- **React 18** with modern hooks and suspense
- **Express.js** backend with proper middleware
- **PostgreSQL** with Drizzle ORM
- **React Query** for data management
- **JWT authentication** with bcrypt
- **WebSocket support** for real-time features

#### UI Component Sophistication
- **40+ custom components** built on Radix UI
- **Advanced data visualization** with Recharts
- **Real-time animations** with Framer Motion
- **Dark/light theme system** with CSS variables
- **Responsive design** with Tailwind CSS
- **Micro-interactions** throughout

#### AI-Ready Features
- Form analysis with computer vision placeholders
- ML trend prediction architecture
- Biometric monitoring integration points
- Smart recommendations system
- Recovery optimization algorithms

### Design Tool Comparison

#### Stitch (Design Tool)
- ❌ Static mockups only
- ❌ Generic dashboard layouts
- ❌ No functional interactions
- ❌ Basic color schemes
- ❌ Overwhelmed by complex prompts

#### Galileo UI (Design Tool)
- ❌ Only offered to create mockups
- ❌ No actual deliverables produced
- ❌ Required manual screen selection
- ❌ No code generation capability

#### Replit (Code Tool)
- ✅ Fully functional application
- ✅ Production-ready architecture
- ✅ Sophisticated UI/UX design
- ✅ Real data visualization
- ✅ Complex state management
- ✅ Deployable application

## Workflow Implications

### Traditional Workflow (Expected)
```
Design Tool → Mockups → Figma → Component Extraction → Code
```

### Actual Optimal Workflow (Discovered)
```
Code Generation → Working App → Screenshot/Export → Figma → Design Iteration
```

## Code-to-Figma Integration Test

### Challenge
The Figma MCP server provides read/comment capabilities but not creation/import functions:
- `mcp__figma__add_figma_file` - Add existing files only
- `mcp__figma__view_node` - View existing designs
- `mcp__figma__post_comment` - Collaboration features

### Proposed Solution
1. Run the generated application
2. Export component screenshots
3. Create Figma file with component library
4. Use MCP for design iteration tracking
5. Sync design decisions back to code

## Key Findings

### 1. Code Tools Are Better Designers
Modern AI code generation tools understand UI/UX patterns better than dedicated design tools because they:
- Have been trained on actual production code
- Understand component relationships
- Include accessibility by default
- Generate responsive designs automatically

### 2. Reverse Workflow Is More Efficient
Starting with working code provides:
- Immediate functional validation
- Real performance testing
- Actual user interaction feedback
- Production-ready foundation

### 3. Design Tools Need Evolution
Current design tools are optimized for:
- Static mockups
- Visual exploration
- Style guides

They need to evolve to:
- Import working components
- Sync with code repositories
- Generate functional prototypes
- Support bi-directional workflows

## Recommendations

### Immediate Actions
1. **Adopt code-first approach** for complex applications
2. **Use design tools for iteration** not initial creation
3. **Build component libraries** from working code
4. **Test with real data** from the start

### Tool Selection
- **Complex Apps**: Replit/Cursor → Figma
- **Simple Mockups**: Figma/Stitch → Code
- **Component Libraries**: Code → Storybook → Figma
- **Design Systems**: Bi-directional sync required

### Workflow Optimization
1. Generate functional prototype with AI coding tools
2. Extract design patterns and components
3. Create Figma library from working components
4. Iterate on design with stakeholder feedback
5. Sync improvements back to codebase

## Conclusion
The assumption that design must precede code is outdated. Modern AI tools have flipped this paradigm, with code generation producing superior design outcomes for complex applications. The future is bi-directional workflows where code and design evolve together.
</file>
<file path="stress_test/workouttrackr_replit_deployment_log.md">
# WorkoutTrackr Replit Deployment Test Log

**Test Date**: 2025-05-26
**Project**: WorkoutTrackr fitness tracking application
**Deployment Target**: Replit Cloud Platform

## Pre-Deployment Analysis

### Project Configuration Assessment
- ✅ **Replit Config Present**: `.replit` file exists with proper configuration
- ✅ **Tech Stack Compatible**: Node.js 20, Web, PostgreSQL 16 modules configured
- ✅ **Build Process Defined**: npm run build → npm run start pipeline
- ✅ **Port Configuration**: Port 5000 mapped to external port 80
- ✅ **Deployment Target**: Autoscale deployment configured

### Package.json Analysis
- **Build Script**: `vite build && esbuild server/index.ts --platform=node --packages=external --bundle --format=esm --outdir=dist`
- **Start Script**: `cross-env NODE_ENV=production node dist/index.js`
- **Database Script**: `drizzle-kit push` for schema deployment
- **Dependencies**: Comprehensive React + Express + Drizzle ORM stack

### Identified Requirements
1. **Database URL**: Needs `DATABASE_URL` environment variable for Neon PostgreSQL
2. **Node Environment**: `NODE_ENV=production` required for production build
3. **Database Migration**: `npm run db:push` needed for schema setup

## Deployment Process

### Step 1: Pre-Deployment Checks
**Status**: ✅ READY
- Project structure verified
- Configuration files present
- Dependencies identified

### Step 2: Environment Configuration Required
**Required Environment Variables**:
- `DATABASE_URL`: Neon PostgreSQL connection string (USER MUST PROVIDE)
- `NODE_ENV`: production (auto-configured)

### Step 3: Deployment Steps for User
```bash
# 1. Import project to Replit
# 2. Set DATABASE_URL environment variable in Replit secrets
# 3. Install dependencies
npm install

# 4. Push database schema
npm run db:push

# 5. Build application
npm run build

# 6. Start application
npm run start
```

## Deployment Readiness Assessment

### ✅ Ready Components
- Replit configuration complete
- Build process configured
- Port mapping established
- Module dependencies specified
- Workflow automation configured

### ⚠️ Requirements for User
- **Database Setup**: Must provide Neon PostgreSQL DATABASE_URL
- **Replit Account**: Active Replit account required
- **Environment Variables**: Must configure DATABASE_URL in Replit secrets

### 🔄 Expected Deployment Flow
1. User imports project to Replit
2. User configures DATABASE_URL environment variable
3. Replit automatically installs dependencies
4. User runs database migration
5. Replit builds and deploys application
6. Application accessible via Replit URL

## Risk Assessment

### Low Risk ✅
- Project already configured for Replit
- Standard Node.js + React stack
- Established build pipeline

### Medium Risk ⚠️
- Database connectivity (depends on Neon setup)
- Environment variable configuration
- Build process complexity (multiple steps)

### High Risk ❌
- None identified - project appears well-prepared

## Recommendations

### For Immediate Deployment
1. **User Action Required**: Set up DATABASE_URL in Replit environment
2. **Test Database Connection**: Verify Neon PostgreSQL accessibility
3. **Monitor Build Process**: Watch for any dependency installation issues

### For Workflow Integration Testing
1. **Document Deployment Time**: Measure end-to-end deployment duration
2. **Test All Features**: Verify fitness tracking functionality post-deployment
3. **Performance Assessment**: Monitor application performance on Replit
4. **Integration Points**: Test potential connection points for other platforms

## Next Steps
1. **User must import project to Replit and configure DATABASE_URL**
2. **Execute deployment process and document results**
3. **Test application functionality and performance**
4. **Document lessons learned and integration insights**
</file>
<file path=".claude-project.json">
{
  "projectName": "AI Tools Workflow Integration with FitForge",
  "projectType": "integration-platform",
  "description": "Seamless workflow integration between AI tools featuring FitForge fitness application",
  "keymap": {
    "system_manifest": "memory-bank/system_manifest.md",
    "project_roadmap": "memory-bank/project_roadmap.md",
    "figma_module": "memory-bank/figma_integration_module.md",
    "data_pipeline": "memory-bank/data_pipeline_module.md", 
    "cloud_dev": "memory-bank/cloud_development_module.md",
    "ai_integration": "memory-bank/ai_integration_module.md",
    "orchestration": "memory-bank/workflow_orchestration_module.md",
    "mcp_infra": "memory-bank/mcp_infrastructure_module.md",
    "fitforge_module": "memory-bank/fitforge_application_module.md",
    "bug_fix_plan": "memory-bank/implementation_plan_workout_button_fix.md",
    "click_test_task": "memory-bank/task_test_basic_click_events.md",
    "figma_stress_test": "memory-bank/implementation_plan_figma_stress_test.md",
    "api_test_task": "memory-bank/task_test_figma_basic_api.md",
    "fitforge_app": "FitForge/",
    "workout_library": "FitForge/client/src/components/workout-library.tsx",
    "workout_session": "FitForge/client/src/hooks/use-workout-session.tsx",
    "critical_bug": "FitForge/CRITICAL_BUG_REPORT.md",
    "blueprint": "docs/workflow-design/ai-tools-integration-blueprint.md",
    "mcp_setup": "docs/mcp-setup-summary.md",
    "api_keys": "docs/api-keys-guide.md"
  },
  "platforms": {
    "figma": {
      "api_configured": true,
      "mcp_server": "figma",
      "token_status": "validated"
    },
    "stitch": {
      "api_configured": false,
      "mcp_server": "stitch", 
      "status": "research_phase"
    },
    "replit": {
      "api_configured": false,
      "mcp_server": null,
      "status": "research_phase"
    },
    "google_ai_studio": {
      "api_configured": false,
      "mcp_server": null,
      "status": "research_phase"
    }
  },
  "mcp_servers": [
    "browsermcp", "desktop-commander", "figma", "github", 
    "memory", "sequential-thinking", "youtube-transcript",
    "context7", "gitdocs", "stitch", "wordpress-mcp", "sqlite", 
    "fetch", "filesystem"
  ],
  "current_phase": "critical_bug_resolution",
  "current_branch": "master", 
  "next_milestone": "fitforge_core_functionality_restored",
  "latest_discovery": "code_generation_superior_to_design_tools",
  "test_project": {
    "name": "FitForge",
    "path": "/home/ender/.claude/projects/ai-tools-workflow-integration/FitForge",
    "tech_stack": "React + TypeScript + Vite + Express + PostgreSQL + 180+ Exercise Database",
    "purpose": "Production fitness platform demonstrating code-first AI development workflow",
    "critical_issue": "Workout buttons completely non-functional (zero response to clicks)"
  },
  "commands": {
    "dev": "cd FitForge && npm run dev",
    "build": "cd FitForge && npm run build", 
    "start": "cd FitForge && npm start",
    "check": "cd FitForge && npm run check",
    "db:push": "cd FitForge && npm run db:push",
    "test_click": "echo 'Navigate to FitForge homepage and test the red debug button'",
    "server_ip": "ip addr show eth0 | grep 'inet ' | awk '{print $2}' | cut -d/ -f1"
  },
  "metadata": {
    "last_sync": "2025-01-27",
    "branch_status": "critical_bug_investigation",
    "deployment_status": "blocked_by_button_functionality",
    "session_highlights": [
      "Renamed FitnessForge to FitForge for consistency",
      "Created comprehensive HDTA architecture with populated templates",
      "Added critical bug report and systematic debugging approach",
      "Implemented debug button for basic click event testing"
    ],
    "technical_achievements": [
      "Complete HDTA structure with system manifest and module organization",
      "Detailed implementation plan for workout button fix",
      "Task decomposition for systematic bug resolution",
      "Debug infrastructure for JavaScript event testing"
    ],
    "current_focus": [
      "CRITICAL: Workout buttons produce zero response to clicks",
      "Debug button added to test basic JavaScript functionality",
      "Systematic investigation from basic events to React context",
      "Complete application rebuild planned if needed"
    ]
  }
}
</file>
<file path=".mcp.json">
{
  "mcpServers": {
    "desktop-commander": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "@wonderwhy-er/desktop-commander@latest"
      ],
      "env": {}
    },
    "sequential-thinking": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "@modelcontextprotocol/server-sequential-thinking"
      ],
      "env": {}
    },
    "browsermcp": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "@browsermcp/mcp"
      ],
      "env": {}
    },
    "exa": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "exa-mcp-server"
      ],
      "env": {
        "EXA_API_KEY": "1f8994cc-0dcf-4899-9588-1665b18c0b91"
      }
    },
    "youtube-transcript": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "@kimtaeyoon83/mcp-server-youtube-transcript"
      ],
      "env": {}
    }
  }
}
</file>
<file path="active_context.md">
# Active Context: AI Tools Workflow Integration

**Last Updated**: January 28, 2025  
**Current Branch**: `feature/phase-4-button-functionality-fixes`  
**Session Status**: Critical button functionality fixes and workout logic integration

## Current Session Highlights

### 🎯 PHASE 4: Critical Button Functionality & Workout Logic Integration
**FOCUS**: Systematic resolution of non-functional buttons and missing workout calculation logic based on comprehensive bug analysis

### Key Accomplishments This Session

#### 1. Bug Analysis & Branch Creation (✅)
- **Bug Analysis Report**: Comprehensive analysis of non-functional buttons and missing workout logic
- **New Branch**: `feature/phase-4-button-functionality-fixes` created with systematic approach
- **Documentation**: Detailed BRANCH_README.md with 10 success criteria and 4-week timeline
- **Root Cause Identification**: Missing event handlers, incomplete routing, and disconnected business logic

#### 2. Production Readiness Planning (✅)
- **Navigation Analysis**: Identified missing `/profile` and `/nutrition` routes
- **Button Functionality**: Mapped non-functional buttons (Create Workout, View All, Notifications)
- **Page Requirements**: Detailed specifications for Profile and Nutrition page implementations
- **Testing Strategy**: Comprehensive functional, integration, and performance testing plans

#### 3. Architecture Documentation (✅)
- **Component Structure**: Defined new pages and enhanced existing components
- **Route Configuration**: Planned App.tsx additions for missing routes
- **Database Schema**: Outlined profile and nutrition data requirements
- **Implementation Priority**: High/Medium/Low priority classification for development tasks

## Current Working Files

### Recently Created/Modified
- `FitnessForge/client/src/components/freeform-workout-logger.tsx` - Complete workout logging interface
- `FitnessForge/client/src/hooks/use-workout-session.tsx` - Session state management 
- `FitnessForge/scripts/parse-real-exercise-data.ts` - Exercise data parsing and structure
- `FitnessForge/client/src/App.tsx` - Added /start-workout route
- `FitnessForge/client/src/components/navigation.tsx` - Added "Start Workout" navigation link

### Active Branch Status
```
Current: feature/phase-4-button-functionality-fixes
Pending Changes: Button event handlers, routing completion, workout logic integration
Files Modified: BRANCH_README.md, active_context.md
Status: Branch scaffolding complete, ready for systematic button functionality implementation
Application: FitForge UI complete - awaiting button functionality and workout logic connection
GitHub: Ready for push with upstream tracking and comprehensive description
```

## Next Logical Steps

### Immediate (Current Session)
1. **✅ Branch Scaffolding** - Complete development branch setup with documentation
2. **⏳ Navigation Routes** - Add missing `/profile` and `/nutrition` routes to App.tsx
3. **⏳ Profile Page** - Implement user profile management with fitness goals
4. **⏳ Create Workout Button** - Connect to workout builder/logger functionality

### Near-term (Next Session) 
1. **Nutrition Page Implementation** - Complete nutrition tracking with macro breakdown
2. **View All Functionality** - Sessions history navigation and comprehensive tracking
3. **Notification System** - Basic framework for workout reminders and achievements
4. **Mobile Responsiveness** - Verify all new pages function properly on mobile devices

### Short-term (This Week)
1. **Integration Testing** - Comprehensive testing of navigation and page functionality
2. **Database Integration** - Profile and nutrition data persistence and retrieval
3. **Performance Optimization** - Ensure no degradation with new page additions
4. **Code Review Preparation** - TypeScript compliance and component patterns

### Medium-term (Next 1-2 Weeks)
1. **Production Deployment** - Complete fitness application with all navigation working
2. **Advanced Features** - Workout templates and progression tracking enhancements
3. **Quality Assurance** - Mobile responsiveness and cross-browser compatibility
4. **Documentation Updates** - User guides and API documentation for new features

## Key Insights for Future Sessions

### Workflow Reversal Implications
- **Start with code generation** for complex applications
- **Use design tools for iteration** not initial creation  
- **Combine domain expertise** with AI-generated architecture
- **Focus on functional prototypes** over static mockups

### Technical Stack Preferences
- **Primary**: Replit for application generation
- **Secondary**: Figma for design refinement
- **Integration**: MCP servers for cross-platform workflows
- **Database**: PostgreSQL with detailed domain modeling

## Session Context Preservation

### What We Discovered
The assumption that design must precede code is outdated. Modern AI tools have flipped this paradigm, with code generation producing superior design outcomes for complex applications.

### What We Built
A sophisticated fitness platform that combines:
- Professional exercise database (180+ exercises)
- Modern React/TypeScript architecture  
- Advanced analytics and tracking
- Production-ready deployment foundation

### What This Means
The future of development workflows is bi-directional, where code and design evolve together, with AI tools capable of generating both functional architecture and beautiful interfaces simultaneously.

## Project Status
- **Phase**: Phase 3 - Production-Ready FitForge Development
- **Progress**: Branch scaffolding complete, development framework established
- **Current Milestone**: Navigation system and missing page implementation ⏳
- **Next Milestone**: Complete production-ready fitness application with full functionality
- **Risk Level**: Low (clear development path with comprehensive documentation)
</file>
<file path="BRANCH_README.md">
# Branch: feature/phase-3-fitforge-workout-functionality

## Purpose
Resolve critical workout button functionality issues in FitForge application and establish a production-ready fitness tracking platform with complete navigation, button interactions, and core workout features.

## Success Criteria
- [ ] All workout buttons and navigation links functional with proper routing
- [ ] Complete Profile page implementation with user data management
- [ ] Full Nutrition tracking system with calorie and macro calculations  
- [ ] Create Workout functionality connects to workout builder/logger
- [ ] View All sessions navigation leads to comprehensive session history
- [ ] Notifications system has basic functionality framework
- [ ] All buttons perform contextually relevant actions based on workout tracking logic
- [ ] Mobile responsive design maintained across all new pages
- [ ] Type safety preserved throughout React components
- [ ] Database integration for user profiles and nutrition data

## Scope & Deliverables

### Core Functionality Fixes
- **Navigation Routes**: Add missing `/profile` and `/nutrition` routes to App.tsx
- **Button Actions**: Connect Create Workout, View All, and notification buttons to appropriate functionality
- **Profile Page**: Complete user profile management with fitness goals and statistics
- **Nutrition Page**: Full nutrition tracking with macro breakdown and meal logging
- **Workout Creation**: Link Create Workout button to workout builder interface

### Page Implementations
- **Profile Page** (`/profile`): User information, fitness goals, statistics overview, and settings
- **Nutrition Page** (`/nutrition`): Daily nutrition tracking, macro goals, meal logging, and quick-add foods
- **Enhanced Dashboard**: Improved quick actions with proper navigation
- **Enhanced Workouts**: Functional Create Workout and View All buttons

### Technical Improvements
- **Route Configuration**: Complete routing system with all navigation paths
- **Component Integration**: Seamless integration between existing and new components
- **State Management**: Proper state handling for user profiles and nutrition data
- **Database Schema**: Updated schema to support profile and nutrition features
- **API Endpoints**: Backend support for new functionality

## Dependencies
- **Completed Phases**: Basic FitForge application architecture and workout session logging
- **External Requirements**: React Router (wouter), existing UI component library
- **Database Dependencies**: User authentication system and workout session storage
- **API Dependencies**: Existing backend API structure and authentication middleware

## Testing Requirements

### Functional Testing
- **Navigation Testing**: All navigation links route to correct pages without errors
- **Button Functionality**: Every button performs expected action or navigation
- **Form Validation**: Profile and nutrition forms validate input correctly
- **Data Persistence**: User changes are saved and retrieved correctly
- **Mobile Responsiveness**: All new pages function properly on mobile devices

### Integration Testing  
- **Cross-Page Navigation**: Seamless navigation between all application pages
- **Data Consistency**: User data remains consistent across profile, dashboard, and nutrition pages
- **Authentication Flow**: Profile and nutrition pages respect authentication requirements
- **API Integration**: New pages successfully communicate with backend services

### Performance Testing
- **Page Load Times**: All new pages load within acceptable timeframes
- **Navigation Speed**: Route transitions are smooth and responsive  
- **Data Loading**: User profiles and nutrition data load efficiently
- **Mobile Performance**: Maintained performance on mobile devices

## Merge Criteria

- [ ] All success criteria completed and verified
- [ ] Test suite passing for new functionality
- [ ] Code review approved by project maintainers
- [ ] Documentation updated for new pages and features
- [ ] No breaking changes to existing functionality
- [ ] Mobile responsiveness verified across devices
- [ ] Database migrations successful (if required)
- [ ] API endpoints tested and documented

## Timeline
- **Estimated Duration**: 1-2 weeks
- **Key Milestones**:
  - Week 1: Core navigation fixes and Profile page implementation
  - Week 1-2: Nutrition page development and Create Workout functionality
  - Week 2: Integration testing and mobile responsiveness verification
- **Review Checkpoints**: 
  - Mid-week 1: Navigation and Profile page review
  - End week 1: Nutrition page functionality review  
  - End week 2: Final integration and merge readiness review

## Architecture Notes

### Component Structure
```
src/pages/
├── profile.tsx           # New - User profile management
├── nutrition.tsx         # New - Nutrition tracking system
├── dashboard.tsx         # Enhanced - Fixed navigation links
└── workouts.tsx          # Enhanced - Functional Create/View buttons

src/components/
├── navigation.tsx        # Enhanced - Notification functionality
└── [existing components] # Maintained compatibility
```

### Route Configuration
```typescript
// App.tsx additions
<Route path="/profile">
  <ProtectedRoute><Profile /></ProtectedRoute>
</Route>
<Route path="/nutrition">
  <ProtectedRoute><Nutrition /></ProtectedRoute>
</Route>
```

### Database Considerations
- **Profile Data**: User fitness goals, physical stats, preferences
- **Nutrition Data**: Daily intake tracking, macro goals, meal history
- **Enhanced User Schema**: Extended user model for additional profile information

## Success Metrics
- **Functionality**: 100% of buttons and navigation links working
- **User Experience**: Seamless navigation between all application sections
- **Data Integrity**: Reliable storage and retrieval of user profiles and nutrition data
- **Performance**: No degradation in application performance or loading times
- **Code Quality**: Maintained TypeScript compliance and component patterns
- **Mobile Support**: Full functionality preserved on mobile devices

## Implementation Priority
1. **High Priority**: Navigation fixes, Profile page, Create Workout button
2. **Medium Priority**: Nutrition page implementation, View All functionality  
3. **Low Priority**: Notification system framework, advanced profile features

This branch represents the transition from a functional prototype to a production-ready fitness application with complete user interaction workflows.
</file>
<file path="BrowserTools-1.2.0-extension.zipZone.Identifier">

</file>
<file path="changelog.md">
# Changelog: AI Tools Workflow Integration

## Session: January 27, 2025 18:15 UTC

### 🚀 Freeform Workout Logger Implementation Complete

#### Major Breakthrough
- **Transitioned from demo to production**: Built actual functional workout logging system
- **Real workout tracking**: User can now log exercises like Excel spreadsheet workflow
- **Progressive filtering**: Exercise selection narrows with each filter applied
- **Production deployment**: Functional workout logger accessible via navigation

#### Files Created
- `FitnessForge/client/src/components/freeform-workout-logger.tsx` - Complete workout logging interface
- `FitnessForge/client/src/hooks/use-workout-session.tsx` - Session state management with localStorage
- `FitnessForge/scripts/parse-real-exercise-data.ts` - Parse and structure 38 real exercises
- `FitnessForge/scripts/insert-ender-profile.ts` - Database user profile creation script

#### Files Modified
- `FitnessForge/client/src/App.tsx` - Added /start-workout route
- `FitnessForge/client/src/components/navigation.tsx` - Added "Start Workout" navigation link
- `active_context.md` - Updated with workout logger implementation progress
- `changelog.md` - Session documentation

#### Core Implementation Features
1. **Progressive Filtering System**: Push/Pull/Legs/Core → Primary Muscle → Compound/Isolation
2. **Real Exercise Database**: 38 exercises from Ender's spreadsheet with muscle activation data
3. **Equipment Compatibility**: Dynamic equipment dropdown based on exercise selection
4. **Set Logging Flow**: Exercise → Equipment → Weight/Reps → Log Set → Next Set
5. **Ghost Text Progression**: Previous set data appears as placeholder for next set
6. **Session Tracking**: Real-time volume calculation, set history, total session stats

#### User Experience Improvements
- **Always-visible exercise list**: Shows all qualifying results, narrows with each filter
- **Dynamic counts**: Filter dropdowns show exercise counts (e.g., "Push (5 exercises)")
- **Progressive badges**: Each exercise shows workout type, muscle group, compound/isolation
- **Real-time feedback**: Volume calculation, session summary, logged set history

#### Technical Architecture
- **Component Structure**: Separate filtering, exercise selection, and logging sections
- **State Management**: React hooks with localStorage persistence for session recovery
- **Data Flow**: Mock exercise data → filtering logic → selection → logging → session storage
- **UI/UX**: Cards, progressive disclosure, responsive grid layout

#### Progress Summary
- ✅ Freeform workout logger fully functional
- ✅ Progressive filtering system with dynamic counts
- ✅ Real exercise database parsed and integrated
- ✅ User account created (endersclarity@gmail.com)
- ✅ Navigation integration and deployment
- ⏳ Saved workout templates pending (Mode 2)
- ⏳ Database persistence pending (currently in-memory)

#### Next Session Priorities
1. Build saved workout template system (Push/Pull/Legs/Core variations A/B/C)
2. Implement 3% volume progression targets based on previous performance
3. Add database persistence for logged sets
4. Create bulk import feature for offline workouts

---

## Previous Session: January 27, 2025 17:45 UTC

### 🎯 Exercise Database Architecture Design Session

#### Major Changes
- **Enhanced Database Schema**: Designed clean architecture for global exercise library + user profiles
- **Exercise Data Integration**: Created comprehensive 27-exercise database with precise muscle activation percentages
- **User Profile System**: Built workout formula system using exercise ID references

---

## Previous Sessions

### Session: January 27, 2025 16:30 UTC - FitnessForge Integration & PR Review
- **Major Achievement**: Successfully merged FitnessForge integration to master branch
- **PR Review**: Addressed all 24 codeRABBIT review comments
- **Application Deployment**: FitnessForge running on localhost:5000
- **Technical Fixes**: Form score calculation, accessibility improvements, type safety

### Session: January 26, 2025 - Phase 3 Workflow Testing
- **Discovery**: Code generation tools superior to design-first approach
- **Created**: FitnessForge fitness platform via Replit
- **Tested**: Reverse workflow (code-to-design vs design-to-code)
- **Documented**: Phase 3 testing results and recommendations
</file>
<file path="CLAUDE.md">
# AI Tools Workflow Integration - Project Configuration

## Project Commands
- `npm run test`: Run integration tests (when implemented)
- `python stress_test/run_tests.py`: Execute workflow stress tests
- `mcp`: Check MCP server status and connectivity

## Code Style & Conventions
- Python: Follow PEP 8 standards for all integration scripts
- Documentation: Use Markdown with consistent headers and structure
- API Clients: Implement proper error handling and retry logic
- Configuration: Store API keys securely, never commit credentials

## Testing Workflow
- Stress test each platform integration independently before combining
- Document all failure points and workflow weaknesses
- Test with both simple and complex real-world scenarios
- Validate MCP server connectivity and reliability

## Repository Notes
- This project uses Model Context Protocol (MCP) servers for AI tool integration
- 15+ MCP servers configured including figma, github, memory, playwright
- All API credentials managed through MCP server environment variables
- Focus on identifying workflow assumptions and stress-testing integration points

## Development Workflow
1. Research platform capabilities and API limitations
2. Build minimal prototypes to test integration assumptions
3. Document all discovered weaknesses and failure points
4. Iterate on architecture based on real-world testing results
5. Create reusable patterns and templates for future projects

## Important Notes
- Figma API token configured and validated (stored securely in MCP server config)
- Project uses HDTA (Hierarchical Decomposition Task Architecture) for organization
- All major workflows documented in memory-bank/ directory structure
- Emphasis on stress-testing and failure point identification over perfect implementation

## WSL Development Environment
- Running on WSL2 with network isolation from Windows
- For browser testing: Use WSL IP (172.22.206.209) instead of localhost
- Server binding: Always use 0.0.0.0 for WSL accessibility from Windows
- Port forwarding: WSL2 handles automatic port forwarding for bound interfaces
</file>
<file path="FitnessForge.zipZone.Identifier">

</file>
<file path="README.md">
# AI Tools Workflow Integration Project

## Overview
This project explores creating an integrated workflow using four powerful AI and development tools:
- **Figma** - Design and prototyping
- **Stitch** - Data integration and workflows  
- **Replit** - Cloud development environment
- **Google AI Studio** - AI model development and testing

## Goals
- Establish seamless workflow between design, development, data, and AI
- Create reusable patterns for future projects
- Document best practices and integration points
- Build practical examples and templates

## Project Structure
```
ai-tools-workflow-integration/
├── README.md
├── docs/
│   ├── tool-research/
│   ├── workflow-design/
│   └── implementation-guides/
├── examples/
├── templates/
└── scripts/
```

## Getting Started
1. **Foundation Phase**: Configure MCP servers and validate API access
2. **Stress Testing**: Build minimal prototypes to identify workflow weaknesses  
3. **Core Development**: Implement validated workflows with error handling
4. **Integration**: Create end-to-end automation and monitoring

## Project Status
- **Current Phase**: Foundation & Infrastructure
- **MCP Servers**: 15 configured and monitored
- **Figma Integration**: API validated, ready for stress testing
- **Next Milestone**: Complete Figma workflow stress test and weakness documentation

## Quick Access
- System Overview: `memory-bank/system_manifest.md`
- Project Roadmap: `memory-bank/project_roadmap.md`
- MCP Status: Run `mcp` command
- Key Files: See `.claude-project.json` keymap
</file>